<Type Name="MetadataWorkspace" FullName="System.Data.Metadata.Edm.MetadataWorkspace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1aa5bf931f1cd85940a423529db20824a30f338e" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78814871" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataWorkspace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataWorkspace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.MetadataWorkspace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataWorkspace" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataWorkspace sealed" />
  <TypeSignature Language="F#" Value="type MetadataWorkspace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="98c2e-101">表示 ADO.NET 元数据运行时服务组件，该组件可为从各种源检索元数据提供支持。</span><span class="sxs-lookup"><span data-stu-id="98c2e-101">Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98c2e-102"><xref:System.Data.Metadata.Edm.MetadataWorkspace> 类提供了一个中心运行时服务组件，可用于在给定应用程序的上下文中与概念模型元数据进行交互。</span><span class="sxs-lookup"><span data-stu-id="98c2e-102">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class provides a central runtime service component that you can use to interact with conceptual model metadata in the context of a given application.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-103">初始化 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="98c2e-103">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98c2e-104">初始化 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="98c2e-104">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace (System.Collections.Generic.IEnumerable&lt;string&gt; paths, System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; assembliesToConsider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; paths, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; assembliesToConsider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paths As IEnumerable(Of String), assembliesToConsider As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ paths, System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ assembliesToConsider);" />
      <MemberSignature Language="F#" Value="new System.Data.Metadata.Edm.MetadataWorkspace : seq&lt;string&gt; * seq&lt;System.Reflection.Assembly&gt; -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="new System.Data.Metadata.Edm.MetadataWorkspace (paths, assembliesToConsider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assembliesToConsider" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="98c2e-105">工作区元数据的路径。</span><span class="sxs-lookup"><span data-stu-id="98c2e-105">The paths to workspace metadata.</span></span></param>
        <param name="assembliesToConsider"><span data-ttu-id="98c2e-106">用于构造工作区的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-106">The names of assemblies used to construct workspace.</span></span></param>
        <summary><span data-ttu-id="98c2e-107">使用指定的路径和程序集初始化 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="98c2e-107">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class using the specified paths and assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberSignature Language="F#" Value="static member ClearCache : unit -&gt; unit" Usage="System.Data.Metadata.Edm.MetadataWorkspace.ClearCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98c2e-108">清除所有的元数据缓存条目。</span><span class="sxs-lookup"><span data-stu-id="98c2e-108">Clears all the metadata cache entries.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntitySqlParser">
      <MemberSignature Language="C#" Value="public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntitySqlParser () As EntitySqlParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::EntitySql::EntitySqlParser ^ CreateEntitySqlParser();" />
      <MemberSignature Language="F#" Value="member this.CreateEntitySqlParser : unit -&gt; System.Data.Common.EntitySql.EntitySqlParser" Usage="metadataWorkspace.CreateEntitySqlParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.EntitySql.EntitySqlParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98c2e-109">使用 <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> 数据空间创建配置的 <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-109">Creates an <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configured to use the <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> data space.</span></span></summary>
        <returns><span data-ttu-id="98c2e-110">创建的解析器对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-110">The created parser object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryCommandTree">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree(class System.Data.Common.CommandTrees.DbExpression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryCommandTree (query As DbExpression) As DbQueryCommandTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbQueryCommandTree ^ CreateQueryCommandTree(System::Data::Common::CommandTrees::DbExpression ^ query);" />
      <MemberSignature Language="F#" Value="member this.CreateQueryCommandTree : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQueryCommandTree" Usage="metadataWorkspace.CreateQueryCommandTree query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQueryCommandTree</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="98c2e-111">一个定义查询的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-111">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the query.</span></span></param>
        <summary><span data-ttu-id="98c2e-112">基于指定的查询表达式，创建新的 <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> 限值到元数据工作区。</span><span class="sxs-lookup"><span data-stu-id="98c2e-112">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> bound to this metadata workspace based on the specified query expression.</span></span></summary>
        <returns><span data-ttu-id="98c2e-113">使用指定表达式作为其 <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> 属性的新 <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-113">A new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> with the specified expression as it's <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="query" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="query" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-114">返回一个 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的类型匹配的 <paramref name="objectSpaceType" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-114">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="98c2e-115">一个在对象空间中提供类型的 <see cref="T:System.Data.Metadata.Edm.EnumType" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-115">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="98c2e-116">返回一个 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的类型匹配的 <paramref name="objectSpaceType" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-116">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-117">一个表示 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-117">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="98c2e-118">如果不存在匹配的类型，此方法将返回 null。</span><span class="sxs-lookup"><span data-stu-id="98c2e-118">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="98c2e-119">一个在对象空间中提供类型的 <see cref="T:System.Data.Metadata.Edm.StructuralType" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-119">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="98c2e-120">返回一个 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的类型匹配的 <paramref name="objectSpaceType" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-120">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-121">一个表示 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-121">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="98c2e-122">如果不存在匹配的类型，此方法将返回 null。</span><span class="sxs-lookup"><span data-stu-id="98c2e-122">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-123">使用指定的实体容器名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-123">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityContainer (name As String, dataSpace As DataSpace) As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-124">实体容器的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-124">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-125">要从中搜索实体容器的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-125">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="98c2e-126">使用指定的实体容器名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-126">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-127">如果不存在实体容器，此方法将返回 null；否则它将返回第一个实体容器。</span><span class="sxs-lookup"><span data-stu-id="98c2e-127">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntityContainer (name As String, ignoreCase As Boolean, dataSpace As DataSpace) As EntityContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-128">实体容器的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-128">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="98c2e-129">如果执行不区分大小写的搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-129"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-130">要从中搜索实体容器的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-130">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="98c2e-131">使用指定的实体容器名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-131">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-132">如果不存在实体容器，此方法将返回 null；否则它将返回第一个实体容器。</span><span class="sxs-lookup"><span data-stu-id="98c2e-132">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-133">使用指定的名称、命名空间名称和数据模型返回所有函数重载。</span><span class="sxs-lookup"><span data-stu-id="98c2e-133">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFunctions (name As String, namespaceName As String, dataSpace As DataSpace) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-134">函数名。</span><span class="sxs-lookup"><span data-stu-id="98c2e-134">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="98c2e-135">函数的命名空间。</span><span class="sxs-lookup"><span data-stu-id="98c2e-135">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-136">要从中搜索函数的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-136">The conceptual model in which the functions are searched.</span></span></param>
        <summary><span data-ttu-id="98c2e-137">使用指定的名称、命名空间名称和数据模型返回所有函数重载。</span><span class="sxs-lookup"><span data-stu-id="98c2e-137">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-138">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 类型的集合，其中包含给定命名空间和数据模型中与指定名称匹配的所有函数。</span><span class="sxs-lookup"><span data-stu-id="98c2e-138">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFunctions (name As String, namespaceName As String, dataSpace As DataSpace, ignoreCase As Boolean) As ReadOnlyCollection(Of EdmFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-139">函数名。</span><span class="sxs-lookup"><span data-stu-id="98c2e-139">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="98c2e-140">函数的命名空间。</span><span class="sxs-lookup"><span data-stu-id="98c2e-140">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-141">要从中搜索函数的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-141">The conceptual model in which the functions are searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="98c2e-142">如果执行不区分大小写的搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-142"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="98c2e-143">使用指定的名称、命名空间名称和数据模型返回所有函数重载。</span><span class="sxs-lookup"><span data-stu-id="98c2e-143">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-144">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 类型的集合，其中包含给定命名空间和数据模型中与指定名称匹配的所有函数。</span><span class="sxs-lookup"><span data-stu-id="98c2e-144">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-145">使用指定的标识和数据模型返回一个项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-145">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem(Of T As GlobalItem) (identity As String, dataSpace As DataSpace) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="98c2e-146">由方法返回的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-146">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="98c2e-147">项的标识。</span><span class="sxs-lookup"><span data-stu-id="98c2e-147">The identity of the item.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-148">要从中搜索项的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-148">The conceptual model in which the item is searched.</span></span></param>
        <summary><span data-ttu-id="98c2e-149">使用指定的标识和数据模型返回一个项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-149">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-150">指定的数据模型中与给定标识匹配的项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-150">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem(Of T As GlobalItem) (identity As String, ignoreCase As Boolean, dataSpace As DataSpace) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="98c2e-151">由方法返回的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-151">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="98c2e-152">项的标识。</span><span class="sxs-lookup"><span data-stu-id="98c2e-152">The identity of the item.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="98c2e-153">如果执行不区分大小写的搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-153"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-154">要从中搜索项的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-154">The conceptual model on which the item is searched.</span></span></param>
        <summary><span data-ttu-id="98c2e-155">使用指定的标识和数据模型返回一个项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-155">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-156">指定的数据模型中与给定标识匹配的项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-156">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.ItemCollection GetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemCollection (dataSpace As DataSpace) As ItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ItemCollection ^ GetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItemCollection : System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.ItemCollection" Usage="metadataWorkspace.GetItemCollection dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="98c2e-157">要从其中检索项的 <see cref="T:System.Data.Metadata.Edm.DataSpace" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-157">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to retrieve items.</span></span></param>
        <summary><span data-ttu-id="98c2e-158">获取 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-158">Gets <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></summary>
        <returns><span data-ttu-id="98c2e-159"><see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-159">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt; GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt; GetItems(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (dataSpace As DataSpace) As ReadOnlyCollection(Of GlobalItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="98c2e-160">需要其项列表的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-160">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="98c2e-161">获取指定数据模型中的所有项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-161">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-162">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 类型的集合，其中包含指定数据模型中的所有项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-162">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems(Of T As GlobalItem) (dataSpace As DataSpace) As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="98c2e-163">由方法返回的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-163">The type returned by the method.</span></span></typeparam>
        <param name="dataSpace"><span data-ttu-id="98c2e-164">需要其项列表的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-164">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="98c2e-165">获取指定数据模型中的所有项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-165">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-166">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 类型的集合，其中包含指定数据模型中的所有项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-166">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-167">返回一个 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象，该对象表示与参数 <paramref name="edmSpaceType" /> 提供的类型匹配的对象空间类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-167">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="98c2e-168">一个表示 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-168">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="98c2e-169">返回一个 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象，该对象表示与参数 <paramref name="edmSpaceType" /> 提供的类型匹配的对象空间类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-169">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-170">一个表示对象空间类型的 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-170">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="98c2e-171">如果不存在匹配的类型，此方法将返回 null。</span><span class="sxs-lookup"><span data-stu-id="98c2e-171">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="98c2e-172">一个表示 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-172">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="98c2e-173">返回一个 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象，该对象表示与参数 <paramref name="edmSpaceType" /> 提供的类型匹配的对象空间类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-173">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-174">一个表示对象空间类型的 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-174">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="98c2e-175">如果不存在匹配的类型，此方法将返回 null。</span><span class="sxs-lookup"><span data-stu-id="98c2e-175">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimitiveTypes (dataSpace As DataSpace) As ReadOnlyCollection(Of PrimitiveType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetPrimitiveTypes(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetPrimitiveTypes : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="metadataWorkspace.GetPrimitiveTypes dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="98c2e-176">需要获取其基元类型列表的数据模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-176">The data model for which you need the list of primitive types.</span></span></param>
        <summary><span data-ttu-id="98c2e-177">返回指定数据模型中的基元类型列表。</span><span class="sxs-lookup"><span data-stu-id="98c2e-177">Returns the list of primitive types in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-178">一个 <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> 类型的集合，其中包含指定数据模型中的所有基元类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-178">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the primitive types in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelevantMembersForUpdate">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelevantMembersForUpdate (entitySet As EntitySetBase, entityType As EntityTypeBase, partialUpdateSupported As Boolean) As ReadOnlyCollection(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRelevantMembersForUpdate(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="F#" Value="member this.GetRelevantMembersForUpdate : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRelevantMembersForUpdate (entitySet, entityType, partialUpdateSupported)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="partialUpdateSupported" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="98c2e-179">属于 C 空间的 <see cref="T:System.Data.Metadata.Edm.EntitySet" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-179">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> belonging to the C-Space.</span></span></param>
        <param name="entityType"><span data-ttu-id="98c2e-180">特定 <see cref="T:System.Data.Metadata.Edm.EntityType" /> 中参与的 <see cref="T:System.Data.Metadata.Edm.EntitySet" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-180">An <see cref="T:System.Data.Metadata.Edm.EntityType" /> that participates in the given <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span></span></param>
        <param name="partialUpdateSupported"><span data-ttu-id="98c2e-181">如果可以部分更新实体，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-181"><see langword="true" /> if entities may be updated partially; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="98c2e-182">返回原始值在修改个体时需要的给定 <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> 的成员。</span><span class="sxs-lookup"><span data-stu-id="98c2e-182">Returns members of a given <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> for which original values are needed when modifying an entity.</span></span></summary>
        <returns><span data-ttu-id="98c2e-183">要求原始值的 <see cref="T:System.Data.Metadata.Edm.EdmMember" />s。</span><span class="sxs-lookup"><span data-stu-id="98c2e-183">The <see cref="T:System.Data.Metadata.Edm.EdmMember" />s for which original value is required.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredOriginalValueMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredOriginalValueMembers (entitySet As EntitySetBase, entityType As EntityTypeBase) As IEnumerable(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRequiredOriginalValueMembers(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetRequiredOriginalValueMembers : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase -&gt; seq&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRequiredOriginalValueMembers (entitySet, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase, EntityTypeBase, bool) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="98c2e-184">要从中检索原始值的实体集。</span><span class="sxs-lookup"><span data-stu-id="98c2e-184">The entity set from which to retrieve original values.</span></span></param>
        <param name="entityType"><span data-ttu-id="98c2e-185">要检索其原始值的实体类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-185">The entity type of which to retrieve original values.</span></span></param>
        <summary><span data-ttu-id="98c2e-186">从实体集和实体类型获取原始值成员。</span><span class="sxs-lookup"><span data-stu-id="98c2e-186">Gets original value members from an entity set and entity type.</span></span></summary>
        <returns><span data-ttu-id="98c2e-187">从实体集和实体类型获取原始值成员。</span><span class="sxs-lookup"><span data-stu-id="98c2e-187">The original value members from an entity set and entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-188">使用指定的类型名称、命名空间名称和数据模型返回通过 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象描述的类型元数据。</span><span class="sxs-lookup"><span data-stu-id="98c2e-188">Returns the type metadata that is described via an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, the namespace name, and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, namespaceName As String, dataSpace As DataSpace) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-189">类型的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-189">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="98c2e-190">类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="98c2e-190">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-191">要从中搜索类型的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-191">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="98c2e-192">使用指定的类型名称、命名空间名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-192">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-193">一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象，表示指定的数据模型中与给定的类型名称和命名空间名称匹配的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-193">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the given type name and the namespace name in the specified data model.</span></span> <span data-ttu-id="98c2e-194">如果不存在匹配的类型，此方法将返回 null。</span><span class="sxs-lookup"><span data-stu-id="98c2e-194">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType (name As String, namespaceName As String, ignoreCase As Boolean, dataSpace As DataSpace) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-195">类型的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-195">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="98c2e-196">类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="98c2e-196">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="98c2e-197">如果执行不区分大小写的搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-197"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-198">要从中搜索类型的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-198">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="98c2e-199">使用指定的类型名称、命名空间名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-199">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-200">一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-200">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFromAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-201">从程序集加载元数据。</span><span class="sxs-lookup"><span data-stu-id="98c2e-201">Loads metadata from an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFromAssembly (assembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="98c2e-202">将加载其元数据的程序集。</span><span class="sxs-lookup"><span data-stu-id="98c2e-202">The assembly from which the metadata will be loaded.</span></span></param>
        <summary><span data-ttu-id="98c2e-203">加载给定程序集中的元数据。</span><span class="sxs-lookup"><span data-stu-id="98c2e-203">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly, Action&lt;string&gt; logLoadMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly, class System.Action`1&lt;string&gt; logLoadMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadFromAssembly (assembly As Assembly, logLoadMessage As Action(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly, Action&lt;System::String ^&gt; ^ logLoadMessage);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly * Action&lt;string&gt; -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly (assembly, logLoadMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="logLoadMessage" Type="System.Action&lt;System.String&gt;" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="98c2e-204">将加载其元数据的程序集。</span><span class="sxs-lookup"><span data-stu-id="98c2e-204">The assembly from which the metadata will be loaded.</span></span></param>
        <param name="logLoadMessage"><span data-ttu-id="98c2e-205">用于记录加载消息的委托。</span><span class="sxs-lookup"><span data-stu-id="98c2e-205">The delegate for logging the load messages.</span></span></param>
        <summary><span data-ttu-id="98c2e-206">加载给定程序集中的元数据。</span><span class="sxs-lookup"><span data-stu-id="98c2e-206">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEdmVersionSupported">
      <MemberSignature Language="C#" Value="public static readonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaximumEdmVersionSupported" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumEdmVersionSupported As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaximumEdmVersionSupported : double" Usage="System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98c2e-207">表示实体框架运行库支持的 Entity Data Model (EDM) 的最高版本。</span><span class="sxs-lookup"><span data-stu-id="98c2e-207">Represents the maximum Entity Data Model (EDM) version supported by the Entity Framework runtime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterItemCollection">
      <MemberSignature Language="C#" Value="public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterItemCollection(class System.Data.Metadata.Edm.ItemCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterItemCollection (collection As ItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterItemCollection(System::Data::Metadata::Edm::ItemCollection ^ collection);" />
      <MemberSignature Language="F#" Value="member this.RegisterItemCollection : System.Data.Metadata.Edm.ItemCollection -&gt; unit" Usage="metadataWorkspace.RegisterItemCollection collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="98c2e-208">需要填充的输出参数集合。</span><span class="sxs-lookup"><span data-stu-id="98c2e-208">The output parameter collection that needs to be filled up.</span></span></param>
        <summary><span data-ttu-id="98c2e-209">在每个关联的数据模型中注册项集合。</span><span class="sxs-lookup"><span data-stu-id="98c2e-209">Registers the item collection with each associated data model.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98c2e-210">集合参数为 NULL。</span><span class="sxs-lookup"><span data-stu-id="98c2e-210">The collection argument is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98c2e-211">指定的数据模型已具有注册的项集合。</span><span class="sxs-lookup"><span data-stu-id="98c2e-211">The specified data model has already a registered an item collection.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-212">通过输出参数 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 返回一个 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 或 <paramref name="edmSpaceType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的类型 <paramref name="objectSpaceType" /> 匹配。</span><span class="sxs-lookup"><span data-stu-id="98c2e-212">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As EnumType, ByRef edmSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.EnumType * EnumType -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="98c2e-213">一个表示对象空间类型的 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-213">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="98c2e-214">当该方法返回时，包含表示 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-214">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="98c2e-215">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-215">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-216">通过输出参数 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 返回一个 <paramref name="edmSpaceType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的类型匹配的 <paramref name="objectSpaceType" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-216">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-217"><see langword="true" /> 成功，<see langword="false" /> 失败。</span><span class="sxs-lookup"><span data-stu-id="98c2e-217"><see langword="true" /> on success, <see langword="false" /> on failure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As StructuralType, ByRef edmSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.StructuralType * StructuralType -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="98c2e-218">一个表示对象空间类型的 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-218">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="98c2e-219">当该方法返回时，包含表示 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-219">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="98c2e-220">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-220">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-221">通过输出参数 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 返回一个 <paramref name="edmSpaceType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的类型匹配的 <paramref name="objectSpaceType" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-221">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-222">如果存在与搜索条件匹配的类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-222"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-223">使用指定的实体容器名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-223">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntityContainer (name As String, dataSpace As DataSpace, ByRef entityContainer As EntityContainer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * System.Data.Metadata.Edm.DataSpace * EntityContainer -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-224">实体容器的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-224">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-225">要从中搜索实体容器的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-225">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="98c2e-226">它在此方法返回时会包含一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-226">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="98c2e-227">如果不存在实体容器，此输出参数将包含 null；否则，它将返回第一个实体容器。</span><span class="sxs-lookup"><span data-stu-id="98c2e-227">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="98c2e-228">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-228">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-229">使用指定的实体容器名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-229">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-230">如果存在符合搜索条件的实体容器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-230"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEntityContainer (name As String, ignoreCase As Boolean, dataSpace As DataSpace, ByRef entityContainer As EntityContainer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace * EntityContainer -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, ignoreCase, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-231">实体容器的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-231">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="98c2e-232">如果执行不区分大小写的搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-232"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-233">要从中搜索实体容器的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-233">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="98c2e-234">它在此方法返回时会包含一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-234">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="98c2e-235">如果不存在实体容器，此输出参数将包含 null；否则，它将返回第一个实体容器。</span><span class="sxs-lookup"><span data-stu-id="98c2e-235">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="98c2e-236">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-236">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-237">使用指定的实体容器名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-237">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-238">如果存在符合搜索条件的实体容器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-238"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-239">使用指定的标识和数据模型返回一个项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-239">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace space, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, space As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace space, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * System.Data.Metadata.Edm.DataSpace * 'T -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, space, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="space" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="98c2e-240">由方法返回的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-240">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="98c2e-241">要从中搜索项的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-241">The conceptual model on which the item is searched.</span></span></param>
        <param name="space"><span data-ttu-id="98c2e-242">要从中搜索项的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-242">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="98c2e-243">它在此方法返回时会包含一个 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-243">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="98c2e-244">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-244">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-245">使用指定的标识和数据模型返回一个项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-245">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-246">如果存在符合搜索条件的项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-246"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, ignoreCase As Boolean, dataSpace As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * bool * System.Data.Metadata.Edm.DataSpace * 'T -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, ignoreCase, dataSpace, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="98c2e-247">由方法返回的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-247">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="98c2e-248">要从中搜索项的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-248">The conceptual model on which the item is searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="98c2e-249">如果执行不区分大小写的搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-249"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-250">要从中搜索项的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-250">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="98c2e-251">它在此方法返回时会包含一个 <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-251">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="98c2e-252">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-252">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-253">使用指定的标识和数据模型返回一个项。</span><span class="sxs-lookup"><span data-stu-id="98c2e-253">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-254">如果存在符合搜索条件的项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-254"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItemCollection">
      <MemberSignature Language="C#" Value="public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.ItemCollection&amp; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItemCollection (dataSpace As DataSpace, ByRef collection As ItemCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::ItemCollection ^ % collection);" />
      <MemberSignature Language="F#" Value="member this.TryGetItemCollection : System.Data.Metadata.Edm.DataSpace * ItemCollection -&gt; bool" Usage="metadataWorkspace.TryGetItemCollection (dataSpace, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="98c2e-255">要从其中尝试对 <see cref="T:System.Data.Metadata.Edm.DataSpace" /> 的检索的 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-255">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to attempt retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></param>
        <param name="collection"><span data-ttu-id="98c2e-256">此方法返回时，包含项连接。</span><span class="sxs-lookup"><span data-stu-id="98c2e-256">When this method returns, contains the item collection.</span></span> <span data-ttu-id="98c2e-257">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-257">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-258">测试对 <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> 的检索。</span><span class="sxs-lookup"><span data-stu-id="98c2e-258">Tests the retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-259">如果检索成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-259"><see langword="true" /> if the retrieval was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-260">通过输出参数 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 返回一个 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 或 <paramref name="objectSpaceType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供 <paramref name="edmSpaceType" /> 匹配的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-260">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As EnumType, ByRef objectSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.EnumType * EnumType -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="98c2e-261">一个表示 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-261">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="98c2e-262">当该方法返回时，包含表示“对象”空格类型的 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-262">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the Object space type.</span></span> <span data-ttu-id="98c2e-263">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-263">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-264">通过输出参数 <see cref="T:System.Data.Metadata.Edm.EnumType" /> 返回一个 <paramref name="objectSpaceType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的 <paramref name="edmSpaceType" /> 匹配的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-264">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-265">如果存在与搜索条件匹配的类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-265"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As StructuralType, ByRef objectSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.StructuralType * StructuralType -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="98c2e-266">一个表示 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 的 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-266">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="98c2e-267">当该方法返回时，包含表示“对象”空格类型的 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-267">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="98c2e-268">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-268">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-269">通过输出参数 <see cref="T:System.Data.Metadata.Edm.StructuralType" /> 返回一个 <paramref name="objectSpaceType" /> 对象，该对象表示与参数 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 提供的 <paramref name="edmSpaceType" /> 匹配的类型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-269">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="98c2e-270">如果存在与搜索条件匹配的类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-270"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98c2e-271">使用指定的类型名称、命名空间名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-271">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetType (name As String, namespaceName As String, dataSpace As DataSpace, ByRef type As EdmType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * System.Data.Metadata.Edm.DataSpace * EdmType -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-272">类型的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-272">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="98c2e-273">类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="98c2e-273">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-274">要从中搜索类型的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-274">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="98c2e-275">它在此方法返回时会包含一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-275">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="98c2e-276">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-276">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-277">使用指定的类型名称、命名空间名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-277">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-278">如果存在与搜索条件匹配的类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-278"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetType (name As String, namespaceName As String, ignoreCase As Boolean, dataSpace As DataSpace, ByRef type As EdmType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * bool * System.Data.Metadata.Edm.DataSpace * EdmType -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, ignoreCase, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98c2e-279">类型的名称。</span><span class="sxs-lookup"><span data-stu-id="98c2e-279">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="98c2e-280">类型的命名空间。</span><span class="sxs-lookup"><span data-stu-id="98c2e-280">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="98c2e-281">如果执行不区分大小写的搜索，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-281"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="98c2e-282">要从中搜索类型的概念模型。</span><span class="sxs-lookup"><span data-stu-id="98c2e-282">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="98c2e-283">它在此方法返回时会包含一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-283">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="98c2e-284">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="98c2e-284">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="98c2e-285">使用指定的类型名称、命名空间名称和数据模型返回一个 <see cref="T:System.Data.Metadata.Edm.EdmType" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="98c2e-285">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="98c2e-286">如果存在与搜索条件匹配的类型，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98c2e-286"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
