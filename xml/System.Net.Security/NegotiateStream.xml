<Type Name="NegotiateStream" FullName="System.Net.Security.NegotiateStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="120070cbf66c0b357354b1726ef50f773a10acfa" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75111985" /></Metadata><TypeSignature Language="C#" Value="public class NegotiateStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NegotiateStream extends System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.NegotiateStream" />
  <TypeSignature Language="VB.NET" Value="Public Class NegotiateStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NegotiateStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type NegotiateStream = class&#xA;    inherit AuthenticatedStream" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ad7a5-101">提供一个使用协商安全协议的流，以便对客户端-服务器通信中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-101">Provides a stream that uses the Negotiate security protocol to authenticate the client, and optionally the server, in client-server communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-102">使用 <xref:System.Net.Security.NegotiateStream> 类进行身份验证，并帮助保护客户端与服务器之间传输的信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-102">Use the <xref:System.Net.Security.NegotiateStream> class for authentication and to help secure information transmitted between a client and a server.</span></span> <span data-ttu-id="ad7a5-103">使用 <xref:System.Net.Security.NegotiateStream>，你可以执行以下操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-103">Using <xref:System.Net.Security.NegotiateStream>, you can do the following.</span></span>  
  
-   <span data-ttu-id="ad7a5-104">将客户端的凭据发送到服务器以进行模拟或委派。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-104">Send the client's credentials to the server for Impersonation or Delegation.</span></span>  
  
-   <span data-ttu-id="ad7a5-105">请求服务器身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-105">Request server authentication.</span></span>  
  
-   <span data-ttu-id="ad7a5-106">在传输数据前对其进行加密和/或签名。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-106">Encrypt and/or sign data before transmitting it.</span></span>  
  
 <span data-ttu-id="ad7a5-107">传输信息之前必须执行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-107">Authentication must be performed before transmitting information.</span></span> <span data-ttu-id="ad7a5-108">客户端使用同步 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法请求身份验证，这种方法会在身份验证完成之前一直阻止，或异步 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 方法（等待身份验证完成时不会被阻止）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-108">Clients request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods, which do not block while waiting for the authentication to complete.</span></span> <span data-ttu-id="ad7a5-109">服务器使用同步 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 或异步 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法请求身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-109">Servers request authentication using the synchronous <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="ad7a5-110">使用协商安全协议对客户端和服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-110">The client, and optionally the server, is authenticated using the Negotiate security protocol.</span></span> <span data-ttu-id="ad7a5-111">在 Windows 95/98 系统上，Windows NT LAN Manager （NTLM）是用于身份验证的协议。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-111">On Windows 95/98 systems, Windows NT LAN Manager (NTLM) is the protocol used for authentication.</span></span> <span data-ttu-id="ad7a5-112">在其他平台上，如果客户端和服务器均支持 Kerberos 协议，则使用 Kerberos 协议进行身份验证;否则，使用 NTLM。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-112">On other platforms the Kerberos protocol is used for authentication if both client and server support it; otherwise NTLM is used.</span></span> <span data-ttu-id="ad7a5-113">有关这些协议的详细说明，请参阅 MSDN 上的平台 SDK 文档，网址为 msdn.microsoft.com/library/。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-113">For detailed descriptions of these protocols, see the Platform SDK documentation on MSDN, at msdn.microsoft.com/library/.</span></span> <span data-ttu-id="ad7a5-114"><xref:System.Net.Security.NegotiateStream> 类使用安全支持提供程序接口（SSPI）执行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-114">The <xref:System.Net.Security.NegotiateStream> class performs the authentication using the Security Support Provider Interface (SSPI).</span></span>  
  
 <span data-ttu-id="ad7a5-115">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream> 在传输过程中保护数据的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-115">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services will be used by the <xref:System.Net.Security.NegotiateStream> to help secure your data during transmission.</span></span> <span data-ttu-id="ad7a5-116">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-116">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span> <span data-ttu-id="ad7a5-117">您可以使用 <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> 属性获取有关远程客户端或服务器的信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-117">You can get information about the remote client or server using the <xref:System.Net.Security.NegotiateStream.RemoteIdentity%2A> property.</span></span>  
  
 <span data-ttu-id="ad7a5-118">如果身份验证失败，你将收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-118">If the authentication fails, you will receive an <xref:System.Security.Authentication.AuthenticationException> or a <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-119">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-119">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="ad7a5-120">使用同步 <xref:System.Net.Security.NegotiateStream.Write%2A> 或异步 <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> 方法发送数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-120">You send data using the synchronous <xref:System.Net.Security.NegotiateStream.Write%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="ad7a5-121">你使用同步 <xref:System.Net.Security.NegotiateStream.Read%2A> 或异步 <xref:System.Net.Security.NegotiateStream.BeginRead%2A> 方法接收数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-121">You receive data using the synchronous <xref:System.Net.Security.NegotiateStream.Read%2A> or asynchronous <xref:System.Net.Security.NegotiateStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="ad7a5-122">如果启用了加密或签名等安全服务，则 <xref:System.Net.Security.NegotiateStream>会自动将这些服务应用到数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-122">If security services such as encryption or signing are enabled, these are automatically applied to your data by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-123"><xref:System.Net.Security.NegotiateStream> 使用创建 <xref:System.Net.Security.NegotiateStream>时提供的流来传输数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-123">The <xref:System.Net.Security.NegotiateStream> transmits data using a stream that you supply when creating the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-124">提供此基础流时，你可以指定是否关闭 <xref:System.Net.Security.NegotiateStream> 也会关闭基础流。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-124">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.NegotiateStream> also closes the underlying stream.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="ad7a5-125">下面的示例演示使用 <xref:System.Net.Security.NegotiateStream>的客户端-服务器连接的客户端。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-125">The following example demonstrates the client side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-126">客户端进行身份验证并将消息异步发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-126">The client authenticates and sends a message to the server asynchronously.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#0)]
[!code-csharp[NclNegoAsyncClient#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#0)]  
[!code-vb[NclNegoAsyncClient#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#0)] 

<span data-ttu-id="ad7a5-127">下面的代码示例演示客户端-服务器连接的服务器端，它使用 <xref:System.Net.Security.NegotiateStream> 对客户端进行身份验证并读取客户端发送的消息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-127">The following code example demonstrates the server side of a client-server connection that uses the <xref:System.Net.Security.NegotiateStream> to authenticate the client and read a message sent by the client.</span></span>  
  
[!code-cpp[NclNegoAsyncServer#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#0)]
[!code-csharp[NclNegoAsyncServer#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#0)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8bf0b428-5a21-4299-8d6e-bf8251fd978a"><span data-ttu-id="ad7a5-128">版本 3.5 SP1 中对 HTTPWebRequest 的 NTLM 身份验证的更改</span><span class="sxs-lookup"><span data-stu-id="ad7a5-128">Changes to NTLM authentication for HTTPWebRequest in Version 3.5 SP1</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad7a5-129">初始化 <see cref="T:System.Net.Security.NegotiateStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-129">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-130">若要防止 <xref:System.Net.Security.NegotiateStream> 关闭提供的流，请使用 <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-130">To prevent the <xref:System.Net.Security.NegotiateStream> from closing the stream that you supply, use the <xref:System.Net.Security.NegotiateStream.%23ctor%28System.IO.Stream%2CSystem.Boolean%29> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="ad7a5-131">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-131">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="ad7a5-132">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-132">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ad7a5-133">下面的代码示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-133">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#3)]
 [!code-csharp[NclNegoSyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NegotiateStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NegotiateStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.NegotiateStream : System.IO.Stream * bool -&gt; System.Net.Security.NegotiateStream" Usage="new System.Net.Security.NegotiateStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="ad7a5-134">一个 <see cref="T:System.IO.Stream" /> 对象，<see cref="T:System.Net.Security.NegotiateStream" /> 使用此对象发送和接收数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-134">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.NegotiateStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="ad7a5-135">如果为 <see langword="true" />，表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 不影响 <paramref name="innerStream" />；若为 <see langword="false" />，则表示关闭此 <see cref="T:System.Net.Security.NegotiateStream" /> 也会同时关闭 <paramref name="innerStream" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-135"><see langword="true" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> has no effect on <paramref name="innerStream" />; <see langword="false" /> to indicate that closing this <see cref="T:System.Net.Security.NegotiateStream" /> also closes <paramref name="innerStream" />.</span></span></param>
        <summary><span data-ttu-id="ad7a5-136">使用指定的 <see cref="T:System.Net.Security.NegotiateStream" /> 和流封闭行为初始化 <see cref="T:System.IO.Stream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-136">Initializes a new instance of the <see cref="T:System.Net.Security.NegotiateStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-137">当你为 `leaveStreamOpen` 参数指定 `true` 时，关闭 <xref:System.Net.Security.NegotiateStream> 对 `innerStream` 流不起任何作用;如果不再需要 `innerStream`，则必须将其显式关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-137">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.NegotiateStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="ad7a5-138">下面的示例演示如何调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-138">The following example demonstrates calling this constructor.</span></span> <span data-ttu-id="ad7a5-139">此代码示例是为 <xref:System.Net.Security.NegotiateStream> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-139">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#1)]
[!code-csharp[NclNegoAsyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#1)]  
[!code-vb[NclNegoAsyncClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#1)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-140"><paramref name="innerStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-140"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-141">-or-</span></span> 
 <span data-ttu-id="ad7a5-142"><paramref name="innerStream" /> 等于 <see cref="F:System.IO.Stream.Null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-142"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad7a5-143">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-143">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : unit -&gt; unit&#xA;override this.AuthenticateAsClient : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad7a5-144">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-144">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-145">身份验证使用客户端的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-145">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-146">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-146">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-147">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-147">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="ad7a5-148"><xref:System.Net.Security.NegotiateStream> 类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-148">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-149">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-149">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-150">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-150">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-151">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-151">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-152">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-152">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-153">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-153">The authentication failed.</span></span> <span data-ttu-id="ad7a5-154">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-154">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-155">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-155">The authentication failed.</span></span> <span data-ttu-id="ad7a5-156">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-156">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-157">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-157">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-158">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-158">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-159">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-159">-or-</span></span>
  
 <span data-ttu-id="ad7a5-160">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-160">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-161">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-161">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-162">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-162">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-163">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-163">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-164">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-164">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-165">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-165">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="ad7a5-166">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-166">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-167">身份验证过程使用指定的客户端凭据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-167">The authentication process uses the specified client credential.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-168">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-168">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="ad7a5-169"><xref:System.Net.Security.NegotiateStream> 类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-169">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-170">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-170">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-171">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-171">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-172">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-172">The authentication failed.</span></span> <span data-ttu-id="ad7a5-173">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-173">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-174">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-174">The authentication failed.</span></span> <span data-ttu-id="ad7a5-175">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-175">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-176">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-176">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-177">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-177">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-178">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-178">-or-</span></span>
  
 <span data-ttu-id="ad7a5-179">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-179">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-180">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-180">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-181"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-181"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-182">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-182">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-183">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-183">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-184">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-184">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="ad7a5-185">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-185">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-186">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-186">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="ad7a5-187">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-187">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-188">身份验证过程使用指定的客户端凭据和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-188">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-189">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-189">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="ad7a5-190"><xref:System.Net.Security.NegotiateStream> 类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-190">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-191">用于在 `binding` 参数中传递到此方法的扩展保护的 <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 将由应用程序从关联 <xref:System.Net.Security.SslStream>上 <xref:System.Net.Security.SslStream.TransportContext%2A> 属性中检索。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-191">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-192">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-192">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-193">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-193">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-194"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-194"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-195">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-195">-or-</span></span> 
 <span data-ttu-id="ad7a5-196"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-196"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-197">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-197">The authentication failed.</span></span> <span data-ttu-id="ad7a5-198">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-198">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-199">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-199">The authentication failed.</span></span> <span data-ttu-id="ad7a5-200">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-200">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-201">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-201">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-202">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-202">-or-</span></span>
  
 <span data-ttu-id="ad7a5-203">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-203">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-204">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-204">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-205">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-205">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-206">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-206">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-207">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-207">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-208">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-208">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-209"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-209">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="ad7a5-210"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-210">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-211">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-211">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-212">身份验证过程使用指定的凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-212">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-213">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-213">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-214">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-214">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-215">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-215">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-216">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-216">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-217">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-217">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-218">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-218">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-219"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-219"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-220"><paramref name="targetName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-220"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-221">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-221">The authentication failed.</span></span> <span data-ttu-id="ad7a5-222">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-222">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-223">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-223">The authentication failed.</span></span> <span data-ttu-id="ad7a5-224">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-224">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-225">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-225">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-226">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-226">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-227">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-227">-or-</span></span>
  
 <span data-ttu-id="ad7a5-228">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-228">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-229">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-229">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-230">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-230">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-231">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-231">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-232">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-232">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="ad7a5-233">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-233">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-234">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-234">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-235"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-235">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="ad7a5-236"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-236">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-237">客户端调用此方法，以便对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-237">Called by clients to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-238">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-238">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-239">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-239">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-240">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-240">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-241">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-241">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-242">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-242">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-243">用于在 `binding` 参数中传递到此方法的扩展保护的 <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 将由应用程序从关联 <xref:System.Net.Security.SslStream>上 <xref:System.Net.Security.SslStream.TransportContext%2A> 属性中检索。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-243">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-244">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-244">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-245">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-245">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-246"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-246"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-247">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-247">-or-</span></span> 
 <span data-ttu-id="ad7a5-248"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-248"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-249"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-249"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-250">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-250">The authentication failed.</span></span> <span data-ttu-id="ad7a5-251">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-251">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-252">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-252">The authentication failed.</span></span> <span data-ttu-id="ad7a5-253">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-253">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-254">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-254">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-255">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-255">-or-</span></span>
  
 <span data-ttu-id="ad7a5-256">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-256">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-257">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-257">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-258">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-258">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-259">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-259">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad7a5-260">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-260">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad7a5-261">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-261">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-262">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-262">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-263">身份验证使用客户端的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-263">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-264">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-264">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-265">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-265">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="ad7a5-266"><xref:System.Net.Security.NegotiateStream> 类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-266">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-267">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-267">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-268">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-268">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-269">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-269">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-270">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-270">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-271">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-271">The authentication failed.</span></span> <span data-ttu-id="ad7a5-272">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-272">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-273">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-273">The authentication failed.</span></span> <span data-ttu-id="ad7a5-274">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-274">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-275">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-275">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-276">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-276">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-277">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-277">-or-</span></span>
  
 <span data-ttu-id="ad7a5-278">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-278">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-279">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-279">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-280">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-280">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-281">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-282">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-282">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-283">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-283">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="ad7a5-284">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-284">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ad7a5-285">身份验证过程使用指定的客户端凭据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-285">The authentication process uses the specified client credential.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-286">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-286">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-287">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-287">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="ad7a5-288"><xref:System.Net.Security.NegotiateStream> 类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-288">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-289">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-289">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-290">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-290">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-291">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-291">The authentication failed.</span></span> <span data-ttu-id="ad7a5-292">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-292">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-293">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-293">The authentication failed.</span></span> <span data-ttu-id="ad7a5-294">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-294">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-295">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-295">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-296">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-296">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-297">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-297">-or-</span></span>
  
 <span data-ttu-id="ad7a5-298">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-298">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-299">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-299">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-300"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-300"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-301">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-301">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-302">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-302">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-303">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-303">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="ad7a5-304">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-304">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-305">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-305">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <summary><span data-ttu-id="ad7a5-306">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-306">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ad7a5-307">身份验证过程使用指定的客户端凭据和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-307">The authentication process uses the specified client credential and the channel binding.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-308">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-308">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-309">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>，并请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-309">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>, and mutual authentication is requested.</span></span> <span data-ttu-id="ad7a5-310"><xref:System.Net.Security.NegotiateStream> 类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-310">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-311">用于在 `binding` 参数中传递到此方法的扩展保护的 <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 将由应用程序从关联 <xref:System.Net.Security.SslStream>上 <xref:System.Net.Security.SslStream.TransportContext%2A> 属性中检索。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-311">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-312">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-312">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-313">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-313">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-314"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-314"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-315">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-315">-or-</span></span> 
 <span data-ttu-id="ad7a5-316"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-316"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-317">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-317">The authentication failed.</span></span> <span data-ttu-id="ad7a5-318">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-318">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-319">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-319">The authentication failed.</span></span> <span data-ttu-id="ad7a5-320">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-320">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-321">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-321">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-322">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-322">-or-</span></span>
  
 <span data-ttu-id="ad7a5-323">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-323">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-324">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-324">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-325">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-325">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-326">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-326">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-327">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-327">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-328">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-328">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-329"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-329">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="ad7a5-330"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-330">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-331">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-331">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ad7a5-332">身份验证过程使用指定的凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-332">The authentication process uses the specified credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-333">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-333">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-334">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-334">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-335">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-335">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-336">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-336">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-337">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-337">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-338">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-338">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-339">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-339">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-340"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-340"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-341"><paramref name="targetName" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-341"><paramref name="targetName" /> is null.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-342">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-342">The authentication failed.</span></span> <span data-ttu-id="ad7a5-343">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-343">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-344">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-344">The authentication failed.</span></span> <span data-ttu-id="ad7a5-345">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-345">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-346">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-346">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-347">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-347">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-348">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-348">-or-</span></span>
  
 <span data-ttu-id="ad7a5-349">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-349">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-350">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-350">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-351">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-351">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-352">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-352">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsClientAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (credential As NetworkCredential, binding As ChannelBinding, targetName As String, requiredProtectionLevel As ProtectionLevel, allowedImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsClientAsync (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-353">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-353">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="ad7a5-354">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-354">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-355">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-355">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-356"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-356">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="ad7a5-357"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-357">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-358">客户端调用此方法，对客户端/服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-358">Called by clients to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ad7a5-359">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-359">The authentication process uses the specified credential, authentication options, and channel binding.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-360">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-360">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-361">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-361">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-362">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-362">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-363">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-363">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-364">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-364">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-365">用于在 `binding` 参数中传递到此方法的扩展保护的 <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> 将由应用程序从关联 <xref:System.Net.Security.SslStream>上 <xref:System.Net.Security.SslStream.TransportContext%2A> 属性中检索。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-365">The <xref:System.Security.Authentication.ExtendedProtection.ChannelBinding> used for extended protection that is passed to this method in the `binding` parameter would be retrieved by an application from <xref:System.Net.Security.SslStream.TransportContext%2A> property on the associated <xref:System.Net.Security.SslStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-366">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-366">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-367">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-367">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-368"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-368"><paramref name="targetName" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-369">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-369">-or-</span></span> 
 <span data-ttu-id="ad7a5-370"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-370"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-371"><paramref name="allowedImpersonationLevel" /> 不是有效值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-371"><paramref name="allowedImpersonationLevel" /> is not a valid value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-372">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-372">The authentication failed.</span></span> <span data-ttu-id="ad7a5-373">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-373">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-374">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-374">The authentication failed.</span></span> <span data-ttu-id="ad7a5-375">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-375">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-376">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-376">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-377">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-377">-or-</span></span>
  
 <span data-ttu-id="ad7a5-378">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-378">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-379">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-379">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-380">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-380">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-381">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-381">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad7a5-382">处理客户端-服务器连接的身份验证的服务器端。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-382">Handles the server side of an authentication for a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-383">正在进行身份验证时，会阻止这些方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-383">These methods block while the authentication is in progress.</span></span> <span data-ttu-id="ad7a5-384">若要防止在等待身份验证完成时应用程序被阻止，请使用 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-384">To prevent the application from blocking while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : unit -&gt; unit&#xA;override this.AuthenticateAsServer : unit -&gt; unit" Usage="negotiateStream.AuthenticateAsServer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad7a5-385">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-385">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-386">身份验证使用服务器的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-386">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-387">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-387">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-388">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-388">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="ad7a5-389">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-389">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-390">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-390">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-391">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-391">This method blocks until the operation completes.</span></span> <span data-ttu-id="ad7a5-392">若要在操作完成之前阻止阻止，请使用 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-392">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-393">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-393">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-394">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-394">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-395">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-395">The authentication failed.</span></span> <span data-ttu-id="ad7a5-396">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-396">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-397">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-397">The authentication failed.</span></span> <span data-ttu-id="ad7a5-398">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-398">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-399">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-399">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-400">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-400">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-401">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-401">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-402">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-402">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (policy As ExtendedProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; unit" Usage="negotiateStream.AuthenticateAsServer policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="ad7a5-403">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-403">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="ad7a5-404">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-404">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-405">身份验证过程使用指定的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-405">The authentication process uses the specified extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-406">身份验证使用服务器的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-406">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-407">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-407">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-408">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-408">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="ad7a5-409">如果 `policy` 参数 `null`，则将使用 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 设置为 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-409">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="ad7a5-410">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-410">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-411">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-411">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-412">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-412">This method blocks until the operation completes.</span></span> <span data-ttu-id="ad7a5-413">若要在操作完成之前阻止阻止，请使用 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-413">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-414">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-414">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-415">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-415">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-416">在 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 和 <paramref name="policy" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-416">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-417">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-417">The authentication failed.</span></span> <span data-ttu-id="ad7a5-418">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-418">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-419">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-419">The authentication failed.</span></span> <span data-ttu-id="ad7a5-420">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-420">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-421">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-421">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-422">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-422">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ad7a5-423">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-423">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-424">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-424">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-425">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-425">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-426"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-426">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="ad7a5-427"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-427">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-428">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-428">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-429">身份验证过程使用指定的服务器凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-429">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-430">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-430">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-431">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-431">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-432">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-432">This method blocks until the operation completes.</span></span> <span data-ttu-id="ad7a5-433">若要在操作完成之前阻止阻止，请使用 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-433">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-434">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-434">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-435">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-435">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-436"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-436"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-437"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="ad7a5-437"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-438">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-438">The authentication failed.</span></span> <span data-ttu-id="ad7a5-439">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-439">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-440">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-440">The authentication failed.</span></span> <span data-ttu-id="ad7a5-441">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-441">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-442">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-442">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-443">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-443">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-444">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-444">-or-</span></span>
  
 <span data-ttu-id="ad7a5-445">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-445">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="ad7a5-446">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-446">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-447">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-447">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-448">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-448">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-449">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-449">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit&#xA;override this.AuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; unit" Usage="negotiateStream.AuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-450">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-450">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="ad7a5-451">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-451">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-452"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-452">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="ad7a5-453"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-453">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-454">服务器调用此方法，以便对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-454">Called by servers to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-455">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-455">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-456">如果 `policy` 参数 `null`，则将使用 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 设置为 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-456">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="ad7a5-457">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-457">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-458">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-458">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-459">此方法将在操作完成之前一直阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-459">This method blocks until the operation completes.</span></span> <span data-ttu-id="ad7a5-460">若要在操作完成之前阻止阻止，请使用 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-460">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-461">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-461">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-462">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-462">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-463">在 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 和 <paramref name="policy" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-463">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-464"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-464"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-465"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="ad7a5-465"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-466">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-466">The authentication failed.</span></span> <span data-ttu-id="ad7a5-467">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-467">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-468">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-468">The authentication failed.</span></span> <span data-ttu-id="ad7a5-469">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-469">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-470">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-470">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-471">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-471">-or-</span></span>
  
 <span data-ttu-id="ad7a5-472">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-472">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="ad7a5-473">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-473">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-474">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-474">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-475">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-475">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ad7a5-476">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-476">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-477">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-477">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad7a5-478">以异步操作方式处理某个客户端-服务器连接的身份验证的服务器端。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-478">Handles the server side of an authentication for a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync();" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : unit -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad7a5-479">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-479">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-480">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-480">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-481">身份验证使用服务器的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-481">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-482">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-482">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-483">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-483">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="ad7a5-484">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-484">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-485">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-485">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-486">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-486">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-487">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-487">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-488">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-488">The authentication failed.</span></span> <span data-ttu-id="ad7a5-489">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-489">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-490">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-490">The authentication failed.</span></span> <span data-ttu-id="ad7a5-491">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-491">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-492">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-492">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-493">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-493">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-494">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-494">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-495">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-495">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (policy As ExtendedProtectionPolicy) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync policy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="ad7a5-496">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-496">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <summary><span data-ttu-id="ad7a5-497">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-497">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ad7a5-498">身份验证过程使用指定的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-498">The authentication process uses the specified extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-499">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-499">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-500">身份验证使用服务器的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-500">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-501">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-501">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-502">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-502">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="ad7a5-503">如果 `policy` 参数 `null`，则将使用 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 设置为 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-503">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="ad7a5-504">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-504">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-505">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-505">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-506">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-506">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-507">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-507">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-508">在 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 和 <paramref name="policy" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-508">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-509">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-509">The authentication failed.</span></span> <span data-ttu-id="ad7a5-510">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-510">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-511">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-511">The authentication failed.</span></span> <span data-ttu-id="ad7a5-512">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-512">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-513">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-513">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-514">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-514">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ad7a5-515">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-515">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-516">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-516">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-517">用于确立服务器身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-517">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the server.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-518"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-518">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="ad7a5-519"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-519">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-520">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-520">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ad7a5-521">身份验证过程使用指定的服务器凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-521">The authentication process uses the specified server credentials and authentication options.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-522">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-522">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-523">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-523">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-524">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-524">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-525">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-525">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-526">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-526">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-527"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-527"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-528"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="ad7a5-528"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-529">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-529">The authentication failed.</span></span> <span data-ttu-id="ad7a5-530">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-530">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-531">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-531">The authentication failed.</span></span> <span data-ttu-id="ad7a5-532">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-532">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-533">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-533">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-534">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-534">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-535">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-535">-or-</span></span>
  
 <span data-ttu-id="ad7a5-536">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-536">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="ad7a5-537">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-537">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-538">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-538">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-539">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-539">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-540">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.AuthenticateAsServerAsync(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (credential As NetworkCredential, policy As ExtendedProtectionPolicy, requiredProtectionLevel As ProtectionLevel, requiredImpersonationLevel As TokenImpersonationLevel) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.AuthenticateAsServerAsync (credential, policy, requiredProtectionLevel, requiredImpersonationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-541">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-541">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="ad7a5-542">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-542">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-543"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-543">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="ad7a5-544"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-544">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-545">服务器调用此方法，对客户端-服务器连接中的客户端及服务器（可选）进行身份验证以作为异步操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-545">Called by servers to authenticate the client, and optionally the server, in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="ad7a5-546">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-546">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-547">表示异步操作的任务对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-547">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-548">如果 `policy` 参数 `null`，则将使用 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 设置为 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-548">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="ad7a5-549">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-549">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-550">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-550">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-551">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-551">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-552">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-552">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-553">在 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 和 <paramref name="policy" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-553">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-554"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-554"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-555"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="ad7a5-555"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-556">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-556">The authentication failed.</span></span> <span data-ttu-id="ad7a5-557">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-557">You can use this object to try to r-authenticate.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-558">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-558">The authentication failed.</span></span> <span data-ttu-id="ad7a5-559">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-559">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-560">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-560">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-561">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-561">-or-</span></span>
  
 <span data-ttu-id="ad7a5-562">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-562">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="ad7a5-563">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-563">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-564">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-564">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-565">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-565">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ad7a5-566">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-566">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-567">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-567">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad7a5-568">开始一个异步操作，以对客户端-服务器连接中的客户端进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-568">Begins an asynchronous operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-569">进行身份验证时，不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-569">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="ad7a5-570">若要在等待身份验证完成时阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-570">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-571">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-571">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-572">一个用户定义对象，其中包含该操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-572">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="ad7a5-573">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-573">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-574">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-574">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-575">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-575">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-576">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-576">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-577">身份验证使用客户端的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-577">The authentication uses the client's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-578">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-578">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-579">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，安全级别为 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-579">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span> <span data-ttu-id="ad7a5-580"><xref:System.Net.Security.NegotiateStream> 类将构造用于相互身份验证的 SPN。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-580">The <xref:System.Net.Security.NegotiateStream> class will construct the SPN used for mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-581">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-581">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-582">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-582">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-583">异步身份验证操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-583">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ad7a5-584">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-584">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-585">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-585">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-586">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-586">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-587">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-587">In this case, you can retry the authentication with a different credential.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="ad7a5-588">下面的示例演示如何调用此方法，以便为客户端开始异步身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-588">The following example demonstrates calling this method to begin an asynchronous authentication for the client.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#2)]
[!code-csharp[NclNegoAsyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#2)]  
[!code-vb[NclNegoAsyncClient#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#2)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-589">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-589">The authentication failed.</span></span> <span data-ttu-id="ad7a5-590">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-590">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-591">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-591">The authentication failed.</span></span> <span data-ttu-id="ad7a5-592">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-592">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-593">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-593">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-594">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-594">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-595">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-595">-or-</span></span>
  
 <span data-ttu-id="ad7a5-596">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-596">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-597">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-597">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-598">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-598">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-599">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-599">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-600">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-600">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-601">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-601">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-602">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-602">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-603">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-603">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="ad7a5-604">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-604">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-605">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-605">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-606">身份验证过程使用指定的凭据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-606">The authentication process uses the specified credentials.</span></span> <span data-ttu-id="ad7a5-607">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-607">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-608">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-608">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-609">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-609">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-610">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-610">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-611">异步身份验证操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-611">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ad7a5-612">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-612">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-613">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-613">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-614">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-614">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-615">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-615">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-616"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-616"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-617">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-617">-or-</span></span> 
 <span data-ttu-id="ad7a5-618"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-618"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-619">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-619">The authentication failed.</span></span> <span data-ttu-id="ad7a5-620">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-620">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-621">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-621">The authentication failed.</span></span> <span data-ttu-id="ad7a5-622">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-622">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-623">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-623">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-624">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-624">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-625">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-625">-or-</span></span>
  
 <span data-ttu-id="ad7a5-626">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-626">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-627">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-627">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-628">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-628">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-629">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-629">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-630">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-630">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="ad7a5-631">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-631">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-632">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-632">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-633">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-633">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-634">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-634">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="ad7a5-635">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-635">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-636">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-636">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-637">身份验证过程使用指定的凭据和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-637">The authentication process uses the specified credentials and channel binding.</span></span> <span data-ttu-id="ad7a5-638">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-638">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-639">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-639">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-640">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-640">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-641">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-641">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-642">异步身份验证操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-642">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ad7a5-643">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-643">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-644">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-644">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-645">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-645">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-646">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-646">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-647"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-647"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-648">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-648">-or-</span></span> 
 <span data-ttu-id="ad7a5-649"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-649"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-650">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-650">The authentication failed.</span></span> <span data-ttu-id="ad7a5-651">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-651">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-652">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-652">The authentication failed.</span></span> <span data-ttu-id="ad7a5-653">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-653">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-654">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-654">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-655">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-655">-or-</span></span>
  
 <span data-ttu-id="ad7a5-656">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-656">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-657">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-657">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-658">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-658">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-659">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-659">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-660">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-660">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-661">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-661">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-662"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-662">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="ad7a5-663"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-663">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-664">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-664">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-665">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-665">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="ad7a5-666">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-666">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-667">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-667">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-668">身份验证过程使用指定的凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-668">The authentication process uses the specified credentials and authentication options.</span></span> <span data-ttu-id="ad7a5-669">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-669">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-670">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-670">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-671">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-671">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-672">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-672">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-673">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-673">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-674">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-674">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-675">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-675">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-676">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-676">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-677">异步身份验证操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-677">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ad7a5-678">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-678">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-679">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-679">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-680">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-680">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-681">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-681">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-682"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-682"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-683">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-683">-or-</span></span> 
 <span data-ttu-id="ad7a5-684"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-684"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-685">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-685">The authentication failed.</span></span> <span data-ttu-id="ad7a5-686">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-686">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-687">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-687">The authentication failed.</span></span> <span data-ttu-id="ad7a5-688">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-688">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-689">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-689">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-690">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-690">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-691">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-691">-or-</span></span>
  
 <span data-ttu-id="ad7a5-692">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-692">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-693">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-693">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-694">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-694">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-695">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-695">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ChannelBinding binding, string targetName, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel allowedImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ChannelBinding,System.String,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ChannelBinding ^ binding, System::String ^ targetName, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel allowedImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ChannelBinding * string * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsClient (credential, binding, targetName, requiredProtectionLevel, allowedImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binding" Type="System.Security.Authentication.ExtendedProtection.ChannelBinding" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="targetName" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="allowedImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-696">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-696">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="binding"><span data-ttu-id="ad7a5-697">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-697">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> that is used for extended protection.</span></span></param>
        <param name="targetName"><span data-ttu-id="ad7a5-698">唯一标识要进行身份验证的服务器的服务主体名称 (SPN)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-698">The Service Principal Name (SPN) that uniquely identifies the server to authenticate.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-699"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-699">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="allowedImpersonationLevel"><span data-ttu-id="ad7a5-700"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-700">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-701">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-701">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-702">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-702">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="ad7a5-703">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-703">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-704">客户端调用此方法开始一个异步操作，以对客户端/服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-704">Called by clients to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-705">身份验证过程使用指定的凭据、身份验证选项和通道绑定。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-705">The authentication process uses the specified credentials, authentication options, and channel binding.</span></span> <span data-ttu-id="ad7a5-706">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-706">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-707">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-707">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-708">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-708">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-709">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-709">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-710">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-710">Successful authentication does not guarantee that the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-711">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-711">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-712">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-712">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-713">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-713">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-714">异步身份验证操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-714">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="ad7a5-715">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-715">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-716">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-716">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-717">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-717">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-718">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-718">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-719"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-719"><paramref name="credential" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="ad7a5-720">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-720">-or-</span></span> 
 <span data-ttu-id="ad7a5-721"><paramref name="targetName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-721"><paramref name="targetName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-722">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-722">The authentication failed.</span></span> <span data-ttu-id="ad7a5-723">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-723">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-724">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-724">The authentication failed.</span></span> <span data-ttu-id="ad7a5-725">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-725">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-726">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-726">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-727">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-727">-or-</span></span>
  
 <span data-ttu-id="ad7a5-728">此流先前被尝试作为服务器进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-728">This stream was used previously to attempt authentication as the server.</span></span> <span data-ttu-id="ad7a5-729">不能尝试将该流作为客户端重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-729">You cannot use the stream to retry authentication as the client.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-730">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-730">This object has been closed.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-731">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-731">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad7a5-732">开始一个异步操作，以处理进行身份验证的客户端-服务器连接中的服务器端。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-732">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-733">正在进行身份验证时，不会阻止此方法的重载。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-733">The overloads of this method do not block while the authentication is in progress.</span></span> <span data-ttu-id="ad7a5-734">若要在等待身份验证完成时阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-734">To block while waiting for the authentication to complete, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-735">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-735">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-736">一个用户定义对象，其中包含该操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-736">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="ad7a5-737">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-737">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-738">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-738">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-739">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-739">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-740">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-740">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-741">身份验证使用服务器的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-741">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-742">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-742">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-743">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，将 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>安全级别。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-743">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="ad7a5-744">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-744">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-745">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-745">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-746">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-746">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-747">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-747">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-748">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-748">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-749">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-749">The authentication failed.</span></span> <span data-ttu-id="ad7a5-750">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-750">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-751">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-751">The authentication failed.</span></span> <span data-ttu-id="ad7a5-752">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-752">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-753">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-753">This object has been closed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-754">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-754">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-755">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-755">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-756">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-756">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (policy, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="policy"><span data-ttu-id="ad7a5-757">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-757">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-758">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-758">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-759">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-759">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="ad7a5-760">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-760">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-761">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-761">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-762">身份验证过程使用指定的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-762">The authentication process uses the specified extended protection policy.</span></span> <span data-ttu-id="ad7a5-763">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-763">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-764">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-764">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-765">身份验证使用服务器的 <xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-765">The authentication uses the server's <xref:System.Net.CredentialCache.DefaultCredentials%2A>.</span></span> <span data-ttu-id="ad7a5-766">未为服务器指定服务主体名称（SPN）。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-766">No Service Principal Name (SPN) is specified for the server.</span></span> <span data-ttu-id="ad7a5-767">模拟级别为 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>，将 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>安全级别。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-767">The impersonation level is <xref:System.Security.Principal.TokenImpersonationLevel.Identification>, the security level is <xref:System.Net.Security.ProtectionLevel.EncryptAndSign>.</span></span>  
  
 <span data-ttu-id="ad7a5-768">如果 `policy` 参数 `null`，则将使用 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 设置为 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-768">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="ad7a5-769">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-769">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-770">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-770">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-771">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-771">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-772">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-772">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-773">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-773">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-774">在 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 和 <paramref name="policy" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-774">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-775">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-775">The authentication failed.</span></span> <span data-ttu-id="ad7a5-776">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-776">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-777">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-777">The authentication failed.</span></span> <span data-ttu-id="ad7a5-778">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-778">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-779">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-779">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-780">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-780">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ad7a5-781">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-781">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-782">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-782">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-783">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-783">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-784"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-784">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="ad7a5-785"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-785">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-786">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-786">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-787">一个用户定义对象，其中包含该操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-787">A user-defined object containing information about the operation.</span></span> <span data-ttu-id="ad7a5-788">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-788">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-789">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-789">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-790">身份验证过程使用指定的服务器凭据和身份验证选项。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-790">The authentication process uses the specified server credentials and authentication options.</span></span> <span data-ttu-id="ad7a5-791">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-791">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-792">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-792">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-793">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-793">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-794">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-794">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-795">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-795">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-796">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-796">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-797">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-797">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-798">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-798">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-799">异步身份验证操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-799">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="ad7a5-800">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-800">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-801">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-801">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-802">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-802">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-803">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-803">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-804"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-804"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-805"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="ad7a5-805"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-806">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-806">The authentication failed.</span></span> <span data-ttu-id="ad7a5-807">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-807">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-808">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-808">The authentication failed.</span></span> <span data-ttu-id="ad7a5-809">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-809">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-810">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-810">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-811">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-811">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-812">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-812">-or-</span></span>
  
 <span data-ttu-id="ad7a5-813">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-813">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="ad7a5-814">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-814">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-815">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-815">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad7a5-816">使用显式 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-816">to use the explicit <see cref="T:System.Net.NetworkCredential" />.</span></span> <span data-ttu-id="ad7a5-817">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-817">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Net.NetworkCredential credential, System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, System.Net.Security.ProtectionLevel requiredProtectionLevel, System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Net.NetworkCredential credential, class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy policy, valuetype System.Net.Security.ProtectionLevel requiredProtectionLevel, valuetype System.Security.Principal.TokenImpersonationLevel requiredImpersonationLevel, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer(System.Net.NetworkCredential,System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy,System.Net.Security.ProtectionLevel,System.Security.Principal.TokenImpersonationLevel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Net::NetworkCredential ^ credential, System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ policy, System::Net::Security::ProtectionLevel requiredProtectionLevel, System::Security::Principal::TokenImpersonationLevel requiredImpersonationLevel, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Net.NetworkCredential * System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy * System.Net.Security.ProtectionLevel * System.Security.Principal.TokenImpersonationLevel * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginAuthenticateAsServer (credential, policy, requiredProtectionLevel, requiredImpersonationLevel, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="policy" Type="System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredProtectionLevel" Type="System.Net.Security.ProtectionLevel" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="requiredImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="credential"><span data-ttu-id="ad7a5-818">用于确立客户端身份的 <see cref="T:System.Net.NetworkCredential" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-818">The <see cref="T:System.Net.NetworkCredential" /> that is used to establish the identity of the client.</span></span></param>
        <param name="policy"><span data-ttu-id="ad7a5-819">用于扩展保护的 <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-819">The <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that is used for extended protection.</span></span></param>
        <param name="requiredProtectionLevel"><span data-ttu-id="ad7a5-820"><see cref="T:System.Net.Security.ProtectionLevel" /> 值之一，指示流的安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-820">One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values, indicating the security services for the stream.</span></span></param>
        <param name="requiredImpersonationLevel"><span data-ttu-id="ad7a5-821"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一，指示服务器使用客户端凭据访问资源的方式。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-821">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values, indicating how the server can use the client's credentials to access resources.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-822">一个 <see cref="T:System.AsyncCallback" /> 委托，该委托引用当身份验证完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-822">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-823">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-823">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="ad7a5-824">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-824">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-825">服务器调用此方法开始一个异步操作，以对客户端-服务器连接中的客户端及服务器（可选）进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-825">Called by servers to begin an asynchronous operation to authenticate the client, and optionally the server, in a client-server connection.</span></span> <span data-ttu-id="ad7a5-826">身份验证过程使用指定的服务器凭据、身份验证选项和扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-826">The authentication process uses the specified server credentials, authentication options, and extended protection policy.</span></span> <span data-ttu-id="ad7a5-827">此方法不会进入阻止状态。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-827">This method does not block.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-828">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-828">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-829">使用 `requiredProtectionLevel` 参数为使用经过身份验证的流传输的数据请求安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-829">Use the `requiredProtectionLevel` parameter to request security services for data transmitted using the authenticated stream.</span></span> <span data-ttu-id="ad7a5-830">例如，若要对数据进行加密和签名，请指定 <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-830">For example, to have the data encrypted and signed, specify the <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> value.</span></span> <span data-ttu-id="ad7a5-831">身份验证成功并不保证已授予请求的 <xref:System.Net.Security.ProtectionLevel>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-831">Successful authentication does not guarantee that, the requested <xref:System.Net.Security.ProtectionLevel> has been granted.</span></span> <span data-ttu-id="ad7a5-832">必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-832">You must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 <span data-ttu-id="ad7a5-833">如果 `policy` 参数 `null`，则将使用 <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> 设置为 <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>的扩展保护策略。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-833">If the `policy` parameter is `null`, then an extended protection policy is used that has <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 <span data-ttu-id="ad7a5-834">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-834">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-835">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 方法重载之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-835">To block until the operation completes, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="ad7a5-836">异步身份验证操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-836">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="ad7a5-837">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-837">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-838">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-838">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-839">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-839">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-840">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-840">In this case, you can retry the authentication with a different credential.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-841">在 <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> 参数中传递的扩展保护策略上，<see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> 和 <paramref name="policy" /> 都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-841">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> and <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames" /> on the extended protection policy passed in the <paramref name="policy" /> parameter are both <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-842"><paramref name="credential" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-842"><paramref name="credential" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ad7a5-843"><paramref name="requiredImpersonationLevel" /> 必须为 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />、<see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" /> 或 <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />，</span><span class="sxs-lookup"><span data-stu-id="ad7a5-843"><paramref name="requiredImpersonationLevel" /> must be <see cref="F:System.Security.Principal.TokenImpersonationLevel.Identification" />, <see cref="F:System.Security.Principal.TokenImpersonationLevel.Impersonation" />, or <see cref="F:System.Security.Principal.TokenImpersonationLevel.Delegation" />,</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-844">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-844">The authentication failed.</span></span> <span data-ttu-id="ad7a5-845">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-845">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-846">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-846">The authentication failed.</span></span> <span data-ttu-id="ad7a5-847">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-847">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-848">已进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-848">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="ad7a5-849">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-849">-or-</span></span>
  
 <span data-ttu-id="ad7a5-850">此流先前被用作客户端尝试进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-850">This stream was used previously to attempt authentication as the client.</span></span> <span data-ttu-id="ad7a5-851">不能尝试将该流作为服务器重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-851">You cannot use the stream to retry authentication as the server.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-852">不支持 windows 95 和 Windows 98。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-852">Windows 95 and Windows 98 are not supported.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-853">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-853">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="ad7a5-854">在不支持扩展保护的平台上，<paramref name="policy" /> 参数设置为 <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-854">The <paramref name="policy" /> parameter was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span></span></exception>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="ad7a5-855">具有扩展保护的集成 Windows 身份验证</span><span class="sxs-lookup"><span data-stu-id="ad7a5-855">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad7a5-856">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-856">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ad7a5-857"><paramref name="buffer" /> 中从零开始的位置，从此处开始存储从此流中读取的数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-857">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad7a5-858">要从流中读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-858">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-859"><see cref="T:System.AsyncCallback" /> 委托，该委托引用读操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-859">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-860">用户定义的对象，其中包含读操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-860">A user-defined object containing information about the read operation.</span></span> <span data-ttu-id="ad7a5-861">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-861">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-862">开始一个异步读操作，此操作读取流中的数据并将其存储在指定的数组中。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-862">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-863">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-863">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-864">如果启用了加密、签名、加密和签名，则读取操作将从基础流中读取数据，检查数据的完整性并对其进行解密。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-864">If encryption, signing, or encryption and signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and decrypts it.</span></span> <span data-ttu-id="ad7a5-865">如果未使用任何安全服务（如数据加密或签名），此方法将对基础流启动异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-865">If no security services such as data encryption or signing are in use, this method starts an asynchronous read operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="ad7a5-866">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-866">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-867">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-867">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="ad7a5-868">异步读取操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndRead%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-868">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndRead%2A> method.</span></span> <span data-ttu-id="ad7a5-869">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-869">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-870">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-870">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-871"><xref:System.Net.Security.NegotiateStream> 类不支持多个同时读取操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-871">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous read operations.</span></span> <span data-ttu-id="ad7a5-872">如果尝试在同一流上执行另一读取操作时启动读取操作，则会引发 <xref:System.NotSupportedException> 异常。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-872">If you attempt to start a read operation while another read operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="ad7a5-873">在成功完成身份验证之前，你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-873">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ad7a5-874">若要进行身份验证，请调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-874">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-875">下面的代码示例演示如何启动异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-875">The following code example demonstrates starting an asynchronous read operation.</span></span> <span data-ttu-id="ad7a5-876">此代码示例是为 <xref:System.Net.Security.NegotiateStream> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-876">This code example is part of a larger example provided for the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#1)]
 [!code-csharp[NclNegoAsyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-877"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-877"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-878"><paramref name="offset" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-878"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="ad7a5-879">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-879">-or-</span></span> 
 <span data-ttu-id="ad7a5-880"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-880"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="ad7a5-881">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-881">-or-</span></span> 
 <span data-ttu-id="ad7a5-882"><paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-882"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad7a5-883">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-883">The read operation failed.</span></span>  
  
<span data-ttu-id="ad7a5-884">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-884">-or-</span></span>
  
 <span data-ttu-id="ad7a5-885">使用了加密服务，但未能解密该数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-885">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-886">已存在一个正在执行的读取操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-886">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-887">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-887">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-888">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-888">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="negotiateStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad7a5-889">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-889">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ad7a5-890"><paramref name="buffer" /> 中从零开始的位置，从此处开始读取要写入到流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-890">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad7a5-891"><see cref="T:System.Int32" /> 值，该值指定要从 <paramref name="buffer" /> 中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-891">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="ad7a5-892"><see cref="T:System.AsyncCallback" /> 委托，它引用写操作完成时要调用的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-892">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ad7a5-893">一个用户定义对象，其中包含写操作的相关信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-893">A user-defined object containing information about the write operation.</span></span> <span data-ttu-id="ad7a5-894">操作完成时，此对象传递给 <paramref name="asyncCallback" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-894">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="ad7a5-895">开始一个异步写操作，此操作将指定缓冲区中的 <see cref="T:System.Byte" /> 写入到流中。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-895">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-896">一个指示异步操作状态的 <see cref="T:System.IAsyncResult" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-896">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-897">如果启用加密、签名或加密和签名，则此方法将从缓冲区中读取数据，对其进行加密、签名或加密，并使用基础流进行传输。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-897">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="ad7a5-898">如果未使用任何安全服务（如数据加密或签名），此方法将对基础流启动异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-898">If no security services such as data encryption or signing are in use, this method starts an asynchronous write operation on the underlying stream.</span></span>  
  
 <span data-ttu-id="ad7a5-899">此方法是异步的，并且在操作完成时不会被阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-899">This method is asynchronous and does not block while the operation completes.</span></span> <span data-ttu-id="ad7a5-900">若要在操作完成之前一直阻止，请使用 <xref:System.Net.Security.NegotiateStream.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-900">To block until the operation completes, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="ad7a5-901">异步读取操作必须通过调用 <xref:System.Net.Security.NegotiateStream.EndWrite%2A> 方法完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-901">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.NegotiateStream.EndWrite%2A> method.</span></span> <span data-ttu-id="ad7a5-902">通常，方法由 `asyncCallback` 委托调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-902">Typically, the method is invoked by the `asyncCallback` delegate.</span></span> <span data-ttu-id="ad7a5-903">有关使用异步编程模型的详细信息，请参阅[以异步方式调用同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="ad7a5-903">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="ad7a5-904"><xref:System.Net.Security.NegotiateStream> 类不支持多个同时执行的写入操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-904">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="ad7a5-905">如果尝试在同一流上执行另一写操作时启动写入操作，则会引发 <xref:System.NotSupportedException> 异常。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-905">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
 <span data-ttu-id="ad7a5-906">在成功完成身份验证之前，你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-906">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ad7a5-907">若要进行身份验证，请调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-907">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="ad7a5-908">下面的示例演示了开始异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-908">The following example demonstrates beginning an asynchronous write operation.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#3)]
[!code-csharp[NclNegoAsyncClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#3)]  
[!code-vb[NclNegoAsyncClient#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#3)] 

<span data-ttu-id="ad7a5-909">操作完成时，将调用以下方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-909">The following method is called when the operation completes.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-910"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-910"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-911"><paramref name="offset is less than 0" /></span><span class="sxs-lookup"><span data-stu-id="ad7a5-911"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="ad7a5-912">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-912">-or-</span></span> 
 <span data-ttu-id="ad7a5-913"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-913"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="ad7a5-914">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-914">-or-</span></span> 
 <span data-ttu-id="ad7a5-915"><paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-915"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad7a5-916">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-916">The write operation failed.</span></span>  
  
<span data-ttu-id="ad7a5-917">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-917">-or-</span></span>
  
 <span data-ttu-id="ad7a5-918">正在使用加密，但未能加密该数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-918">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-919">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-919">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-920">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-920">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-921">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-921">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.NegotiateStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-922">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可读。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-922">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="ad7a5-923">如果已进行身份验证且基础流为可读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-923"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-924">如果身份验证成功，则此属性将返回通过调用基础流上的 <xref:System.IO.Stream.CanRead%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-924">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanRead%2A> property on the underlying stream.</span></span> <span data-ttu-id="ad7a5-925">基础流是在创建 <xref:System.Net.Security.NegotiateStream> 类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-925">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-926">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-926">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.NegotiateStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-927">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可查找。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-927">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="ad7a5-928">此属性始终返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-928">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-929">不应尝试设置 <xref:System.Net.Security.NegotiateStream> 对象或其基础流的位置。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-929">You should not attempt to set the position of the <xref:System.Net.Security.NegotiateStream> object or its underlying stream.</span></span> <span data-ttu-id="ad7a5-930">基础流是在创建 <xref:System.Net.Security.NegotiateStream> 类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-930">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-931">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-931">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Security.NegotiateStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.NegotiateStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-932">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否支持超时。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-932">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="ad7a5-933">如果基础流支持超时，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-933"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-934">此属性返回通过调用基础流上的 <xref:System.IO.Stream.CanTimeout%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-934">This property returns the value returned by invoking the <xref:System.IO.Stream.CanTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="ad7a5-935">基础流是在创建 <xref:System.Net.Security.NegotiateStream> 类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-935">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-936">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-936">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.NegotiateStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-937">获取一个 <see cref="T:System.Boolean" /> 值，该值指示基础流是否可写。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-937">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="ad7a5-938">如果已进行身份验证且基础流可写，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-938"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-939">如果身份验证成功，则此属性将返回通过调用基础流上的 <xref:System.IO.Stream.CanWrite%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-939">If successful authentication has occurred, this property returns the value returned by invoking the <xref:System.IO.Stream.CanWrite%2A> property on the underlying stream.</span></span> <span data-ttu-id="ad7a5-940">基础流是在创建 <xref:System.Net.Security.NegotiateStream> 类的实例时指定的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-940">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.NegotiateStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-941">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-941">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="negotiateStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ad7a5-942">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-942"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ad7a5-943">释放 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-943">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.NegotiateStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-944">此方法由 public `Dispose()` 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-944">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="ad7a5-945">`Dispose()` 调用受保护的 `Dispose(Boolean)` 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-945">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="ad7a5-946"><xref:System.Object.Finalize%2A> 调用 `disposing` 设置为 `false`的 `Dispose`。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-946"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="ad7a5-947">如果 `disposing` 参数为 true，则此方法将释放此 <xref:System.Net.Security.NegotiateStream> 引用的任何托管对象所持有的所有资源。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-947">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.NegotiateStream> references.</span></span> <span data-ttu-id="ad7a5-948">此方法调用每个引用对象的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-948">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ad7a5-949">
            <see langword="Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-949">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="ad7a5-950"><see langword="Dispose(Boolean)" /> 重写时，请注意不要引用先前在调用 <see langword="Dispose" />之前已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-950">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="ad7a5-951">有关如何实现 <see langword="Dispose(Boolean)" />的详细信息，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-951">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="ad7a5-952">有关 <see langword="Dispose" /> 和 <see cref="M:System.Object.Finalize" />的详细信息，请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-952">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="negotiateStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad7a5-953">异步释放 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的非托管资源和受管理资源。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-953">Asynchronously releases the unmanaged and managed resources used by the <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-954">一个表示异步释放操作的任务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-954">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-955">利用此方法，您可以在不阻塞主线程的情况下执行占用大量资源的释放操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-955">This method enables you to perform a resource-intensive dispose operation without blocking the main thread.</span></span> 

 <span data-ttu-id="ad7a5-956">当 `false`<xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen> 时，此方法还会释放内部流;否则，仅刷新内部流。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-956">This method also disposes the inner stream when <xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen> is `false`; otherwise, the inner stream is just flushed.</span></span>
 
 <span data-ttu-id="ad7a5-957">调用 `DisposeAsync` 允许出于其他目的重新分配 <xref:System.Net.Security.NegotiateStream> 所使用的资源。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-957">Calling `DisposeAsync` allows the resources used by the <xref:System.Net.Security.NegotiateStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="ad7a5-958">有关详细信息，请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-958">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ad7a5-959">调用 <see cref="T:System.IAsyncResult" /> 后返回的 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-959">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="ad7a5-960">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-960">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-961">如果操作尚未完成，则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-961">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="ad7a5-962">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-962">When the authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-963">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-963">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-964">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-964">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-965">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-965">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="ad7a5-966">若要同步执行此操作，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-966">To perform this operation synchronously, use one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-967"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-967"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-968"><paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-968"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-969">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-969">The authentication failed.</span></span> <span data-ttu-id="ad7a5-970">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-970">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-971">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-971">The authentication failed.</span></span> <span data-ttu-id="ad7a5-972">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-972">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-973">没有需要完成的处于挂起状态的客户端身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-973">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="negotiateStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ad7a5-974">调用 <see cref="T:System.IAsyncResult" /> 后返回的 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-974">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></param>
        <summary><span data-ttu-id="ad7a5-975">结束通过调用 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 而启动的、正处于挂起状态的异步客户端身份验证操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-975">Ends a pending asynchronous client authentication operation that was started with a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-976">如果操作尚未完成，则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-976">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="ad7a5-977">当身份验证成功时，必须检查 <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> 和 <xref:System.Net.Security.NegotiateStream.IsSigned%2A> 属性，以确定 <xref:System.Net.Security.NegotiateStream>使用哪些安全服务。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-977">When authentication succeeds, you must check the <xref:System.Net.Security.NegotiateStream.IsEncrypted%2A> and <xref:System.Net.Security.NegotiateStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.NegotiateStream>.</span></span> <span data-ttu-id="ad7a5-978">检查 <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> 属性以确定是否发生了相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-978">Check the <xref:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="ad7a5-979">如果身份验证失败，则会收到 <xref:System.Security.Authentication.AuthenticationException> 或 <xref:System.Security.Authentication.InvalidCredentialException>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-979">If the authentication fails, you receive an <xref:System.Security.Authentication.AuthenticationException> or an <xref:System.Security.Authentication.InvalidCredentialException>.</span></span> <span data-ttu-id="ad7a5-980">在这种情况下，你可以使用不同的凭据重试身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-980">In this case, you can retry the authentication with a different credential.</span></span>  
  
 <span data-ttu-id="ad7a5-981">若要同步执行此操作，请使用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-981">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-982"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-982"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-983"><paramref name="asyncResult" /> 并不是通过对 <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" /> 的调用创建的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-983"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="ad7a5-984">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-984">The authentication failed.</span></span> <span data-ttu-id="ad7a5-985">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-985">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.Security.Authentication.InvalidCredentialException"><span data-ttu-id="ad7a5-986">身份验证失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-986">The authentication failed.</span></span> <span data-ttu-id="ad7a5-987">可以使用此对象尝试重新进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-987">You can use this object to retry the authentication.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-988">没有要完成的处于挂起状态的身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-988">There is no pending authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="negotiateStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ad7a5-989">调用 <see cref="T:System.IAsyncResult" /> 后返回的 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 实例</span><span class="sxs-lookup"><span data-stu-id="ad7a5-989">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="ad7a5-990">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步读操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-990">Ends an asynchronous read operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-991"><see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-991">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-992">如果操作尚未完成，则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-992">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="ad7a5-993">若要同步执行此操作，请使用 <xref:System.Net.Security.NegotiateStream.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-993">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="ad7a5-994">在成功完成身份验证之前，你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-994">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ad7a5-995">若要进行身份验证，请调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-995">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-996">下面的代码示例演示如何结束异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-996">The following code example demonstrates ending an asynchronous read operation.</span></span> <span data-ttu-id="ad7a5-997">有关演示如何启动操作的示例，请参阅 <xref:System.Net.Security.NegotiateStream.BeginRead%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-997">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginRead%2A>.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#3)]
 [!code-csharp[NclNegoAsyncServer#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-998"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-998"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-999">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-999">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-1000">没有处于挂起状态的读操作要完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1000">There is no pending read operation to complete.</span></span>

<span data-ttu-id="ad7a5-1001">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1001">-or-</span></span>

<span data-ttu-id="ad7a5-1002">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1002">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad7a5-1003">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1003">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="negotiateStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ad7a5-1004">调用 <see cref="T:System.IAsyncResult" /> 后返回的 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 实例</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1004">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="ad7a5-1005">结束通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而启动的异步写操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1005">Ends an asynchronous write operation that was started with a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1006">如果操作尚未完成，则此方法将一直阻止到该操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1006">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="ad7a5-1007">在成功完成身份验证之前，你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1007">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ad7a5-1008">若要进行身份验证，请调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1008">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="ad7a5-1009">若要同步执行此操作，请使用 <xref:System.Net.Security.NegotiateStream.Write%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1009">To perform this operation synchronously, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
<span data-ttu-id="ad7a5-1010">下面的示例演示了一个方法，该方法用于完成异步写入操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1010">The following example demonstrates a method that is called to complete the asynchronous write operation.</span></span> <span data-ttu-id="ad7a5-1011">有关演示如何启动操作的示例，请参阅 <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1011">For an example that demonstrates starting the operation, see <xref:System.Net.Security.NegotiateStream.BeginWrite%2A>.</span></span>  
  
[!code-cpp[NclNegoAsyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoasyncClient/CPP/NclNegoasyncClient.cpp#4)]
[!code-csharp[NclNegoAsyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoasyncClient/CS/client.cs#4)]  
[!code-vb[NclNegoAsyncClient#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclNegoasyncClient/VB/client.vb#4)] 

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-1012"><paramref name="asyncResult" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1012"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-1013">asyncResult 并不是通过调用 <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> 而创建的。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1013">The asyncResult was not created by a call to <see cref="M:System.Net.Security.NegotiateStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-1014">没有处于挂起状态的写操作要完成。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1014">There is no pending write operation to complete.</span></span>

<span data-ttu-id="ad7a5-1015">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1015">-or-</span></span>

<span data-ttu-id="ad7a5-1016">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1016">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad7a5-1017">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1017">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="negotiateStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad7a5-1018">导致所有缓冲数据都要写入基础设备。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1018">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1019">此方法对基础流调用 <xref:System.IO.Stream.Flush%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1019">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1020">下面的代码示例演示如何刷新流。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1020">The following code example demonstrates flushing the stream.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="negotiateStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonationLevel : System.Security.Principal.TokenImpersonationLevel" Usage="System.Net.Security.NegotiateStream.ImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1021">获取一个值，该值指示服务器使用客户端凭据的方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1021">Gets a value that indicates how the server can use the client's credentials.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1022"><see cref="T:System.Security.Principal.TokenImpersonationLevel" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1022">One of the <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1023">在调用此方法之前，必须成功进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1023">You must successfully authenticate before calling this method.</span></span> <span data-ttu-id="ad7a5-1024">当客户端通过调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 方法之一来请求身份验证时，将指定模拟级别。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1024">Clients specify the impersonation level when they request authentication by calling one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="ad7a5-1025">如果在未指定 <xref:System.Security.Principal.TokenImpersonationLevel> 的情况下进行身份验证，则使用 <xref:System.Security.Principal.TokenImpersonationLevel.Identification>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1025">If you authenticate without specifying a <xref:System.Security.Principal.TokenImpersonationLevel> , <xref:System.Security.Principal.TokenImpersonationLevel.Identification> is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1026">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1026">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-1027">身份验证失败或没有进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1027">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1028">获取一个 <see cref="T:System.Boolean" /> 值，该值指示身份验证是否成功。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1028">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1029">如果身份验证成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1029"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1030">客户端通过调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> 或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> 方法进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1030">Clients authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="ad7a5-1031">服务器通过调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1031">Servers authenticate by calling the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1032">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1032">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.NegotiateStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1033">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 是否使用数据加密。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1033">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.NegotiateStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1034">如果在通过网络传输数据前将其加密，并在数据到达远程终结点后将其解密，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1034"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1035">加密有助于保护数据的隐私;也就是说，它有助于确保在数据传输过程中，第三方不能对其进行解码。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1035">Encryption helps to protect the privacy of the data; namely, it helps to ensure that while data is in transit it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1036">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1036">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Security.ProtectionLevel" />
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.NegotiateStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1037">获取一个 <see cref="T:System.Boolean" /> 值，该值指示服务器和客户端是否均已进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1037">Gets a <see cref="T:System.Boolean" /> value that indicates whether both the server and the client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1038">如果服务器已进行身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1038"><see langword="true" /> if the server has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1039">当客户端希望服务器提供凭据以进行身份验证时，客户端将指定相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1039">Mutual authentication is specified by the client when the client wants the server to provide credentials for authentication.</span></span> <span data-ttu-id="ad7a5-1040">默认情况下，客户端请求相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1040">By default, clients request mutual authentication.</span></span>  
  
 <span data-ttu-id="ad7a5-1041">协商协议根据客户端和服务器支持的安全协议选择 NTLM 或 Kerberos。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1041">The Negotiate protocol selects either NTLM or Kerberos depending on the security protocols supported by the client and server.</span></span> <span data-ttu-id="ad7a5-1042">NTLM 不支持相互身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1042">NTLM does not support mutual authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1043">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1043">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.NegotiateStream.IsServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1044">获取一个 <see cref="T:System.Boolean" /> 值，该值指示此 <see cref="T:System.Net.Security.NegotiateStream" /> 使用的连接的本地端是否作为服务器进行了身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1044">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.NegotiateStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1045">如果本地终结点作为经过身份验证的连接的服务器端成功地经过了身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1045"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1046">如果身份验证失败或未发生，此属性将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1046">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="ad7a5-1047">若要作为服务器进行身份验证，请调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> 或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1047">To authenticate as the server, call the <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1048">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1048">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.NegotiateStream.IsSigned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1049">获取一个 <see cref="T:System.Boolean" /> 值，该值指示使用此流发送的数据是否进行签名。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1049">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1050">如果在传输数据前对其进行签名，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1050"><see langword="true" /> if the data is signed before being transmitted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1051">数据签名有助于保护数据的完整性;也就是说，它可帮助接收方确定数据在传输过程中是否已被篡改。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1051">Data signing helps to protect the integrity of the data; namely, it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1052">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1052">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#1)]
 [!code-csharp[NclNegoSyncClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.NegotiateStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1053">获取基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1053">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1054"><see cref="T:System.Int64" />，指定基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1054">A <see cref="T:System.Int64" /> that specifies the length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1055">此属性返回通过调用基础流上的 <xref:System.IO.Stream.Length%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1055">This property returns the value returned by invoking the <xref:System.IO.Stream.Length%2A> property on the underlying stream.</span></span> <span data-ttu-id="ad7a5-1056">如果基础流不可查找，此属性通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1056">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="ad7a5-1057">基础流的运行时类型确定所引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1057">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1058">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1058">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-1059">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1059">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.NegotiateStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1060">获取或设置基础流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1060">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1061"><see cref="T:System.Int64" />，指定基础流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1061">A <see cref="T:System.Int64" /> that specifies the current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1062">此属性返回通过调用基础流上的 <xref:System.IO.Stream.Position%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1062">This property returns the value returned by invoking the <xref:System.IO.Stream.Position%2A> property on the underlying stream.</span></span> <span data-ttu-id="ad7a5-1063">如果基础流不可查找，此属性通常会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1063">If the underlying stream is not seekable, this property will typically throw an exception.</span></span> <span data-ttu-id="ad7a5-1064">基础流的运行时类型确定所引发的异常的运行时类型。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1064">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-1065">不支持设置此属性。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1065">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="ad7a5-1066">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1066">-or-</span></span> 
<span data-ttu-id="ad7a5-1067">当基础流为 <see cref="T:System.Net.Sockets.NetworkStream" /> 时，不支持获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1067">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="negotiateStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad7a5-1068">一个 <see cref="T:System.Byte" /> 数组，该数组接收从流中读取的字节。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1068">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ad7a5-1069"><see cref="T:System.Int32" />，其中包含 <paramref name="buffer" /> 中从零开始的位置，从此处开始存储从流中读取的数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1069">A <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad7a5-1070"><see cref="T:System.Int32" />，包含要从流中读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1070">A <see cref="T:System.Int32" /> containing the maximum number of bytes to read from the stream.</span></span></param>
        <summary><span data-ttu-id="ad7a5-1071">读取此流中的数据并将其存储在指定的数组中。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1071">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-1072"><see cref="T:System.Int32" /> 值，该值指定从基础流中读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1072">An <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span> <span data-ttu-id="ad7a5-1073">如果再也没有要读取的数据，将返回 0。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1073">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1074">方法从当前流中读取最多 `count` 个字节，并将它们存储在 `buffer` 从 `offset`开始。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1074">The method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span>  
  
 <span data-ttu-id="ad7a5-1075">在成功完成身份验证之前，你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1075">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ad7a5-1076">若要进行身份验证，请调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1076">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="ad7a5-1077">若要以异步方式执行此操作，请使用 <xref:System.Net.Security.NegotiateStream.BeginRead%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1077">To perform this operation asynchronously, use the <xref:System.Net.Security.NegotiateStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1078">下面的代码示例演示如何从 <xref:System.Net.Security.NegotiateStream>读取。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1078">The following code example demonstrates reading from a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncServer#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncServer/CPP/NclNegoSyncServer.cpp#1)]
 [!code-csharp[NclNegoSyncServer#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncServer/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad7a5-1079">读操作失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1079">The read operation failed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-1080">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1080">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-1081">已在进行 <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> 操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1081">A <see cref="M:System.Net.Security.NegotiateStream.Read(System.Byte[],System.Int32,System.Int32)" /> operation is already in progress.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1082">获取或设置读操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1082">Gets or sets the amount of time a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1083"><see cref="T:System.Int32" />，指定读操作失败前经过的时间。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1083">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1084">此属性返回通过调用基础流上的 <xref:System.IO.Stream.ReadTimeout%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1084">This property returns the value returned by invoking the <xref:System.IO.Stream.ReadTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="ad7a5-1085">设置此属性时，基础流中的 <xref:System.IO.Stream.ReadTimeout%2A> 值将设置为指定值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1085">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="ad7a5-1086">如果基础流是 <xref:System.Net.Sockets.NetworkStream>，则 <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> 以毫秒为单位，并且默认设置为 <xref:System.Threading.Timeout.Infinite>，以便读取操作不会超时。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1086">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1087">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1087">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity RemoteIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity RemoteIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteIdentity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ RemoteIdentity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteIdentity : System.Security.Principal.IIdentity" Usage="System.Net.Security.NegotiateStream.RemoteIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1088">获取有关共享此已验证身份的流的远程方的身份信息。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1088">Gets information about the identity of the remote party sharing this authenticated stream.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1089"><see cref="T:System.Security.Principal.IIdentity" /> 对象，介绍远程端点的标识。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1089">An <see cref="T:System.Security.Principal.IIdentity" /> object that describes the identity of the remote endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1090">当客户端访问时，此属性将返回一个 <xref:System.Security.Principal.GenericIdentity>，其中包含服务器的服务主体名称（SPN）和所使用的身份验证协议。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1090">When accessed by the client, this property returns a <xref:System.Security.Principal.GenericIdentity> containing the Service Principal Name (SPN) of the server and the authentication protocol used.</span></span> <span data-ttu-id="ad7a5-1091">当服务器访问时，此属性将返回描述客户端的 <xref:System.Security.Principal.WindowsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1091">When accessed by the server, this property returns a <xref:System.Security.Principal.WindowsIdentity> that describes the client.</span></span> <span data-ttu-id="ad7a5-1092">如果 <xref:System.Security.Principal.WindowsIdentity> 不可用，客户端信息将返回到 <xref:System.Security.Principal.GenericIdentity>中的服务器。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1092">If the <xref:System.Security.Principal.WindowsIdentity> is not available, client information is returned to the server in a <xref:System.Security.Principal.GenericIdentity>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1093">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1093">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoAsyncServer#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoAsyncServer/CPP/NclNegoAsyncServer.cpp#2)]
 [!code-csharp[NclNegoAsyncServer#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoAsyncServer/CS/server.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-1094">身份验证失败或没有进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1094">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="negotiateStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="ad7a5-1095">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1095">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="ad7a5-1096">忽略此值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1096">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="ad7a5-1097">引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1097">Throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="ad7a5-1098">总是引发 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1098">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1099">请勿调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1099">Do not call this method.</span></span> <span data-ttu-id="ad7a5-1100">它是继承的，但不受 <xref:System.Net.Security.NegotiateStream>支持。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1100">It is inherited, but is not supported by <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-1101"><see cref="T:System.Net.Security.NegotiateStream" /> 上不支持查找。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1101">Seeking is not supported on <see cref="T:System.Net.Security.NegotiateStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="negotiateStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ad7a5-1102"><see cref="T:System.Int64" /> 值，该值指定流的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1102">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="ad7a5-1103">设置基础流的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1103">Sets the length of the underlying stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.NegotiateStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="negotiateStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ad7a5-1104">一个 <see cref="T:System.Byte" /> 数组，该数组提供要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1104">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="ad7a5-1105">包含 <see cref="T:System.Int32" /> 中从零开始的位置的 <paramref name="buffer" />，将从此位置开始读取要写入到流中的字节。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1105">An <see cref="T:System.Int32" /> containing the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="ad7a5-1106"><see cref="T:System.Int32" />，其中包含要从 <paramref name="buffer" /> 读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1106">A <see cref="T:System.Int32" /> containing the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="ad7a5-1107">使用指定的缓冲区和偏移将指定数目的 <see cref="T:System.Byte" /> 写入基础流。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1107">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1108">如果启用加密、签名或加密和签名，则此方法将从缓冲区中读取数据，对其进行加密、签名或加密，并使用基础流进行传输。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1108">If encryption, signing, or encryption and signing are enabled, this method reads the data from buffer, encrypts, signs, or encrypts and signs it, and transmits it using the underlying stream.</span></span> <span data-ttu-id="ad7a5-1109">如果未使用任何安全服务（如数据加密或签名），此方法将对基础流调用 <xref:System.IO.Stream.Write%2A>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1109">If no security services such as data encryption or signing are in use, this method invokes <xref:System.IO.Stream.Write%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="ad7a5-1110">写入操作完成时，此方法将会阻止。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1110">This method blocks while the write operation completes.</span></span> <span data-ttu-id="ad7a5-1111">若要在操作完成时阻止阻止，请使用 <xref:System.Net.Security.NegotiateStream.Write%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1111">To prevent blocking while the operation completes, use the <xref:System.Net.Security.NegotiateStream.Write%2A> method.</span></span>  
  
 <span data-ttu-id="ad7a5-1112">在成功完成身份验证之前，你无法调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1112">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="ad7a5-1113">若要进行身份验证，请调用 <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>或 <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> 方法之一。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1113">To authenticate, call one of the <xref:System.Net.Security.NegotiateStream.AuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.NegotiateStream.AuthenticateAsServer%2A>, or <xref:System.Net.Security.NegotiateStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="ad7a5-1114"><xref:System.Net.Security.NegotiateStream> 类不支持多个同时执行的写入操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1114">The <xref:System.Net.Security.NegotiateStream> class does not support multiple simultaneous write operations.</span></span> <span data-ttu-id="ad7a5-1115">如果尝试在同一流上执行另一写操作时启动写入操作，则会引发 <xref:System.NotSupportedException> 异常。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1115">If you attempt to start a write operation while another write operation is already executing on the same stream, a <xref:System.NotSupportedException> exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1116">下面的代码示例演示如何写入 <xref:System.Net.Security.NegotiateStream>。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1116">The following code example demonstrates writing to a <xref:System.Net.Security.NegotiateStream>.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#4)]
 [!code-csharp[NclNegoSyncClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ad7a5-1117"><paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1117"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ad7a5-1118"><paramref name="offset is less than 0" /></span><span class="sxs-lookup"><span data-stu-id="ad7a5-1118"><paramref name="offset is less than 0" />.</span></span>  
  
<span data-ttu-id="ad7a5-1119">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1119">-or-</span></span> 
 <span data-ttu-id="ad7a5-1120"><paramref name="offset" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1120"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="ad7a5-1121">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1121">-or-</span></span> 
 <span data-ttu-id="ad7a5-1122"><paramref name="offset" /> 加上计数大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1122"><paramref name="offset" /> plus count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="ad7a5-1123">写操作失败。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1123">The write operation failed.</span></span>  
  
<span data-ttu-id="ad7a5-1124">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1124">-or-</span></span>
  
 <span data-ttu-id="ad7a5-1125">正在使用加密，但未能加密该数据。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1125">Encryption is in use, but the data could not be encrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ad7a5-1126">已存在一个正在执行的写操作。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1126">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="ad7a5-1127">此对象已关闭。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1127">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ad7a5-1128">未进行身份验证。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1128">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.NegotiateStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad7a5-1129">获取或设置写操作阻止等待数据的时间。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1129">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="ad7a5-1130"><see cref="T:System.Int32" />，指定写操作失败前经过的时间。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1130">A <see cref="T:System.Int32" /> that specifies the amount of time that will elapse before a write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad7a5-1131">此属性返回通过调用基础流上的 <xref:System.IO.Stream.WriteTimeout%2A> 属性返回的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1131">This property returns the value returned by invoking the <xref:System.IO.Stream.WriteTimeout%2A> property on the underlying stream.</span></span> <span data-ttu-id="ad7a5-1132">对于设置操作，指定的值将设置基础流上的 <xref:System.IO.Stream.WriteTimeout%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1132">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="ad7a5-1133">如果基础流是 <xref:System.Net.Sockets.NetworkStream>，则 <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> 以毫秒为单位，并且默认设置为 <xref:System.Threading.Timeout.Infinite>，以便写入操作不会超时。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1133">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.NegotiateStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not time out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad7a5-1134">下面的代码示例演示如何显示此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ad7a5-1134">The following code example demonstrates displaying the value of this property.</span></span>  
  
 [!code-cpp[NclNegoSyncClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclNegoSyncClient/CPP/NclNegoSyncClient.cpp#2)]
 [!code-csharp[NclNegoSyncClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclNegoSyncClient/CS/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
