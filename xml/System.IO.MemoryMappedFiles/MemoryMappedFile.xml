<Type Name="MemoryMappedFile" FullName="System.IO.MemoryMappedFiles.MemoryMappedFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d168823b36f95593f506945258a3e9f9ff52e4a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75133097" /></Metadata><TypeSignature Language="C#" Value="public class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryMappedFile extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMappedFile&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryMappedFile = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3701f-101">表示内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-101">Represents a memory-mapped file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-102">内存映射文件将文件的内容映射到应用程序的逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="3701f-102">A memory-mapped file maps the contents of a file to an application's logical address space.</span></span> <span data-ttu-id="3701f-103">内存映射文件使程序员能够处理极其大的文件，因为内存可以同时进行管理，并允许对文件进行完整的随机访问，而无需查找。</span><span class="sxs-lookup"><span data-stu-id="3701f-103">Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</span></span> <span data-ttu-id="3701f-104">内存映射文件也可以在多个进程之间共享。</span><span class="sxs-lookup"><span data-stu-id="3701f-104">Memory-mapped files can also be shared across multiple processes.</span></span>  
  
 <span data-ttu-id="3701f-105"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 方法从磁盘上现有文件的指定路径或 <xref:System.IO.FileStream> 创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-105">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk.</span></span> <span data-ttu-id="3701f-106">当文件未映射时，更改会自动传播到磁盘。</span><span class="sxs-lookup"><span data-stu-id="3701f-106">Changes are automatically propagated to disk when the file is unmapped.</span></span>  
  
 <span data-ttu-id="3701f-107"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 方法创建未映射到磁盘上现有文件的内存映射文件;和适用于创建用于进程间通信（IPC）的共享内存。</span><span class="sxs-lookup"><span data-stu-id="3701f-107">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</span></span>  
  
 <span data-ttu-id="3701f-108">可以将内存映射文件与允许与其他进程共享的内存映射文件的可选名称关联。</span><span class="sxs-lookup"><span data-stu-id="3701f-108">A memory-mapped file can be associated with an optional name that allows the memory-mapped file to be shared with other processes.</span></span> 
  
 <span data-ttu-id="3701f-109">您可以创建内存映射文件的多个视图，包括部分文件的视图。</span><span class="sxs-lookup"><span data-stu-id="3701f-109">You can create multiple views of the memory-mapped file, including views of parts of the file.</span></span> <span data-ttu-id="3701f-110">您可以将文件的同一部分映射到多个地址，以创建并发内存。</span><span class="sxs-lookup"><span data-stu-id="3701f-110">You can map the same part of a file to more than one address to create concurrent memory.</span></span> <span data-ttu-id="3701f-111">若要让两个视图一直处于并发状态，必须通过同一个内存映射文件创建它们。</span><span class="sxs-lookup"><span data-stu-id="3701f-111">For two views to remain concurrent, they have to be created from the same memory-mapped file.</span></span> <span data-ttu-id="3701f-112">创建具有两个视图的同一文件的两个文件映射不提供并发性。</span><span class="sxs-lookup"><span data-stu-id="3701f-112">Creating two file mappings of the same file with two views does not provide concurrency.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3701f-113">下面的示例为极大文件的一部分创建内存映射视图，并控制其中一部分。</span><span class="sxs-lookup"><span data-stu-id="3701f-113">The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-114">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-114">Memory-Mapped Files</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3701f-115">基于现有文件创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-115">Creates a memory-mapped file from an existing file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3701f-116">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="3701f-116">The path to file to map.</span></span></param>
        <summary><span data-ttu-id="3701f-117">基于磁盘上的文件创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-117">Creates a memory-mapped file from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="3701f-118">内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-118">A memory-mapped file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3701f-119">下面的示例使用 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 方法创建一个内存映射文件，然后创建一个内存映射视图到极大文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="3701f-119">The following example uses the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-120"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="3701f-120"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="3701f-121">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-121">-or-</span></span> 
 <span data-ttu-id="3701f-122"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="3701f-122"><paramref name="path" /> refers to an invalid device.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-123"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-123"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-124">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3701f-124">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="3701f-125"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="3701f-125"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3701f-126">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-126">The caller does not have the required permissions for the file.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-127">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-127">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3701f-128">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="3701f-128">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="3701f-129">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-129">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <summary><span data-ttu-id="3701f-130">基于磁盘上的文件创建一个具有指定访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-130">Creates a memory-mapped file that has the specified access mode from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="3701f-131">具有指定访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-131">A memory-mapped file that has the specified access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-132">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-132">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="3701f-133">您只能使用 <xref:System.IO.FileMode.Open> 枚举值从源文件创建内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-133">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-134"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="3701f-134"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="3701f-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-135">-or-</span></span> 
 <span data-ttu-id="3701f-136"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="3701f-136"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="3701f-137">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-137">-or-</span></span> 
 <span data-ttu-id="3701f-138"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-138"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-139"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-139"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-140"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-140"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
<span data-ttu-id="3701f-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-141">-or-</span></span> 
 <span data-ttu-id="3701f-142"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="3701f-142"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
<span data-ttu-id="3701f-143">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-143">-or-</span></span> 
<span data-ttu-id="3701f-144">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3701f-144">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="3701f-145"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="3701f-145"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3701f-146">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-146">The caller does not have the required permissions for the file.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-147">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-147">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3701f-148">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="3701f-148">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="3701f-149">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-149">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="3701f-150">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-150">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <summary><span data-ttu-id="3701f-151">基于磁盘上的文件创建一个具有指定访问模式和名称的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-151">Creates a memory-mapped file that has the specified access mode and name from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="3701f-152">具有指定名称和访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-152">A memory-mapped file that has the specified name and access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-153">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-153">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="3701f-154">您只能使用 <xref:System.IO.FileMode.Open> 枚举值从源文件创建内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-154">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-155"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="3701f-155"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="3701f-156">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-156">-or-</span></span> 
 <span data-ttu-id="3701f-157"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="3701f-157"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="3701f-158">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-158">-or-</span></span> 
 <span data-ttu-id="3701f-159"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-159"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-160">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-160">-or-</span></span> 
 <span data-ttu-id="3701f-161"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-161"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-162"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-163"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-163"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
<span data-ttu-id="3701f-164">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-164">-or-</span></span> 
 <span data-ttu-id="3701f-165"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="3701f-165"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
<span data-ttu-id="3701f-166">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-166">-or-</span></span> 
<span data-ttu-id="3701f-167">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3701f-167">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="3701f-168"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="3701f-168"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3701f-169">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-169">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3701f-170">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="3701f-170">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="3701f-171">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-171">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="3701f-172">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-172">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-173">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-173">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="3701f-174">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-174">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <summary><span data-ttu-id="3701f-175">基于磁盘上的文件创建一个具有指定访问模式、名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-175">Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="3701f-176">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-176">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-177">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-177">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="3701f-178">如果 `capacity` 大于磁盘上的文件大小，则磁盘上的文件将增加以与指定的容量匹配，即使没有数据写入到内存映射文件也是如此。</span><span class="sxs-lookup"><span data-stu-id="3701f-178">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="3701f-179">若要防止出现这种情况，请将默认容量指定为0（零），将在内部将 `capacity` 设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-179">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-180"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="3701f-180"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="3701f-181">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-181">-or-</span></span> 
 <span data-ttu-id="3701f-182"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="3701f-182"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="3701f-183">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-183">-or-</span></span> 
 <span data-ttu-id="3701f-184"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-184"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-185">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-185">-or-</span></span> 
 <span data-ttu-id="3701f-186"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-186"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-187"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-187"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-188"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-188"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="3701f-189">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-189">-or-</span></span> 
 <span data-ttu-id="3701f-190"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-190"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="3701f-191">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-191">-or-</span></span> 
 <span data-ttu-id="3701f-192"><paramref name="capacity" /> 小于文件大小（但不为零）。</span><span class="sxs-lookup"><span data-stu-id="3701f-192"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
<span data-ttu-id="3701f-193">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-193">-or-</span></span> 
 <span data-ttu-id="3701f-194"><paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</span><span class="sxs-lookup"><span data-stu-id="3701f-194"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-195">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3701f-195">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="3701f-196"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="3701f-196"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3701f-197">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-197">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="3701f-198">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="3701f-198">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="3701f-199">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-199">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="3701f-200">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-200">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-201">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-201">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="3701f-202">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-202">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-203">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-203">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="3701f-204">基于磁盘上的文件创建一个具有指定访问模式、名称、容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-204">Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="3701f-205">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-205">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-206">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-206">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="3701f-207">如果 `capacity` 大于磁盘上的文件大小，则磁盘上的文件将增加以与指定的容量匹配，即使没有数据写入到内存映射文件也是如此。</span><span class="sxs-lookup"><span data-stu-id="3701f-207">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="3701f-208">若要防止出现这种情况，请将默认容量指定为0（零），将在内部将 `capacity` 设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-208">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-209"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-209"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-210">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-210">-or-</span></span> 
 <span data-ttu-id="3701f-211"><paramref name="access" /> 不是一个允许的值。</span><span class="sxs-lookup"><span data-stu-id="3701f-211"><paramref name="access" /> is not an allowed value.</span></span>  
  
<span data-ttu-id="3701f-212">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-212">-or-</span></span> 
 <span data-ttu-id="3701f-213"><paramref name="path" /> 指定空的文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-213"><paramref name="path" /> specifies an empty file.</span></span>  
  
<span data-ttu-id="3701f-214">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-214">-or-</span></span> 
 <span data-ttu-id="3701f-215"><paramref name="access" /> 指定为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，容量大于 <paramref name="path" /> 所指示文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-215"><paramref name="access" /> is specified as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and capacity is greater than the size of the file indicated by <paramref name="path" />.</span></span>  
  
<span data-ttu-id="3701f-216">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-216">-or-</span></span> 
 <span data-ttu-id="3701f-217"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-217"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-218"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-218"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-219"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-219"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="3701f-220">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-220">-or-</span></span> 
 <span data-ttu-id="3701f-221"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-221"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="3701f-222">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-222">-or-</span></span> 
 <span data-ttu-id="3701f-223"><paramref name="capacity" /> 小于文件大小（但不为零）。</span><span class="sxs-lookup"><span data-stu-id="3701f-223"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
<span data-ttu-id="3701f-224">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-224">-or-</span></span> 
 <span data-ttu-id="3701f-225"><paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</span><span class="sxs-lookup"><span data-stu-id="3701f-225"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span>  
  
<span data-ttu-id="3701f-226">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-226">-or-</span></span> 
 <span data-ttu-id="3701f-227"><paramref name="access" /> 不是定义的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3701f-227"><paramref name="access" /> is not a defined <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> value.</span></span>  
  
<span data-ttu-id="3701f-228">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-228">-or-</span></span> 
<span data-ttu-id="3701f-229"><paramref name="path" /> 指示的文件大小大于 <paramref name="capacity" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-229">The size of the file indicated by <paramref name="path" /> is greater than <paramref name="capacity" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-230">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-230">-or-</span></span>  
  
 <span data-ttu-id="3701f-231">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3701f-231">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="3701f-232"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="3701f-232"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="3701f-233">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-233">The caller does not have the required permissions for the file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-234">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-234">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-235">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-235">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-236">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-236">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mapName" Type="System.String" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="5" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="3701f-237">现有文件的文件流。</span><span class="sxs-lookup"><span data-stu-id="3701f-237">The file stream of the existing file.</span></span></param>
        <param name="mapName"><span data-ttu-id="3701f-238">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-238">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-239">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-239">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="3701f-240">指定 0，以将容量设置为 <c>filestream</c> 的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-240">Specify 0 to set the capacity to the size of <c>filestream</c>.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-241">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-241">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
<span data-ttu-id="3701f-242">不能将此参数设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-242">This parameter can't be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="3701f-243">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-243">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="3701f-244">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-244">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="3701f-245">一个值，该值指示释放 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 后是否要关闭源文件流。</span><span class="sxs-lookup"><span data-stu-id="3701f-245">A value that indicates whether to close the source file stream when the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is disposed.</span></span></param>
        <summary><span data-ttu-id="3701f-246">从现有文件创建一个具有指定的访问模式、名称、继承性和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-246">Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</span></span></summary>
        <returns><span data-ttu-id="3701f-247">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-247">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-248"><paramref name="mapName" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-248"><paramref name="mapName" /> is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="3701f-249">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-249">-or-</span></span> 
 <span data-ttu-id="3701f-250"><paramref name="capacity" /> 和文件长度为零。</span><span class="sxs-lookup"><span data-stu-id="3701f-250"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
<span data-ttu-id="3701f-251">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-251">-or-</span></span> 
 <span data-ttu-id="3701f-252"><paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值，这是不允许的。</span><span class="sxs-lookup"><span data-stu-id="3701f-252"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span>  
  
<span data-ttu-id="3701f-253">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-253">-or-</span></span> 
 <span data-ttu-id="3701f-254"><paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，<paramref name="capacity" /> 大于 <see langword="filestream" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="3701f-254"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and <paramref name="capacity" /> is larger than the length of <see langword="filestream" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-255"><paramref name="fileStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-255"><paramref name="fileStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-256"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-256"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="3701f-257">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-257">-or-</span></span> 
 <span data-ttu-id="3701f-258"><paramref name="capacity" /> 小于文件大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-258"><paramref name="capacity" /> is less than the file size.</span></span>  
  
<span data-ttu-id="3701f-259">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-259">-or-</span></span> 
 <span data-ttu-id="3701f-260"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-260"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="3701f-261">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-261">-or-</span></span> 
 <span data-ttu-id="3701f-262"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-262"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, memoryMappedFileSecurity, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mapName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="3701f-263">要映射的文件的 <paramref name="fileStream" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-263">The <paramref name="fileStream" /> to the file to map.</span></span></param>
        <param name="mapName"><span data-ttu-id="3701f-264">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-264">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-265">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-265">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="3701f-266">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-266">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-267">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-267">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
<span data-ttu-id="3701f-268">不能将此参数设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-268">This parameter can't be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="3701f-269">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-269">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="3701f-270">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-270">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="3701f-271">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-271">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="3701f-272">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-272">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="3701f-273">若为 <see langword="true" />，则在关闭 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 后不释放 <paramref name="fileStream" />；若为 <see langword="false" />，则释放 <paramref name="fileStream" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-273"><see langword="true" /> to not dispose <paramref name="fileStream" /> after the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is closed; <see langword="false" /> to dispose <paramref name="fileStream" />.</span></span></param>
        <summary><span data-ttu-id="3701f-274">基于磁盘上的文件创建一个具有指定名称、容量、访问类型、安全权限、继承性和释放要求的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-274">Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="3701f-275">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-275">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-276">如果 `capacity` 大于磁盘上的文件大小，则磁盘上的文件将增加以与指定的容量匹配，即使没有数据写入到内存映射文件也是如此。</span><span class="sxs-lookup"><span data-stu-id="3701f-276">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="3701f-277">若要防止出现这种情况，请将默认容量指定为0（零），将在内部将 `capacity` 设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-277">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-278"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-278"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-279">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-279">-or-</span></span> 
 <span data-ttu-id="3701f-280"><paramref name="capacity" /> 和文件长度为零。</span><span class="sxs-lookup"><span data-stu-id="3701f-280"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
<span data-ttu-id="3701f-281">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-281">-or-</span></span> 
 <span data-ttu-id="3701f-282">把 <paramref name="access" /> 设置到 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值，这是不允许的。</span><span class="sxs-lookup"><span data-stu-id="3701f-282"><paramref name="access" /> is set to the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-283"><paramref name="fileStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-283"><paramref name="fileStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-284"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-284"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="3701f-285">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-285">-or-</span></span> 
 <span data-ttu-id="3701f-286"><paramref name="capacity" /> 小于文件大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-286"><paramref name="capacity" /> is less than the file size.</span></span>  
  
<span data-ttu-id="3701f-287">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-287">-or-</span></span> 
 <span data-ttu-id="3701f-288"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-288"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="3701f-289">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-289">-or-</span></span> 
 <span data-ttu-id="3701f-290"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-290"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3701f-291"><paramref name="fileStream" /> 已关闭。</span><span class="sxs-lookup"><span data-stu-id="3701f-291"><paramref name="fileStream" /> was closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-292">当把 <paramref name="access" /> 的访问设置到 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> 或 <see cref="F:System.IO.FileAccess.Read" /> 时，将把 <paramref name="fileStream" /> 设置到 <see cref="F:System.IO.FileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-292"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> when <paramref name="fileStream" />'s access is set to <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-293"><paramref name="mapName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="3701f-293"><paramref name="mapName" /> already exists.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-294">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-294">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-295">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-295">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-296">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-296">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNew">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3701f-297">在系统内存中创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-297">Creates a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-298">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-298">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-299">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-299">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="3701f-300">在系统内存中创建一个具有指定容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-300">Creates a memory-mapped file that has the specified capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-301">具有指定名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-301">A memory-mapped file that has the specified name and capacity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-302">使用此方法创建一个不是持久的内存映射文件（即，不与磁盘上的文件关联），可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="3701f-302">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3701f-303">下面的示例由三个单独的进程（控制台应用程序）组成，它们将 `Boolean` 值写入内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-303">The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file.</span></span> <span data-ttu-id="3701f-304">各操作按下面的顺序发生：</span><span class="sxs-lookup"><span data-stu-id="3701f-304">The following sequence of actions occur:</span></span>  
  
1.  <span data-ttu-id="3701f-305">进程 A 创建内存映射文件，并向其写入值。</span><span class="sxs-lookup"><span data-stu-id="3701f-305">Process A creates the memory-mapped file and writes a value to it.</span></span>  
  
2.  <span data-ttu-id="3701f-306">进程 B 打开内存映射文件，并向其写入值。</span><span class="sxs-lookup"><span data-stu-id="3701f-306">Process B opens the memory-mapped file and writes a value to it.</span></span>  
  
3.  <span data-ttu-id="3701f-307">进程 C 打开内存映射文件，并向其中写入值。</span><span class="sxs-lookup"><span data-stu-id="3701f-307">Process C opens the memory-mapped file and writes a value to it.</span></span>  
  
4.  <span data-ttu-id="3701f-308">处理读取并显示内存映射文件中的值。</span><span class="sxs-lookup"><span data-stu-id="3701f-308">Process A reads and displays the values from the memory-mapped file.</span></span>  
  
5.  <span data-ttu-id="3701f-309">使用内存映射文件完成处理后，将立即通过垃圾回收来回收文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-309">After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="3701f-310">若要运行此示例，请按照以下步骤操作：</span><span class="sxs-lookup"><span data-stu-id="3701f-310">To run this example, do the following:</span></span>  
  
1.  <span data-ttu-id="3701f-311">编译应用程序并打开三个命令窗口。</span><span class="sxs-lookup"><span data-stu-id="3701f-311">Compile the applications and open three Command windows.</span></span>  
  
2.  <span data-ttu-id="3701f-312">在第一个命令窗口中，运行 "处理"。</span><span class="sxs-lookup"><span data-stu-id="3701f-312">In the first Command window, run Process A.</span></span>  
  
3.  <span data-ttu-id="3701f-313">在第二个命令窗口中，运行进程 B。</span><span class="sxs-lookup"><span data-stu-id="3701f-313">In the second Command window, run Process B.</span></span>  
  
4.  <span data-ttu-id="3701f-314">返回以处理，然后按 ENTER。</span><span class="sxs-lookup"><span data-stu-id="3701f-314">Return to Process A and press ENTER.</span></span>  
  
5.  <span data-ttu-id="3701f-315">在第三个命令窗口中，运行进程 C。</span><span class="sxs-lookup"><span data-stu-id="3701f-315">In the third Command window, run Process C.</span></span>  
  
6.  <span data-ttu-id="3701f-316">返回以处理，然后按 ENTER。</span><span class="sxs-lookup"><span data-stu-id="3701f-316">Return to Process A and press ENTER.</span></span>  
  
 <span data-ttu-id="3701f-317">进程 A 的输出如下所示：</span><span class="sxs-lookup"><span data-stu-id="3701f-317">The output of Process A is as follows:</span></span>  
  
```  
Start Process B and press ENTER to continue.  
Start Process C and press ENTER to continue.  
Process A says: True  
Process B says: False  
Process C says: True  
```  
  
 <span data-ttu-id="3701f-318">**Process A**</span><span class="sxs-lookup"><span data-stu-id="3701f-318">**Process A**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#1)]  
  
 <span data-ttu-id="3701f-319">**Process B**</span><span class="sxs-lookup"><span data-stu-id="3701f-319">**Process B**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/vb/program.vb#1)]  
  
 <span data-ttu-id="3701f-320">**Process C**</span><span class="sxs-lookup"><span data-stu-id="3701f-320">**Process C**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-321"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-321"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-322"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-322"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3701f-323">仅限 .NET Core：仅在 Windows 操作系统上支持使用已命名的内存映射文件（即非 null <paramref name="mapName" />）调用 <c>CreateNew</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="3701f-323">.NET Core only: Calls to the <c>CreateNew</c> method with a named memory mapped file (that is, a non-null <paramref name="mapName" />) are supported on Windows operating systems only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-324">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-324">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-325">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-325">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-326">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-326">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-327">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-327">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-328">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-328">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="3701f-329">在系统内存中创建一个具有指定容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-329">Creates a memory-mapped file that has the specified capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-330">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-330">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-331">使用此方法创建一个不是持久的内存映射文件（即，不与磁盘上的文件关联），可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="3701f-331">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-332"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-332"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-333">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-333">-or-</span></span> 
 <span data-ttu-id="3701f-334">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="3701f-334"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-335"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-335"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="3701f-336">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-336">-or-</span></span> 
 <span data-ttu-id="3701f-337"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-337"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3701f-338">仅限 .NET Core：仅在 Windows 操作系统上支持使用已命名的内存映射文件（即非 null <paramref name="mapName" />）调用 <c>CreateNew</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="3701f-338">.NET Core only: Calls to the <c>CreateNew</c> method with a named memory mapped file (that is, a non-null <paramref name="mapName" />) are supported on Windows operating systems only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-339">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-339">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-340">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-340">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-341">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-341">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-342">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-342">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-343">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-343">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="3701f-344">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="3701f-344">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="3701f-345">一个值，该值指定内存映射文件的句柄能否由子进程继承。</span><span class="sxs-lookup"><span data-stu-id="3701f-345">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="3701f-346">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-346">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="3701f-347">创建一个具有指定名称、容量、访问类型、内存分配选项和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-347">Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</span></span></summary>
        <returns><span data-ttu-id="3701f-348">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-348">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-349"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-349"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-350">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-350">-or-</span></span> 
 <span data-ttu-id="3701f-351">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="3701f-351"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-352"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-352"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="3701f-353">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-353">-or-</span></span> 
 <span data-ttu-id="3701f-354"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-354"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="3701f-355">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-355">-or-</span></span> 
 <span data-ttu-id="3701f-356"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</span><span class="sxs-lookup"><span data-stu-id="3701f-356"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> value.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3701f-357">仅限 .NET Core：仅在 Windows 操作系统上支持使用已命名的内存映射文件（即非 null <paramref name="mapName" />）调用 <c>CreateNew</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="3701f-357">.NET Core only: Calls to the <c>CreateNew</c> method with a named memory mapped file (that is, a non-null <paramref name="mapName" />) are supported on Windows operating systems only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-358">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-358">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-359">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-359">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-360">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-360">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-361">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-361">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="3701f-362">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="3701f-362">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="3701f-363">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-363">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="3701f-364">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-364">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="3701f-365">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-365">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="3701f-366">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-366">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="3701f-367">在系统内存中创建一个具有指定容量、访问类型、内存分配、安全权限和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-367">Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-368">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-368">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-369">使用此方法创建一个不是持久的内存映射文件（即，不与磁盘上的文件关联），可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="3701f-369">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-370"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-370"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-371">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-371">-or-</span></span> 
 <span data-ttu-id="3701f-372">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="3701f-372"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-373"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-373"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="3701f-374">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-374">-or-</span></span> 
 <span data-ttu-id="3701f-375"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-375"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="3701f-376">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-376">-or-</span></span> 
 <span data-ttu-id="3701f-377"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-377"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-378">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-378">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-379">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-379">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-380">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-380">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateOrOpen">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3701f-381">在系统内存中创建或打开一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-381">Creates or opens a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-382">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="3701f-382">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-383">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-383">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="3701f-384">在系统内存中创建或打开具有指定名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-384">Creates or opens a memory-mapped file that has the specified name and capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-385">具有指定名称和大小的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-385">A memory-mapped file that has the specified name and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-386">使用此方法可创建或打开未持久化的内存映射文件（即不与磁盘上的文件相关联），您可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="3701f-386">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-387"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-387"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-388"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-388"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="3701f-389">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-389">-or-</span></span> 
 <span data-ttu-id="3701f-390"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-390"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-391">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-391">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-392">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="3701f-392">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-393">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-393">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-394">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-394">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-395">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-395">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="3701f-396">在系统内存中创建或打开具有指定名称、容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-396">Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-397">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-397">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-398">使用此方法可创建或打开未持久化的内存映射文件（即不与磁盘上的文件相关联），您可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="3701f-398">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-399"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-399"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-400"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-400"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-401">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-401">-or-</span></span> 
 <span data-ttu-id="3701f-402">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="3701f-402"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-403"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-403"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="3701f-404">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-404">-or-</span></span> 
 <span data-ttu-id="3701f-405"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-405"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="3701f-406">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-406">-or-</span></span> 
 <span data-ttu-id="3701f-407"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-407"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-408">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="3701f-408">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-409">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-409">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-410">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="3701f-410">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-411">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-411">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-412">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-412">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-413">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-413">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="3701f-414">值的按位组合，它指示要应用到文件的内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="3701f-414">A bitwise combination of values that indicate the memory allocation options to apply to the file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="3701f-415">一个值，该值指定内存映射文件的句柄能否由子进程继承。</span><span class="sxs-lookup"><span data-stu-id="3701f-415">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="3701f-416">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-416">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="3701f-417">创建一个新的空内存映射文件或打开一个现有的内存映射文件（如果存在同名的内存映射文件）。</span><span class="sxs-lookup"><span data-stu-id="3701f-417">Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</span></span> <span data-ttu-id="3701f-418">如果打开现有的文件，则会忽略容量、选项和内存参数。</span><span class="sxs-lookup"><span data-stu-id="3701f-418">If opening an existing file, the capacity, options, and memory arguments will be ignored.</span></span></summary>
        <returns><span data-ttu-id="3701f-419">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-419">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-420"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-420"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-421"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-421"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-422">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-422">-or-</span></span> 
 <span data-ttu-id="3701f-423">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="3701f-423"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-424"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-424"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="3701f-425">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-425">-or-</span></span> 
 <span data-ttu-id="3701f-426"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-426"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="3701f-427">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-427">-or-</span></span> 
 <span data-ttu-id="3701f-428"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-428"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="3701f-429">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-429">-or-</span></span> 
 <span data-ttu-id="3701f-430"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-430"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-431">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="3701f-431">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-432">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="3701f-432">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="3701f-433">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="3701f-433">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-434">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-434">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-435">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-435">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="3701f-436">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="3701f-436">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="3701f-437">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-437">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="3701f-438">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-438">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="3701f-439">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-439">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="3701f-440">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-440">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="3701f-441">在系统内存中创建或打开具有指定名称、容量、访问类型、内存分配、安全权限和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-441">Creates or opens a memory-mapped file that has the specified name, capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-442">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-442">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-443">使用此方法可创建或打开未持久化的内存映射文件（即不与磁盘上的文件相关联），您可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="3701f-443">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-444"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-444"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-445"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-445"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="3701f-446">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-446">-or-</span></span> 
 <span data-ttu-id="3701f-447">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="3701f-447"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-448"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-448"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="3701f-449">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-449">-or-</span></span> 
 <span data-ttu-id="3701f-450"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="3701f-450"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="3701f-451">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-451">-or-</span></span> 
 <span data-ttu-id="3701f-452"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-452"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="3701f-453">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-453">-or-</span></span> 
 <span data-ttu-id="3701f-454"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-454"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-455">操作系统不允许对文件的指定 <paramref name="access" />；例如，<paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="3701f-455">The operating system denied the specified <paramref name="access" /> to the file; for example, <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-456">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-456">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-457">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-457">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-458">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-458">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewAccessor">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3701f-459">创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-459">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor () As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor();" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3701f-460">创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-460">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="3701f-461">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="3701f-461">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-462">您可以使用此方法返回的视图来随机访问内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-462">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-463">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="3701f-463">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-464">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-464">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="3701f-465">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="3701f-465">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="3701f-466">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-466">The size of the view.</span></span> <span data-ttu-id="3701f-467">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="3701f-467">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="3701f-468">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移和大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-468">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="3701f-469">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="3701f-469">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-470">您可以使用此方法返回的视图来随机访问内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-470">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="3701f-471">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="3701f-471">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="3701f-472">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-472">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="3701f-473">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-473">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3701f-474">下面的示例创建一个内存映射文件的视图并对其进行编辑。</span><span class="sxs-lookup"><span data-stu-id="3701f-474">The following example creates a view of a memory-mapped file and edits it.</span></span> <span data-ttu-id="3701f-475">此代码示例是为 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="3701f-475">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#2)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-476"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="3701f-476"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="3701f-477">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-477">-or-</span></span> 
 <span data-ttu-id="3701f-478"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="3701f-478"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-479">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="3701f-479">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-480">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3701f-480">An I/O error occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-481">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-481">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="3701f-482">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="3701f-482">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="3701f-483">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-483">The size of the view.</span></span> <span data-ttu-id="3701f-484">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="3701f-484">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-485">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-485">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-486">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-486">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="3701f-487">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移、大小和访问限制。</span><span class="sxs-lookup"><span data-stu-id="3701f-487">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</span></span></summary>
        <returns><span data-ttu-id="3701f-488">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="3701f-488">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-489">您可以使用此方法返回的视图来随机访问内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-489">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="3701f-490">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="3701f-490">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="3701f-491">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-491">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="3701f-492">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-492">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-493"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="3701f-493"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="3701f-494">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-494">-or-</span></span> 
 <span data-ttu-id="3701f-495"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="3701f-495"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-496"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="3701f-496"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-497">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="3701f-497">An I/O error occurred.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-498">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-498">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-499">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-499">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-500">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-500">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3701f-501">创建映射到内存映射文件视图的流。</span><span class="sxs-lookup"><span data-stu-id="3701f-501">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream () As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream();" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3701f-502">创建映射到内存映射文件视图的流。</span><span class="sxs-lookup"><span data-stu-id="3701f-502">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="3701f-503">内存流。</span><span class="sxs-lookup"><span data-stu-id="3701f-503">A stream of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-504">您可以使用此方法返回的流对内存映射文件（如进程间通信）进行顺序访问。</span><span class="sxs-lookup"><span data-stu-id="3701f-504">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3701f-505">下面的示例创建一个流并向其写入值。</span><span class="sxs-lookup"><span data-stu-id="3701f-505">The following example creates a stream and writes a value to it.</span></span> <span data-ttu-id="3701f-506">此代码示例是为 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 方法提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="3701f-506">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-507">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="3701f-507">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-508">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-508">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="3701f-509">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="3701f-509">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="3701f-510">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-510">The size of the view.</span></span> <span data-ttu-id="3701f-511">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="3701f-511">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="3701f-512">创建一个流，它映射到内存映射文件的视图并具有指定的偏移和大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-512">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="3701f-513">具有指定偏移和大小的内存流。</span><span class="sxs-lookup"><span data-stu-id="3701f-513">A stream of memory that has the specified offset and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-514">您可以使用此方法返回的流对内存映射文件（如进程间通信）进行顺序访问。</span><span class="sxs-lookup"><span data-stu-id="3701f-514">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="3701f-515">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="3701f-515">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="3701f-516">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-516">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="3701f-517">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-517">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-518"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="3701f-518"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="3701f-519">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-519">-or-</span></span> 
 <span data-ttu-id="3701f-520"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="3701f-520"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-521">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="3701f-521">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-522"><paramref name="size" /> 大于总虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="3701f-522"><paramref name="size" /> is greater than the total virtual memory.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-523">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-523">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="3701f-524">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="3701f-524">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="3701f-525">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-525">The size of the view.</span></span> <span data-ttu-id="3701f-526">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="3701f-526">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="3701f-527">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-527">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="3701f-528">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-528">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="3701f-529">创建一个流，它映射到内存映射文件的视图，并具有指定的偏移、大小和访问类型。</span><span class="sxs-lookup"><span data-stu-id="3701f-529">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</span></span></summary>
        <returns><span data-ttu-id="3701f-530">具有指定特征的内存流。</span><span class="sxs-lookup"><span data-stu-id="3701f-530">A stream of memory that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-531">您可以使用此方法返回的流对内存映射文件（如进程间通信）进行顺序访问。</span><span class="sxs-lookup"><span data-stu-id="3701f-531">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="3701f-532">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="3701f-532">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="3701f-533">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-533">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="3701f-534">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="3701f-534">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-535"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="3701f-535"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="3701f-536">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-536">-or-</span></span> 
 <span data-ttu-id="3701f-537"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="3701f-537"><paramref name="size" /> is greater than the logical address space.</span></span>  
  
<span data-ttu-id="3701f-538">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-538">-or-</span></span> 
 <span data-ttu-id="3701f-539"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-539"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-540"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="3701f-540"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="3701f-541"><paramref name="size" /> 大于总虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="3701f-541"><paramref name="size" /> is greater than the total virtual memory.</span></span>  
  
<span data-ttu-id="3701f-542">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-542">-or-</span></span> 
 <span data-ttu-id="3701f-543"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="3701f-543"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-544">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-544">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-545">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-545">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-546">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-546">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3701f-547">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="3701f-547">Releases the resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryMappedFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3701f-548">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="3701f-548">Releases all resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="memoryMappedFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="3701f-549">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-549"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="3701f-550">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="3701f-550">Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As MemoryMappedFileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Usage="memoryMappedFile.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3701f-551">获取对内存映射文件资源的访问控制。</span><span class="sxs-lookup"><span data-stu-id="3701f-551">Gets the access control to the memory-mapped file resource.</span></span></summary>
        <returns><span data-ttu-id="3701f-552">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-552">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3701f-553">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="3701f-553">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3701f-554">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="3701f-554">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="3701f-555">内存映射文件关闭。</span><span class="sxs-lookup"><span data-stu-id="3701f-555">The memory-mapped file is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="3701f-556">当前平台是 Windows 98 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="3701f-556">The current platform is Windows 98 or earlier.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-557">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="3701f-557">An underlying call to set security information failed.</span></span>  
  
<span data-ttu-id="3701f-558">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-558">-or-</span></span> 
<span data-ttu-id="3701f-559">内存映射文件已作为只 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 文件打开。</span><span class="sxs-lookup"><span data-stu-id="3701f-559">The memory-mapped file was opened as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-560">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-560">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3701f-561">在系统内存中打开现有的已命名内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-561">Opens an existing named memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting mapName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-562">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="3701f-562">The name of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="3701f-563">在系统内存中打开一个具有指定名称的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-563">Opens an existing memory-mapped file that has the specified name in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-564">具有指定名称的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-564">A memory-mapped file that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3701f-565">内存映射文件可以是持久的内存映射文件（与磁盘上的文件相关联），也可以是非持久的。</span><span class="sxs-lookup"><span data-stu-id="3701f-565">The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non-persisted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3701f-566">**打开持久化内存映射文件**</span><span class="sxs-lookup"><span data-stu-id="3701f-566">**Opening a Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="3701f-567">下面的示例将打开一个名为 `ImgA` 的内存映射文件，该文件已从磁盘上的文件创建（如 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> 方法的示例中所示）。</span><span class="sxs-lookup"><span data-stu-id="3701f-567">The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).</span></span>  
  
 [!code-csharp[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/cs/program.cs#1)]
 [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/vb/program.vb#1)]  
  
 <span data-ttu-id="3701f-568">**打开非持久化内存映射文件**</span><span class="sxs-lookup"><span data-stu-id="3701f-568">**Opening a Non-Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="3701f-569">下面的示例打开一个用于进程间通信的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-569">The following example opens a memory-mapped file used for inter-process communication.</span></span> <span data-ttu-id="3701f-570">此代码示例是为 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> 方法提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="3701f-570">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-571"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-571"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-572"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-572"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3701f-573">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="3701f-573">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-574">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-574">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-575">要打开的内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="3701f-575">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="3701f-576">指定要应用于内存映射文件的访问权限的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-576">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="3701f-577">在系统内存中打开一个具有指定名称和访问权限的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-577">Opens an existing memory-mapped file that has the specified name and access rights in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-578">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-578">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-579"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-579"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-580"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-580"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-581"><paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-581"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3701f-582">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="3701f-582">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-583">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-583">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="3701f-584">要打开的内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="3701f-584">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="3701f-585">指定要应用于内存映射文件的访问权限的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-585">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="3701f-586">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="3701f-586">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="3701f-587">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-587">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="3701f-588">在系统内存中打开一个具有指定名称、访问权限和继承性的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-588">Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="3701f-589">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="3701f-589">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-590"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-590"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3701f-591"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="3701f-591"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3701f-592"><paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-592"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span>  
  
<span data-ttu-id="3701f-593">- 或 -</span><span class="sxs-lookup"><span data-stu-id="3701f-593">-or-</span></span> 
 <span data-ttu-id="3701f-594"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="3701f-594"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-595">请求的访问对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="3701f-595">The requested access is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="3701f-596">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="3701f-596">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-597">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-597">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-598">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-598">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-599">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-599">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedFileHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedFileHandle As SafeMemoryMappedFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ SafeMemoryMappedFileHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeMemoryMappedFileHandle : Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3701f-600">获取内存映射文件的文件句柄。</span><span class="sxs-lookup"><span data-stu-id="3701f-600">Gets the file handle of a memory-mapped file.</span></span></summary>
        <value><span data-ttu-id="3701f-601">内存映射文件的句柄。</span><span class="sxs-lookup"><span data-stu-id="3701f-601">The handle to the memory-mapped file.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="3701f-602">用于访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="3701f-602">for access to unmanaged code.</span></span> <span data-ttu-id="3701f-603">关联的枚举：<see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-603">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-604">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-604">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.IO.MemoryMappedFiles.MemoryMappedFileSecurity -&gt; unit" Usage="memoryMappedFile.SetAccessControl memoryMappedFileSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="3701f-605">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="3701f-605">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></param>
        <summary><span data-ttu-id="3701f-606">设置对内存映射文件资源的访问控制。</span><span class="sxs-lookup"><span data-stu-id="3701f-606">Sets the access control to the memory-mapped file resource.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3701f-607"><paramref name="memoryMappedFileSecurity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3701f-607"><paramref name="memoryMappedFileSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3701f-608">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="3701f-608">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="3701f-609">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="3701f-609">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="3701f-610">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="3701f-610">An underlying call to set security information failed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="3701f-611">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="3701f-611">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
