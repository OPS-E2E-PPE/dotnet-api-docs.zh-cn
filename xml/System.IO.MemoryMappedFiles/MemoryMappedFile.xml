<Type Name="MemoryMappedFile" FullName="System.IO.MemoryMappedFiles.MemoryMappedFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="76d1948ead66df6b4cf765e0a18dfb0a0a74b689" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83537644" /></Metadata><TypeSignature Language="C#" Value="public class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryMappedFile extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryMappedFile&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemoryMappedFile : IDisposable" />
  <TypeSignature Language="F#" Value="type MemoryMappedFile = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.IO.MemoryMappedFiles" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="33a33-101">表示内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-101">Represents a memory-mapped file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-102">内存映射文件将文件的内容映射到应用程序的逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="33a33-102">A memory-mapped file maps the contents of a file to an application's logical address space.</span></span> <span data-ttu-id="33a33-103">内存映射文件使程序员能够处理极其大的文件，因为内存可以同时进行管理，并允许对文件进行完整的随机访问，而无需查找。</span><span class="sxs-lookup"><span data-stu-id="33a33-103">Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</span></span> <span data-ttu-id="33a33-104">内存映射文件也可以在多个进程之间共享。</span><span class="sxs-lookup"><span data-stu-id="33a33-104">Memory-mapped files can also be shared across multiple processes.</span></span>  
  
 <span data-ttu-id="33a33-105"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 方法从磁盘上现有文件的指定路径或 <xref:System.IO.FileStream> 创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-105">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> methods create a memory-mapped file from a specified path or a <xref:System.IO.FileStream> of an existing file on disk.</span></span> <span data-ttu-id="33a33-106">当文件未映射时，更改会自动传播到磁盘。</span><span class="sxs-lookup"><span data-stu-id="33a33-106">Changes are automatically propagated to disk when the file is unmapped.</span></span>  
  
 <span data-ttu-id="33a33-107"><xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 方法创建未映射到磁盘上现有文件的内存映射文件;和适用于创建用于进程间通信（IPC）的共享内存。</span><span class="sxs-lookup"><span data-stu-id="33a33-107">The <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</span></span>  
  
 <span data-ttu-id="33a33-108">可以将内存映射文件与允许与其他进程共享的内存映射文件的可选名称关联。</span><span class="sxs-lookup"><span data-stu-id="33a33-108">A memory-mapped file can be associated with an optional name that allows the memory-mapped file to be shared with other processes.</span></span> 
  
 <span data-ttu-id="33a33-109">您可以创建内存映射文件的多个视图，包括部分文件的视图。</span><span class="sxs-lookup"><span data-stu-id="33a33-109">You can create multiple views of the memory-mapped file, including views of parts of the file.</span></span> <span data-ttu-id="33a33-110">您可以将文件的同一部分映射到多个地址，以创建并发内存。</span><span class="sxs-lookup"><span data-stu-id="33a33-110">You can map the same part of a file to more than one address to create concurrent memory.</span></span> <span data-ttu-id="33a33-111">若要让两个视图一直处于并发状态，必须通过同一个内存映射文件创建它们。</span><span class="sxs-lookup"><span data-stu-id="33a33-111">For two views to remain concurrent, they have to be created from the same memory-mapped file.</span></span> <span data-ttu-id="33a33-112">创建具有两个视图的同一文件的两个文件映射不提供并发性。</span><span class="sxs-lookup"><span data-stu-id="33a33-112">Creating two file mappings of the same file with two views does not provide concurrency.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a33-113">下面的示例为极大文件的一部分创建内存映射视图，并控制其中一部分。</span><span class="sxs-lookup"><span data-stu-id="33a33-113">The following example creates a memory-mapped view of a part of an extremely large file and manipulates a portion of it.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-114">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-114">Memory-Mapped Files</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateFromFile">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a33-115">基于现有文件创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-115">Creates a memory-mapped file from an existing file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="33a33-116">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="33a33-116">The path to file to map.</span></span></param>
        <summary><span data-ttu-id="33a33-117">基于磁盘上的文件创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-117">Creates a memory-mapped file from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="33a33-118">内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-118">A memory-mapped file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="33a33-119">下面的示例使用 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> 方法创建一个内存映射文件，然后创建一个内存映射视图到极大文件的一部分。</span><span class="sxs-lookup"><span data-stu-id="33a33-119">The following example uses the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A> method to create a memory-mapped file, and then creates a memory-mapped view to a portion of an extremely large file.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#1)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-120"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="33a33-120"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="33a33-121">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-121">-or-</span></span> 
 <span data-ttu-id="33a33-122"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="33a33-122"><paramref name="path" /> refers to an invalid device.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-123"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-123"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-124">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="33a33-124">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="33a33-125"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="33a33-125"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="33a33-126">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-126">The caller does not have the required permissions for the file.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-127">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-127">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="33a33-128">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="33a33-128">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="33a33-129">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-129">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <summary><span data-ttu-id="33a33-130">基于磁盘上的文件创建一个具有指定访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-130">Creates a memory-mapped file that has the specified access mode from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="33a33-131">具有指定访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-131">A memory-mapped file that has the specified access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-132">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-132">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="33a33-133">您只能使用 <xref:System.IO.FileMode.Open> 枚举值从源文件创建内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-133">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-134"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="33a33-134"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="33a33-135">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-135">-or-</span></span> 
 <span data-ttu-id="33a33-136"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="33a33-136"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="33a33-137">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-137">-or-</span></span> 
 <span data-ttu-id="33a33-138"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-138"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-139"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-139"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-140"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-140"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
<span data-ttu-id="33a33-141">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-141">-or-</span></span> 
 <span data-ttu-id="33a33-142"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="33a33-142"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
<span data-ttu-id="33a33-143">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-143">-or-</span></span> 
<span data-ttu-id="33a33-144">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="33a33-144">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="33a33-145"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="33a33-145"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="33a33-146">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-146">The caller does not have the required permissions for the file.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-147">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-147">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="33a33-148">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="33a33-148">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="33a33-149">访问模式；必须为 <see cref="F:System.IO.FileMode.Open" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-149">Access mode; must be <see cref="F:System.IO.FileMode.Open" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="33a33-150">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-150">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <summary><span data-ttu-id="33a33-151">基于磁盘上的文件创建一个具有指定访问模式和名称的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-151">Creates a memory-mapped file that has the specified access mode and name from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="33a33-152">具有指定名称和访问模式的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-152">A memory-mapped file that has the specified name and access mode.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-153">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-153">The `mode` parameter pertains to the source file on disk.</span></span> <span data-ttu-id="33a33-154">您只能使用 <xref:System.IO.FileMode.Open> 枚举值从源文件创建内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-154">You can use only the <xref:System.IO.FileMode.Open> enumeration value to create the memory-mapped file from the source file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-155"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="33a33-155"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="33a33-156">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-156">-or-</span></span> 
 <span data-ttu-id="33a33-157"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="33a33-157"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="33a33-158">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-158">-or-</span></span> 
 <span data-ttu-id="33a33-159"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-159"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-160">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-160">-or-</span></span> 
 <span data-ttu-id="33a33-161"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-161"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-162"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-162"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-163"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Create" />、<see cref="F:System.IO.FileMode.CreateNew" /> 或 <see cref="F:System.IO.FileMode.Truncate" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-163"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, or <see cref="F:System.IO.FileMode.Truncate" />.</span></span>  
  
<span data-ttu-id="33a33-164">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-164">-or-</span></span> 
 <span data-ttu-id="33a33-165"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.OpenOrCreate" /> 且磁盘上的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="33a33-165"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.OpenOrCreate" /> and the file on disk does not exist.</span></span>  
  
<span data-ttu-id="33a33-166">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-166">-or-</span></span> 
<span data-ttu-id="33a33-167">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="33a33-167">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="33a33-168"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="33a33-168"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="33a33-169">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-169">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="33a33-170">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="33a33-170">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="33a33-171">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-171">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="33a33-172">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-172">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-173">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-173">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="33a33-174">指定 0 将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-174">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <summary><span data-ttu-id="33a33-175">基于磁盘上的文件创建一个具有指定访问模式、名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-175">Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="33a33-176">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-176">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-177">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-177">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="33a33-178">如果 `capacity` 大于磁盘上的文件大小，则磁盘上的文件将增加以与指定的容量匹配，即使没有数据写入到内存映射文件也是如此。</span><span class="sxs-lookup"><span data-stu-id="33a33-178">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="33a33-179">若要防止出现这种情况，请将默认容量指定为0（零），将在内部将 `capacity` 设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-179">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-180"><paramref name="path" /> 为空字符串，只包含空格，或者包含 <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> 方法定义的一个或多个无效字符。</span><span class="sxs-lookup"><span data-stu-id="33a33-180"><paramref name="path" /> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <see cref="M:System.IO.Path.GetInvalidFileNameChars" /> method.</span></span>  
  
<span data-ttu-id="33a33-181">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-181">-or-</span></span> 
 <span data-ttu-id="33a33-182"><paramref name="path" /> 引用无效的设备。</span><span class="sxs-lookup"><span data-stu-id="33a33-182"><paramref name="path" /> refers to an invalid device.</span></span>  
  
<span data-ttu-id="33a33-183">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-183">-or-</span></span> 
 <span data-ttu-id="33a33-184"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-184"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-185">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-185">-or-</span></span> 
 <span data-ttu-id="33a33-186"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-186"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-187"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-187"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-188"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-188"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="33a33-189">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-189">-or-</span></span> 
 <span data-ttu-id="33a33-190"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-190"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="33a33-191">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-191">-or-</span></span> 
 <span data-ttu-id="33a33-192"><paramref name="capacity" /> 小于文件大小（但不为零）。</span><span class="sxs-lookup"><span data-stu-id="33a33-192"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
<span data-ttu-id="33a33-193">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-193">-or-</span></span> 
 <span data-ttu-id="33a33-194"><paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</span><span class="sxs-lookup"><span data-stu-id="33a33-194"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-195">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="33a33-195">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="33a33-196"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="33a33-196"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="33a33-197">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-197">The caller does not have the required permissions for the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (string path, System.IO.FileMode mode, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(string path, valuetype System.IO.FileMode mode, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.String,System.IO.FileMode,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (path As String, mode As FileMode, mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::String ^ path, System::IO::FileMode mode, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : string * System.IO.FileMode * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (path, mode, mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="33a33-198">要映射的文件的路径。</span><span class="sxs-lookup"><span data-stu-id="33a33-198">The path to the file to map.</span></span></param>
        <param name="mode"><span data-ttu-id="33a33-199">访问模式；除 <see cref="T:System.IO.FileMode" /> 外，可以是任意 <see cref="F:System.IO.FileMode.Append" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-199">Access mode; can be any of the <see cref="T:System.IO.FileMode" /> enumeration values except <see cref="F:System.IO.FileMode.Append" />.</span></span></param>
        <param name="mapName"><span data-ttu-id="33a33-200">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-200">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-201">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-201">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="33a33-202">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-202">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-203">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-203">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="33a33-204">基于磁盘上的文件创建一个具有指定访问模式、名称、容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-204">Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="33a33-205">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-205">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-206">`mode` 参数适用于磁盘上的源文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-206">The `mode` parameter pertains to the source file on disk.</span></span>  
  
 <span data-ttu-id="33a33-207">如果 `capacity` 大于磁盘上的文件大小，则磁盘上的文件将增加以与指定的容量匹配，即使没有数据写入到内存映射文件也是如此。</span><span class="sxs-lookup"><span data-stu-id="33a33-207">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="33a33-208">若要防止出现这种情况，请将默认容量指定为0（零），将在内部将 `capacity` 设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-208">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-209"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-209"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-210">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-210">-or-</span></span> 
 <span data-ttu-id="33a33-211"><paramref name="access" /> 不是一个允许的值。</span><span class="sxs-lookup"><span data-stu-id="33a33-211"><paramref name="access" /> is not an allowed value.</span></span>  
  
<span data-ttu-id="33a33-212">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-212">-or-</span></span> 
 <span data-ttu-id="33a33-213"><paramref name="path" /> 指定空的文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-213"><paramref name="path" /> specifies an empty file.</span></span>  
  
<span data-ttu-id="33a33-214">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-214">-or-</span></span> 
 <span data-ttu-id="33a33-215"><paramref name="access" /> 指定为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，容量大于 <paramref name="path" /> 所指示文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-215"><paramref name="access" /> is specified as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and capacity is greater than the size of the file indicated by <paramref name="path" />.</span></span>  
  
<span data-ttu-id="33a33-216">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-216">-or-</span></span> 
 <span data-ttu-id="33a33-217"><paramref name="mode" /> 为 <see cref="F:System.IO.FileMode.Append" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-217"><paramref name="mode" /> is <see cref="F:System.IO.FileMode.Append" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-218"><paramref name="path" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-218"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-219"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-219"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="33a33-220">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-220">-or-</span></span> 
 <span data-ttu-id="33a33-221"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-221"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="33a33-222">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-222">-or-</span></span> 
 <span data-ttu-id="33a33-223"><paramref name="capacity" /> 小于文件大小（但不为零）。</span><span class="sxs-lookup"><span data-stu-id="33a33-223"><paramref name="capacity" /> is less than the file size (but not zero).</span></span>  
  
<span data-ttu-id="33a33-224">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-224">-or-</span></span> 
 <span data-ttu-id="33a33-225"><paramref name="capacity" /> 为零，且在磁盘上文件的大小也为零。</span><span class="sxs-lookup"><span data-stu-id="33a33-225"><paramref name="capacity" /> is zero, and the size of the file on disk is also zero.</span></span>  
  
<span data-ttu-id="33a33-226">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-226">-or-</span></span> 
 <span data-ttu-id="33a33-227"><paramref name="access" /> 不是定义的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 值。</span><span class="sxs-lookup"><span data-stu-id="33a33-227"><paramref name="access" /> is not a defined <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> value.</span></span>  
  
<span data-ttu-id="33a33-228">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-228">-or-</span></span> 
<span data-ttu-id="33a33-229"><paramref name="path" /> 指示的文件大小大于 <paramref name="capacity" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-229">The size of the file indicated by <paramref name="path" /> is greater than <paramref name="capacity" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-230">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-230">-or-</span></span>  
  
 <span data-ttu-id="33a33-231">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="33a33-231">An I/O error occurred.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="33a33-232"><paramref name="path" /> 超过了操作系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="33a33-232"><paramref name="path" /> exceeds the maximum length defined by the operating system.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="33a33-233">调用方没有该文件的所需权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-233">The caller does not have the required permissions for the file.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-234">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-234">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (fileStream As FileStream, mapName As String, capacity As Long, access As MemoryMappedFileAccess, inheritability As HandleInheritability, leaveOpen As Boolean) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mapName" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="5" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="33a33-235">现有文件的文件流。</span><span class="sxs-lookup"><span data-stu-id="33a33-235">The file stream of the existing file.</span></span></param>
        <param name="mapName"><span data-ttu-id="33a33-236">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-236">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-237">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-237">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="33a33-238">指定 0，以将容量设置为 <c>filestream</c> 的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-238">Specify 0 to set the capacity to the size of <c>filestream</c>.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-239">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-239">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
<span data-ttu-id="33a33-240">不能将此参数设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-240">This parameter can't be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="33a33-241">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-241">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="33a33-242">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-242">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="33a33-243">一个值，该值指示释放 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 后是否要关闭源文件流。</span><span class="sxs-lookup"><span data-stu-id="33a33-243">A value that indicates whether to close the source file stream when the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is disposed.</span></span></param>
        <summary><span data-ttu-id="33a33-244">从现有文件创建一个具有指定的访问模式、名称、继承性和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-244">Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</span></span></summary>
        <returns><span data-ttu-id="33a33-245">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-245">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-246"><paramref name="mapName" /> 为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-246"><paramref name="mapName" /> is <see langword="null" /> or an empty string.</span></span>  
  
<span data-ttu-id="33a33-247">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-247">-or-</span></span> 
 <span data-ttu-id="33a33-248"><paramref name="capacity" /> 和文件长度为零。</span><span class="sxs-lookup"><span data-stu-id="33a33-248"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
<span data-ttu-id="33a33-249">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-249">-or-</span></span> 
 <span data-ttu-id="33a33-250"><paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值，这是不允许的。</span><span class="sxs-lookup"><span data-stu-id="33a33-250"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span>  
  
<span data-ttu-id="33a33-251">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-251">-or-</span></span> 
 <span data-ttu-id="33a33-252"><paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" />，<paramref name="capacity" /> 大于 <see langword="filestream" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="33a33-252"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> and <paramref name="capacity" /> is larger than the length of <see langword="filestream" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-253"><paramref name="fileStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-253"><paramref name="fileStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-254"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-254"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="33a33-255">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-255">-or-</span></span> 
 <span data-ttu-id="33a33-256"><paramref name="capacity" /> 小于文件大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-256"><paramref name="capacity" /> is less than the file size.</span></span>  
  
<span data-ttu-id="33a33-257">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-257">-or-</span></span> 
 <span data-ttu-id="33a33-258"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-258"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="33a33-259">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-259">-or-</span></span> 
 <span data-ttu-id="33a33-260"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-260"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile (System.IO.FileStream fileStream, string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateFromFile(class System.IO.FileStream fileStream, string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile(System.IO.FileStream,System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFile (fileStream As FileStream, mapName As String, capacity As Long, access As MemoryMappedFileAccess, memoryMappedFileSecurity As MemoryMappedFileSecurity, inheritability As HandleInheritability, leaveOpen As Boolean) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateFromFile(System::IO::FileStream ^ fileStream, System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="static member CreateFromFile : System.IO.FileStream * string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability * bool -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile (fileStream, mapName, capacity, access, memoryMappedFileSecurity, inheritability, leaveOpen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileStream" Type="System.IO.FileStream" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="mapName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="fileStream"><span data-ttu-id="33a33-261">要映射的文件的 <paramref name="fileStream" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-261">The <paramref name="fileStream" /> to the file to map.</span></span></param>
        <param name="mapName"><span data-ttu-id="33a33-262">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-262">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-263">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-263">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span> <span data-ttu-id="33a33-264">指定 0，以将容量设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-264">Specify 0 to set the capacity to the size of the file on disk.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-265">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-265">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span>  
  
<span data-ttu-id="33a33-266">不能将此参数设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-266">This parameter can't be set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" />.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="33a33-267">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-267">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="33a33-268">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-268">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="33a33-269">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-269">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="33a33-270">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-270">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <param name="leaveOpen"><span data-ttu-id="33a33-271">若为 <see langword="true" />，则在关闭 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 后不释放 <paramref name="fileStream" />；若为 <see langword="false" />，则释放 <paramref name="fileStream" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-271"><see langword="true" /> to not dispose <paramref name="fileStream" /> after the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> is closed; <see langword="false" /> to dispose <paramref name="fileStream" />.</span></span></param>
        <summary><span data-ttu-id="33a33-272">基于磁盘上的文件创建一个具有指定名称、容量、访问类型、安全权限、继承性和释放要求的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-272">Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</span></span></summary>
        <returns><span data-ttu-id="33a33-273">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-273">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-274">如果 `capacity` 大于磁盘上的文件大小，则磁盘上的文件将增加以与指定的容量匹配，即使没有数据写入到内存映射文件也是如此。</span><span class="sxs-lookup"><span data-stu-id="33a33-274">If `capacity` is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</span></span> <span data-ttu-id="33a33-275">若要防止出现这种情况，请将默认容量指定为0（零），将在内部将 `capacity` 设置为磁盘上文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-275">To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set `capacity` to the size of the file on disk.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-276"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-276"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-277">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-277">-or-</span></span> 
 <span data-ttu-id="33a33-278"><paramref name="capacity" /> 和文件长度为零。</span><span class="sxs-lookup"><span data-stu-id="33a33-278"><paramref name="capacity" /> and the length of the file are zero.</span></span>  
  
<span data-ttu-id="33a33-279">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-279">-or-</span></span> 
 <span data-ttu-id="33a33-280">把 <paramref name="access" /> 设置到 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值，这是不允许的。</span><span class="sxs-lookup"><span data-stu-id="33a33-280"><paramref name="access" /> is set to the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value, which is not allowed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-281"><paramref name="fileStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-281"><paramref name="fileStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-282"><paramref name="capacity" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-282"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="33a33-283">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-283">-or-</span></span> 
 <span data-ttu-id="33a33-284"><paramref name="capacity" /> 小于文件大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-284"><paramref name="capacity" /> is less than the file size.</span></span>  
  
<span data-ttu-id="33a33-285">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-285">-or-</span></span> 
 <span data-ttu-id="33a33-286"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-286"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="33a33-287">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-287">-or-</span></span> 
 <span data-ttu-id="33a33-288"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-288"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="33a33-289"><paramref name="fileStream" /> 已关闭。</span><span class="sxs-lookup"><span data-stu-id="33a33-289"><paramref name="fileStream" /> was closed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-290">当把 <paramref name="access" /> 的访问设置到 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> 或 <see cref="F:System.IO.FileAccess.Read" /> 时，将把 <paramref name="fileStream" /> 设置到 <see cref="F:System.IO.FileAccess.Write" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-290"><paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" /> when <paramref name="fileStream" />'s access is set to <see cref="F:System.IO.FileAccess.Read" /> or <see cref="F:System.IO.FileAccess.Write" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-291"><paramref name="mapName" /> 已存在。</span><span class="sxs-lookup"><span data-stu-id="33a33-291"><paramref name="mapName" /> already exists.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-292">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-292">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateNew">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a33-293">在系统内存中创建一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-293">Creates a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-294">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-294">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-295">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-295">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="33a33-296">在系统内存中创建一个具有指定容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-296">Creates a memory-mapped file that has the specified capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-297">具有指定名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-297">A memory-mapped file that has the specified name and capacity.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-298">使用此方法创建一个不是持久的内存映射文件（即，不与磁盘上的文件关联），可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="33a33-298">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a33-299">下面的示例由三个单独的进程（控制台应用程序）组成，它们将 `Boolean` 值写入内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-299">The following example is composed of three separate processes (console applications) that write `Boolean` values to a memory-mapped file.</span></span> <span data-ttu-id="33a33-300">各操作按下面的顺序发生：</span><span class="sxs-lookup"><span data-stu-id="33a33-300">The following sequence of actions occur:</span></span>  
  
1.  <span data-ttu-id="33a33-301">进程 A 创建内存映射文件，并向其写入值。</span><span class="sxs-lookup"><span data-stu-id="33a33-301">Process A creates the memory-mapped file and writes a value to it.</span></span>  
  
2.  <span data-ttu-id="33a33-302">进程 B 打开内存映射文件，并向其写入值。</span><span class="sxs-lookup"><span data-stu-id="33a33-302">Process B opens the memory-mapped file and writes a value to it.</span></span>  
  
3.  <span data-ttu-id="33a33-303">进程 C 打开内存映射文件，并向其中写入值。</span><span class="sxs-lookup"><span data-stu-id="33a33-303">Process C opens the memory-mapped file and writes a value to it.</span></span>  
  
4.  <span data-ttu-id="33a33-304">处理读取并显示内存映射文件中的值。</span><span class="sxs-lookup"><span data-stu-id="33a33-304">Process A reads and displays the values from the memory-mapped file.</span></span>  
  
5.  <span data-ttu-id="33a33-305">使用内存映射文件完成处理后，将立即通过垃圾回收来回收文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-305">After Process A is finished with the memory-mapped file, the file is immediately reclaimed by garbage collection.</span></span>  
  
 <span data-ttu-id="33a33-306">若要运行此示例，请按照以下步骤操作：</span><span class="sxs-lookup"><span data-stu-id="33a33-306">To run this example, do the following:</span></span>  
  
1.  <span data-ttu-id="33a33-307">编译应用程序并打开三个命令窗口。</span><span class="sxs-lookup"><span data-stu-id="33a33-307">Compile the applications and open three Command windows.</span></span>  
  
2.  <span data-ttu-id="33a33-308">在第一个命令窗口中，运行 "处理"。</span><span class="sxs-lookup"><span data-stu-id="33a33-308">In the first Command window, run Process A.</span></span>  
  
3.  <span data-ttu-id="33a33-309">在第二个命令窗口中，运行进程 B。</span><span class="sxs-lookup"><span data-stu-id="33a33-309">In the second Command window, run Process B.</span></span>  
  
4.  <span data-ttu-id="33a33-310">返回以处理，然后按 ENTER。</span><span class="sxs-lookup"><span data-stu-id="33a33-310">Return to Process A and press ENTER.</span></span>  
  
5.  <span data-ttu-id="33a33-311">在第三个命令窗口中，运行进程 C。</span><span class="sxs-lookup"><span data-stu-id="33a33-311">In the third Command window, run Process C.</span></span>  
  
6.  <span data-ttu-id="33a33-312">返回以处理，然后按 ENTER。</span><span class="sxs-lookup"><span data-stu-id="33a33-312">Return to Process A and press ENTER.</span></span>  
  
 <span data-ttu-id="33a33-313">进程 A 的输出如下所示：</span><span class="sxs-lookup"><span data-stu-id="33a33-313">The output of Process A is as follows:</span></span>  
  
```  
Start Process B and press ENTER to continue.  
Start Process C and press ENTER to continue.  
Process A says: True  
Process B says: False  
Process C says: True  
```  
  
 <span data-ttu-id="33a33-314">**Process A**</span><span class="sxs-lookup"><span data-stu-id="33a33-314">**Process A**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#1)]  
  
 <span data-ttu-id="33a33-315">**Process B**</span><span class="sxs-lookup"><span data-stu-id="33a33-315">**Process B**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_A#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_a/vb/program.vb#1)]  
  
 <span data-ttu-id="33a33-316">**Process C**</span><span class="sxs-lookup"><span data-stu-id="33a33-316">**Process C**</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/cs/program.cs#1)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_B#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_b/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-317"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-317"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-318"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-318"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="33a33-319">仅限 .NET Core：仅在 Windows 操作系统上支持使用已命名的内存映射文件（即非 null <paramref name="mapName" />）调用 <c>CreateNew</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="33a33-319">.NET Core only: Calls to the <c>CreateNew</c> method with a named memory mapped file (that is, a non-null <paramref name="mapName" />) are supported on Windows operating systems only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-320">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-320">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-321">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-321">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-322">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-322">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-323">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-323">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-324">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-324">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="33a33-325">在系统内存中创建一个具有指定容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-325">Creates a memory-mapped file that has the specified capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-326">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-326">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-327">使用此方法创建一个不是持久的内存映射文件（即，不与磁盘上的文件关联），可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="33a33-327">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-328"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-328"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-329">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-329">-or-</span></span> 
 <span data-ttu-id="33a33-330">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="33a33-330"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-331"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-331"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="33a33-332">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-332">-or-</span></span> 
 <span data-ttu-id="33a33-333"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-333"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="33a33-334">仅限 .NET Core：仅在 Windows 操作系统上支持使用已命名的内存映射文件（即非 null <paramref name="mapName" />）调用 <c>CreateNew</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="33a33-334">.NET Core only: Calls to the <c>CreateNew</c> method with a named memory mapped file (that is, a non-null <paramref name="mapName" />) are supported on Windows operating systems only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-335">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-335">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-336">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-336">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-337">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-337">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-338">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-338">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-339">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-339">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="33a33-340">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="33a33-340">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="33a33-341">一个值，该值指定内存映射文件的句柄能否由子进程继承。</span><span class="sxs-lookup"><span data-stu-id="33a33-341">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="33a33-342">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-342">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="33a33-343">创建一个具有指定名称、容量、访问类型、内存分配选项和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-343">Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</span></span></summary>
        <returns><span data-ttu-id="33a33-344">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-344">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-345"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-345"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-346">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-346">-or-</span></span> 
 <span data-ttu-id="33a33-347">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="33a33-347"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-348"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-348"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="33a33-349">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-349">-or-</span></span> 
 <span data-ttu-id="33a33-350"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-350"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="33a33-351">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-351">-or-</span></span> 
 <span data-ttu-id="33a33-352"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 值。</span><span class="sxs-lookup"><span data-stu-id="33a33-352"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> value.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="33a33-353">仅限 .NET Core：仅在 Windows 操作系统上支持使用已命名的内存映射文件（即非 null <paramref name="mapName" />）调用 <c>CreateNew</c> 方法。</span><span class="sxs-lookup"><span data-stu-id="33a33-353">.NET Core only: Calls to the <c>CreateNew</c> method with a named memory mapped file (that is, a non-null <paramref name="mapName" />) are supported on Windows operating systems only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateNew">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateNew(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateNew (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, memoryMappedFileSecurity As MemoryMappedFileSecurity, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateNew(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateNew : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-354">要分配给内存映射文件的名称，或用于不希望在进程中共享的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-354">A name to assign to the memory-mapped file, or <see langword="null" /> for a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> that you do not intend to share across processes.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-355">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-355">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-356">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-356">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-357">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-357">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="33a33-358">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="33a33-358">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="33a33-359">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-359">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="33a33-360">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-360">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="33a33-361">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-361">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="33a33-362">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-362">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="33a33-363">在系统内存中创建一个具有指定容量、访问类型、内存分配、安全权限和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-363">Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-364">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-364">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-365">使用此方法创建一个不是持久的内存映射文件（即，不与磁盘上的文件关联），可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="33a33-365">Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-366"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-366"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-367">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-367">-or-</span></span> 
 <span data-ttu-id="33a33-368">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="33a33-368"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-369"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-369"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="33a33-370">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-370">-or-</span></span> 
 <span data-ttu-id="33a33-371"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-371"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="33a33-372">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-372">-or-</span></span> 
 <span data-ttu-id="33a33-373"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-373"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-374">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-374">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateOrOpen">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a33-375">在系统内存中创建或打开一个内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-375">Creates or opens a memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-376">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="33a33-376">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-377">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-377">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="33a33-378">在系统内存中创建或打开具有指定名称和容量的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-378">Creates or opens a memory-mapped file that has the specified name and capacity in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-379">具有指定名称和大小的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-379">A memory-mapped file that has the specified name and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-380">使用此方法可创建或打开未持久化的内存映射文件（即不与磁盘上的文件相关联），您可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="33a33-380">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-381"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-381"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-382"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-382"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="33a33-383">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-383">-or-</span></span> 
 <span data-ttu-id="33a33-384"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-384"><paramref name="capacity" /> is less than or equal to zero.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-385">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-385">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-386">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="33a33-386">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-387">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-387">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-388">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-388">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-389">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-389">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="33a33-390">在系统内存中创建或打开具有指定名称、容量和访问类型的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-390">Creates or opens a memory-mapped file that has the specified name, capacity and access type in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-391">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-391">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-392">使用此方法可创建或打开未持久化的内存映射文件（即不与磁盘上的文件相关联），您可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="33a33-392">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-393"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-393"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-394"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-394"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-395">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-395">-or-</span></span> 
 <span data-ttu-id="33a33-396">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="33a33-396"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-397"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-397"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="33a33-398">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-398">-or-</span></span> 
 <span data-ttu-id="33a33-399"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-399"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="33a33-400">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-400">-or-</span></span> 
 <span data-ttu-id="33a33-401"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-401"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-402">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="33a33-402">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-403">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-403">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="4" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-404">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="33a33-404">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-405">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-405">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-406">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-406">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-407">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-407">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="33a33-408">值的按位组合，它指示要应用到文件的内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="33a33-408">A bitwise combination of values that indicate the memory allocation options to apply to the file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="33a33-409">一个值，该值指定内存映射文件的句柄能否由子进程继承。</span><span class="sxs-lookup"><span data-stu-id="33a33-409">A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="33a33-410">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-410">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="33a33-411">创建一个新的空内存映射文件或打开一个现有的内存映射文件（如果存在同名的内存映射文件）。</span><span class="sxs-lookup"><span data-stu-id="33a33-411">Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</span></span> <span data-ttu-id="33a33-412">如果打开现有的文件，则会忽略容量、选项和内存参数。</span><span class="sxs-lookup"><span data-stu-id="33a33-412">If opening an existing file, the capacity, options, and memory arguments will be ignored.</span></span></summary>
        <returns><span data-ttu-id="33a33-413">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-413">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-414"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-414"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-415"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-415"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-416">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-416">-or-</span></span> 
 <span data-ttu-id="33a33-417">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="33a33-417"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-418"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-418"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="33a33-419">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-419">-or-</span></span> 
 <span data-ttu-id="33a33-420"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-420"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="33a33-421">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-421">-or-</span></span> 
 <span data-ttu-id="33a33-422"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-422"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="33a33-423">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-423">-or-</span></span> 
 <span data-ttu-id="33a33-424"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-424"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-425">操作系统不允许对文件的指定访问；例如，访问权限设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="33a33-425">The operating system denied the specified access to the file; for example, access is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrOpen">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen (string mapName, long capacity, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile CreateOrOpen(string mapName, int64 capacity, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileOptions options, class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen(System.String,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess,System.IO.MemoryMappedFiles.MemoryMappedFileOptions,System.IO.MemoryMappedFiles.MemoryMappedFileSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOrOpen (mapName As String, capacity As Long, access As MemoryMappedFileAccess, options As MemoryMappedFileOptions, memoryMappedFileSecurity As MemoryMappedFileSecurity, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ CreateOrOpen(System::String ^ mapName, long capacity, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access, System::IO::MemoryMappedFiles::MemoryMappedFileOptions options, System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member CreateOrOpen : string * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess * System.IO.MemoryMappedFiles.MemoryMappedFileOptions * System.IO.MemoryMappedFiles.MemoryMappedFileSecurity * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.CreateOrOpen (mapName, capacity, access, options, memoryMappedFileSecurity, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="capacity" Type="System.Int64" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.IO.MemoryMappedFiles.MemoryMappedFileOptions" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-426">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="33a33-426">The name of the memory-mapped file.</span></span></param>
        <param name="capacity"><span data-ttu-id="33a33-427">要分配给内存映射文件的最大大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="33a33-427">The maximum size, in bytes, to allocate to the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-428">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-428">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-429">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-429">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <param name="options"><span data-ttu-id="33a33-430">枚举值的按位组合，用于为内存映射文件指定内存分配选项。</span><span class="sxs-lookup"><span data-stu-id="33a33-430">A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</span></span></param>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="33a33-431">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-431">The permissions that can be granted for file access and operations on memory-mapped files.</span></span>  
  
<span data-ttu-id="33a33-432">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-432">This parameter can be <see langword="null" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="33a33-433">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-433">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="33a33-434">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-434">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="33a33-435">在系统内存中创建或打开具有指定名称、容量、访问类型、内存分配、安全权限和继承性的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-435">Creates or opens a memory-mapped file that has the specified name, capacity, access type, memory allocation, security permissions, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-436">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-436">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-437">使用此方法可创建或打开未持久化的内存映射文件（即不与磁盘上的文件相关联），您可以使用该文件在进程之间共享数据。</span><span class="sxs-lookup"><span data-stu-id="33a33-437">Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-438"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-438"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-439"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-439"><paramref name="mapName" /> is an empty string.</span></span>  
  
<span data-ttu-id="33a33-440">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-440">-or-</span></span> 
 <span data-ttu-id="33a33-441">通过 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 枚举值将 <paramref name="access" /> 设置为只写。</span><span class="sxs-lookup"><span data-stu-id="33a33-441"><paramref name="access" /> is set to write-only with the <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-442"><paramref name="capacity" /> 大于逻辑地址空间的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-442"><paramref name="capacity" /> is greater than the size of the logical address space.</span></span>  
  
<span data-ttu-id="33a33-443">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-443">-or-</span></span> 
 <span data-ttu-id="33a33-444"><paramref name="capacity" /> 小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="33a33-444"><paramref name="capacity" /> is less than or equal to zero.</span></span>  
  
<span data-ttu-id="33a33-445">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-445">-or-</span></span> 
 <span data-ttu-id="33a33-446"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-446"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span>  
  
<span data-ttu-id="33a33-447">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-447">-or-</span></span> 
 <span data-ttu-id="33a33-448"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-448"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-449">操作系统不允许对文件的指定 <paramref name="access" />；例如，<paramref name="access" /> 设置为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 或 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />，但文件或目录为只读。</span><span class="sxs-lookup"><span data-stu-id="33a33-449">The operating system denied the specified <paramref name="access" /> to the file; for example, <paramref name="access" /> is set to <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> or <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />, but the file or directory is read-only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-450">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-450">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewAccessor">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a33-451">创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-451">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor () As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor();" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a33-452">创建映射到内存映射文件视图的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-452">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="33a33-453">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="33a33-453">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-454">您可以使用此方法返回的视图来随机访问内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-454">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-455">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="33a33-455">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-456">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-456">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="33a33-457">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="33a33-457">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="33a33-458">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-458">The size of the view.</span></span> <span data-ttu-id="33a33-459">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="33a33-459">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="33a33-460">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移和大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-460">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="33a33-461">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="33a33-461">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-462">您可以使用此方法返回的视图来随机访问内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-462">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="33a33-463">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="33a33-463">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="33a33-464">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-464">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="33a33-465">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-465">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a33-466">下面的示例创建一个内存映射文件的视图并对其进行编辑。</span><span class="sxs-lookup"><span data-stu-id="33a33-466">The following example creates a view of a memory-mapped file and edits it.</span></span> <span data-ttu-id="33a33-467">此代码示例是为 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="33a33-467">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile> class.</span></span>  
  
 [!code-csharp[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/cs/program.cs#2)]
 [!code-vb[MemoryMappedFiles.MemoryMappedFile.CreateFromFile#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.createfromfile/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-468"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="33a33-468"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="33a33-469">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-469">-or-</span></span> 
 <span data-ttu-id="33a33-470"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="33a33-470"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-471">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="33a33-471">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-472">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="33a33-472">An I/O error occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-473">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-473">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewAccessor">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewAccessor CreateViewAccessor(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewAccessor(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewAccessor (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewAccessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewAccessor ^ CreateViewAccessor(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewAccessor : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" Usage="memoryMappedFile.CreateViewAccessor (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="33a33-474">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="33a33-474">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="33a33-475">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-475">The size of the view.</span></span> <span data-ttu-id="33a33-476">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="33a33-476">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-477">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-477">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-478">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-478">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="33a33-479">创建一个 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" />，它映射到内存映射文件的视图并具有指定的偏移、大小和访问限制。</span><span class="sxs-lookup"><span data-stu-id="33a33-479">Creates a <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor" /> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</span></span></summary>
        <returns><span data-ttu-id="33a33-480">可随机访问的内存块。</span><span class="sxs-lookup"><span data-stu-id="33a33-480">A randomly accessible block of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-481">您可以使用此方法返回的视图来随机访问内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-481">You can use the view returned by this method for random access to a memory-mapped file.</span></span>  
  
 <span data-ttu-id="33a33-482">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="33a33-482">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="33a33-483">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-483">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="33a33-484">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-484">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-485"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="33a33-485"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="33a33-486">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-486">-or-</span></span> 
 <span data-ttu-id="33a33-487"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="33a33-487"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-488"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="33a33-488"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-489">出现 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="33a33-489">An I/O error occurred.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-490">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-490">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateViewStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a33-491">创建映射到内存映射文件视图的流。</span><span class="sxs-lookup"><span data-stu-id="33a33-491">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream () As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream();" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a33-492">创建映射到内存映射文件视图的流。</span><span class="sxs-lookup"><span data-stu-id="33a33-492">Creates a stream that maps to a view of the memory-mapped file.</span></span></summary>
        <returns><span data-ttu-id="33a33-493">内存流。</span><span class="sxs-lookup"><span data-stu-id="33a33-493">A stream of memory.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-494">您可以使用此方法返回的流对内存映射文件（如进程间通信）进行顺序访问。</span><span class="sxs-lookup"><span data-stu-id="33a33-494">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a33-495">下面的示例创建一个流并向其写入值。</span><span class="sxs-lookup"><span data-stu-id="33a33-495">The following example creates a stream and writes a value to it.</span></span> <span data-ttu-id="33a33-496">此代码示例是为 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> 方法提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="33a33-496">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A> method.</span></span>  
  
 [!code-csharp[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/cs/program.cs#2)]
 [!code-vb[System.IO.MemoryMappedFiles_IPC_X#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.memorymappedfiles_ipc_x/vb/program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-497">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="33a33-497">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-498">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-498">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="33a33-499">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="33a33-499">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="33a33-500">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-500">The size of the view.</span></span> <span data-ttu-id="33a33-501">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="33a33-501">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="33a33-502">创建一个流，它映射到内存映射文件的视图并具有指定的偏移和大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-502">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</span></span></summary>
        <returns><span data-ttu-id="33a33-503">具有指定偏移和大小的内存流。</span><span class="sxs-lookup"><span data-stu-id="33a33-503">A stream of memory that has the specified offset and size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-504">您可以使用此方法返回的流对内存映射文件（如进程间通信）进行顺序访问。</span><span class="sxs-lookup"><span data-stu-id="33a33-504">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="33a33-505">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="33a33-505">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="33a33-506">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-506">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="33a33-507">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-507">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-508"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="33a33-508"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="33a33-509">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-509">-or-</span></span> 
 <span data-ttu-id="33a33-510"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="33a33-510"><paramref name="size" /> is greater than the logical address space.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-511">对内存映射文件的访问控制未获授权。</span><span class="sxs-lookup"><span data-stu-id="33a33-511">Access to the memory-mapped file is unauthorized.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-512"><paramref name="size" /> 大于总虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="33a33-512"><paramref name="size" /> is greater than the total virtual memory.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-513">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-513">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateViewStream">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream (long offset, long size, System.IO.MemoryMappedFiles.MemoryMappedFileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedViewStream CreateViewStream(int64 offset, int64 size, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateViewStream(System.Int64,System.Int64,System.IO.MemoryMappedFiles.MemoryMappedFileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateViewStream (offset As Long, size As Long, access As MemoryMappedFileAccess) As MemoryMappedViewStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedViewStream ^ CreateViewStream(long offset, long size, System::IO::MemoryMappedFiles::MemoryMappedFileAccess access);" />
      <MemberSignature Language="F#" Value="member this.CreateViewStream : int64 * int64 * System.IO.MemoryMappedFiles.MemoryMappedFileAccess -&gt; System.IO.MemoryMappedFiles.MemoryMappedViewStream" Usage="memoryMappedFile.CreateViewStream (offset, size, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedViewStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="access" Type="System.IO.MemoryMappedFiles.MemoryMappedFileAccess" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="33a33-514">启动此视图的字节位置。</span><span class="sxs-lookup"><span data-stu-id="33a33-514">The byte at which to start the view.</span></span></param>
        <param name="size"><span data-ttu-id="33a33-515">视图的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-515">The size of the view.</span></span> <span data-ttu-id="33a33-516">指定 0（零）可创建从 <paramref name="offset" /> 开始，大约在内存映射文件结尾处结束的视图。</span><span class="sxs-lookup"><span data-stu-id="33a33-516">Specify 0 (zero) to create a view that starts at <paramref name="offset" /> and ends approximately at the end of the memory-mapped file.</span></span></param>
        <param name="access"><span data-ttu-id="33a33-517">指定内存映射文件允许的访问类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-517">One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</span></span> <span data-ttu-id="33a33-518">默认值为 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-518">The default is <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite" />.</span></span></param>
        <summary><span data-ttu-id="33a33-519">创建一个流，它映射到内存映射文件的视图，并具有指定的偏移、大小和访问类型。</span><span class="sxs-lookup"><span data-stu-id="33a33-519">Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</span></span></summary>
        <returns><span data-ttu-id="33a33-520">具有指定特征的内存流。</span><span class="sxs-lookup"><span data-stu-id="33a33-520">A stream of memory that has the specified characteristics.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-521">您可以使用此方法返回的流对内存映射文件（如进程间通信）进行顺序访问。</span><span class="sxs-lookup"><span data-stu-id="33a33-521">You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</span></span>  
  
 <span data-ttu-id="33a33-522">若要创建内存映射文件的完整视图，请为 `size` 参数指定0（零）。</span><span class="sxs-lookup"><span data-stu-id="33a33-522">To create a complete view of the memory-mapped file, specify 0 (zero) for the `size` parameter.</span></span> <span data-ttu-id="33a33-523">如果执行此操作，视图的大小可能小于或大于磁盘上的源文件的大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-523">If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</span></span> <span data-ttu-id="33a33-524">这是因为视图以系统页的单位提供，视图的大小向上舍入到下一个系统页面大小。</span><span class="sxs-lookup"><span data-stu-id="33a33-524">This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-525"><paramref name="offset" /> 或 <paramref name="size" /> 是负值。</span><span class="sxs-lookup"><span data-stu-id="33a33-525"><paramref name="offset" /> or <paramref name="size" /> is a negative value.</span></span>  
  
<span data-ttu-id="33a33-526">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-526">-or-</span></span> 
 <span data-ttu-id="33a33-527"><paramref name="size" /> 大于逻辑地址空间。</span><span class="sxs-lookup"><span data-stu-id="33a33-527"><paramref name="size" /> is greater than the logical address space.</span></span>  
  
<span data-ttu-id="33a33-528">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-528">-or-</span></span> 
 <span data-ttu-id="33a33-529"><paramref name="access" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-529"><paramref name="access" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileAccess" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-530"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="33a33-530"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="33a33-531"><paramref name="size" /> 大于总虚拟内存。</span><span class="sxs-lookup"><span data-stu-id="33a33-531"><paramref name="size" /> is greater than the total virtual memory.</span></span>  
  
<span data-ttu-id="33a33-532">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-532">-or-</span></span> 
 <span data-ttu-id="33a33-533"><paramref name="access" /> 对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="33a33-533"><paramref name="access" /> is invalid for the memory-mapped file.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-534">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-534">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a33-535">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的资源。</span><span class="sxs-lookup"><span data-stu-id="33a33-535">Releases the resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="memoryMappedFile.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a33-536">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="33a33-536">Releases all resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="memoryMappedFile.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="33a33-537">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-537"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="33a33-538">释放由 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="33a33-538">Releases the unmanaged resources used by the <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFile" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As MemoryMappedFileSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Usage="memoryMappedFile.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFileSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="33a33-539">获取对内存映射文件资源的访问控制。</span><span class="sxs-lookup"><span data-stu-id="33a33-539">Gets the access control to the memory-mapped file resource.</span></span></summary>
        <returns><span data-ttu-id="33a33-540">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-540">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="33a33-541">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="33a33-541">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="33a33-542">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="33a33-542">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="33a33-543">内存映射文件关闭。</span><span class="sxs-lookup"><span data-stu-id="33a33-543">The memory-mapped file is closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="33a33-544">当前平台是 Windows 98 或更早版本。</span><span class="sxs-lookup"><span data-stu-id="33a33-544">The current platform is Windows 98 or earlier.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-545">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="33a33-545">An underlying call to set security information failed.</span></span>  
  
<span data-ttu-id="33a33-546">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-546">-or-</span></span> 
<span data-ttu-id="33a33-547">内存映射文件已作为只 <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> 文件打开。</span><span class="sxs-lookup"><span data-stu-id="33a33-547">The memory-mapped file was opened as <see cref="F:System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write" /> only.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-548">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-548">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="33a33-549">在系统内存中打开现有的已命名内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-549">Opens an existing named memory-mapped file in system memory.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting mapName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-550">内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="33a33-550">The name of the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="33a33-551">在系统内存中打开一个具有指定名称的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-551">Opens an existing memory-mapped file that has the specified name in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-552">具有指定名称的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-552">A memory-mapped file that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33a33-553">内存映射文件可以是持久的内存映射文件（与磁盘上的文件相关联），也可以是非持久的。</span><span class="sxs-lookup"><span data-stu-id="33a33-553">The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non-persisted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="33a33-554">**打开持久化内存映射文件**</span><span class="sxs-lookup"><span data-stu-id="33a33-554">**Opening a Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="33a33-555">下面的示例将打开一个名为 `ImgA` 的内存映射文件，该文件已从磁盘上的文件创建（如 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> 方法的示例中所示）。</span><span class="sxs-lookup"><span data-stu-id="33a33-555">The following example opens a memory-mapped file named `ImgA` that has already been created from a file on disk (as shown in the example for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%28System.String%29> method).</span></span>  
  
 [!code-csharp[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/csharp/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/cs/program.cs#1)]
 [!code-vb[memorymappedfiles.memorymappedfile.openexisting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/memorymappedfiles.memorymappedfile.openexisting/vb/program.vb#1)]  
  
 <span data-ttu-id="33a33-556">**打开非持久化内存映射文件**</span><span class="sxs-lookup"><span data-stu-id="33a33-556">**Opening a Non-Persisted Memory-Mapped File**</span></span>  
  
 <span data-ttu-id="33a33-557">下面的示例打开一个用于进程间通信的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-557">The following example opens a memory-mapped file used for inter-process communication.</span></span> <span data-ttu-id="33a33-558">此代码示例是为 <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> 方法提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="33a33-558">This code example is part of a larger example provided for the <xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%28System.String%2CSystem.Int64%29> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-559"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-559"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-560"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-560"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="33a33-561">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="33a33-561">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-562">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-562">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-563">要打开的内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="33a33-563">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="33a33-564">用于指定应用于内存映射文件的访问权限的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-564">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <summary><span data-ttu-id="33a33-565">在系统内存中打开一个具有指定名称和访问权限的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-565">Opens an existing memory-mapped file that has the specified name and access rights in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-566">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-566">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-567"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-567"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-568"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-568"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-569"><paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-569"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="33a33-570">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="33a33-570">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-571">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-571">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting (string mapName, System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.MemoryMappedFiles.MemoryMappedFile OpenExisting(string mapName, valuetype System.IO.MemoryMappedFiles.MemoryMappedFileRights desiredAccessRights, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting(System.String,System.IO.MemoryMappedFiles.MemoryMappedFileRights,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (mapName As String, desiredAccessRights As MemoryMappedFileRights, inheritability As HandleInheritability) As MemoryMappedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::MemoryMappedFiles::MemoryMappedFile ^ OpenExisting(System::String ^ mapName, System::IO::MemoryMappedFiles::MemoryMappedFileRights desiredAccessRights, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.IO.MemoryMappedFiles.MemoryMappedFileRights * System.IO.HandleInheritability -&gt; System.IO.MemoryMappedFiles.MemoryMappedFile" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.OpenExisting (mapName, desiredAccessRights, inheritability)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.MemoryMappedFiles.MemoryMappedFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapName" Type="System.String" />
        <Parameter Name="desiredAccessRights" Type="System.IO.MemoryMappedFiles.MemoryMappedFileRights" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="mapName"><span data-ttu-id="33a33-572">要打开的内存映射文件的名称。</span><span class="sxs-lookup"><span data-stu-id="33a33-572">The name of the memory-mapped file to open.</span></span></param>
        <param name="desiredAccessRights"><span data-ttu-id="33a33-573">指定要应用于内存映射文件的访问权限的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-573">One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</span></span></param>
        <param name="inheritability"><span data-ttu-id="33a33-574">指定内存映射文件的句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="33a33-574">One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</span></span> <span data-ttu-id="33a33-575">默认值为 <see cref="F:System.IO.HandleInheritability.None" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-575">The default is <see cref="F:System.IO.HandleInheritability.None" />.</span></span></param>
        <summary><span data-ttu-id="33a33-576">在系统内存中打开一个具有指定名称、访问权限和继承性的现有内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-576">Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</span></span></summary>
        <returns><span data-ttu-id="33a33-577">具有指定特征的内存映射文件。</span><span class="sxs-lookup"><span data-stu-id="33a33-577">A memory-mapped file that has the specified characteristics.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-578"><paramref name="mapName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-578"><paramref name="mapName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="33a33-579"><paramref name="mapName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="33a33-579"><paramref name="mapName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="33a33-580"><paramref name="desiredAccessRights" /> 不是有效的 <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-580"><paramref name="desiredAccessRights" /> is not a valid <see cref="T:System.IO.MemoryMappedFiles.MemoryMappedFileRights" /> enumeration value.</span></span>  
  
<span data-ttu-id="33a33-581">- 或 -</span><span class="sxs-lookup"><span data-stu-id="33a33-581">-or-</span></span> 
 <span data-ttu-id="33a33-582"><paramref name="inheritability" /> 不是有效的 <see cref="T:System.IO.HandleInheritability" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="33a33-582"><paramref name="inheritability" /> is not a valid <see cref="T:System.IO.HandleInheritability" /> enumeration value.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-583">请求的访问对于内存映射文件无效。</span><span class="sxs-lookup"><span data-stu-id="33a33-583">The requested access is invalid for the memory-mapped file.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="33a33-584">为 <paramref name="mapName" /> 指定的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="33a33-584">The file specified for <paramref name="mapName" /> does not exist.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-585">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-585">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SafeMemoryMappedFileHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle SafeMemoryMappedFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeMemoryMappedFileHandle As SafeMemoryMappedFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ SafeMemoryMappedFileHandle { Microsoft::Win32::SafeHandles::SafeMemoryMappedFileHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeMemoryMappedFileHandle : Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle" Usage="System.IO.MemoryMappedFiles.MemoryMappedFile.SafeMemoryMappedFileHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="33a33-586">获取内存映射文件的文件句柄。</span><span class="sxs-lookup"><span data-stu-id="33a33-586">Gets the file handle of a memory-mapped file.</span></span></summary>
        <value><span data-ttu-id="33a33-587">内存映射文件的句柄。</span><span class="sxs-lookup"><span data-stu-id="33a33-587">The handle to the memory-mapped file.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-588">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-588">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.IO.MemoryMappedFiles.MemoryMappedFileSecurity memoryMappedFileSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.MemoryMappedFiles.MemoryMappedFile.SetAccessControl(System.IO.MemoryMappedFiles.MemoryMappedFileSecurity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAccessControl (memoryMappedFileSecurity As MemoryMappedFileSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::IO::MemoryMappedFiles::MemoryMappedFileSecurity ^ memoryMappedFileSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.IO.MemoryMappedFiles.MemoryMappedFileSecurity -&gt; unit" Usage="memoryMappedFile.SetAccessControl memoryMappedFileSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryMappedFileSecurity" Type="System.IO.MemoryMappedFiles.MemoryMappedFileSecurity" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="memoryMappedFileSecurity"><span data-ttu-id="33a33-589">可以针对内存映射文件授予的文件访问和操作权限。</span><span class="sxs-lookup"><span data-stu-id="33a33-589">The permissions that can be granted for file access and operations on memory-mapped files.</span></span></param>
        <summary><span data-ttu-id="33a33-590">设置对内存映射文件资源的访问控制。</span><span class="sxs-lookup"><span data-stu-id="33a33-590">Sets the access control to the memory-mapped file resource.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="33a33-591"><paramref name="memoryMappedFileSecurity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="33a33-591"><paramref name="memoryMappedFileSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="33a33-592">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="33a33-592">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="33a33-593">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="33a33-593">An underlying call to set security information failed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="33a33-594">用于设置安全信息的基础调用失败。</span><span class="sxs-lookup"><span data-stu-id="33a33-594">An underlying call to set security information failed.</span></span></exception>
        <related type="Article" href="~/docs/standard/io/memory-mapped-files.md"><span data-ttu-id="33a33-595">内存映射文件</span><span class="sxs-lookup"><span data-stu-id="33a33-595">Memory-Mapped Files</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
