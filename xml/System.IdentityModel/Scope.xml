<Type Name="Scope" FullName="System.IdentityModel.Scope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="121f505110b2f18b38e285b83cfe277d5263fe5f" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78823386" /></Metadata><TypeSignature Language="C#" Value="public class Scope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Scope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Scope" />
  <TypeSignature Language="VB.NET" Value="Public Class Scope" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scope" />
  <TypeSignature Language="F#" Value="type Scope = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b88fb-101">表示令牌颁发请求的配置。</span><span class="sxs-lookup"><span data-stu-id="b88fb-101">Represents the configuration for the token issuance request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-102"><xref:System.IdentityModel.Scope> 类封装与安全令牌请求（RST）关联的信赖方（RP）的相关信息。</span><span class="sxs-lookup"><span data-stu-id="b88fb-102">The <xref:System.IdentityModel.Scope> class encapsulates information about the relying party (RP) associated with a security token request (RST).</span></span> <span data-ttu-id="b88fb-103">此信息由令牌颁发管道中 <xref:System.IdentityModel.SecurityTokenService> 类（STS）的实现使用，以向安全令牌请求（RST）返回响应（RSTR）。</span><span class="sxs-lookup"><span data-stu-id="b88fb-103">This information is used by implementations of the <xref:System.IdentityModel.SecurityTokenService> class (STS) in the token issuance pipeline to return a response (RSTR) to a security token request (RST).</span></span>  
  
 <span data-ttu-id="b88fb-104"><xref:System.IdentityModel.Scope> 对象包含有关 RP 地址的信息、要与已颁发的安全令牌一起使用的加密和签名凭据，以及令牌本身或使用令牌颁发的对称密钥是否应加密。</span><span class="sxs-lookup"><span data-stu-id="b88fb-104"><xref:System.IdentityModel.Scope> objects contain information about the address of the RP, the encrypting and signing credentials to be used with the issued security token, and whether the token itself or symmetric keys issued with the token should be encrypted.</span></span> <span data-ttu-id="b88fb-105">默认情况下，令牌和对称密钥都是加密的。</span><span class="sxs-lookup"><span data-stu-id="b88fb-105">By default, both the token and symmetric keys are encrypted.</span></span> <span data-ttu-id="b88fb-106">你可以扩展 <xref:System.IdentityModel.Scope> 类来携带有关请求的其他信息，例如 RP 接受的令牌类型、默认令牌生存期、最大令牌生存期、RP 使用的算法套件，等等;但是，对于单个请求，封装在此类中的信息不应有所不同。</span><span class="sxs-lookup"><span data-stu-id="b88fb-106">You can extend the <xref:System.IdentityModel.Scope> class to carry additional information about the request, such as token types accepted by the RP, default token lifetime, maximum token lifetime, algorithm suites used by the RP, and so on; however, the information encapsulated in this class should not vary for individual requests.</span></span>  
  
 <span data-ttu-id="b88fb-107">令牌颁发管道在 <xref:System.IdentityModel.SecurityTokenService.Issue%2A> 方法中实现，此方法调用 <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法来获取 RST 的配置。</span><span class="sxs-lookup"><span data-stu-id="b88fb-107">The token issuance pipeline is implemented in the <xref:System.IdentityModel.SecurityTokenService.Issue%2A> method and this method invokes the <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method to get the configuration for the RST.</span></span> <span data-ttu-id="b88fb-108">你必须在自定义 STS 中实现 <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> 方法，并返回适用于 RP 和 STS 实现的 <xref:System.IdentityModel.Scope> 对象。</span><span class="sxs-lookup"><span data-stu-id="b88fb-108">You must implement a <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> method in your custom STS and return a <xref:System.IdentityModel.Scope> object appropriate for the RP and your STS implementation.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b88fb-109">初始化 <see cref="T:System.IdentityModel.Scope" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b88fb-109">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b88fb-110">初始化 <see cref="T:System.IdentityModel.Scope" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b88fb-110">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-111">下表显示了新 <xref:System.IdentityModel.Scope> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-111">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="b88fb-112">Property</span><span class="sxs-lookup"><span data-stu-id="b88fb-112">Property</span></span>|<span data-ttu-id="b88fb-113">Value。</span><span class="sxs-lookup"><span data-stu-id="b88fb-113">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="b88fb-114">`null` .</span><span class="sxs-lookup"><span data-stu-id="b88fb-114">`null` .</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="b88fb-115">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-115">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="b88fb-116">空字典。</span><span class="sxs-lookup"><span data-stu-id="b88fb-116">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="b88fb-117">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-117">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="b88fb-118">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-118">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="b88fb-119">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-119">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="b88fb-120">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-120">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope appliesToAddress" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="b88fb-121">依赖方的 appliesTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-121">The appliesTo address of the relying party.</span></span> <span data-ttu-id="b88fb-122">通常此为 URI。</span><span class="sxs-lookup"><span data-stu-id="b88fb-122">This is typically a URI.</span></span></param>
        <summary><span data-ttu-id="b88fb-123">初始化用指定 appliesTo 地址的 <see cref="T:System.IdentityModel.Scope" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b88fb-123">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-124">下表显示了新 <xref:System.IdentityModel.Scope> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-124">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="b88fb-125">Property</span><span class="sxs-lookup"><span data-stu-id="b88fb-125">Property</span></span>|<span data-ttu-id="b88fb-126">Value。</span><span class="sxs-lookup"><span data-stu-id="b88fb-126">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="b88fb-127">`appliesToAddress` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-127">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="b88fb-128">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-128">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="b88fb-129">空字典。</span><span class="sxs-lookup"><span data-stu-id="b88fb-129">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="b88fb-130">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-130">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="b88fb-131">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-131">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="b88fb-132">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-132">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="b88fb-133">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-133">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String, encryptingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="b88fb-134">依赖方的 appliesTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-134">The appliesTo address of the relying party.</span></span> <span data-ttu-id="b88fb-135">通常此为 URI。</span><span class="sxs-lookup"><span data-stu-id="b88fb-135">This is typically a URI.</span></span></param>
        <param name="encryptingCredentials"><span data-ttu-id="b88fb-136">依赖的一方的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-136">The encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="b88fb-137">用指定的 appliesTo 地址和加密凭据初始化 <see cref="T:System.IdentityModel.Scope" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b88fb-137">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-138">下表显示了新 <xref:System.IdentityModel.Scope> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-138">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="b88fb-139">Property</span><span class="sxs-lookup"><span data-stu-id="b88fb-139">Property</span></span>|<span data-ttu-id="b88fb-140">Value。</span><span class="sxs-lookup"><span data-stu-id="b88fb-140">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="b88fb-141">`appliesToAddress` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-141">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="b88fb-142">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-142">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="b88fb-143">空字典。</span><span class="sxs-lookup"><span data-stu-id="b88fb-143">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="b88fb-144">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-144">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="b88fb-145">`signingCredentials` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-145">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="b88fb-146">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-146">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="b88fb-147">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-147">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String, signingCredentials As SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="b88fb-148">依赖方的 appliesTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-148">The appliesTo address of the relying party.</span></span> <span data-ttu-id="b88fb-149">通常此为 URI。</span><span class="sxs-lookup"><span data-stu-id="b88fb-149">This is typically a URI.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="b88fb-150">依赖的一方的签名凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-150">The signing credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="b88fb-151">用指定的 appliesTo 地址和签名凭据初始化 <see cref="T:System.IdentityModel.Scope" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b88fb-151">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address and signing credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-152">下表显示了新 <xref:System.IdentityModel.Scope> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-152">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="b88fb-153">Property</span><span class="sxs-lookup"><span data-stu-id="b88fb-153">Property</span></span>|<span data-ttu-id="b88fb-154">Value。</span><span class="sxs-lookup"><span data-stu-id="b88fb-154">Value.</span></span>|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="b88fb-155">`appliesToAddress` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-155">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="b88fb-156">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-156">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="b88fb-157">空字典。</span><span class="sxs-lookup"><span data-stu-id="b88fb-157">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="b88fb-158">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-158">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="b88fb-159">`signingCredentials` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-159">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="b88fb-160">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-160">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="b88fb-161">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-161">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String, signingCredentials As SigningCredentials, encryptingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Scope : string * System.IdentityModel.Tokens.SigningCredentials * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Scope" Usage="new System.IdentityModel.Scope (appliesToAddress, signingCredentials, encryptingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress"><span data-ttu-id="b88fb-162">依赖方的 appliesTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-162">The appliesTo address of the relying party.</span></span> <span data-ttu-id="b88fb-163">通常此为 URI。</span><span class="sxs-lookup"><span data-stu-id="b88fb-163">This is typically a URI.</span></span></param>
        <param name="signingCredentials"><span data-ttu-id="b88fb-164">依赖的一方的签名凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-164">The signing credentials for the relying party.</span></span></param>
        <param name="encryptingCredentials"><span data-ttu-id="b88fb-165">依赖的一方的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-165">The encrypting credentials for the relying party.</span></span></param>
        <summary><span data-ttu-id="b88fb-166">用指定的 appliesTo 地址、签名凭据和加密凭据初始化 <see cref="T:System.IdentityModel.Scope" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="b88fb-166">Initializes a new instance of the <see cref="T:System.IdentityModel.Scope" /> class with the specified appliesTo address, signing credentials, and encrypting credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-167">下表显示了新 <xref:System.IdentityModel.Scope> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-167">The following table shows the initial property values for the new <xref:System.IdentityModel.Scope> instance.</span></span>  
  
|<span data-ttu-id="b88fb-168">Property</span><span class="sxs-lookup"><span data-stu-id="b88fb-168">Property</span></span>|<span data-ttu-id="b88fb-169">“值”</span><span class="sxs-lookup"><span data-stu-id="b88fb-169">Value</span></span>|  
|--------------|-----------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|<span data-ttu-id="b88fb-170">`appliesToAddress` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-170">The value of the `appliesToAddress` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|<span data-ttu-id="b88fb-171">`encryptingCredentials` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-171">The value of the `encryptingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.Properties%2A>|<span data-ttu-id="b88fb-172">空字典。</span><span class="sxs-lookup"><span data-stu-id="b88fb-172">An empty dictionary.</span></span>|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|<span data-ttu-id="b88fb-173">`null`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-173">`null`.</span></span>|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|<span data-ttu-id="b88fb-174">`signingCredentials` 参数的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-174">The value of the `signingCredentials` parameter.</span></span>|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|<span data-ttu-id="b88fb-175">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-175">`true`.</span></span>|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|<span data-ttu-id="b88fb-176">`true`。</span><span class="sxs-lookup"><span data-stu-id="b88fb-176">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToAddress">
      <MemberSignature Language="C#" Value="public virtual string AppliesToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppliesToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.AppliesToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppliesToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppliesToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AppliesToAddress : string with get, set" Usage="System.IdentityModel.Scope.AppliesToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88fb-177">获取或设置依赖方的 appliesTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-177">Gets or sets the appliesTo address of the relying party.</span></span></summary>
        <value><span data-ttu-id="b88fb-178">依赖方的 appliesTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-178">The appliesTo address of the relying party.</span></span> <span data-ttu-id="b88fb-179">通常此为 URI。</span><span class="sxs-lookup"><span data-stu-id="b88fb-179">This is typically a URI.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); void set(System::IdentityModel::Tokens::EncryptingCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptingCredentials : System.IdentityModel.Tokens.EncryptingCredentials with get, set" Usage="System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88fb-180">获取或设置依赖方的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-180">Gets or sets the encrypting credentials for the relying party.</span></span></summary>
        <value><span data-ttu-id="b88fb-181">被用于依赖的一方的加密凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-181">The encrypting credentials to be used for the relying party.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-182">如果 `true`<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> 属性，则使用凭据来加密颁发的安全令牌。</span><span class="sxs-lookup"><span data-stu-id="b88fb-182">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, the credentials are used to encrypt issued security tokens.</span></span> <span data-ttu-id="b88fb-183">如果 `true`<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> 属性，则使用凭据对颁发的对称密钥进行加密。</span><span class="sxs-lookup"><span data-stu-id="b88fb-183">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, the credentials are used to encrypt symmetric keys issued with security tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.Dictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="System.IdentityModel.Scope.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88fb-184">获取用来扩展对象的属性包。</span><span class="sxs-lookup"><span data-stu-id="b88fb-184">Gets the properties bag to extend the object.</span></span></summary>
        <value><span data-ttu-id="b88fb-185">属性包。</span><span class="sxs-lookup"><span data-stu-id="b88fb-185">The properties bag.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToAddress">
      <MemberSignature Language="C#" Value="public virtual string ReplyToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.ReplyToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReplyToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReplyToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReplyToAddress : string with get, set" Usage="System.IdentityModel.Scope.ReplyToAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88fb-186">获取或设置依赖方的 replyTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-186">Gets or sets the replyTo address of the relying party.</span></span></summary>
        <value><span data-ttu-id="b88fb-187">依赖方的 replyTo 地址。</span><span class="sxs-lookup"><span data-stu-id="b88fb-187">The replyTo address of the relying party.</span></span> <span data-ttu-id="b88fb-188">通常此为 URI。</span><span class="sxs-lookup"><span data-stu-id="b88fb-188">This is typically a URI.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials with get, set" Usage="System.IdentityModel.Scope.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88fb-189">获取或设置依赖方的签名凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-189">Gets or sets the signing credentials for the relying party.</span></span></summary>
        <value><span data-ttu-id="b88fb-190">被用于依赖的一方的签名凭据。</span><span class="sxs-lookup"><span data-stu-id="b88fb-190">The signing credentials to be used for the relying party.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool SymmetricKeyEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SymmetricKeyEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SymmetricKeyEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SymmetricKeyEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88fb-191">获取或设置指示颁发的对称密钥是否必须加密的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-191">Gets or sets a value that indicates whether issued symmetric keys must be encrypted.</span></span></summary>
        <value><span data-ttu-id="b88fb-192">如果必须加密对称密钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b88fb-192"><see langword="true" /> if symmetric keys must be encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b88fb-193">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b88fb-193">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-194">如果 `true`<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> 属性，则使用 <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> 属性中的凭据对对称密钥进行加密。</span><span class="sxs-lookup"><span data-stu-id="b88fb-194">If the <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> property is `true`, symmetric keys are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool TokenEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TokenEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TokenEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TokenEncryptionRequired : bool with get, set" Usage="System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b88fb-195">获取或设置指示颁发的安全令牌是否必须加密的值。</span><span class="sxs-lookup"><span data-stu-id="b88fb-195">Gets or sets a value that indicates whether issued security tokens must be encrypted.</span></span></summary>
        <value><span data-ttu-id="b88fb-196">如果必须加密安全标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b88fb-196"><see langword="true" /> if security tokens must be encrypted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b88fb-197">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b88fb-197">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b88fb-198">如果 `true`<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> 属性，安全令牌将使用 <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> 属性中的凭据进行加密。</span><span class="sxs-lookup"><span data-stu-id="b88fb-198">If the <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> property is `true`, security tokens are encrypted using the credentials in the <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
