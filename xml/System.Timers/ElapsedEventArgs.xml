<Type Name="ElapsedEventArgs" FullName="System.Timers.ElapsedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34d968e90d7840c0555513cbf932cf5d9a11f3c3" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75114702" /></Metadata><TypeSignature Language="C#" Value="public class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ElapsedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Timers.ElapsedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ElapsedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ElapsedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ElapsedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Timers.Timer.Elapsed" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的示例实例化一个 <xref:System.Timers.Timer> 对象，该对象每隔两秒（2000毫秒）就会激发其 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 事件，并为事件设置事件处理程序并启动计时器。 每次引发时，事件处理程序都将显示 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> 属性的值。  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SignalTime">
      <MemberSignature Language="C#" Value="public DateTime SignalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime SignalTime" />
      <MemberSignature Language="DocId" Value="P:System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignalTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime SignalTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.SignalTime : DateTime" Usage="System.Timers.ElapsedEventArgs.SignalTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>引发 <see cref="E:System.Timers.Timer.Elapsed" /> 事件时获取日期/时间。</summary>
        <value>引发 <see cref="E:System.Timers.Timer.Elapsed" /> 事件的时间。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 事件是在 <xref:System.Threading.ThreadPool> 线程上引发的，因此，事件处理方法可能会在一个线程上运行，同时，对 <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> 方法的调用在另一个线程上运行。 这可能会导致在调用 <xref:System.Timers.Timer.Stop%2A> 方法后引发 <xref:System.Timers.Timer.Elapsed> 事件。 不能通过将 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A> 属性与调用 <xref:System.Timers.Timer.Stop%2A> 方法时的时间进行比较来阻止此争用条件，因为在调用 <xref:System.Timers.Timer.Stop%2A> 方法时，事件处理方法可能已执行，或者在调用 <xref:System.Timers.Timer.Stop%2A> 方法和保存停止时间的时刻之间可能会开始执行。 如果在事件处理方法仍在执行时阻止调用 <xref:System.Timers.Timer.Stop%2A> 方法的线程继续进行，请使用更可靠的同步机制，如 <xref:System.Threading.Monitor> 类或 <xref:System.Threading.Interlocked.CompareExchange%2A> 方法。 可在 <xref:System.Timers.Timer.Stop%2A?displayProperty=nameWithType> 方法的示例中找到使用 <xref:System.Threading.Interlocked.CompareExchange%2A> 方法的代码。  
  
   
  
## Examples  
 下面的示例实例化一个 <xref:System.Timers.Timer> 对象，该对象每隔两秒（2000毫秒）就会激发其 <xref:System.Timers.Timer.Elapsed?displayProperty=nameWithType> 事件，并为事件设置事件处理程序并启动计时器。 每次引发时，事件处理程序都将显示 <xref:System.Timers.ElapsedEventArgs.SignalTime%2A?displayProperty=nameWithType> 属性的值。  
  
 [!code-cpp[System.Timers.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.timers.timer/cpp/timer1.cpp#1)]
 [!code-csharp[System.Timers.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.timers.timer/cs/timer1.cs#1)]
 [!code-vb[System.Timers.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.timers.timer/vb/timer1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Timers.Timer.Stop" />
      </Docs>
    </Member>
  </Members>
</Type>
