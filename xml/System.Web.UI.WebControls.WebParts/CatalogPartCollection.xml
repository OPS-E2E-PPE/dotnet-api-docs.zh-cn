<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0eaf40b23ecd3a82f9fe6cf2becb06b31acd6985" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78765848" /></Metadata><TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type CatalogPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控件的集合，这些控件用于提供最终用户可添加到网页的 Web 服务器控件目录。 此类不能被继承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类是 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的只读集合，通常由 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 区域用于跟踪区域包含的一组 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件。  
  
 当 Web 部件页面进入目录模式时，区域将创建由 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件组成的新 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象。 集合中的每个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件都可以包含对零个或多个 Web 服务器控件的引用，这些控件以可用服务器控件目录的形式显示。  
  
 例如，如果需要对一组 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件执行一些大容量操作，则可以为自己的编程使用创建控件的 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 集合。 即使 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象是只读的，你也可以对集合中引用的基础控件进行编程更改。  
  
   
  
## Examples  
 下面的代码示例演示了 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类的几个用途。 此代码示例分为四个部分：  
  
-   使您能够在 Web 部件页上更改显示模式的用户控件。  
  
-   一个类，用于在网页中引用的名为 `TextDisplayWebPart`的自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件，该控件包含在一个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件中。  
  
-   引用 `TextDisplayWebPart` 控件的网页，包含一个 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 控件，其中包含区域中声明的 Web 部件控件集的两个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，并包含用于创建和操作 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象的事件驱动代码。  
  
-   说明如何在浏览器中加载代码示例。  
  
 此代码示例的第一部分是用户控件。 该用户控件的源代码来自其他主题。 要使此代码示例正常运行，你需要从[演练：更改 Web 部件页上的显示模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)主题中获取该用户控件的 .ascx 文件，并将该文件放在此代码示例中 .aspx 页面所在的同一文件夹中。  
  
 此代码示例的第二部分是 `TextDisplayWebPart` 控件。 要使代码示例运行，必须编译此源代码。 可以显式编译该程序集，并将生成的程序集放在网站的 Bin 文件夹或全局程序集缓存中。 或者，您可以将源代码放在站点的 App_Code 文件夹中，它将在运行时动态编译。 有关演示两种编译方法的演练，请参阅[演练：开发和使用自定义 Web 服务器控件](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。 请注意，控件有一个名为 `ContentText`的属性;此属性保存用户在文本框中输入的值。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 此代码示例的第三部分是网页。 请注意，页面的 `<asp:catalogzone>` 元素包含两个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的声明。 这些控件成为在执行 `Button1_Click` 方法时创建的自定义 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象的一部分。 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件包含之前用户已在运行时关闭的 Web 服务器控件。 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件中的控件可以添加回页面。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件包含自定义 `TextDisplayWebPart` 控件的声明。 当页处于目录模式时，用户可以将 `TextDisplayWebPart` 控件添加到页面中，以便可以在正常浏览模式下使用。  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 在浏览器中加载页面时，可以通过在 "**显示模式**" 下拉列表控件中选择 "**目录**"，将页面切换到目录模式。 通过选中自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件旁边的复选框，然后单击 "**添加**"，可将该控件添加到该页。 单击 "**关闭**" 可将该页返回到浏览模式。 在刚添加的控件上，如果单击谓词菜单（显示在标题栏中的向下箭头），然后单击 "**关闭**"，则将从页中移除控件并将其添加到 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件中。 将页面返回到目录模式，然后单击 "**目录**" 链接以查看 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件的内容。 请注意，您关闭的控件现在会显示在那里。 单击 "**显示 CatalogPart 属性**" 按钮将访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象，并显示所包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的某些属性。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 区域通常是通过 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 方法创建 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象的控件。 不过，您也可以创建自己的 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象用于其他编程目的。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 类的新的空实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 构造函数初始化 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类的空实例。 构造函数的此重载由其 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> 方法中的 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> 类在内部使用，以创建一个空集合对象。 然后，区域创建在子区域模板中声明的所有 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的实例，并使用集合的内部方法添加它们。  
  
 不能使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 构造函数的此重载创建 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 的新实例，并向其添加 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件。 您必须改用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 构造函数的其他重载之一。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection catalogParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts"><see cref="T:System.Collections.ICollection" /> 控件的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <summary>通过传入 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 控件的 <see cref="T:System.Collections.ICollection" /> 集合，初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 构造函数初始化 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类的实例，并传入 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的集合。 这是 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 构造函数的一个重载，可用于创建新的 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象并向其中添加 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件。  
  
 尽管构造函数创建的 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 实例是只读的，但仍可通过编程方式访问集合中的单个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，并调用其属性和方法。  
  
 使用此构造函数的一个常见方案是，如果要对整个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件集执行某个批处理操作，例如更改相关项组的内容、外观或位置。  
  
   
  
## Examples  
 下面的代码示例演示如何创建自定义 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>，以及如何执行批处理操作来更改集合中的单个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，即使它是只读的。 有关运行此示例所需的完整代码，请参阅 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类概述主题的 "示例" 部分。  
  
 `Button1_Click` 方法中的代码将创建一个 <xref:System.Collections.ArrayList> 对象，将页面中的两个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件添加到对象中，然后使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> 构造函数创建新的 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象。 它还演示了如何对基础 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件进行批处理更改，即使集合本身是只读的。 代码循环遍历集合，并更新每个控件的 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> 属性。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 在浏览器中加载页面时，可以通过在 "**显示模式**" 下拉列表控件中选择 "**目录**"，将页面切换到目录模式。 单击 "**显示 CatalogPart 属性**" 按钮将访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象，并显示所包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的某些属性。 此外，如果将鼠标指针放在 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件边框内的标题文本上，则可以看到在单击按钮时添加到控件的新说明文本（说明显示在工具提示中）。 如果单击 "**目录**" 链接以显示 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件，你会发现它还具有更新说明。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Web.UI.WebControls.WebParts.CatalogPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection (existingCatalogParts, catalogParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts">某个区域中现有 <see cref="T:System.Collections.ICollection" /> 控件的一个 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <param name="catalogParts">其他 <see cref="T:System.Collections.ICollection" /> 控件的一个 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <summary>通过传入某个区域中现有 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 控件的 <see cref="T:System.Collections.ICollection" /> 集合以及其他控件集合，初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (catalogPart As CatalogPart) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; bool" Usage="catalogPartCollection.Contains catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">要对其进行检查以确定是否位于集合中的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <summary>返回一个值，该值指示集合中是否存在特定控件。</summary>
        <returns>一个布尔值，该值指示集合中是否存在特定控件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 利用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 方法，您可以确定特定 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 对象是否是 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象的一部分。  
  
   
  
## Examples  
 下面的代码示例演示如何确定特定 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件是否为 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象的成员。 有关运行此示例所需的完整代码，请参阅 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类概述主题的 "示例" 部分。  
  
 `Button1_Click` 方法中的代码将创建一个名为 `myParts`的新 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象。 方法使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 方法来确定 `PageCatalogPart1` 控件是否存在，如果是，则检索该控件并更改属性值。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 在浏览器中加载页面时，可以通过在 "**显示模式**" 下拉列表控件中选择 "**目录**"，将页面切换到目录模式。 通过选中控件旁边的复选框并单击 "**添加**"，将自定义 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控件添加到该页。 单击 "**关闭**" 可将该页返回到浏览模式。 在刚添加的控件上，如果单击谓词菜单（显示在标题栏中的向下箭头），然后单击 "**关闭**"，则将从页中移除控件并将其添加到 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件中。 将页面返回到目录模式，然后单击 "**目录**" 链接以查看 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件的内容。 请注意，您关闭的控件已添加到其中。 单击 "**显示 CatalogPart 属性**" 按钮将访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象，并显示所包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的某些属性。 选中 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件中包含的服务器控件旁边的复选框，单击 "**添加**" 以将其添加回页面，然后单击 "**关闭**" 以将该页返回到浏览模式。 再次单击控件上的谓词菜单，并注意现在关闭谓词已消失。 它已由 `Button1_Click` 方法中的代码移除，当它使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> 方法检查 `PageCatalogPart1`时，然后将其 <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> 属性设置为 `false`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.CatalogPart[] * int -&gt; unit" Usage="catalogPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 对象的数组，用于包含复制的集合。</param>
        <param name="index">在数组中放置集合内容的起始点。</param>
        <summary>将集合复制到 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 对象的数组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要将可以包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的自定义数组组合到 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象或这些控件的子集中，则 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A> 方法非常有用。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>引用集合的一个空的静态只读实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果希望一个空集合实例从方法返回适当的对象类型，或将实例与其他对象进行比较，但不需要将成员添加到实例，则 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 的静态只读实例可减少内存使用量。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (catalogPart As CatalogPart) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; int" Usage="catalogPartCollection.IndexOf catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">作为集合成员的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <summary>返回集合中特定成员的位置。</summary>
        <returns>作为 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 成员的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 Web 部件页上有多个 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，并且需要在集合中查找特定的控件，则 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 方法非常有用。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 属性确定 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 集合成员的位置。 有关运行此示例所需的完整代码，请参阅 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类概述主题的 "示例" 部分。  
  
 `Button1_Click` 方法中的代码将创建一个名为 `myParts`的新 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象。 方法使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 属性检索 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件的位置，然后更改控件上的属性值。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 在浏览器中加载页面后，可以通过在 "**显示模式**" 下拉列表控件中选择 "**目录**"，将页面切换到目录模式。 单击 "**显示 CatalogPart 属性**" 按钮将访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象，并显示所包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的某些属性。 单击 "**目录**" 链接以显示 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件的内容。 请注意，它只有一个标题，没有边框，因为其 <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> 属性值已更改为在使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> 属性检索控件的代码中 <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>根据位置或唯一标识符返回集合中的特定成员。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中特定 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 的索引。</param>
        <summary>基于集合中的位置获取或设置集合的成员。</summary>
        <value>位于集合中指定索引处的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 索引器可以按索引访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象中的基础 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件，并可以更改其属性值或调用方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象的索引来访问该对象的成员。 有关运行此示例所需的完整代码，请参阅 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类概述主题的 "示例" 部分。  
  
 `Button1_Click` 方法中的代码将创建一个名为 `myParts`的新 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象。 请注意，方法使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 索引器从集合的第一个成员中检索信息。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 在浏览器中加载页面时，可以通过在 "**显示模式**" 下拉列表控件中选择 "**目录**"，将页面切换到目录模式。 单击 "**显示 CatalogPart 属性**" 按钮将访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象，并显示所包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的某些属性。 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> 控件中可用服务器控件的计数是使用 `Button1_Click` 方法中的 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 索引器获取的。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">集合中特定 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 的唯一标识符。</param>
        <summary>基于唯一字符串标识符返回集合的成员。</summary>
        <value>集合中 ID 等于 <paramref name="id" /> 的值的第一个 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 索引器允许通过使用字符串标识符来访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象中的基础 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件。 尽管 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象是只读的，但您可以更改属性值或调用索引器访问的基础控件上的方法。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象的字符串 ID 值来访问该对象的成员。 有关运行此示例所需的完整代码，请参阅 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 类概述主题的 "示例" 部分。  
  
 `Button1_Click` 方法中的代码将创建一个名为 `myParts`的新 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象。 方法使用 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 索引器检索有关 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件的信息，这是集合的第二个成员。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 在浏览器中加载页面时，可以通过在 "**显示模式**" 下拉列表控件中选择 "**目录**"，将页面切换到目录模式。 单击 "**显示 CatalogPart 属性**" 按钮将访问 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> 对象，并显示所包含 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> 控件的某些属性。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> 控件中可用服务器控件的计数是使用 `Button1_Click` 方法中的 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> 索引器获取的。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web 部件控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
