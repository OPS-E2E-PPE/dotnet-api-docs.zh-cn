<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="040e3bc354632cb3a111420bc5c8d7495c90b202" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82484237" /></Metadata><TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ListViewGroupCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.Forms.ListView" /> 控件中的组的集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 属性可获取与 <xref:System.Windows.Forms.ListView> 控件关联的 <xref:System.Windows.Forms.ListViewGroupCollection>。 当 <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> 属性设置为除 <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>之外的值时，此集合包含表示控件中显示的组的 <xref:System.Windows.Forms.ListViewGroup> 对象。 未分配给组的任何项都将显示在默认组中，其标头标签为 "DefaultGroup{0}"。 默认组不包含在 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 集合中，因此无法更改。 它主要用于调试，以确保所有项都已正确添加到组中。 如果 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 集合中没有组，则会禁用分组功能。  
  
 使用 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 方法向集合中添加单个组。 使用 <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> 方法可在集合中的特定索引处添加组。 若要删除组，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> 方法。 使用 <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> 方法删除特定索引处的组。  
  
 不能多次向集合添加 <xref:System.Windows.Forms.ListViewGroup>。 若要在集合中重新定位组，必须先将其从集合中删除，然后再插入到所需的位置。 使用 <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> 方法来确定特定组是否已存在于集合中。 若要检索集合中组的索引，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> 方法。 您可以使用 <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> 索引器获取或设置特定索引处的组。  
  
 使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法将多个组添加到集合中。 可以将多个组添加为组的数组，或添加为通过其他 <xref:System.Windows.Forms.ListView> 控件的 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 属性检索的 <xref:System.Windows.Forms.ListViewGroupCollection>。 使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法可从集合中删除所有组。  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>、<xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>和 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法从集合中删除组，但不会从 <xref:System.Windows.Forms.ListView> 控件中删除任何项。 如果 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 集合中没有组，则会禁用分组功能并正常显示控件中的所有项。  
  
 当您希望提供多种方式对 <xref:System.Windows.Forms.ListView> 控件中的项进行分组时，<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 和 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法非常有用。 为此，请创建多个组数组。 若要更改分组，请首先使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法从集合中移除所有组，然后使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法添加要显示的下一组组。  
  
 使用 <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> 方法可从指定索引处开始，将集合中的组复制到兼容的数组。 例如，当你想要使用 <xref:System.Array.Sort%2A?displayProperty=nameWithType> 方法对集合中的组进行排序时，这会很有用。 为此，请将组复制到一个兼容的数组中，然后对该数组进行排序。 接下来，使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法从集合中移除所有组，然后使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法将已排序的数组添加回集合。  
  
 使用 <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> 属性来确定集合中有多少个组。 若要循环访问集合，请使用从 <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> 方法返回的 <xref:System.Collections.IEnumerator>。  
  
> [!NOTE]
>  仅当应用程序调用 <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> 方法时，才可以在 Windows XP 和 Windows Server 2003 家族上使用分组功能。 在早期的操作系统上，将忽略任何与组相关的代码，且不会显示这些组。 因此，依赖于分组功能的任何代码可能无法正常工作。 您可能想要包括一个确定分组功能是否可用的测试，并在其不可用时提供其他功能。 例如，当在不支持按组进行排序的操作系统上运行时，可能需要提供备用排序。  
>   
>  插入标记功能由提供操作系统主题功能的相同库提供。 若要检查此库的可用性，请调用 <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> 方法重载，并传入 <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> 值。  
  
   
  
## Examples  
 下面的示例演示如何使用 <xref:System.Windows.Forms.ListView> 分组功能按详细信息视图中的子项值组织项。 这种形式的分组类似于 Windows 资源管理器中使用的分组。 在此示例中，将动态创建组。 对于每个子项列，将为每个唯一子项值创建一个组。 对于 "父项" 列，将为每个唯一的初始字母创建一个组。 单击列标题可将项排序到为该列创建的组中。 再次单击同一个列标题会反转组的顺序。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将 <see cref="T:System.Windows.Forms.ListViewGroup" /> 添加到集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.Add group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">要添加到集合的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>将指定的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 添加到集合中。</summary>
        <returns>该组在集合中的索引；或者，如果集合中已存在该组，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可将现有 <xref:System.Windows.Forms.ListViewGroup> 添加到集合中。 不能多次向集合添加 <xref:System.Windows.Forms.ListViewGroup>。 当使用集合中已有的 <xref:System.Windows.Forms.ListViewGroup> 调用 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 方法时，添加将失败，并返回-1。  
  
 若要向集合中添加多个组，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="group" /> 至少包含一个属于 <see cref="T:System.Windows.Forms.ListViewItem" /> 控件的 <see cref="T:System.Windows.Forms.ListView" />，而不是拥有此 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 的控件。</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberSignature Language="F#" Value="member this.Add : string * string -&gt; System.Windows.Forms.ListViewGroup" Usage="listViewGroupCollection.Add (key, headerText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">新组的 <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> 属性的初始值。</param>
        <param name="headerText">新组的 <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> 属性的初始值。</param>
        <summary>将新的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 添加到集合中，并使用指定的值初始化 <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> 和 <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> 属性。</summary>
        <returns>新的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将多个组添加到集合。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroup[] -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">一个 <see cref="T:System.Windows.Forms.ListViewGroup" /> 类型的数组，指定要添加到集合中的组。</param>
        <summary>向集合中添加组的数组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此版本的 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法将组数组添加到组集合。 当你创建多个 <xref:System.Windows.Forms.ListViewGroup> 对象并希望使用单个方法调用将它们添加到集合时，此方法非常有用。 若要向集合中添加单个组，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 方法。  
  
 当你希望提供多种方法对 <xref:System.Windows.Forms.ListView> 控件中的项进行分组时，此方法也非常有用。 为此，请创建多个组数组。 若要更改分组，请首先使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法从集合中移除所有组，然后使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法添加不同的组数组。  
  
 与 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 方法不同，<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法没有返回值可用于确定要添加的组是否已存在于集合中。 如果需要此信息，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> 方法，然后再使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法。  
  
   
  
## Examples  
 下面的示例演示如何在应用程序中使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法，该方法按详细信息视图中的子项值组织 <xref:System.Windows.Forms.ListView> 项。 这种形式的分组类似于 Windows 资源管理器中使用的分组。 在此示例中，将动态创建组。 对于每个子项列，将为每个唯一子项值创建一个组。 对于 "父项" 列，将为每个唯一的初始字母创建一个组。 为每个列创建的组与子项文本或首字母一起存储在哈希表中。 单击列标题时，将清除该 <xref:System.Windows.Forms.ListViewGroupCollection>。 然后，将检索对应于单击的列的哈希表，并将每个项分配给相应的组。 最后，将哈希表中的组已排序数组添加到 <xref:System.Windows.Forms.ListViewGroupCollection>中。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.ListViewGroupCollection> 概述参考主题。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" /> 至少包含一个组，该组至少有一个 <see cref="T:System.Windows.Forms.ListViewItem" /> 属于 <see cref="T:System.Windows.Forms.ListView" /> 控件，而该控件不是拥有此 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 的控件。</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberSignature Language="F#" Value="member this.AddRange : System.Windows.Forms.ListViewGroupCollection -&gt; unit" Usage="listViewGroupCollection.AddRange groups" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups"><see cref="T:System.Windows.Forms.ListViewGroupCollection" />，包含要添加到集合的组。</param>
        <summary>向集合中添加现有 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 中的组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此版本的 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法可添加通过不同 <xref:System.Windows.Forms.ListView> 控件的 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 属性检索的 <xref:System.Windows.Forms.ListViewGroupCollection> 的元素。  
  
 与 <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 方法不同，<xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法没有返回值可用于确定要添加的组是否已存在于集合中。 如果需要此信息，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> 方法，然后再使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="groups" /> 至少包含一个组，该组至少有一个 <see cref="T:System.Windows.Forms.ListViewItem" /> 属于 <see cref="T:System.Windows.Forms.ListView" /> 控件，而该控件不是拥有此 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="listViewGroupCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从集合中移除所有组。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可从集合中删除所有组。 请注意，从 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 集合中删除组并不会删除 <xref:System.Windows.Forms.ListView> 控件中的项。  
  
 此方法对于禁用分组功能很有用。 如果 <xref:System.Windows.Forms.ListView> 控件中没有组，则项会正常显示。 若要从集合中删除单个组，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> 或 <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> 方法。  
  
 当你希望提供多种方法对项进行分组时，此方法也非常有用。 若要更改分组，请首先使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法从集合中移除所有组，然后使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法添加不同的组数组。  
  
   
  
## Examples  
 下面的示例演示如何在应用程序中使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法，该方法按详细信息视图中的子项值组织 <xref:System.Windows.Forms.ListView> 项。 这种形式的分组类似于 Windows 资源管理器中使用的分组。 在此示例中，将动态创建组。 对于每个子项列，将为每个唯一子项值创建一个组。 对于 "父项" 列，将为每个唯一的初始字母创建一个组。 为每个列创建的组与子项文本或首字母一起存储在哈希表中。 单击列标题时，将清除该 <xref:System.Windows.Forms.ListViewGroupCollection>。 然后，将检索对应于单击的列的哈希表，并将每个项分配给相应的组。 最后，将哈希表中的组已排序数组添加到 <xref:System.Windows.Forms.ListViewGroupCollection>中。  
  
 有关完整示例，请参阅 <xref:System.Windows.Forms.ListViewGroupCollection> 概述参考主题。  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.ListViewGroup -&gt; bool" Usage="listViewGroupCollection.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">要在集合中查找的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>确定指定的组是否位于集合内。</summary>
        <returns>如果该组位于集合中，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 不能多次向集合添加 <xref:System.Windows.Forms.ListViewGroup>。 不过，尝试添加其他副本不会引发异常。 相反，添加将失败。 在这种情况下，<xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> 方法将返回值-1。 但 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 和 <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> 方法没有返回值。 使用其中一种方法添加组时，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> 方法来确定集合中是否已存在特定 <xref:System.Windows.Forms.ListViewGroup>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="listViewGroupCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">将组复制到其中的 <see cref="T:System.Array" />。</param>
        <param name="index">在将组复制到的数组中，将组复制到的第一个索引。</param>
        <summary>将集合中的组复制到一个兼容的一维 <see cref="T:System.Array" /> 中（从目标数组的指定索引处开始）。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> 方法将集合（包括其包含的项引用）中的组复制到一个兼容的数组，从指定的索引处开始。 例如，当你想要使用 <xref:System.Array.Sort%2A?displayProperty=nameWithType> 方法对集合中的组进行排序时，这会很有用。 为此，请将组复制到一个兼容的数组中，然后对该数组进行排序。 接下来，使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法从集合中移除所有组，然后使用 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> 方法将已排序的数组添加回集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取集合中的组数。</summary>
        <value>集合中的组数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此属性用于确定集合中的组数。 当需要遍历集合并对每个组执行相同操作时，这非常有用。 你还可以使用 <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> 方法返回的 <xref:System.Collections.IEnumerator> 来循环访问集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="listViewGroupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回用于循环访问集合的枚举数。</summary>
        <returns>一个表示集合的 <see cref="T:System.Collections.IEnumerator" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当需要循环访问集合以对每个组执行相同操作时，此方法非常有用。 你还可以使用 <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> 属性来确定循环的数目，对每个组循环一次集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Forms.ListViewGroup -&gt; int" Usage="listViewGroupCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">要在集合中查找的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>返回集合中指定 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的索引。</summary>
        <returns>该组在集合内的索引（从零开始）；如果该组不在集合中，则为 -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法确定集合中组的索引。 例如，当你使用 <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> 方法返回的 <xref:System.Collections.IEnumerator> 在循环访问集合时确定每个组的索引很有用。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Insert (index, group)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">集合中要插入该组的索引位置。</param>
        <param name="group">要插入集合中的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>将指定的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 插入集合中的指定索引处。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此方法可以在集合中的特定索引处插入现有 <xref:System.Windows.Forms.ListViewGroup>。  
  
 不能多次向集合添加 <xref:System.Windows.Forms.ListViewGroup>。 当使用集合中已有的组调用 <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> 方法时，插入操作将失败。 在插入前使用 <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> 方法来确定特定组是否已存在于集合中。 若要在集合中重新定位组，必须先将其删除，然后将其插入到所需的索引处。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置集合中的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要获取或设置的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的集合中的索引。</param>
        <summary>获取或设置集合中指定索引处的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <value>集合中指定索引处的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用此属性可检索集合中指定索引处的组。 如果具有对组对象的引用并需要索引，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> 方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 小于 0，或者大于或等于 <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Windows.Forms.ListViewGroup with get, set" Usage="System.Windows.Forms.ListViewGroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">要获取或设置的组的名称。</param>
        <summary>获取或设置具有指定 <see cref="T:System.Windows.Forms.ListViewGroup" /> 属性值的 <see cref="P:System.Windows.Forms.ListViewGroup.Name" />。</summary>
        <value>具有指定名称的 <see cref="T:System.Windows.Forms.ListViewGroup" />；如果不存在这样的 <see langword="null" />，则为 <see cref="T:System.Windows.Forms.ListViewGroup" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Forms.ListViewGroup -&gt; unit" Usage="listViewGroupCollection.Remove group" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">要从该集合中移除的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>从集合中删除指定的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果具有对组的引用，请使用此方法从集合中删除组。 请注意，从 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 集合中删除组并不会删除 <xref:System.Windows.Forms.ListView> 控件中的项。  
  
 若要删除特定索引中的组，请改用 <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> 方法。 若要从集合中移除所有组，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="listViewGroupCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要移除的 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的集合中的索引。</param>
        <summary>移除集合中指定索引位置的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当集合中有组的索引时，使用此方法从集合中删除组。 请注意，从 <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> 集合中删除组并不会删除 <xref:System.Windows.Forms.ListView> 控件中的项。  
  
 若要使用对该对象的引用删除组，请改用 <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> 方法。 若要从集合中移除所有组，请使用 <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> 方法。 从集合中移除项时，集合中的后续项的索引会发生更改。 删除的项的所有信息都将被删除。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示对集合的访问是否为同步的（线程安全）。</summary>
        <value>所有情况下均为 <see langword="true" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用于同步对集合的访问的对象。</summary>
        <value>用于同步集合的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="listViewGroupCollection.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要添加到 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</param>
        <summary>将新 <see cref="T:System.Windows.Forms.ListViewGroup" /> 添加到 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 中。</summary>
        <returns>已添加了 <see cref="T:System.Windows.Forms.ListViewGroup" /> 的索引。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> 不是 <see cref="T:System.Windows.Forms.ListViewGroup" />。  
  
-或- 
 <paramref name="value" /> 至少包含一个属于 <see cref="T:System.Windows.Forms.ListViewItem" /> 控件的 <see cref="T:System.Windows.Forms.ListView" />，而不是拥有此 <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> 的控件。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="listViewGroupCollection.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">一个对象，表示要在集合中查找的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>确定指定的值是否位于集合内。</summary>
        <returns>如果 <see langword="true" /> 是包含在该集合中的 <paramref name="value" />，则为 <see cref="T:System.Windows.Forms.ListViewGroup" />；否则为 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="listViewGroupCollection.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要在 <see cref="T:System.Windows.Forms.ListViewGroup" /> 中查找的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</param>
        <summary>返回指定的值在集合中的索引。</summary>
        <returns>如果 <paramref name="value" /> 在集合中，则为其从零开始的索引；否则为 -1。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="listViewGroupCollection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">将 <see cref="T:System.Windows.Forms.ListViewGroup" /> 添加到的集合中的位置。</param>
        <param name="value">要添加到集合的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</param>
        <summary>将 <see cref="T:System.Windows.Forms.ListViewGroup" /> 插入 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `value` 不是 <xref:System.Windows.Forms.ListViewGroup>，则不会将其添加到集合中。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合是否具有固定大小。</summary>
        <value>所有情况下均为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示集合是否是只读的。</summary>
        <value>所有情况下均为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要获取或设置的元素的从零开始的索引。</param>
        <summary>获取或设置集合中指定索引处的 <see cref="T:System.Windows.Forms.ListViewGroup" />。</summary>
        <value>一个 <see cref="T:System.Windows.Forms.ListViewGroup" />，表示位于集合内指定索引处的项。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="listViewGroupCollection.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">要从 <see cref="T:System.Windows.Forms.ListViewGroup" /> 中删除的 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</param>
        <summary>从 <see cref="T:System.Windows.Forms.ListViewGroup" /> 中移除 <see cref="T:System.Windows.Forms.ListViewGroupCollection" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
