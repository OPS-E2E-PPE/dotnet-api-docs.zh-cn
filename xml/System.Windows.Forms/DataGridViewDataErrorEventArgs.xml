<Type Name="DataGridViewDataErrorEventArgs" FullName="System.Windows.Forms.DataGridViewDataErrorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4958097b16b3e0a048711a80f2b968854614221e" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82368732" /></Metadata><TypeSignature Language="C#" Value="public class DataGridViewDataErrorEventArgs : System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataGridViewDataErrorEventArgs extends System.Windows.Forms.DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class DataGridViewDataErrorEventArgs&#xA;Inherits DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataGridViewDataErrorEventArgs : System::Windows::Forms::DataGridViewCellCancelEventArgs" />
  <TypeSignature Language="F#" Value="type DataGridViewDataErrorEventArgs = class&#xA;    inherit DataGridViewCellCancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataGridViewCellCancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通过处理 <xref:System.Windows.Forms.DataGridView.DataError> 事件，你可以处理由控件外部的代码引发的异常（例如，由外部数据源）。 使用 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> 属性可确定发生异常时 <xref:System.Windows.Forms.DataGridView> 的状态。 使用 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> 属性检索异常数据。 如果要通过其他事件处理程序来处理异常，请将 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> 属性设置为 `true`。  
  
 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> 和 <xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A> 属性通常指示发生数据错误的单元格。 但是，在外部数据源中出现错误时，数据源可能不提供发生错误的列。 在这种情况下，<xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A> 属性通常指示在发生错误时当前单元的列。  
  
   
  
## Examples  
 下面的代码示例演示如何响应 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs> 类所提供的信息。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataGridView" />
    <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataGridViewDataErrorEventArgs (Exception exception, int columnIndex, int rowIndex, System.Windows.Forms.DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception, int32 columnIndex, int32 rowIndex, valuetype System.Windows.Forms.DataGridViewDataErrorContexts context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataGridViewDataErrorEventArgs.#ctor(System.Exception,System.Int32,System.Int32,System.Windows.Forms.DataGridViewDataErrorContexts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As Exception, columnIndex As Integer, rowIndex As Integer, context As DataGridViewDataErrorContexts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataGridViewDataErrorEventArgs(Exception ^ exception, int columnIndex, int rowIndex, System::Windows::Forms::DataGridViewDataErrorContexts context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataGridViewDataErrorEventArgs : Exception * int * int * System.Windows.Forms.DataGridViewDataErrorContexts -&gt; System.Windows.Forms.DataGridViewDataErrorEventArgs" Usage="new System.Windows.Forms.DataGridViewDataErrorEventArgs (exception, columnIndex, rowIndex, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="rowIndex" Type="System.Int32" />
        <Parameter Name="context" Type="System.Windows.Forms.DataGridViewDataErrorContexts" />
      </Parameters>
      <Docs>
        <param name="exception">发生的异常。</param>
        <param name="columnIndex">引发 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 的单元格的列索引。</param>
        <param name="rowIndex">引发 <see cref="E:System.Windows.Forms.DataGridView.DataError" /> 的单元格的行索引。</param>
        <param name="context"><see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的按位组合，指示错误发生的上下文。</param>
        <summary>初始化 <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataGridViewDataErrorContexts Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataGridViewDataErrorContexts Context" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As DataGridViewDataErrorContexts" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataGridViewDataErrorContexts Context { System::Windows::Forms::DataGridViewDataErrorContexts get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Windows.Forms.DataGridViewDataErrorContexts" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataGridViewDataErrorContexts</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取有关错误发生时 <see cref="T:System.Windows.Forms.DataGridView" /> 的状态的详细信息。</summary>
        <value><see cref="T:System.Windows.Forms.DataGridViewDataErrorContexts" /> 值的按位组合，指定错误发生的上下文。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在发生数据错误时，可以使用按位 `OR` 运算符将 <xref:System.Windows.Forms.DataGridViewDataErrorContexts> 枚举的成员组合起来，以表示数据绑定 <xref:System.Windows.Forms.DataGridView> 的状态。 例如，如果用户输入的单元格值无效（例如，在需要日期的单元格中输入名称），然后选择不同的单元格，则 <xref:System.Windows.Forms.DataGridView> 将尝试提交无效的单元值。 提交失败时，<xref:System.Windows.Forms.DataGridView> 将引发一个 <xref:System.Windows.Forms.DataGridView.DataError> 事件，其 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Context%2A> 属性的值将为 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit> 和 <xref:System.Windows.Forms.DataGridViewDataErrorContexts.CurrentCellChange>。  
  
   
  
## Examples  
 下面的代码示例演示如何调查错误上下文。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示错误的异常。</summary>
        <value>表示错误的 <see cref="T:System.Exception" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要通过多个 <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>处理异常，请通过将 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> 属性设置为 `true`，在处理程序末尾再次引发异常。  
  
   
  
## Examples  
 下面的代码示例演示如何检查 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> 属性。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="public bool ThrowException { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThrowException" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberSignature Language="VB.NET" Value="Public Property ThrowException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThrowException { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThrowException : bool with get, set" Usage="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置值，该值指示是否在 <see cref="T:System.Windows.Forms.DataGridViewDataErrorEventHandler" /> 委托处理完异常后引发该异常。</summary>
        <value>如果应引发异常，则为 <see langword="true" />，否则为 <see langword="false" />。 默认为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler> 处理了 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception%2A> 属性所表示的异常，则将此属性设置为 `false`，并且你不希望将异常传播到可能处理 <xref:System.Windows.Forms.DataGridView.DataError> 事件的另一个 <xref:System.Windows.Forms.DataGridViewDataErrorEventHandler>。  
  
 出于调试目的，传播异常并检查堆栈跟踪以获取有关错误上下文的信息，这可能很有用。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException%2A> 属性指示不应引发异常。 此示例是 <xref:System.Windows.Forms.DataGridViewComboBoxColumn> 类概述主题中提供的一个更大示例的一部分。  
  
 [!code-cpp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CPP/employees.cpp#50)]
 [!code-csharp[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/CS/employees.cs#50)]
 [!code-vb[System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.DataGridViewColumn_AllColumns_Bound_Employees/VB/employees.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">将此属性设置为 <see langword="true" /> 时，<see cref="P:System.Windows.Forms.DataGridViewDataErrorEventArgs.Exception" /> 属性值为 <see langword="null" />。</exception>
        <altmember cref="T:System.Windows.Forms.DataGridView" />
        <altmember cref="E:System.Windows.Forms.DataGridView.DataError" />
      </Docs>
    </Member>
  </Members>
</Type>
