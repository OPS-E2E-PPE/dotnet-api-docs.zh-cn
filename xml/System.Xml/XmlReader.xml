<Type Name="XmlReader" FullName="System.Xml.XmlReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d113303bccae4249b70e6ac0b347ed5c2845a678" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78829366" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlReader : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlReader extends System.Object implements class System.IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlReader&#xA;Implements IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReader abstract : IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type XmlReader = class&#xA;    interface IDisposable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class XmlReader" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlReader extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlReader" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlReader abstract" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type XmlReader = class" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Xml.ReaderWriter" FromVersion="4.0.0.0" To="System.Xml" ToVersion="4.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netcore-3.1">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ec77b-101">表示提供对 XML 数据进行快速、非缓存、只进访问的读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-101">Represents a reader that provides fast, noncached, forward-only access to XML data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-102"><xref:System.Xml.XmlReader> 提供对文档或流中的 XML 数据的只进只读访问。</span><span class="sxs-lookup"><span data-stu-id="ec77b-102"><xref:System.Xml.XmlReader> provides forward-only, read-only access to XML data in a document or stream.</span></span> <span data-ttu-id="ec77b-103">此类符合 W3C[可扩展标记语言（xml）1.0 （第四版）](https://www.w3.org/TR/2006/REC-xml-20060816/)和[XML 1.0 （第三版）建议中的命名空间](https://www.w3.org/TR/REC-xml-names/)。</span><span class="sxs-lookup"><span data-stu-id="ec77b-103">This class conforms to the W3C [Extensible Markup Language (XML) 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) and the [Namespaces in XML 1.0 (third edition)](https://www.w3.org/TR/REC-xml-names/) recommendations.</span></span>  
  
 <span data-ttu-id="ec77b-104">利用 <xref:System.Xml.XmlReader> 方法，你可以移动 XML 数据并读取节点的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-104"><xref:System.Xml.XmlReader> methods let you move through XML data and read the contents of a node.</span></span> <span data-ttu-id="ec77b-105">类的属性反映当前节点（即读取器的位置）的值。<xref:System.Xml.XmlReader.ReadState%2A> 属性值指示 XML 读取器的当前状态。</span><span class="sxs-lookup"><span data-stu-id="ec77b-105">The properties of the class reflect the value of the current node, which is where the reader is positioned.The <xref:System.Xml.XmlReader.ReadState%2A> property value indicates the current state of the XML reader.</span></span> <span data-ttu-id="ec77b-106">例如，属性设置为由 <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> 方法 <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>，并由 <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> 方法 <xref:System.Xml.ReadState.Closed?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-106">For example, the property is set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method and <xref:System.Xml.ReadState.Closed?displayProperty=nameWithType> by the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ec77b-107"><xref:System.Xml.XmlReader> 还针对 DTD 或架构提供数据一致性检查和验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-107"><xref:System.Xml.XmlReader> also provides data conformance checks and validation against a DTD or schema.</span></span>  
  
 <span data-ttu-id="ec77b-108"><xref:System.Xml.XmlReader> 使用请求模型来检索数据。</span><span class="sxs-lookup"><span data-stu-id="ec77b-108"><xref:System.Xml.XmlReader> uses a pull model to retrieve data.</span></span> <span data-ttu-id="ec77b-109">此模型：</span><span class="sxs-lookup"><span data-stu-id="ec77b-109">This model:</span></span>  
  
-   <span data-ttu-id="ec77b-110">通过自然的自顶向下过程优化简化了状态管理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-110">Simplifies state management by a natural, top-down procedural refinement.</span></span>  
  
-   <span data-ttu-id="ec77b-111">支持多个输入流和分层。</span><span class="sxs-lookup"><span data-stu-id="ec77b-111">Supports multiple input streams and layering.</span></span>  
  
-   <span data-ttu-id="ec77b-112">使客户端能够为分析器提供直接写入字符串的缓冲区，从而避免了额外的字符串复制。</span><span class="sxs-lookup"><span data-stu-id="ec77b-112">Enables the client to give the parser a buffer into which the string is directly written, and thus avoids the necessity of an extra string copy.</span></span>  
  
-   <span data-ttu-id="ec77b-113">支持选择性处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-113">Supports selective processing.</span></span> <span data-ttu-id="ec77b-114">客户端可以跳过项，并处理应用程序感兴趣的项。</span><span class="sxs-lookup"><span data-stu-id="ec77b-114">The client can skip items and process those that are of interest to the application.</span></span> <span data-ttu-id="ec77b-115">你还可以提前设置属性以管理 XML 流的处理方式（例如，规范化）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-115">You can also set properties in advance to manage how the XML stream is processed (for example, normalization).</span></span>  
  
 <span data-ttu-id="ec77b-116">本节内容：</span><span class="sxs-lookup"><span data-stu-id="ec77b-116">In this section:</span></span>  
  
 <span data-ttu-id="ec77b-117">[创建 XML 读取器](#xmlreader_create) </span><span class="sxs-lookup"><span data-stu-id="ec77b-117">[Creating an XML reader](#xmlreader_create) </span></span>  
 <span data-ttu-id="ec77b-118">[验证 XML 数据](#xmlreader_validate) </span><span class="sxs-lookup"><span data-stu-id="ec77b-118">[Validating XML data](#xmlreader_validate) </span></span>  
 <span data-ttu-id="ec77b-119">[数据一致性](#xmlreader_data) </span><span class="sxs-lookup"><span data-stu-id="ec77b-119">[Data conformance](#xmlreader_data) </span></span>  
 <span data-ttu-id="ec77b-120">[在节点之间导航](#xmlreader_nodes) </span><span class="sxs-lookup"><span data-stu-id="ec77b-120">[Navigating through nodes](#xmlreader_nodes) </span></span>  
 <span data-ttu-id="ec77b-121">[读取 XML 元素](#xmlreader_elements) </span><span class="sxs-lookup"><span data-stu-id="ec77b-121">[Reading XML elements](#xmlreader_elements) </span></span>  
 <span data-ttu-id="ec77b-122">[读取 XML 特性](#xmlreader_attributes) </span><span class="sxs-lookup"><span data-stu-id="ec77b-122">[Reading XML attributes](#xmlreader_attributes) </span></span>  
 <span data-ttu-id="ec77b-123">[读取 XML 内容](#xmlreader_content) </span><span class="sxs-lookup"><span data-stu-id="ec77b-123">[Reading XML content](#xmlreader_content) </span></span>  
 <span data-ttu-id="ec77b-124">[转换为 CLR 类型](#xmlreader_clr) </span><span class="sxs-lookup"><span data-stu-id="ec77b-124">[Converting to CLR types](#xmlreader_clr) </span></span>  
 <span data-ttu-id="ec77b-125">[异步编程](#xmlreader_async) </span><span class="sxs-lookup"><span data-stu-id="ec77b-125">[Asynchronous programming](#xmlreader_async) </span></span>  
 [<span data-ttu-id="ec77b-126">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="ec77b-126">Security considerations</span></span>](#xmlreader_security)  
  
<a name="xmlreader_create"></a>   
## <a name="creating-an-xml-reader"></a><span data-ttu-id="ec77b-127">创建 XML 读取器</span><span class="sxs-lookup"><span data-stu-id="ec77b-127">Creating an XML reader</span></span>  
 <span data-ttu-id="ec77b-128">使用 <xref:System.Xml.XmlReader.Create%2A> 方法创建 <xref:System.Xml.XmlReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-128">Use the <xref:System.Xml.XmlReader.Create%2A> method to create an <xref:System.Xml.XmlReader> instance.</span></span>  
  
 <span data-ttu-id="ec77b-129">尽管 .NET Framework 提供 <xref:System.Xml.XmlReader> 类的具体实现，如 <xref:System.Xml.XmlTextReader>、<xref:System.Xml.XmlNodeReader>和 <xref:System.Xml.XmlValidatingReader> 类，但建议仅在以下情况下使用专用类：</span><span class="sxs-lookup"><span data-stu-id="ec77b-129">Although the .NET Framework provides concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you use the specialized classes only in these scenarios:</span></span>  
  
-   <span data-ttu-id="ec77b-130">如果要从 <xref:System.Xml.XmlNode> 对象读取 XML DOM 子树，请使用 <xref:System.Xml.XmlNodeReader> 类。</span><span class="sxs-lookup"><span data-stu-id="ec77b-130">When you want to read an XML DOM subtree from an <xref:System.Xml.XmlNode> object, use the <xref:System.Xml.XmlNodeReader> class.</span></span> <span data-ttu-id="ec77b-131">（但是，此类不支持 DTD 或架构验证。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-131">(However, this class doesn't support DTD or schema validation.)</span></span>  
  
-   <span data-ttu-id="ec77b-132">如果必须按请求展开实体，则不希望文本内容已规范化，或者不希望返回默认属性，请使用 <xref:System.Xml.XmlTextReader> 类。</span><span class="sxs-lookup"><span data-stu-id="ec77b-132">If you must expand entities on request, you don't want your text content normalized, or you don't want default attributes returned, use the <xref:System.Xml.XmlTextReader> class.</span></span>  
  
 <span data-ttu-id="ec77b-133">若要指定要在 XML 读取器上启用的功能集，请将 <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> 对象传递到 <xref:System.Xml.XmlReader.Create%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-133">To specify the set of features you want to enable on the XML reader, pass an <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="ec77b-134">您可以使用单个 <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> 对象创建具有相同功能的多个读取器，或修改 <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> 对象以使用一组不同的功能创建新的读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-134">You can use a single <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create multiple readers with the same functionality, or modify the <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object to create a new reader with a different set of features.</span></span> <span data-ttu-id="ec77b-135">你还可以轻松地将功能添加到现有读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-135">You can also easily add features to an existing reader.</span></span>  
  
 <span data-ttu-id="ec77b-136">如果不使用 <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> 对象，则使用默认设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-136">If you don't use a <xref:System.Xml.XmlReaderSettings?displayProperty=nameWithType> object, default settings are used.</span></span> <span data-ttu-id="ec77b-137">请参阅 <xref:System.Xml.XmlReader.Create%2A> 参考页获取详细信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-137">See the <xref:System.Xml.XmlReader.Create%2A> reference page for details.</span></span>  
  
 <span data-ttu-id="ec77b-138"><xref:System.Xml.XmlReader> 引发 XML 分析错误的 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-138"><xref:System.Xml.XmlReader> throws an <xref:System.Xml.XmlException> on XML parse errors.</span></span> <span data-ttu-id="ec77b-139">引发异常后，读取器的状态不可预知。</span><span class="sxs-lookup"><span data-stu-id="ec77b-139">After an exception is thrown, the state of the reader is not predictable.</span></span> <span data-ttu-id="ec77b-140">例如，报告的节点类型可能不同于当前节点的实际节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-140">For example, the reported node type may be different from the actual node type of the current node.</span></span> <span data-ttu-id="ec77b-141">使用 <xref:System.Xml.XmlReader.ReadState%2A> 属性检查读取器是否处于错误状态。</span><span class="sxs-lookup"><span data-stu-id="ec77b-141">Use the <xref:System.Xml.XmlReader.ReadState%2A> property to check whether the reader is in error state.</span></span>  
  
<a name="xmlreader_validate"></a>   
## <a name="validating-xml-data"></a><span data-ttu-id="ec77b-142">验证 XML 数据</span><span class="sxs-lookup"><span data-stu-id="ec77b-142">Validating XML data</span></span>  
 <span data-ttu-id="ec77b-143">若要定义 XML 文档及其元素关系、数据类型和内容约束的结构，请使用文档类型定义（DTD）或 XML 架构定义语言（XSD）架构。</span><span class="sxs-lookup"><span data-stu-id="ec77b-143">To define the structure of an XML document and its element relationships, data types, and content constraints, you use a document type definition (DTD) or XML Schema definition language (XSD) schema.</span></span> <span data-ttu-id="ec77b-144">如果 XML 文档满足[W3C XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/)定义的所有语法要求，则将其视为格式正确。</span><span class="sxs-lookup"><span data-stu-id="ec77b-144">An XML document is considered to be well formed if it meets all the syntactical requirements defined by the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="ec77b-145">如果其格式正确并且符合其 DTD 或架构定义的约束，则将其视为有效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-145">It's considered valid if it's well formed and also conforms to the constraints defined by its DTD or schema.</span></span> <span data-ttu-id="ec77b-146">（请参阅[W3C Xml 架构第1部分：结构](https://www.w3.org/TR/xmlschema-1/)和[W3c xml 架构第2部分：数据类型](https://www.w3.org/TR/xmlschema-2/)建议。）因此，虽然所有有效的 XML 文档的格式正确，但并不是所有格式正确的 XML 文档都是有效的。</span><span class="sxs-lookup"><span data-stu-id="ec77b-146">(See the [W3C XML Schema Part 1: Structures](https://www.w3.org/TR/xmlschema-1/) and the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/) recommendations.) Therefore, although all valid XML documents are well formed, not all well-formed XML documents are valid.</span></span>  
  
 <span data-ttu-id="ec77b-147">可以针对 DTD、内联 XSD 架构或存储在 <xref:System.Xml.Schema.XmlSchemaSet> 对象（缓存）中的 XSD 架构验证数据;<xref:System.Xml.XmlReader.Create%2A> 参考页上介绍了这些方案。</span><span class="sxs-lookup"><span data-stu-id="ec77b-147">You can validate the data against a DTD, an inline XSD Schema, or an XSD Schema stored in an <xref:System.Xml.Schema.XmlSchemaSet> object (a cache); these scenarios are described on the <xref:System.Xml.XmlReader.Create%2A> reference page.</span></span> <span data-ttu-id="ec77b-148"><xref:System.Xml.XmlReader> 不支持 XML 数据缩减（XDR）架构验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-148"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
 <span data-ttu-id="ec77b-149">对 <xref:System.Xml.XmlReaderSettings> 类使用以下设置来指定 <xref:System.Xml.XmlReader> 实例支持的验证类型（如果有）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-149">You use the following settings on the <xref:System.Xml.XmlReaderSettings> class to specify what type of validation, if any, the <xref:System.Xml.XmlReader> instance supports.</span></span>  
  
|<span data-ttu-id="ec77b-150">使用此 <xref:System.Xml.XmlReaderSettings> 成员</span><span class="sxs-lookup"><span data-stu-id="ec77b-150">Use this <xref:System.Xml.XmlReaderSettings> member</span></span>|<span data-ttu-id="ec77b-151">若要指定</span><span class="sxs-lookup"><span data-stu-id="ec77b-151">To specify</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|----------------|  
|<span data-ttu-id="ec77b-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-152"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> property</span></span>|<span data-ttu-id="ec77b-153">是否允许 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-153">Whether to allow DTD processing.</span></span> <span data-ttu-id="ec77b-154">默认设置为不允许 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-154">The default is to disallow DTD processing.</span></span>|  
|<span data-ttu-id="ec77b-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-155"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> property</span></span>|<span data-ttu-id="ec77b-156">读取器是否应验证数据，以及要执行的验证类型（DTD 或架构）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-156">Whether the reader should validate data, and what type of validation to perform (DTD or schema).</span></span> <span data-ttu-id="ec77b-157">默认设置为无数据验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-157">The default is no data validation.</span></span>|  
|<span data-ttu-id="ec77b-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> 事件</span><span class="sxs-lookup"><span data-stu-id="ec77b-158"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> event</span></span>|<span data-ttu-id="ec77b-159">用于接收有关验证事件的信息的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="ec77b-159">An event handler for receiving information about validation events.</span></span> <span data-ttu-id="ec77b-160">如果未提供事件处理程序，在出现第一个验证错误时将引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-160">If an event handler is not provided, an <xref:System.Xml.XmlException> is thrown on the first validation error.</span></span>|  
|<span data-ttu-id="ec77b-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-161"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> property</span></span>|<span data-ttu-id="ec77b-162">通过 <xref:System.Xml.Schema.XmlSchemaValidationFlags> 枚举成员的其他验证选项：</span><span class="sxs-lookup"><span data-stu-id="ec77b-162">Additional validation options through the <xref:System.Xml.Schema.XmlSchemaValidationFlags> enumeration members:</span></span><br /><br /> <span data-ttu-id="ec77b-163">-   `AllowXmlAttributes`--允许实例文档中的 XML 特性（`xml:*`），即使在架构中未定义也是如此。</span><span class="sxs-lookup"><span data-stu-id="ec77b-163">-   `AllowXmlAttributes`-- Allow XML attributes (`xml:*`) in instance documents even when they're not defined in the schema.</span></span> <span data-ttu-id="ec77b-164">属性基于其数据类型进行验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-164">The attributes are validated based on their data type.</span></span> <span data-ttu-id="ec77b-165">有关在特定方案中使用的设置，请参阅 <xref:System.Xml.Schema.XmlSchemaValidationFlags> 参考页。</span><span class="sxs-lookup"><span data-stu-id="ec77b-165">See the <xref:System.Xml.Schema.XmlSchemaValidationFlags> reference page for  the setting to use in specific scenarios.</span></span> <span data-ttu-id="ec77b-166">（默认情况下禁用。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-166">(Disabled by default.)</span></span><br /><span data-ttu-id="ec77b-167">-   `ProcessIdentityConstraints`--在验证期间遇到的进程标识约束（`xs:ID`、`xs:IDREF`、`xs:key`、`xs:keyref`、`xs:unique`）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-167">-   `ProcessIdentityConstraints` --Process identity constraints (`xs:ID`, `xs:IDREF`, `xs:key`, `xs:keyref`, `xs:unique`) encountered during validation.</span></span> <span data-ttu-id="ec77b-168">（默认情况下启用。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-168">(Enabled by default.)</span></span><br /><span data-ttu-id="ec77b-169">-   `ProcessSchemaLocation` `xsi:schemaLocation` 或 `xsi:noNamespaceSchemaLocation` 特性指定的进程架构。</span><span class="sxs-lookup"><span data-stu-id="ec77b-169">-   `ProcessSchemaLocation` --Process schemas specified by the `xsi:schemaLocation` or `xsi:noNamespaceSchemaLocation` attribute.</span></span> <span data-ttu-id="ec77b-170">（默认情况下启用。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-170">(Enabled by default.)</span></span><br /><span data-ttu-id="ec77b-171">-   `ProcessInlineSchema`--在验证期间处理内联 XML 架构。</span><span class="sxs-lookup"><span data-stu-id="ec77b-171">-   `ProcessInlineSchema`-- Process inline XML Schemas during validation.</span></span> <span data-ttu-id="ec77b-172">（默认情况下禁用。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-172">(Disabled by default.)</span></span><br /><span data-ttu-id="ec77b-173">-   `ReportValidationWarnings`--如果出现验证警告，则报告事件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-173">-   `ReportValidationWarnings`--Report events if a validation warning occurs.</span></span> <span data-ttu-id="ec77b-174">如果没有验证特定元素或属性时所依据的 DTD 或 XML 架构，通常会发出警告。</span><span class="sxs-lookup"><span data-stu-id="ec77b-174">A warning is typically issued when there is no DTD or XML Schema to validate a particular element or attribute against.</span></span> <span data-ttu-id="ec77b-175"><xref:System.Xml.XmlReaderSettings.ValidationEventHandler> 用于通知。</span><span class="sxs-lookup"><span data-stu-id="ec77b-175">The <xref:System.Xml.XmlReaderSettings.ValidationEventHandler> is used for notification.</span></span> <span data-ttu-id="ec77b-176">（默认情况下禁用。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-176">(Disabled by default.)</span></span>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="ec77b-177">用于验证的 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-177">The <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span>|  
|<span data-ttu-id="ec77b-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-178"><xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property</span></span>|<span data-ttu-id="ec77b-179">用于解析和访问外部资源的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-179">The <xref:System.Xml.XmlResolver> for resolving and accessing external resources.</span></span> <span data-ttu-id="ec77b-180">这可能包括外部实体（例如 DTD 和架构）以及 XML 架构中包含的任何 `xs:include` 或 `xs:import` 元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-180">This can include external entities such as DTD and schemas, and any `xs:include` or `xs:import` elements contained in the XML Schema.</span></span> <span data-ttu-id="ec77b-181">如果未指定 <xref:System.Xml.XmlResolver>，则 <xref:System.Xml.XmlReader> 将使用没有用户凭据的默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-181">If you don't specify an <xref:System.Xml.XmlResolver>, the <xref:System.Xml.XmlReader> uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span>|  
  
<a name="xmlreader_data"></a>   
## <a name="data-conformance"></a><span data-ttu-id="ec77b-182">数据一致性</span><span class="sxs-lookup"><span data-stu-id="ec77b-182">Data conformance</span></span>  
 <span data-ttu-id="ec77b-183">默认情况下，<xref:System.Xml.XmlReader.Create%2A> 方法创建的 XML 读取器满足以下符合性要求：</span><span class="sxs-lookup"><span data-stu-id="ec77b-183">XML readers that are created by the <xref:System.Xml.XmlReader.Create%2A> method meet the following compliance requirements by default:</span></span>  
  
-   <span data-ttu-id="ec77b-184">新行和属性值根据 W3C [XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/)进行标准化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-184">New lines and attribute value are normalized according to the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span>  
  
-   <span data-ttu-id="ec77b-185">所有实体都将自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-185">All entities are automatically expanded.</span></span>  
  
-   <span data-ttu-id="ec77b-186">即使读者不进行验证，也会始终添加在文档类型定义中声明的默认属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-186">Default attributes declared in the document type definition are always added even when the reader doesn't validate.</span></span>  
  
-   <span data-ttu-id="ec77b-187">允许声明映射到正确的 XML 命名空间 URI 的 XML 前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-187">Declaration of XML prefix mapped to the correct XML namespace URI is allowed.</span></span>  
  
-   <span data-ttu-id="ec77b-188">单个 `NotationType` 属性声明中的表示法名称和 `NmTokens` 在单个 `Enumeration` 特性声明中是不同的。</span><span class="sxs-lookup"><span data-stu-id="ec77b-188">The notation names in a single `NotationType` attribute declaration and `NmTokens` in a single `Enumeration` attribute declaration are distinct.</span></span>  
  
 <span data-ttu-id="ec77b-189">使用这些 <xref:System.Xml.XmlReaderSettings> 属性来指定要启用的一致性检查类型：</span><span class="sxs-lookup"><span data-stu-id="ec77b-189">Use these <xref:System.Xml.XmlReaderSettings> properties to specify the type of conformance checks you want to enable:</span></span>  
  
|<span data-ttu-id="ec77b-190">使用此 <xref:System.Xml.XmlReaderSettings> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-190">Use this <xref:System.Xml.XmlReaderSettings> property</span></span>|<span data-ttu-id="ec77b-191">功能</span><span class="sxs-lookup"><span data-stu-id="ec77b-191">To</span></span>|<span data-ttu-id="ec77b-192">默认</span><span class="sxs-lookup"><span data-stu-id="ec77b-192">Default</span></span>|  
|-------------------------------------------------------------------------------------------------------------------------------------------------------------|--------|-------------|  
|<span data-ttu-id="ec77b-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-193"><xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> property</span></span>|<span data-ttu-id="ec77b-194">为以下项启用或禁用检查：</span><span class="sxs-lookup"><span data-stu-id="ec77b-194">Enable or disable checks for the following:</span></span><br /><br /> <span data-ttu-id="ec77b-195">-字符在合法 XML 字符范围内，由 W3C XML 1.0 建议的[2.2 字符](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets)部分定义。</span><span class="sxs-lookup"><span data-stu-id="ec77b-195">-   Characters are within the range of legal XML characters, as defined by the [2.2 Characters](https://www.w3.org/TR/2006/REC-xml-20060816/#charsets) section of the W3C XML 1.0 Recommendation.</span></span><br /><span data-ttu-id="ec77b-196">-所有 XML 名称都有效，如 W3C XML 1.0 建议的[2.3 通用语法构造](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name)部分所定义。</span><span class="sxs-lookup"><span data-stu-id="ec77b-196">-   All XML names are valid, as defined by the [2.3 Common Syntactic Constructs](https://www.w3.org/TR/2006/REC-xml-20060816/#NT-Name) section of the W3C XML 1.0 Recommendation.</span></span><br /><br /> <span data-ttu-id="ec77b-197">当此属性设置为 `true` （默认值）时，如果 XML 文件包含非法字符或无效的 XML 名称（例如，元素名称以数字开头），则会引发 <xref:System.Xml.XmlException> 异常。</span><span class="sxs-lookup"><span data-stu-id="ec77b-197">When this property is set to `true` (default), an <xref:System.Xml.XmlException> exception is thrown if the XML file contains illegal characters or invalid XML names (for example, an element name starts with a number).</span></span>|<span data-ttu-id="ec77b-198">启用了字符和名称检查。</span><span class="sxs-lookup"><span data-stu-id="ec77b-198">Character and name checking is enabled.</span></span><br /><br /> <span data-ttu-id="ec77b-199">将 <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> 设置为 `false` 会禁用对字符实体引用的字符检查。</span><span class="sxs-lookup"><span data-stu-id="ec77b-199">Setting <xref:System.Xml.XmlReaderSettings.CheckCharacters%2A> to `false` turns off character checking for character entity references.</span></span> <span data-ttu-id="ec77b-200">如果读取器正在处理文本数据，不管此设置如何，它都始终检查 XML 名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-200">If the reader is processing text data, it always checks that XML names are valid, regardless of this setting.</span></span> <span data-ttu-id="ec77b-201">**注意：** 存在 DTD 时，XML 1.0 建议要求文档级别的一致性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-201">**Note:**  The XML 1.0 recommendation requires document-level conformance when a DTD is present.</span></span> <span data-ttu-id="ec77b-202">因此，如果读取器配置为支持 <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>，但 XML 数据包含文档类型定义（DTD），则会引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-202">Therefore, if the reader is configured to support <xref:System.Xml.ConformanceLevel.Fragment?displayProperty=nameWithType>, but the XML data contains a document type definition (DTD), an <xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="ec77b-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-203"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> property</span></span>|<span data-ttu-id="ec77b-204">选择要强制执行的一致性级别：</span><span class="sxs-lookup"><span data-stu-id="ec77b-204">Choose the level of conformance to enforce:</span></span><br /><br /> <span data-ttu-id="ec77b-205">-   <xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-205">-   <xref:System.Xml.ConformanceLevel.Document>.</span></span> <span data-ttu-id="ec77b-206">符合[格式正确的 XML 1.0 文档](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed)的规则。</span><span class="sxs-lookup"><span data-stu-id="ec77b-206">Conforms to the rules for a [well-formed XML 1.0 document](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-well-formed).</span></span><br /><span data-ttu-id="ec77b-207">-   <xref:System.Xml.ConformanceLevel.Fragment>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-207">-   <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="ec77b-208">符合可以作为[外部分析的实体](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities)使用的格式正确的文档片段的规则。</span><span class="sxs-lookup"><span data-stu-id="ec77b-208">Conforms to the rules for a well-formed document fragment that can be consumed as an [external parsed entity](https://www.w3.org/TR/2006/REC-xml-20060816/#wf-entities).</span></span><br /><span data-ttu-id="ec77b-209">-   <xref:System.Xml.ConformanceLevel.Auto>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-209">-   <xref:System.Xml.ConformanceLevel.Auto>.</span></span> <span data-ttu-id="ec77b-210">符合读取器决定的级别。</span><span class="sxs-lookup"><span data-stu-id="ec77b-210">Conforms to the level decided by the reader.</span></span><br /><br /> <span data-ttu-id="ec77b-211">如果数据不符合，则会引发 <xref:System.Xml.XmlException> 异常。</span><span class="sxs-lookup"><span data-stu-id="ec77b-211">If the data isn't in conformance, an <xref:System.Xml.XmlException> exception is thrown.</span></span>|<xref:System.Xml.ConformanceLevel.Document>|  
  
<a name="xmlreader_nodes"></a>   
## <a name="navigating-through-nodes"></a><span data-ttu-id="ec77b-212">在节点间导航</span><span class="sxs-lookup"><span data-stu-id="ec77b-212">Navigating through nodes</span></span>  
 <span data-ttu-id="ec77b-213">当前节点是 XML 读取器当前定位在其上的 XML 节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-213">The current node is the XML node on which the XML reader is currently positioned.</span></span> <span data-ttu-id="ec77b-214">所有 <xref:System.Xml.XmlReader> 方法执行与此节点相关的操作，所有 <xref:System.Xml.XmlReader> 属性都反映当前节点的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-214">All <xref:System.Xml.XmlReader> methods perform operations in relation to this node, and all <xref:System.Xml.XmlReader> properties reflect the value of the current node.</span></span>  
  
 <span data-ttu-id="ec77b-215">使用以下方法可以轻松地在节点之间导航和分析数据。</span><span class="sxs-lookup"><span data-stu-id="ec77b-215">The following methods make it easy to navigate through nodes and parse data.</span></span>  
  
|<span data-ttu-id="ec77b-216">使用此 <xref:System.Xml.XmlReaderSettings> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-216">Use this <xref:System.Xml.XmlReaderSettings> method</span></span>|<span data-ttu-id="ec77b-217">功能</span><span class="sxs-lookup"><span data-stu-id="ec77b-217">To</span></span>|  
|-----------------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<xref:System.Xml.XmlReader.Read%2A>|<span data-ttu-id="ec77b-218">读取第一个节点，一次一个节点前进一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-218">Read the first node, and advance through the stream one node at a time.</span></span> <span data-ttu-id="ec77b-219">此类调用通常在 `while` 循环内执行。</span><span class="sxs-lookup"><span data-stu-id="ec77b-219">Such calls are typically performed inside a `while` loop.</span></span><br /><br /> <span data-ttu-id="ec77b-220">使用 <xref:System.Xml.XmlReader.NodeType%2A> 属性可获取当前节点的类型（例如，特性、注释、元素等）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-220">Use the <xref:System.Xml.XmlReader.NodeType%2A> property to get the type (for example, attribute, comment, element, and so on) of the current node.</span></span>|  
|<xref:System.Xml.XmlReader.Skip%2A>|<span data-ttu-id="ec77b-221">跳过当前节点的子级并移至下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-221">Skip the children of the current node and move to the next node.</span></span>|  
|<span data-ttu-id="ec77b-222"><xref:System.Xml.XmlReader.MoveToContent%2A> 和 <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-222"><xref:System.Xml.XmlReader.MoveToContent%2A> and <xref:System.Xml.XmlReader.MoveToContentAsync%2A></span></span>|<span data-ttu-id="ec77b-223">跳过非内容节点，并移至下一个内容节点或文件结尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-223">Skip non-content nodes and move to the next content node or to the end of the file.</span></span><br /><br /> <span data-ttu-id="ec77b-224">非内容节点包括 <xref:System.Xml.XmlNodeType.ProcessingInstruction>、<xref:System.Xml.XmlNodeType.DocumentType>、<xref:System.Xml.XmlNodeType.Comment>、<xref:System.Xml.XmlNodeType.Whitespace>和 <xref:System.Xml.XmlNodeType.SignificantWhitespace>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-224">Non-content nodes include <xref:System.Xml.XmlNodeType.ProcessingInstruction>, <xref:System.Xml.XmlNodeType.DocumentType>, <xref:System.Xml.XmlNodeType.Comment>, <xref:System.Xml.XmlNodeType.Whitespace>, and <xref:System.Xml.XmlNodeType.SignificantWhitespace>.</span></span><br /><br /> <span data-ttu-id="ec77b-225">内容节点包括非空白文本、<xref:System.Xml.XmlNodeType.CDATA>、<xref:System.Xml.XmlNodeType.EntityReference> 和 <xref:System.Xml.XmlNodeType.EndEntity>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-225">Content nodes include non-white space text, <xref:System.Xml.XmlNodeType.CDATA>, <xref:System.Xml.XmlNodeType.EntityReference> , and <xref:System.Xml.XmlNodeType.EndEntity>.</span></span>|  
|<xref:System.Xml.XmlReader.ReadSubtree%2A>|<span data-ttu-id="ec77b-226">读取元素及其所有子级，并将新的 <xref:System.Xml.XmlReader> 实例设置为 <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-226">Read an element and all its children, and return a new <xref:System.Xml.XmlReader> instance set to <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType>.</span></span><br /><br /> <span data-ttu-id="ec77b-227">此方法对于围绕 XML 元素创建边界很有用;例如，如果要将数据传递给另一个组件进行处理，并且希望限制该组件可以访问的数据量。</span><span class="sxs-lookup"><span data-stu-id="ec77b-227">This method is useful for creating boundaries around XML elements; for example, if you want to pass data to another component for processing and you want to limit how much of your data the component can access.</span></span>|  
  
 <span data-ttu-id="ec77b-228">请参阅 "<xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> 参考" 页，获取有关在文本流中一次导航一个节点并显示每个节点类型的示例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-228">See the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> reference page for an example of navigating through a text stream one node at a time and displaying the type of each node.</span></span>  
  
 <span data-ttu-id="ec77b-229">以下各节介绍了如何读取特定类型的数据，例如元素、属性和类型化数据。</span><span class="sxs-lookup"><span data-stu-id="ec77b-229">The following sections describe how you can read specific types of data, such as elements, attributes, and typed data.</span></span>  
  
<a name="xmlreader_elements"></a>   
## <a name="reading-xml-elements"></a><span data-ttu-id="ec77b-230">读取 XML 元素</span><span class="sxs-lookup"><span data-stu-id="ec77b-230">Reading XML elements</span></span>  
 <span data-ttu-id="ec77b-231">下表列出了 <xref:System.Xml.XmlReader> 类提供的用于处理元素的方法和属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-231">The following table lists the methods and properties that the <xref:System.Xml.XmlReader> class provides for processing elements.</span></span> <span data-ttu-id="ec77b-232">在 <xref:System.Xml.XmlReader> 置于某个元素上之后，节点属性（例如 <xref:System.Xml.XmlReader.Name%2A>）将反映元素的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-232">After the <xref:System.Xml.XmlReader> is positioned on an element, the node properties, such as <xref:System.Xml.XmlReader.Name%2A>, reflect the element values.</span></span> <span data-ttu-id="ec77b-233">除了下面所述的成员之外，<xref:System.Xml.XmlReader> 类的任何常规方法和属性也可以用于处理元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-233">In addition to the members described below, any of the general methods and properties of the <xref:System.Xml.XmlReader> class can also be used to process elements.</span></span> <span data-ttu-id="ec77b-234">例如，可以使用 <xref:System.Xml.XmlReader.ReadInnerXml%2A> 方法读取元素的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-234">For example, you can use the <xref:System.Xml.XmlReader.ReadInnerXml%2A> method to read the contents of an element.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-235">有关开始标记、结束标记和空元素标记的定义，请参阅[W3C XML 1.0 建议](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags)的3.1 节。</span><span class="sxs-lookup"><span data-stu-id="ec77b-235">See section 3.1 of the [W3C XML 1.0 Recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/#sec-starttags) for definitions of start tags, end tags, and empty element tags.</span></span>  
  
|<span data-ttu-id="ec77b-236">使用此 <xref:System.Xml.XmlReader> 成员</span><span class="sxs-lookup"><span data-stu-id="ec77b-236">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="ec77b-237">功能</span><span class="sxs-lookup"><span data-stu-id="ec77b-237">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="ec77b-238"><xref:System.Xml.XmlReader.IsStartElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-238"><xref:System.Xml.XmlReader.IsStartElement%2A> method</span></span>|<span data-ttu-id="ec77b-239">检查当前节点是否是开始标记或空元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-239">Check if the current node is a start tag or an empty element tag.</span></span>|  
|<span data-ttu-id="ec77b-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-240"><xref:System.Xml.XmlReader.ReadStartElement%2A> method</span></span>|<span data-ttu-id="ec77b-241">检查当前节点是否为元素并将读取器推进到下一个节点（调用 <xref:System.Xml.XmlReader.IsStartElement%2A> 后跟 <xref:System.Xml.XmlReader.Read%2A>）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-241">Check that the current node is an element and advance the reader to the next node (calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A>).</span></span>|  
|<span data-ttu-id="ec77b-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-242"><xref:System.Xml.XmlReader.ReadEndElement%2A> method</span></span>|<span data-ttu-id="ec77b-243">检查当前节点是否为结束标记并将读取器推进到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-243">Check that the current node is an end tag and advance the reader to the next node.</span></span>|  
|<span data-ttu-id="ec77b-244"><xref:System.Xml.XmlReader.ReadElementString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-244"><xref:System.Xml.XmlReader.ReadElementString%2A> method</span></span>|<span data-ttu-id="ec77b-245">读取纯文本元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-245">Read a text-only element.</span></span>|  
|<span data-ttu-id="ec77b-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-246"><xref:System.Xml.XmlReader.ReadToDescendant%2A> method</span></span>|<span data-ttu-id="ec77b-247">将 XML 读取器前进到具有指定名称的下一个子代（子元素）元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-247">Advance the XML reader to the next descendant (child) element that has the specified name.</span></span>|  
|<span data-ttu-id="ec77b-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-248"><xref:System.Xml.XmlReader.ReadToNextSibling%2A> method</span></span>|<span data-ttu-id="ec77b-249">将 XML 读取器前进到具有指定名称的下一个同级元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-249">Advance the XML reader to the next sibling element that has the specified name.</span></span>|  
|<span data-ttu-id="ec77b-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-250"><xref:System.Xml.XmlReader.IsEmptyElement%2A> property</span></span>|<span data-ttu-id="ec77b-251">检查当前元素是否具有结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-251">Check if the current element has an end element tag.</span></span> <span data-ttu-id="ec77b-252">例如：</span><span class="sxs-lookup"><span data-stu-id="ec77b-252">For example:</span></span><br /><br /> <span data-ttu-id="ec77b-253">-   `<item num="123"/>` （<xref:System.Xml.XmlReader.IsEmptyElement%2A> 是 `true`的。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-253">-   `<item num="123"/>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `true`.)</span></span><br /><span data-ttu-id="ec77b-254">-   `<item num="123"> </item>` （<xref:System.Xml.XmlReader.IsEmptyElement%2A> `false`，但元素内容为空。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-254">-   `<item num="123"> </item>` (<xref:System.Xml.XmlReader.IsEmptyElement%2A> is `false`, although the element's content is empty.)</span></span>|  
  
 <span data-ttu-id="ec77b-255">有关读取元素的文本内容的示例，请参阅 <xref:System.Xml.XmlReader.ReadString%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-255">For an example of reading the text content of elements, see the <xref:System.Xml.XmlReader.ReadString%2A> method.</span></span> <span data-ttu-id="ec77b-256">下面的示例通过使用 `while` 循环来处理元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-256">The following example processes elements by using a `while` loop.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
<a name="xmlreader_attributes"></a>   
## <a name="reading-xml-attributes"></a><span data-ttu-id="ec77b-257">读取 XML 特性</span><span class="sxs-lookup"><span data-stu-id="ec77b-257">Reading XML attributes</span></span>  
 <span data-ttu-id="ec77b-258">XML 特性最常见于元素，但也可用于 XML 声明和文档类型节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-258">XML attributes are most commonly found on elements, but they're also allowed on XML declaration and document type nodes.</span></span>  
  
 <span data-ttu-id="ec77b-259">当定位在元素节点上时，<xref:System.Xml.XmlReader.MoveToAttribute%2A> 方法允许您浏览元素的属性列表。</span><span class="sxs-lookup"><span data-stu-id="ec77b-259">When positioned on an element node, the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method lets you go through the attribute list of the element.</span></span> <span data-ttu-id="ec77b-260">请注意，在调用 <xref:System.Xml.XmlReader.MoveToAttribute%2A> 之后，节点属性（如 <xref:System.Xml.XmlReader.Name%2A>、<xref:System.Xml.XmlReader.NamespaceURI%2A>和 <xref:System.Xml.XmlReader.Prefix%2A> 反映了该属性的属性，而不是该属性所属的元素的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-260">Note that after <xref:System.Xml.XmlReader.MoveToAttribute%2A> has been called, node properties such as <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> reflect the properties of that attribute, not the properties of the element the attribute belongs to.</span></span>  
  
 <span data-ttu-id="ec77b-261"><xref:System.Xml.XmlReader> 类提供这些方法和属性来读取和处理元素上的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-261">The <xref:System.Xml.XmlReader> class provides these methods and properties to read and process attributes on elements.</span></span>  
  
|<span data-ttu-id="ec77b-262">使用此 <xref:System.Xml.XmlReader> 成员</span><span class="sxs-lookup"><span data-stu-id="ec77b-262">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="ec77b-263">功能</span><span class="sxs-lookup"><span data-stu-id="ec77b-263">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="ec77b-264"><xref:System.Xml.XmlReader.HasAttributes%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-264"><xref:System.Xml.XmlReader.HasAttributes%2A> property</span></span>|<span data-ttu-id="ec77b-265">检查当前节点是否有任何属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-265">Check whether the current node has any attributes.</span></span>|  
|<span data-ttu-id="ec77b-266"><xref:System.Xml.XmlReader.AttributeCount%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-266"><xref:System.Xml.XmlReader.AttributeCount%2A> property</span></span>|<span data-ttu-id="ec77b-267">获取当前元素的属性数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-267">Get the number of attributes on the current element.</span></span>|  
|<span data-ttu-id="ec77b-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-268"><xref:System.Xml.XmlReader.MoveToFirstAttribute%2A> method</span></span>|<span data-ttu-id="ec77b-269">移动到元素中的第一个属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-269">Move to the first attribute in an element.</span></span>|  
|<span data-ttu-id="ec77b-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-270"><xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method</span></span>|<span data-ttu-id="ec77b-271">转到元素中的下一个属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-271">Move to the next attribute in an element.</span></span>|  
|<span data-ttu-id="ec77b-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-272"><xref:System.Xml.XmlReader.MoveToAttribute%2A> method</span></span>|<span data-ttu-id="ec77b-273">移动到指定的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-273">Move to a specified attribute.</span></span>|  
|<span data-ttu-id="ec77b-274"><xref:System.Xml.XmlReader.GetAttribute%2A> 方法或 <xref:System.Xml.XmlReader.Item%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-274"><xref:System.Xml.XmlReader.GetAttribute%2A> method or <xref:System.Xml.XmlReader.Item%2A> property</span></span>|<span data-ttu-id="ec77b-275">获取指定特性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-275">Get the value of a specified attribute.</span></span>|  
|<span data-ttu-id="ec77b-276"><xref:System.Xml.XmlReader.IsDefault%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-276"><xref:System.Xml.XmlReader.IsDefault%2A> property</span></span>|<span data-ttu-id="ec77b-277">检查当前节点是否是从 DTD 或架构中定义的默认值生成的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-277">Check whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span></span>|  
|<span data-ttu-id="ec77b-278"><xref:System.Xml.XmlReader.MoveToElement%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-278"><xref:System.Xml.XmlReader.MoveToElement%2A> method</span></span>|<span data-ttu-id="ec77b-279">转到拥有当前特性的元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-279">Move to the element that owns the current attribute.</span></span> <span data-ttu-id="ec77b-280">使用此方法可以在通过元素的属性导航后返回到元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-280">Use this method to return to an element after navigating through its attributes.</span></span>|  
|<span data-ttu-id="ec77b-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-281"><xref:System.Xml.XmlReader.ReadAttributeValue%2A> method</span></span>|<span data-ttu-id="ec77b-282">将属性值分析为一个或多个 `Text`、`EntityReference`或 `EndEntity` 节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-282">Parse the attribute value into one or more `Text`, `EntityReference`, or `EndEntity` nodes.</span></span>|  
  
 <span data-ttu-id="ec77b-283">任何常规的 <xref:System.Xml.XmlReader> 方法和属性也可以用于处理属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-283">Any of the general <xref:System.Xml.XmlReader> methods and properties can also be used to process attributes.</span></span> <span data-ttu-id="ec77b-284">例如，在 <xref:System.Xml.XmlReader> 位于某个属性上之后，<xref:System.Xml.XmlReader.Name%2A> 和 <xref:System.Xml.XmlReader.Value%2A> 属性将反映该属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-284">For example, after the <xref:System.Xml.XmlReader> is positioned on an attribute, the <xref:System.Xml.XmlReader.Name%2A> and <xref:System.Xml.XmlReader.Value%2A> properties reflect the values of the attribute.</span></span> <span data-ttu-id="ec77b-285">也可以使用任何内容 `Read` 方法来获取属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-285">You can also use any of the content `Read` methods to get the value of the attribute.</span></span>  
  
 <span data-ttu-id="ec77b-286">此示例使用 <xref:System.Xml.XmlReader.AttributeCount%2A> 属性来浏览元素上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-286">This example uses the <xref:System.Xml.XmlReader.AttributeCount%2A> property to navigate through all the attributes on an element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 <span data-ttu-id="ec77b-287">此示例使用 `while` 循环中的 <xref:System.Xml.XmlReader.MoveToNextAttribute%2A> 方法来浏览属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-287">This example uses the <xref:System.Xml.XmlReader.MoveToNextAttribute%2A> method in a `while` loop to navigate through the attributes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 <span data-ttu-id="ec77b-288">**读取 XML 声明节点上的特性**</span><span class="sxs-lookup"><span data-stu-id="ec77b-288">**Reading attributes on XML declaration nodes**</span></span>  
  
 <span data-ttu-id="ec77b-289">当 XML 读取器定位在 XML 声明节点上时，<xref:System.Xml.XmlReader.Value%2A> 属性以单个字符串的形式返回版本、独立和编码信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-289">When the XML reader is positioned on an XML declaration node, the <xref:System.Xml.XmlReader.Value%2A> property returns the version, standalone, and encoding information as a single string.</span></span> <span data-ttu-id="ec77b-290"><xref:System.Xml.XmlReader> 由 <xref:System.Xml.XmlReader.Create%2A> 方法创建的对象、<xref:System.Xml.XmlTextReader> 类和 <xref:System.Xml.XmlValidatingReader> 类公开作为特性的版本、独立项和编码项。</span><span class="sxs-lookup"><span data-stu-id="ec77b-290"><xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method, the <xref:System.Xml.XmlTextReader> class, and the <xref:System.Xml.XmlValidatingReader> class expose the version, standalone, and encoding items as attributes.</span></span>  
  
 <span data-ttu-id="ec77b-291">**读取文档类型节点上的属性**</span><span class="sxs-lookup"><span data-stu-id="ec77b-291">**Reading attributes on document type nodes**</span></span>  
  
 <span data-ttu-id="ec77b-292">当 XML 读取器定位在 "文档类型" 节点上时，<xref:System.Xml.XmlReader.GetAttribute%2A> 方法和 <xref:System.Xml.XmlReader.Item%2A> 属性可用于返回系统值和公共文本值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-292">When the XML reader is positioned on a document type node, the <xref:System.Xml.XmlReader.GetAttribute%2A> method and <xref:System.Xml.XmlReader.Item%2A> property can be used to return the values for the SYSTEM and PUBLIC literals.</span></span> <span data-ttu-id="ec77b-293">例如，调用 `reader.GetAttribute("PUBLIC")` 将返回 PUBLIC 值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-293">For example, calling `reader.GetAttribute("PUBLIC")` returns the PUBLIC value.</span></span>  
  
 <span data-ttu-id="ec77b-294">**读取处理指令节点上的属性**</span><span class="sxs-lookup"><span data-stu-id="ec77b-294">**Reading attributes on processing instruction nodes**</span></span>  
  
 <span data-ttu-id="ec77b-295">在 <xref:System.Xml.XmlReader> 位于某个处理指令节点上时，<xref:System.Xml.XmlReader.Value%2A> 属性将返回整个文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-295">When the <xref:System.Xml.XmlReader> is positioned on a processing instruction node, the <xref:System.Xml.XmlReader.Value%2A> property returns the entire text content.</span></span> <span data-ttu-id="ec77b-296">处理指令节点中的项不会被视为属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-296">Items in the processing instruction node aren't treated as attributes.</span></span> <span data-ttu-id="ec77b-297">不能用 <xref:System.Xml.XmlReader.GetAttribute%2A> 或 <xref:System.Xml.XmlReader.MoveToAttribute%2A> 方法读取它们。</span><span class="sxs-lookup"><span data-stu-id="ec77b-297">They can't be read with the <xref:System.Xml.XmlReader.GetAttribute%2A> or <xref:System.Xml.XmlReader.MoveToAttribute%2A> method.</span></span>  
  
<a name="xmlreader_content"></a>   
## <a name="reading-xml-content"></a><span data-ttu-id="ec77b-298">读取 XML 内容</span><span class="sxs-lookup"><span data-stu-id="ec77b-298">Reading XML content</span></span>  
 <span data-ttu-id="ec77b-299">XMLReader 类包含以下成员，这些成员从 XML 文件读取内容并将内容作为字符串值返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-299">The XMLReader class includes the following members that read content from an XML file and return the content as string values.</span></span> <span data-ttu-id="ec77b-300">（若要返回 CLR 类型，请参阅[下一节](#xmlreader_clr)。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-300">(To return CLR types, see the [next section](#xmlreader_clr).)</span></span>  
  
|<span data-ttu-id="ec77b-301">使用此 <xref:System.Xml.XmlReader> 成员</span><span class="sxs-lookup"><span data-stu-id="ec77b-301">Use this <xref:System.Xml.XmlReader> member</span></span>|<span data-ttu-id="ec77b-302">功能</span><span class="sxs-lookup"><span data-stu-id="ec77b-302">To</span></span>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------|--------|  
|<span data-ttu-id="ec77b-303"><xref:System.Xml.XmlReader.Value%2A> 属性</span><span class="sxs-lookup"><span data-stu-id="ec77b-303"><xref:System.Xml.XmlReader.Value%2A> property</span></span>|<span data-ttu-id="ec77b-304">获取当前节点的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-304">Get the text content of the current node.</span></span> <span data-ttu-id="ec77b-305">返回的值取决于节点类型;请参阅 <xref:System.Xml.XmlReader.Value%2A> 参考页获取详细信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-305">The value returned depends on the node type; see the <xref:System.Xml.XmlReader.Value%2A> reference page for details.</span></span>|  
|<span data-ttu-id="ec77b-306"><xref:System.Xml.XmlReader.ReadString%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-306"><xref:System.Xml.XmlReader.ReadString%2A> method</span></span>|<span data-ttu-id="ec77b-307">以字符串的形式获取元素或文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-307">Get the content of an element or text node as a string.</span></span> <span data-ttu-id="ec77b-308">此方法在处理指令和注释处停止。</span><span class="sxs-lookup"><span data-stu-id="ec77b-308">This method stops on processing instructions and comments.</span></span><br /><br /> <span data-ttu-id="ec77b-309">有关此方法如何处理特定节点类型的详细信息，请参阅 "<xref:System.Xml.XmlReader.ReadString%2A> 引用" 页。</span><span class="sxs-lookup"><span data-stu-id="ec77b-309">For details on how this method handles specific node types, see the <xref:System.Xml.XmlReader.ReadString%2A> reference page.</span></span>|  
|<span data-ttu-id="ec77b-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> 和 <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-310"><xref:System.Xml.XmlReader.ReadInnerXml%2A> and <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A> methods</span></span>|<span data-ttu-id="ec77b-311">获取当前节点的所有内容，包括标记，但不包括开始标记和结束标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-311">Get all the content of the current node, including the markup, but excluding start and end tags.</span></span> <span data-ttu-id="ec77b-312">例如，对于：</span><span class="sxs-lookup"><span data-stu-id="ec77b-312">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="ec77b-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> 返回：</span><span class="sxs-lookup"><span data-stu-id="ec77b-313"><xref:System.Xml.XmlReader.ReadInnerXml%2A> returns:</span></span><br /><br /> `this<child id="123"/>`|  
|<span data-ttu-id="ec77b-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> 和 <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-314"><xref:System.Xml.XmlReader.ReadOuterXml%2A> and <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A> methods</span></span>|<span data-ttu-id="ec77b-315">获取当前节点及其子节点的所有内容，包括标记和开始/结束标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-315">Get all the content of the current node and its children, including markup and start/end tags.</span></span> <span data-ttu-id="ec77b-316">例如，对于：</span><span class="sxs-lookup"><span data-stu-id="ec77b-316">For example, for:</span></span><br /><br /> `<node>this<child id="123"/></node>`<br /><br /> <span data-ttu-id="ec77b-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> 返回：</span><span class="sxs-lookup"><span data-stu-id="ec77b-317"><xref:System.Xml.XmlReader.ReadOuterXml%2A> returns:</span></span><br /><br /> `<node>this<child id="123"/></node>`|  
  
<a name="xmlreader_clr"></a>   
## <a name="converting-to-clr-types"></a><span data-ttu-id="ec77b-318">转换为 CLR 类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-318">Converting to CLR types</span></span>  
 <span data-ttu-id="ec77b-319">您可以使用 <xref:System.Xml.XmlReader> 类的成员（下表中列出）来读取 XML 数据并返回值作为公共语言运行时（CLR）类型而不是字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-319">You can use the members of the <xref:System.Xml.XmlReader> class (listed in the following table) to read XML data and return values as common language runtime (CLR) types instead of strings.</span></span> <span data-ttu-id="ec77b-320">这些成员使你能够获取最适合你的编码任务的表示形式的值，而无需手动分析或转换字符串值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-320">These members enable you to get values in the representation that is most appropriate for your coding task without having to manually parse or convert string values.</span></span>  
  
-   <span data-ttu-id="ec77b-321">只能在元素节点类型上调用**ReadElementContentAs**方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-321">The **ReadElementContentAs** methods can only be called on element node types.</span></span> <span data-ttu-id="ec77b-322">这些方法不能在包含子元素或混合内容的元素上使用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-322">These methods cannot be used on elements that contain child elements or mixed content.</span></span> <span data-ttu-id="ec77b-323">在调用时，<xref:System.Xml.XmlReader> 对象读取开始标记，读取元素内容，然后移过结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-323">When called, the <xref:System.Xml.XmlReader> object reads the start tag, reads the element content, and then moves past the end element tag.</span></span> <span data-ttu-id="ec77b-324">将忽略处理指令和注释并展开实体。</span><span class="sxs-lookup"><span data-stu-id="ec77b-324">Processing instructions and comments are ignored and entities are expanded.</span></span>  
  
-   <span data-ttu-id="ec77b-325">**ReadContentAs**方法读取当前读取器位置处的文本内容，如果 XML 数据没有任何与之关联的架构或数据类型信息，则将文本内容转换为请求的返回类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-325">The **ReadContentAs** methods read the text content at the current reader position, and if the XML data doesn't have any schema or data type information associated with it, convert the text content to the requested return type.</span></span> <span data-ttu-id="ec77b-326">文本、空白、有效空白和 CDATA 节串联在一起。</span><span class="sxs-lookup"><span data-stu-id="ec77b-326">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="ec77b-327">将跳过注释和处理指令，并自动解析实体引用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-327">Comments and processing instructions are skipped, and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-328"><xref:System.Xml.XmlReader> 类使用[W3C XML 架构第2部分：数据类型](https://www.w3.org/TR/xmlschema-2/)建议定义的规则。</span><span class="sxs-lookup"><span data-stu-id="ec77b-328">The <xref:System.Xml.XmlReader> class uses the rules defined by the [W3C XML Schema Part 2: Datatypes](https://www.w3.org/TR/xmlschema-2/) recommendation.</span></span>  
  
|<span data-ttu-id="ec77b-329">使用此 <xref:System.Xml.XmlReader> 方法</span><span class="sxs-lookup"><span data-stu-id="ec77b-329">Use this <xref:System.Xml.XmlReader> method</span></span>|<span data-ttu-id="ec77b-330">返回此 CLR 类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-330">To return this CLR type</span></span>|  
|--------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|  
|<span data-ttu-id="ec77b-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-331"><xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsBoolean%2A></span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="ec77b-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-332"><xref:System.Xml.XmlReader.ReadContentAsDateTime%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A></span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="ec77b-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-333"><xref:System.Xml.XmlReader.ReadContentAsDouble%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsDouble%2A></span></span>|<xref:System.Double>|  
|<span data-ttu-id="ec77b-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-334"><xref:System.Xml.XmlReader.ReadContentAsLong%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A></span></span>|<xref:System.Int64>|  
|<span data-ttu-id="ec77b-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-335"><xref:System.Xml.XmlReader.ReadContentAsInt%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsInt%2A></span></span>|<xref:System.Int32>|  
|<span data-ttu-id="ec77b-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-336"><xref:System.Xml.XmlReader.ReadContentAsString%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsString%2A></span></span>|<xref:System.String>|  
|<span data-ttu-id="ec77b-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-337"><xref:System.Xml.XmlReader.ReadContentAs%2A> and <xref:System.Xml.XmlReader.ReadElementContentAs%2A></span></span>|<span data-ttu-id="ec77b-338">与 `returnType` 参数一起指定的类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-338">The type you specify with the `returnType` parameter</span></span>|  
|<span data-ttu-id="ec77b-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> 和 <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span><span class="sxs-lookup"><span data-stu-id="ec77b-339"><xref:System.Xml.XmlReader.ReadContentAsObject%2A> and <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A></span></span>|<span data-ttu-id="ec77b-340">由 <xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType> 属性指定的最适合的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-340">The most appropriate type, as specified by the <xref:System.Xml.XmlReader.ValueType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ec77b-341">有关映射信息，请参阅 system.exception[类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="ec77b-341">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for mapping information.</span></span>|  
  
 <span data-ttu-id="ec77b-342">如果某个元素的格式无法轻松转换为 CLR 类型，则可以使用架构映射来确保成功转换。</span><span class="sxs-lookup"><span data-stu-id="ec77b-342">If an element can't easily be converted to a CLR type because of its format, you can use a schema mapping to ensure a successful conversion.</span></span> <span data-ttu-id="ec77b-343">下面的示例使用 .xsd 文件将 `hire-date` 元素转换为 `xs:date` 类型，然后使用 <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> 方法将该元素作为 <xref:System.DateTime> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-343">The following example uses an .xsd file to convert the `hire-date` element to the `xs:date` type, and then uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to return the element as a <xref:System.DateTime> object.</span></span>  
  
 <span data-ttu-id="ec77b-344">**输入（雇用日期：）：**</span><span class="sxs-lookup"><span data-stu-id="ec77b-344">**Input (hireDate.xml):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#9](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xml#9)]  
  
 <span data-ttu-id="ec77b-345">**架构（雇用日期）：**</span><span class="sxs-lookup"><span data-stu-id="ec77b-345">**Schema (hireDate.xsd):**</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#10](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/hireDate.xsd#10)]  
  
 <span data-ttu-id="ec77b-346">**代码：**</span><span class="sxs-lookup"><span data-stu-id="ec77b-346">**Code:**</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#13)]
 [!code-vb[XmlReader.ReadElementContentAs#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#13)]  
  
 <span data-ttu-id="ec77b-347">**输出：**</span><span class="sxs-lookup"><span data-stu-id="ec77b-347">**Output:**</span></span>  
  
```  
Six Month Review Date:  7/8/2003 12:00:00 AM  
```  
  
<a name="xmlreader_async"></a>   
## <a name="asynchronous-programming"></a><span data-ttu-id="ec77b-348">异步编程</span><span class="sxs-lookup"><span data-stu-id="ec77b-348">Asynchronous programming</span></span>  
 <span data-ttu-id="ec77b-349">大多数 <xref:System.Xml.XmlReader> 方法的方法名称末尾都有 "Async"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-349">Most of the <xref:System.Xml.XmlReader> methods have asynchronous counterparts that have "Async" at the end of their method names.</span></span> <span data-ttu-id="ec77b-350">例如，<xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A><xref:System.Xml.XmlReader.ReadContentAsObject%2A> 的异步等效项。</span><span class="sxs-lookup"><span data-stu-id="ec77b-350">For example, the asynchronous equivalent of <xref:System.Xml.XmlReader.ReadContentAsObject%2A> is <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 <span data-ttu-id="ec77b-351">以下方法可用于异步方法调用：</span><span class="sxs-lookup"><span data-stu-id="ec77b-351">The following methods can be used with asynchronous method calls:</span></span>  
  
-   <xref:System.Xml.XmlReader.GetAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToNextAttribute%2A>  
  
-   <xref:System.Xml.XmlReader.MoveToElement%2A>  
  
-   <xref:System.Xml.XmlReader.ReadAttributeValue%2A>  
  
-   <xref:System.Xml.XmlReader.ReadSubtree%2A>  
  
-   <xref:System.Xml.XmlReader.ResolveEntity%2A>  
  
 <span data-ttu-id="ec77b-352">以下各节描述了不具有异步对应的方法的异步用法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-352">The following sections describe asynchronous usage for methods that don't have asynchronous counterparts.</span></span>  
  
 <span data-ttu-id="ec77b-353">**ReadStartElement 方法**</span><span class="sxs-lookup"><span data-stu-id="ec77b-353">**ReadStartElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#1)]
 [!code-vb[System.Xml.XmlReader.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#1)]  
  
 <span data-ttu-id="ec77b-354">**ReadEndElement 方法**</span><span class="sxs-lookup"><span data-stu-id="ec77b-354">**ReadEndElement method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#2)]
 [!code-vb[System.Xml.XmlReader.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#2)]  
  
 <span data-ttu-id="ec77b-355">**ReadToNextSibling 方法**</span><span class="sxs-lookup"><span data-stu-id="ec77b-355">**ReadToNextSibling method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#3)]
 [!code-vb[System.Xml.XmlReader.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#3)]  
  
 <span data-ttu-id="ec77b-356">**ReadToFollowing 方法**</span><span class="sxs-lookup"><span data-stu-id="ec77b-356">**ReadToFollowing method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#4)]
 [!code-vb[System.Xml.XmlReader.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#4)]  
  
 <span data-ttu-id="ec77b-357">**ReadToDescendant 方法**</span><span class="sxs-lookup"><span data-stu-id="ec77b-357">**ReadToDescendant method**</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#5)]
 [!code-vb[System.Xml.XmlReader.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#5)]  
  
<a name="xmlreader_security"></a>   
## <a name="security-considerations"></a><span data-ttu-id="ec77b-358">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="ec77b-358">Security considerations</span></span>  
 <span data-ttu-id="ec77b-359">使用 <xref:System.Xml.XmlReader> 类时，请注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="ec77b-359">Consider the following when working with the <xref:System.Xml.XmlReader> class:</span></span>  
  
-   <span data-ttu-id="ec77b-360">从 <xref:System.Xml.XmlReader> 引发的异常可能会泄露您可能不希望冒泡到您的应用程序的路径信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-360">Exceptions thrown from the <xref:System.Xml.XmlReader> can disclose path information that you might not want bubbled up to your app.</span></span> <span data-ttu-id="ec77b-361">应用必须捕获异常并对其进行相应处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-361">Your app must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="ec77b-362">如果你担心拒绝服务问题，或者如果你正在处理不受信任的源，则不要启用 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-362">Do not enable DTD processing if you're concerned about denial of service issues or if you're dealing with untrusted sources.</span></span> <span data-ttu-id="ec77b-363">默认情况下，对 <xref:System.Xml.XmlReader.Create%2A> 方法创建的 <xref:System.Xml.XmlReader> 对象禁用 DTD 处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-363">DTD processing is disabled by default for <xref:System.Xml.XmlReader> objects created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
     <span data-ttu-id="ec77b-364">如果启用了 DTD 处理，可以使用 <xref:System.Xml.XmlSecureResolver> 限制 <xref:System.Xml.XmlReader> 可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-364">If you have DTD processing enabled, you can use the <xref:System.Xml.XmlSecureResolver> to restrict the resources that the <xref:System.Xml.XmlReader> can access.</span></span> <span data-ttu-id="ec77b-365">你还可以设计应用程序，以便 XML 处理的内存和时间受到限制。</span><span class="sxs-lookup"><span data-stu-id="ec77b-365">You can also design your app so that the XML processing is memory and time constrained.</span></span> <span data-ttu-id="ec77b-366">例如，可以在 ASP.NET 应用程序中配置超时限制。</span><span class="sxs-lookup"><span data-stu-id="ec77b-366">For example, you can configure time-out limits in your ASP.NET app.</span></span>  
  
-   <span data-ttu-id="ec77b-367">XML 数据可以包含对外部资源（例如架构文件）的引用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-367">XML data can include references to external resources such as a schema file.</span></span> <span data-ttu-id="ec77b-368">默认情况下，使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 对象解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-368">By default, external resources are resolved by using an <xref:System.Xml.XmlUrlResolver> object with no user credentials.</span></span> <span data-ttu-id="ec77b-369">通过执行下列操作之一，可以使此操作更加安全：</span><span class="sxs-lookup"><span data-stu-id="ec77b-369">You can secure this further by doing one of the following:</span></span>  
  
    -   <span data-ttu-id="ec77b-370">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-370">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
    -   <span data-ttu-id="ec77b-371">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-371">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="ec77b-372">默认情况下，不会设置 <xref:System.Xml.XmlReaderSettings> 对象的 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 和 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 验证标志。</span><span class="sxs-lookup"><span data-stu-id="ec77b-372">The <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags of an <xref:System.Xml.XmlReaderSettings> object aren't set by default.</span></span> <span data-ttu-id="ec77b-373">这样，在处理来自不可信的源的 XML 数据时，可以帮助防止 <xref:System.Xml.XmlReader> 受到基于架构的攻击。</span><span class="sxs-lookup"><span data-stu-id="ec77b-373">This helps to protect the <xref:System.Xml.XmlReader> against schema-based attacks when it is processing XML data from an untrusted source.</span></span> <span data-ttu-id="ec77b-374">设置了这些标志后，<xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象的 <xref:System.Xml.XmlReaderSettings> 用于在 <xref:System.Xml.XmlReader> 中解析实例文档中遇到的架构位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-374">When these flags are set, the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> of the <xref:System.Xml.XmlReaderSettings> object is used to resolve schema locations encountered in the instance document in the <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="ec77b-375">如果 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 属性设置为 `null`，则即使设置了 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> 和 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> 验证标志，也不会解析架构位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-375">If the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property is set to `null`, schema locations aren't resolved even if the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> and <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessSchemaLocation> validation flags are set.</span></span>  
  
     <span data-ttu-id="ec77b-376">在验证过程中添加的架构会添加新类型，并且可能更改被验证的文档的验证结果。</span><span class="sxs-lookup"><span data-stu-id="ec77b-376">Schemas added during validation add new types and can change the validation outcome of the document being validated.</span></span> <span data-ttu-id="ec77b-377">因此，只应从可信的源解析外部架构。</span><span class="sxs-lookup"><span data-stu-id="ec77b-377">As a result, external schemas should only be resolved from trusted sources.</span></span>  
  
     <span data-ttu-id="ec77b-378">建议在高可用性方案中针对对文档的大部分具有标识约束的架构验证不受信任的大型 XML 文档时禁用 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 标志。</span><span class="sxs-lookup"><span data-stu-id="ec77b-378">We recommend disabling the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> flag when validating untrusted, large XML documents in high availability scenarios against a schema that has identity constraints over a large part of the document.</span></span> <span data-ttu-id="ec77b-379">默认情况下启用此标志。</span><span class="sxs-lookup"><span data-stu-id="ec77b-379">This flag is enabled by default.</span></span>  
  
-   <span data-ttu-id="ec77b-380">XML 数据可以包含大量属性、命名空间声明、嵌套元素等，需要大量的时间来处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-380">XML data can contain a large number of attributes, namespace declarations, nested elements and so on that require a substantial amount of time to process.</span></span> <span data-ttu-id="ec77b-381">若要限制发送到 <xref:System.Xml.XmlReader>的输入的大小，可以：</span><span class="sxs-lookup"><span data-stu-id="ec77b-381">To limit the size of the input that is sent to the <xref:System.Xml.XmlReader>, you can:</span></span>  
  
    -   <span data-ttu-id="ec77b-382">通过设置 <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> 属性来限制文档的大小。</span><span class="sxs-lookup"><span data-stu-id="ec77b-382">Limit the size of the document by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A> property.</span></span>  
  
    -   <span data-ttu-id="ec77b-383">通过设置 <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> 属性，限制扩展实体所产生的字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-383">Limit the number of characters that result from expanding entities by setting the <xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A> property.</span></span>  
  
    -   <span data-ttu-id="ec77b-384">为 <xref:System.Xml.XmlReader>创建自定义 `IStream` 实现。</span><span class="sxs-lookup"><span data-stu-id="ec77b-384">Create a custom `IStream` implementation for the <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="ec77b-385"><xref:System.Xml.XmlReader.ReadValueChunk%2A> 方法可用于处理大型数据流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-385">The <xref:System.Xml.XmlReader.ReadValueChunk%2A> method can be used to handle large streams of data.</span></span> <span data-ttu-id="ec77b-386">此方法一次读取少量的字符，而不是为整个值分配单个字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-386">This method reads a small number of characters at a time instead of allocating a single string for the whole value.</span></span>  
  
-   <span data-ttu-id="ec77b-387">读取具有大量唯一本地名称、命名空间或前缀的 XML 文档时，可能会出现问题。</span><span class="sxs-lookup"><span data-stu-id="ec77b-387">When reading an XML document with a large number of unique local names, namespaces, or prefixes, a problem can occur.</span></span> <span data-ttu-id="ec77b-388">如果使用派生自 <xref:System.Xml.XmlReader>的类，并且调用每个项的 <xref:System.Xml.XmlReader.LocalName%2A>、<xref:System.Xml.XmlReader.Prefix%2A>或 <xref:System.Xml.XmlReader.NamespaceURI%2A> 属性，则返回的字符串将添加到 <xref:System.Xml.NameTable>中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-388">If you are using a class that derives from <xref:System.Xml.XmlReader>, and you call the <xref:System.Xml.XmlReader.LocalName%2A>, <xref:System.Xml.XmlReader.Prefix%2A>, or <xref:System.Xml.XmlReader.NamespaceURI%2A> property for each item, the returned string is added to a <xref:System.Xml.NameTable>.</span></span> <span data-ttu-id="ec77b-389"><xref:System.Xml.NameTable> 保存的集合的大小永远不会减小，这会造成字符串句柄的虚拟内存泄露。</span><span class="sxs-lookup"><span data-stu-id="ec77b-389">The collection held by the <xref:System.Xml.NameTable> never decreases in size, creating a virtual memory leak of the string handles.</span></span> <span data-ttu-id="ec77b-390">这一缓解措施是从 <xref:System.Xml.NameTable> 类派生，并强制实施最大大小配额。</span><span class="sxs-lookup"><span data-stu-id="ec77b-390">One mitigation for this is to derive from the <xref:System.Xml.NameTable> class and enforce a maximum size quota.</span></span> <span data-ttu-id="ec77b-391">（无法阻止使用 <xref:System.Xml.NameTable>，或在 <xref:System.Xml.NameTable> 满时进行切换）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-391">(There is no way to prevent the use of a <xref:System.Xml.NameTable>, or to switch the <xref:System.Xml.NameTable> when it is full).</span></span> <span data-ttu-id="ec77b-392">另一种缓解措施是避免使用所述的属性，并在可能的情况下将 <xref:System.Xml.XmlReader.MoveToAttribute%2A> 方法与 <xref:System.Xml.XmlReader.IsStartElement%2A> 方法一起使用;这些方法不返回字符串，因此避免了 <xref:System.Xml.NameTable> 集合 overfilling 的问题。</span><span class="sxs-lookup"><span data-stu-id="ec77b-392">Another mitigation is to avoid using the properties mentioned and instead use the <xref:System.Xml.XmlReader.MoveToAttribute%2A> method with the <xref:System.Xml.XmlReader.IsStartElement%2A> method where possible; those methods don't return strings and thus avoid the problem of overfilling the <xref:System.Xml.NameTable> collection.</span></span>  
  
-   <span data-ttu-id="ec77b-393"><xref:System.Xml.XmlReaderSettings> 对象可以包含敏感信息，例如用户凭据。</span><span class="sxs-lookup"><span data-stu-id="ec77b-393"><xref:System.Xml.XmlReaderSettings> objects can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="ec77b-394">不可信的组件可能会使用 <xref:System.Xml.XmlReaderSettings> 对象及其用户凭据来创建 <xref:System.Xml.XmlReader> 对象，以读取数据。</span><span class="sxs-lookup"><span data-stu-id="ec77b-394">An untrusted component could use the <xref:System.Xml.XmlReaderSettings> object and its user credentials to create <xref:System.Xml.XmlReader> objects to read data.</span></span> <span data-ttu-id="ec77b-395">在缓存 <xref:System.Xml.XmlReaderSettings> 对象或将 <xref:System.Xml.XmlReaderSettings> 对象从一个组件传递到另一个组件时，请小心。</span><span class="sxs-lookup"><span data-stu-id="ec77b-395">Be careful when caching <xref:System.Xml.XmlReaderSettings> objects, or when passing the <xref:System.Xml.XmlReaderSettings> object from one component to another.</span></span>  
  
-   <span data-ttu-id="ec77b-396">不接受来自不可信的源的支持组件，例如 <xref:System.Xml.NameTable>、<xref:System.Xml.XmlNamespaceManager> 和 <xref:System.Xml.XmlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-396">Do not accept supporting components, such as <xref:System.Xml.NameTable>, <xref:System.Xml.XmlNamespaceManager>, and <xref:System.Xml.XmlResolver> objects, from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-397">下面的示例代码演示如何使用异步 API 来分析 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-397">The following example code shows how to use the asynchronous API to parse XML.</span></span>  
  
 [!code-csharp[System.Xml.XmlReader.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.xml.xmlreader.class/cs/program.cs#6)]
 [!code-vb[System.Xml.XmlReader.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.xml.xmlreader.class/vb/module1.vb#6)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="ec77b-398">XML 文档和数据</span><span class="sxs-lookup"><span data-stu-id="ec77b-398">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-399">初始化 <see langword="XmlReader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-399">Initializes a new instance of the <see langword="XmlReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-400">此构造函数由派生类构造函数调用以初始化此类型中的状态。</span><span class="sxs-lookup"><span data-stu-id="ec77b-400">This constructor is called by derived class constructors to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public abstract int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-401">当在派生类中被重写时，获取当前节点上的属性数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-401">When overridden in a derived class, gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-402">当前节点上的属性数目。</span><span class="sxs-lookup"><span data-stu-id="ec77b-402">The number of attributes on the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-403">此属性仅与 `Element`、`DocumentType` 和 `XmlDeclaration` 节点相关。</span><span class="sxs-lookup"><span data-stu-id="ec77b-403">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="ec77b-404">（其他节点类型不具有属性。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-404">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-405">下面的示例显示当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-405">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-406">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-406">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-407">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-407">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public abstract string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-408">当在派生类中被重写时，获取当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-408">When overridden in a derived class, gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-409">当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-409">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-410">联网的 XML 文档包含使用各种 W3C 标准包含机制聚合的数据块，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-410">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="ec77b-411">DTD 实体就是这样一个例子，但这并不局限于 Dtd。</span><span class="sxs-lookup"><span data-stu-id="ec77b-411">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="ec77b-412">基本 URI 告诉您这些节点的来源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-412">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="ec77b-413">如果返回的节点没有基 URI （例如，从内存中字符串中对其进行了分析），将返回 `String.Empty`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-413">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), `String.Empty` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-414">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-414">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-415">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-415">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public virtual bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-416">获取一个值，该值指示 <see cref="T:System.Xml.XmlReader" /> 是否实现二进制内容读取方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-416">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the binary content read methods.</span></span></summary>
        <value><span data-ttu-id="ec77b-417">如果实现了二进制内容读取方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-417"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-418">二进制内容读取方法包括 <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>、<xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>、<xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>和 <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-418">The binary content read methods include the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A> methods.</span></span> <span data-ttu-id="ec77b-419">如果此属性返回 `false` 则在调用任何二进制读取方法时返回 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-419">If this property returns `false` a <xref:System.NotSupportedException> is returned when any of the binary read methods is called.</span></span>  
  
 <span data-ttu-id="ec77b-420"><xref:System.Xml.XmlReader> 类的所有 Microsoft .NET 框架实现都返回此属性 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-420">All Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class return `true` for this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-421">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-421">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-422">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-422">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual bool CanReadValueChunk { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadValueChunk" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanReadValueChunk" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReadValueChunk As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadValueChunk { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadValueChunk : bool" Usage="System.Xml.XmlReader.CanReadValueChunk" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-423">获取一个值，该值指示 <see cref="T:System.Xml.XmlReader" /> 是否实现 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-423">Gets a value indicating whether the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method.</span></span></summary>
        <value><span data-ttu-id="ec77b-424">如果 <see cref="T:System.Xml.XmlReader" /> 实现 <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> 方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-424"><see langword="true" /> if the <see cref="T:System.Xml.XmlReader" /> implements the <see cref="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" /> method; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-425"><xref:System.Xml.XmlReader> 从静态 <xref:System.Xml.XmlReader.Create%2A> 方法创建的对象的文本分析始终返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-425">Text parsing <xref:System.Xml.XmlReader> objects that were created from the static <xref:System.Xml.XmlReader.Create%2A> method always return `true`.</span></span> <span data-ttu-id="ec77b-426"><xref:System.Xml.XmlReader> 类的所有其他 Microsoft .NET 框架实现（包括 <xref:System.Xml.XmlTextReader> 类）返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-426">All other Microsoft .NET Framework implementations of the <xref:System.Xml.XmlReader> class, including the <xref:System.Xml.XmlTextReader> class, return `false`.</span></span>  
  
 <span data-ttu-id="ec77b-427">如果此属性返回 `false` 则在调用 <xref:System.Xml.XmlReader.ReadValueChunk%2A> 方法时返回 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-427">If this property returns `false` a <xref:System.NotSupportedException> is returned when the <xref:System.Xml.XmlReader.ReadValueChunk%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-428">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-428">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-429">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-429">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public virtual bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-430">获取一个值，该值指示此读取器是否可以分析和解析实体。</span><span class="sxs-lookup"><span data-stu-id="ec77b-430">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value><span data-ttu-id="ec77b-431">如果此读取器可以分析和解析实体，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-431"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-432">对于不支持 DTD 信息的 <xref:System.Xml.XmlReader> 的实现，此属性始终返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-432">This property always returns `false` for implementations of <xref:System.Xml.XmlReader> that do not support DTD information.</span></span> <span data-ttu-id="ec77b-433">在这种情况下，调用 <xref:System.Xml.XmlReader.ResolveEntity%2A> 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec77b-433">In this case, calling <xref:System.Xml.XmlReader.ResolveEntity%2A> throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-434">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-434">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-435">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-435">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="xmlReader.Close " FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void Close ();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Close ()" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Close();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="xmlReader.Close " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-436">当在派生类中被重写时，将 <see cref="P:System.Xml.XmlReader.ReadState" /> 更改为 <see cref="F:System.Xml.ReadState.Closed" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-436">When overridden in a derived class, changes the <see cref="P:System.Xml.XmlReader.ReadState" /> to <see cref="F:System.Xml.ReadState.Closed" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-437">此方法还释放读取过程中保留的任何资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-437">This method also releases any resources held during reading.</span></span> <span data-ttu-id="ec77b-438">如果已调用 <xref:System.Xml.XmlReader.Close%2A>，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="ec77b-438">If <xref:System.Xml.XmlReader.Close%2A> has already been called, no action is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-439">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-439">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-440">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-440">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec77b-441">创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-441">Creates a new <see cref="T:System.Xml.XmlReader" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-442">大多数 <xref:System.Xml.XmlReader.Create%2A> 重载都包含一个接受 <xref:System.Xml.XmlReaderSettings> 对象的 `settings` 参数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-442">Most of the <xref:System.Xml.XmlReader.Create%2A> overloads include a `settings` parameter that accepts an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="ec77b-443">您可以使用此对象执行以下操作：</span><span class="sxs-lookup"><span data-stu-id="ec77b-443">You can use this object to:</span></span>  
  
-   <span data-ttu-id="ec77b-444">指定要在 <xref:System.Xml.XmlReader> 对象上支持的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-444">Specify which features you want supported on the <xref:System.Xml.XmlReader> object.</span></span>  
  
-   <span data-ttu-id="ec77b-445">重新使用 <xref:System.Xml.XmlReaderSettings> 对象以创建多个读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-445">Reuse the <xref:System.Xml.XmlReaderSettings> object to create multiple readers.</span></span> <span data-ttu-id="ec77b-446">可以使用相同的设置创建多个具有相同功能的读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-446">You can use the same settings to create multiple readers with the same functionality.</span></span> <span data-ttu-id="ec77b-447">或者，您可以修改 <xref:System.Xml.XmlReaderSettings> 实例上的设置，并使用一组不同的功能创建新的读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-447">Or, you can modify the settings on an <xref:System.Xml.XmlReaderSettings> instance and create a new reader with a different set of features.</span></span>  
  
-   <span data-ttu-id="ec77b-448">向现有的 XML 读取器添加功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-448">Add features to an existing XML reader.</span></span> <span data-ttu-id="ec77b-449"><xref:System.Xml.XmlReader.Create%2A> 方法可以接受其他 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-449">The <xref:System.Xml.XmlReader.Create%2A> method can accept another <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="ec77b-450">基础 <xref:System.Xml.XmlReader> 对象可以是用户定义的读取器、<xref:System.Xml.XmlTextReader> 对象或要向其添加附加功能的另一个 <xref:System.Xml.XmlReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-450">The underlying <xref:System.Xml.XmlReader> object can be a user-defined reader, a <xref:System.Xml.XmlTextReader> object, or another <xref:System.Xml.XmlReader> instance that you want to add additional features to.</span></span>  
  
-   <span data-ttu-id="ec77b-451">充分利用功能，如更好的一致性检查和符合[XML 1.0 （第四版）](https://www.w3.org/TR/2006/REC-xml-20060816/)建议，这些建议仅在静态 <xref:System.Xml.XmlReader.Create%2A> 方法创建 <xref:System.Xml.XmlReader> 对象上可用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-451">Take full advantage of features such as better conformance checking and compliance to the [XML 1.0 (fourth edition)](https://www.w3.org/TR/2006/REC-xml-20060816/) recommendation that are available only on <xref:System.Xml.XmlReader> objects created by the static <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-452">尽管 .NET Framework 包括 <xref:System.Xml.XmlReader> 类的具体实现，如 <xref:System.Xml.XmlTextReader>、<xref:System.Xml.XmlNodeReader>和 <xref:System.Xml.XmlValidatingReader> 类，但建议使用 <xref:System.Xml.XmlReader> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 的实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-452">Although the .NET Framework includes concrete implementations of the <xref:System.Xml.XmlReader> class, such as the <xref:System.Xml.XmlTextReader>, <xref:System.Xml.XmlNodeReader>, and the <xref:System.Xml.XmlValidatingReader> classes, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
## <a name="default-settings"></a><span data-ttu-id="ec77b-453">默认设置</span><span class="sxs-lookup"><span data-stu-id="ec77b-453">Default settings</span></span>  
 <span data-ttu-id="ec77b-454">如果使用不接受 <xref:System.Xml.XmlReaderSettings> 对象的 <xref:System.Xml.XmlReader.Create%2A> 重载，则使用以下默认读取器设置：</span><span class="sxs-lookup"><span data-stu-id="ec77b-454">If you use a <xref:System.Xml.XmlReader.Create%2A> overload that doesn't accept a <xref:System.Xml.XmlReaderSettings> object, the following default reader settings are used:</span></span>  
  
|<span data-ttu-id="ec77b-455">设置</span><span class="sxs-lookup"><span data-stu-id="ec77b-455">Setting</span></span>|<span data-ttu-id="ec77b-456">默认</span><span class="sxs-lookup"><span data-stu-id="ec77b-456">Default</span></span>|  
|-------------|-------------|  
|<xref:System.Xml.XmlReaderSettings.CheckCharacters%2A>|`true`|  
|<xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A>|<xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlReaderSettings.IgnoreComments%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreProcessingInstructions%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.IgnoreWhitespace%2A>|`false`|  
|<xref:System.Xml.XmlReaderSettings.LineNumberOffset%2A>|<span data-ttu-id="ec77b-457">0</span><span class="sxs-lookup"><span data-stu-id="ec77b-457">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.LinePositionOffset%2A>|<span data-ttu-id="ec77b-458">0</span><span class="sxs-lookup"><span data-stu-id="ec77b-458">0</span></span>|  
|<xref:System.Xml.XmlReaderSettings.NameTable%2A>|`null`|  
|<xref:System.Xml.XmlReaderSettings.DtdProcessing%2A>|<xref:System.Xml.DtdProcessing.Prohibit>|  
|<xref:System.Xml.XmlReaderSettings.Schemas%2A>|<span data-ttu-id="ec77b-459">空的 <xref:System.Xml.Schema.XmlSchemaSet> 对象</span><span class="sxs-lookup"><span data-stu-id="ec77b-459">An empty <xref:System.Xml.Schema.XmlSchemaSet> object</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationFlags%2A>|<span data-ttu-id="ec77b-460"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> 启用</span><span class="sxs-lookup"><span data-stu-id="ec77b-460"><xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessIdentityConstraints> enabled</span></span>|  
|<xref:System.Xml.XmlReaderSettings.ValidationType%2A>|<xref:System.Xml.ValidationType.None>|  
|<xref:System.Xml.XmlReaderSettings.XmlResolver%2A>|<span data-ttu-id="ec77b-461">一个新 <xref:System.Xml.XmlUrlResolver> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-461">A new <xref:System.Xml.XmlUrlResolver> object.</span></span>  <span data-ttu-id="ec77b-462">从 .NET Framework 4.5.2 开始，此设置的默认值为 "`null`"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-462">Starting with the .NET Framework 4.5.2, this setting has a default value of `null`.</span></span>|  
  
## <a name="settings-for-common-scenarios"></a><span data-ttu-id="ec77b-463">常见方案的设置</span><span class="sxs-lookup"><span data-stu-id="ec77b-463">Settings for common scenarios</span></span>  
 <span data-ttu-id="ec77b-464">下面是应该为一些典型的 XML 读取器方案设置的 <xref:System.Xml.XmlReaderSettings> 属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-464">Here are the <xref:System.Xml.XmlReaderSettings> properties you should set for some of the typical XML reader scenarios.</span></span>  
  
|<span data-ttu-id="ec77b-465">需求</span><span class="sxs-lookup"><span data-stu-id="ec77b-465">Requirement</span></span>|<span data-ttu-id="ec77b-466">Set</span><span class="sxs-lookup"><span data-stu-id="ec77b-466">Set</span></span>|  
|-----------------|---------|  
|<span data-ttu-id="ec77b-467">数据必须是格式正确的 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ec77b-467">Data must be a well-formed XML document.</span></span>|<span data-ttu-id="ec77b-468"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> <xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-468"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<span data-ttu-id="ec77b-469">数据必须是格式正确的 XML 分析实体。</span><span class="sxs-lookup"><span data-stu-id="ec77b-469">Data must be a well-formed XML parsed entity.</span></span>|<span data-ttu-id="ec77b-470"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> <xref:System.Xml.ConformanceLevel.Fragment>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-470"><xref:System.Xml.XmlReaderSettings.ConformanceLevel%2A> to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span>|  
|<span data-ttu-id="ec77b-471">数据必须针对 DTD 进行验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-471">Data must be validated against a DTD.</span></span>|<span data-ttu-id="ec77b-472"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> 至 <xref:System.Xml.DtdProcessing.Parse></span><span class="sxs-lookup"><span data-stu-id="ec77b-472"><xref:System.Xml.XmlReaderSettings.DtdProcessing%2A> to <xref:System.Xml.DtdProcessing.Parse></span></span><br /><span data-ttu-id="ec77b-473"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> <xref:System.Xml.ValidationType.DTD>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-473"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.DTD>.</span></span>|  
|<span data-ttu-id="ec77b-474">必须根据 XML 架构对数据进行验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-474">Data must be validated against an XML schema.</span></span>|<span data-ttu-id="ec77b-475"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="ec77b-475"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="ec77b-476"><xref:System.Xml.XmlReaderSettings.Schemas%2A> 到要用于验证的 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-476"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span> <span data-ttu-id="ec77b-477">请注意，<xref:System.Xml.XmlReader> 不支持 XML 数据缩减（XDR）架构验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-477">Note that <xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>|  
|<span data-ttu-id="ec77b-478">必须根据内联 XML 架构对数据进行验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-478">Data must be validated against an inline XML schema.</span></span>|<span data-ttu-id="ec77b-479"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="ec77b-479"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="ec77b-480"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-480"><xref:System.Xml.XmlReaderSettings.ValidationFlags%2A> to <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema>.</span></span>|  
|<span data-ttu-id="ec77b-481">类型支持。</span><span class="sxs-lookup"><span data-stu-id="ec77b-481">Type support.</span></span>|<span data-ttu-id="ec77b-482"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> 至 <xref:System.Xml.ValidationType.Schema></span><span class="sxs-lookup"><span data-stu-id="ec77b-482"><xref:System.Xml.XmlReaderSettings.ValidationType%2A> to <xref:System.Xml.ValidationType.Schema></span></span><br /><span data-ttu-id="ec77b-483"><xref:System.Xml.XmlReaderSettings.Schemas%2A> 要使用的 <xref:System.Xml.Schema.XmlSchemaSet>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-483"><xref:System.Xml.XmlReaderSettings.Schemas%2A> to the <xref:System.Xml.Schema.XmlSchemaSet> to use.</span></span>|  
  
 <span data-ttu-id="ec77b-484"><xref:System.Xml.XmlReader> 不支持 XML 数据缩减（XDR）架构验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-484"><xref:System.Xml.XmlReader> doesn't support XML-Data Reduced (XDR) schema validation.</span></span>  
  
## <a name="asynchronous-programming"></a><span data-ttu-id="ec77b-485">异步编程</span><span class="sxs-lookup"><span data-stu-id="ec77b-485">Asynchronous programming</span></span>  
 <span data-ttu-id="ec77b-486">在同步模式下，<xref:System.Xml.XmlReader.Create%2A> 方法从文件、流或文本读取器的缓冲区中读取第一个数据块。</span><span class="sxs-lookup"><span data-stu-id="ec77b-486">In synchronous mode, the <xref:System.Xml.XmlReader.Create%2A> method reads the first chunk of data from the buffer of the file, stream, or text reader.</span></span> <span data-ttu-id="ec77b-487">如果 i/o 操作失败，这可能会引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec77b-487">This may throw an exception if an I/O operation fails.</span></span> <span data-ttu-id="ec77b-488">在异步模式下，第一次 i/o 操作的执行是读取操作，因此，发生读取操作时会引发发生的异常。</span><span class="sxs-lookup"><span data-stu-id="ec77b-488">In asynchronous mode, the first I/O operation occurs with a read operation, so exceptions that arise will be thrown when the read operation occurs.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="ec77b-489">安全注意事项</span><span class="sxs-lookup"><span data-stu-id="ec77b-489">Security considerations</span></span>  
 <span data-ttu-id="ec77b-490">默认情况下，<xref:System.Xml.XmlReader> 使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 对象来打开资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-490">By default, the <xref:System.Xml.XmlReader> uses an <xref:System.Xml.XmlUrlResolver> object with no user credentials to open resources.</span></span> <span data-ttu-id="ec77b-491">这意味着，默认情况下，XML 读取器可以访问不需要凭据的任何位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-491">This means that, by default, the XML reader can access any location that doesn't require credentials.</span></span> <span data-ttu-id="ec77b-492">使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 属性控制对资源的访问：</span><span class="sxs-lookup"><span data-stu-id="ec77b-492">Use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to control access to resources:</span></span>  
  
-   <span data-ttu-id="ec77b-493">将 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 设置为 <xref:System.Xml.XmlSecureResolver> 对象，以限制 XML 读取器可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-493">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to an <xref:System.Xml.XmlSecureResolver> object to restrict the resources that the XML reader can access.</span></span>  
  
 <span data-ttu-id="ec77b-494">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-494">-or-</span></span>  
  
-   <span data-ttu-id="ec77b-495">将 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 设置为 `null`，以防止 XML 读取器打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-495">Set <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> to `null` to prevent the XML reader from opening any external resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-496">此示例将创建一个 XML 读取器，该读取器可去除无意义的空白、去除注释并执行片段级别的一致性检查。</span><span class="sxs-lookup"><span data-stu-id="ec77b-496">This example creates an XML reader that strips insignificant white space, strips comments, and performs fragment-level conformance checking.</span></span>  
  
 [!code-csharp[XmlReader.Create#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#11)]
 [!code-vb[XmlReader.Create#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#11)]  
  
 <span data-ttu-id="ec77b-497">下面的示例使用具有默认凭据的 <xref:System.Xml.XmlUrlResolver> 来访问文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-497">The following example uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access a file.</span></span>  
  
 [!code-cpp[XmlReaderSettings.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#1)]
 [!code-csharp[XmlReaderSettings.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#1)]
 [!code-vb[XmlReaderSettings.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#1)]  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 <span data-ttu-id="ec77b-498">下面的代码在其他读取器中包装一个读取器实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-498">The following code wraps a reader instance within another reader.</span></span>  
  
 [!code-csharp[XmlReader.Create#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#13)]
 [!code-vb[XmlReader.Create#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#13)]  
  
 <span data-ttu-id="ec77b-499">此示例将读取器链接到添加 DTD 和 XML 架构验证。</span><span class="sxs-lookup"><span data-stu-id="ec77b-499">This example chains readers to add DTD and XML schema validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#12)]
 [!code-vb[XmlReader.Create#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-500">包含 XML 数据的流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-500">The stream that contains the XML data.</span></span>  
  
<span data-ttu-id="ec77b-501"><see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span><span class="sxs-lookup"><span data-stu-id="ec77b-501">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="ec77b-502">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-502">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <summary><span data-ttu-id="ec77b-503">使用带默认设置的指定流创建新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-503">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream with default settings.</span></span></summary>
        <returns><span data-ttu-id="ec77b-504">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-504">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-505">使用默认设置的 <xref:System.Xml.XmlReaderSettings> 对象用于创建读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-505">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="ec77b-506">如果希望在创建的读取器上指定支持的功能，请使用将 <xref:System.Xml.XmlReaderSettings> 对象作为其参数之一的重载，并传入具有正确设置的 <xref:System.Xml.XmlReaderSettings> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-506">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="ec77b-507">不带凭据的默认 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体和架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-507">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-508">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-508">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-509">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-509">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-510">如果外部资源位于要求身份验证的网络资源上，则使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-510">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-511">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-511">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-512">下面的示例创建一个从 <xref:System.IO.FileStream>读取的 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-512">The following example creates an <xref:System.Xml.XmlReader> object that reads from a <xref:System.IO.FileStream>.</span></span>  
  
 [!code-csharp[XmlReader.Create#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#8)]
 [!code-vb[XmlReader.Create#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-513"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-513">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec77b-514"><see cref="T:System.Xml.XmlReader" /> 没有足够的权限访问 XML 数据的位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-514">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-515">从其中读取 XML 数据的文本读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-515">The text reader from which to read the XML data.</span></span> <span data-ttu-id="ec77b-516">由于文本读取器返回的是 Unicode 字符流，因此，XML 读取器未使用 XML 声明中指定的编码对数据流进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-516">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration is not used by the XML reader to decode the data stream.</span></span></param>
        <summary><span data-ttu-id="ec77b-517">使用指定的文本读取器创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-517">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader.</span></span></summary>
        <returns><span data-ttu-id="ec77b-518">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-518">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-519">使用默认设置的 <xref:System.Xml.XmlReaderSettings> 对象用于创建读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-519">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="ec77b-520">如果希望在创建的读取器上指定支持的功能，请使用将 <xref:System.Xml.XmlReaderSettings> 对象作为其参数之一的重载，并传入具有正确设置的 <xref:System.Xml.XmlReaderSettings> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-520">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="ec77b-521">不带凭据的默认 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体和架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-521">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-522">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-522">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-523">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-523">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-524">如果外部资源位于要求身份验证的网络资源上，则使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-524">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-525">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-525">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-526">下面的示例使用 <xref:System.IO.StringReader> 类读取 XML 字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-526">The following example uses the <xref:System.IO.StringReader> class to read an XML string.</span></span>  
  
 [!code-csharp[XmlReader.Create#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#7)]
 [!code-vb[XmlReader.Create#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-527"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-527">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create inputUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="ec77b-528">包含 XML 数据的文件的 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-528">The URI for the file that contains the XML data.</span></span> <span data-ttu-id="ec77b-529"><see cref="T:System.Xml.XmlUrlResolver" /> 类用于将路径转换为规范化数据表示形式。</span><span class="sxs-lookup"><span data-stu-id="ec77b-529">The <see cref="T:System.Xml.XmlUrlResolver" /> class is used to convert the path to a canonical data representation.</span></span></param>
        <summary><span data-ttu-id="ec77b-530">用指定的 URI 创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-530">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with specified URI.</span></span></summary>
        <returns><span data-ttu-id="ec77b-531">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-531">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-532">使用默认设置的 <xref:System.Xml.XmlReaderSettings> 对象用于创建读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-532">An <xref:System.Xml.XmlReaderSettings> object with default settings is used to create the reader.</span></span> <span data-ttu-id="ec77b-533">如果希望在创建的读取器上指定支持的功能，请使用将 <xref:System.Xml.XmlReaderSettings> 对象作为其参数之一的重载，并传入具有正确设置的 <xref:System.Xml.XmlReaderSettings> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-533">If you wish to specify the features to support on the created reader, use the overload that takes an <xref:System.Xml.XmlReaderSettings> object as one of its arguments, and pass in an <xref:System.Xml.XmlReaderSettings> object with the correct settings.</span></span>  
  
 <span data-ttu-id="ec77b-534">不带凭据的默认 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体和架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-534">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-535">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-535">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-536">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-536">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-537">如果外部资源位于要求身份验证的网络资源上，则使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-537">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-538">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-538">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-539">下面的示例创建一个读取 URI 指定的 XML 数据文件的 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-539">The following example creates an <xref:System.Xml.XmlReader> object that reads XML data file specified by the URI.</span></span>  
  
 [!code-csharp[XmlReader.Create#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#6)]
 [!code-vb[XmlReader.Create#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-540"><paramref name="inputUri" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-540">The <paramref name="inputUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec77b-541"><see cref="T:System.Xml.XmlReader" /> 没有足够的权限访问 XML 数据的位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-541">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ec77b-542">由 URI 标识的文件不存在。</span><span class="sxs-lookup"><span data-stu-id="ec77b-542">The file identified by the URI does not exist.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="ec77b-543">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-543">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="ec77b-544">URI 格式不正确。</span><span class="sxs-lookup"><span data-stu-id="ec77b-544">The URI format is not correct.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-545">包含 XML 数据的流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-545">The stream that contains the XML data.</span></span>  
  
<span data-ttu-id="ec77b-546"><see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span><span class="sxs-lookup"><span data-stu-id="ec77b-546">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="ec77b-547">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-547">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-548">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-548">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="ec77b-549">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-549">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-550">使用指定的流和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-550">Creates a new <see cref="T:System.Xml.XmlReader" /> instance with the specified stream and settings.</span></span></summary>
        <returns><span data-ttu-id="ec77b-551">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-551">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-552">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-552">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-553">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-553">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-554">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-554">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-555">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-555">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-556">你可以使用以下方法之一来控制 <xref:System.Xml.XmlReader> 可以访问的资源：</span><span class="sxs-lookup"><span data-stu-id="ec77b-556">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="ec77b-557">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-557">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="ec77b-558">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-558">-or-</span></span>  
>   
>  -   <span data-ttu-id="ec77b-559">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-559">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ec77b-560">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-560">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-561"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-561">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-562">从其中读取 XML 数据的文本读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-562">The text reader from which to read the XML data.</span></span> <span data-ttu-id="ec77b-563">由于文本读取器返回的是 Unicode 字符流，因此，XML 读取器未使用 XML 声明中指定的编码对数据流进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-563">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-564">新 <see cref="T:System.Xml.XmlReader" /> 的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-564">The settings for the new <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="ec77b-565">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-565">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-566">使用指定的文本读取器和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-566">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader and settings.</span></span></summary>
        <returns><span data-ttu-id="ec77b-567">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-567">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-568">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-568">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-569">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-569">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-570">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-570">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-571">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-571">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-572">你可以使用以下方法之一来控制 <xref:System.Xml.XmlReader> 可以访问的资源：</span><span class="sxs-lookup"><span data-stu-id="ec77b-572">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="ec77b-573">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-573">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="ec77b-574">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-574">-or-</span></span>  
>   
>  -   <span data-ttu-id="ec77b-575">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-575">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ec77b-576">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-576">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-577"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-577">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (inputUri, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="ec77b-578">包含 XML 数据的文件的 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-578">The URI for the file containing the XML data.</span></span> <span data-ttu-id="ec77b-579"><see cref="T:System.Xml.XmlReaderSettings" /> 对象上的 <see cref="T:System.Xml.XmlResolver" /> 对象用于将路径转换为规范化数据表示形式。</span><span class="sxs-lookup"><span data-stu-id="ec77b-579">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span></span> <span data-ttu-id="ec77b-580">如果 <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> 为 <see langword="null" />，则使用新的 <see cref="T:System.Xml.XmlUrlResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-580">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-581">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-581">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="ec77b-582">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-582">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-583">使用指定的 URI 和设置创建新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-583">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI and settings.</span></span></summary>
        <returns><span data-ttu-id="ec77b-584">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-584">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-585">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-585">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-586">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-586">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-587">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-587">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-588">这意味着 <xref:System.Xml.XmlReader> 可以访问不需要身份验证的任何位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-588">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="ec77b-589">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-589">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-590">可以通过将 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 属性设置为 <xref:System.Xml.XmlSecureResolver> 对象，来限制 <xref:System.Xml.XmlReader> 可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-590">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="ec77b-591">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-591">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-592">下面的示例创建支持文档类型定义（DTD）验证的 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-592">The following example creates an <xref:System.Xml.XmlReader> object that supports document type definition (DTD) validation.</span></span>  
  
 [!code-csharp[XmlReader.Create#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#3)]
 [!code-vb[XmlReader.Create#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-593"><paramref name="inputUri" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-593">The <paramref name="inputUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ec77b-594">找不到 URI 指定的文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-594">The file specified by the URI cannot be found.</span></span></exception>
        <exception cref="T:System.UriFormatException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="ec77b-595">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.FormatException" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-595">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.FormatException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="ec77b-596">URI 格式不正确。</span><span class="sxs-lookup"><span data-stu-id="ec77b-596">The URI format is not correct.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.Xml.XmlReader reader, System.Xml.XmlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.Xml.XmlReader reader, class System.Xml.XmlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.Xml.XmlReader,System.Xml.XmlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (reader As XmlReader, settings As XmlReaderSettings) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::Xml::XmlReader ^ reader, System::Xml::XmlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="static member Create : System.Xml.XmlReader * System.Xml.XmlReaderSettings -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (reader, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="ec77b-597">要用作基础 XML 读取器的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-597">The object that you want to use as the underlying XML reader.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-598">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-598">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span>  
  
<span data-ttu-id="ec77b-599"><see cref="T:System.Xml.XmlReaderSettings" /> 对象的一致性级别要么必须与基础读取器的一致性级别匹配，要么必须设置为 <see cref="F:System.Xml.ConformanceLevel.Auto" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-599">The conformance level of the <see cref="T:System.Xml.XmlReaderSettings" /> object must either match the conformance level of the underlying reader, or it must be set to <see cref="F:System.Xml.ConformanceLevel.Auto" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-600">使用指定的 XML 读取器和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-600">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified XML reader and settings.</span></span></summary>
        <returns><span data-ttu-id="ec77b-601">在指定的 <see cref="T:System.Xml.XmlReader" /> 对象周围包装的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-601">An object that is wrapped around the specified <see cref="T:System.Xml.XmlReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-602">此方法允许你向基础 <xref:System.Xml.XmlReader> 对象添加其他功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-602">This method allows you add additional features to an underlying <xref:System.Xml.XmlReader> object.</span></span> <span data-ttu-id="ec77b-603">基础 <xref:System.Xml.XmlReader> 对象可以是 <xref:System.Xml.XmlReader.Create%2A> 方法创建的另一个 <xref:System.Xml.XmlReader> 对象，也可以是使用一个具体 <xref:System.Xml.XmlReader> 实现创建的 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-603">The underlying <xref:System.Xml.XmlReader> object can be another <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, or an <xref:System.Xml.XmlReader> object created using one of the concrete <xref:System.Xml.XmlReader> implementations.</span></span>  
  
 <span data-ttu-id="ec77b-604">不带凭据的默认 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源（如架构）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-604">A default <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a schema.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-605">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-605">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-606">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-606">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-607">如果外部资源位于要求身份验证的网络资源上，则使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-607">If the external resource is located on a network resource that requires authentication, specify an <xref:System.Xml.XmlResolver> with the necessary credentials using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-608">你可以使用以下方法之一来控制 <xref:System.Xml.XmlReader> 可以访问的资源：</span><span class="sxs-lookup"><span data-stu-id="ec77b-608">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="ec77b-609">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-609">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="ec77b-610">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-610">-or-</span></span>  
>   
>  -   <span data-ttu-id="ec77b-611">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-611">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ec77b-612">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-612">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-613">下面的示例创建一个验证 <xref:System.Xml.XmlReader> 对象，该对象围绕 <xref:System.Xml.XmlNodeReader> 对象进行包装。</span><span class="sxs-lookup"><span data-stu-id="ec77b-613">The following example creates a validating <xref:System.Xml.XmlReader> object that is wrapped around an <xref:System.Xml.XmlNodeReader> object.</span></span>  
  
 [!code-csharp[XmlReader.Create#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#5)]
 [!code-vb[XmlReader.Create#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-614"><paramref name="reader" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-614">The <paramref name="reader" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-615"><see cref="T:System.Xml.XmlReaderSettings" /> 对象指定的一致性级别与基础读取器的一致性级别不一致。</span><span class="sxs-lookup"><span data-stu-id="ec77b-615">If the <see cref="T:System.Xml.XmlReaderSettings" /> object specifies a conformance level that is not consistent with conformance level of the underlying reader.</span></span>  
  
<span data-ttu-id="ec77b-616">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-616">-or-</span></span> 
<span data-ttu-id="ec77b-617">基础 <see cref="T:System.Xml.XmlReader" /> 处于 <see cref="F:System.Xml.ReadState.Error" /> 或 <see cref="F:System.Xml.ReadState.Closed" /> 状态。</span><span class="sxs-lookup"><span data-stu-id="ec77b-617">The underlying <see cref="T:System.Xml.XmlReader" /> is in an <see cref="F:System.Xml.ReadState.Error" /> or <see cref="F:System.Xml.ReadState.Closed" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings * string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, baseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="baseUri" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-618">包含 XML 数据的流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-618">The stream that contains the XML data.</span></span>  
  
<span data-ttu-id="ec77b-619"><see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span><span class="sxs-lookup"><span data-stu-id="ec77b-619">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="ec77b-620">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-620">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-621">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-621">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="ec77b-622">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-622">This value can be <see langword="null" />.</span></span></param>
        <param name="baseUri"><span data-ttu-id="ec77b-623">正在读取的实体或文档的基 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-623">The base URI for the entity or document being read.</span></span> <span data-ttu-id="ec77b-624">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-624">This value can be <see langword="null" />.</span></span>  
  
 <span data-ttu-id="ec77b-625">**安全说明** 基 URI 用于解析 XML 文档的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-625">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span></span> <span data-ttu-id="ec77b-626">不要使用来自非信任源的基 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-626">Do not use a base URI from an untrusted source.</span></span></param>
        <summary><span data-ttu-id="ec77b-627">使用指定的流、基 URI 和设置创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-627">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, base URI, and settings.</span></span></summary>
        <returns><span data-ttu-id="ec77b-628">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-628">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-629">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-629">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-630">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-630">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-631">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-631">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-632">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-632">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-633">你可以使用以下方法之一来控制 <xref:System.Xml.XmlReader> 可以访问的资源：</span><span class="sxs-lookup"><span data-stu-id="ec77b-633">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="ec77b-634">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-634">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="ec77b-635">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-635">-or-</span></span>  
>   
>  -   <span data-ttu-id="ec77b-636">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-636">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ec77b-637">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-637">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-638"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-638">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.Stream input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.Stream input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.Stream,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As Stream, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::Stream ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-639">包含 XML 数据的流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-639">The stream that contains the XML data.</span></span>  
  
<span data-ttu-id="ec77b-640"><see cref="T:System.Xml.XmlReader" /> 对流的前几个字节进行扫描，查找字节顺序标记或其他编码标志。</span><span class="sxs-lookup"><span data-stu-id="ec77b-640">The <see cref="T:System.Xml.XmlReader" /> scans the first bytes of the stream looking for a byte order mark or other sign of encoding.</span></span> <span data-ttu-id="ec77b-641">在确定编码方式后，使用该编码方式继续读取流，而处理过程继续将输入内容分析为 (Unicode) 字符流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-641">When encoding is determined, the encoding is used to continue reading the stream, and processing continues parsing the input as a stream of (Unicode) characters.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-642">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-642">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="ec77b-643">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-643">This value can be <see langword="null" />.</span></span></param>
        <param name="inputContext"><span data-ttu-id="ec77b-644">分析 XML 片段所需的上下文信息.</span><span class="sxs-lookup"><span data-stu-id="ec77b-644">The context information required to parse the XML fragment.</span></span> <span data-ttu-id="ec77b-645">上下文信息可以包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、编码、命名空间范围、当前的 <c>xml:lang</c> 和 <c>xml:space</c> 范围、基 URI 和文档类型定义。</span><span class="sxs-lookup"><span data-stu-id="ec77b-645">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span></span>  
  
<span data-ttu-id="ec77b-646">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-646">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-647">使用指定的流、设置和用于分析的上下文信息创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-647">Creates a new <see cref="T:System.Xml.XmlReader" /> instance using the specified stream, settings, and context information for parsing.</span></span></summary>
        <returns><span data-ttu-id="ec77b-648">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-648">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-649">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-649">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-650">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-650">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-651">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-651">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-652">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-652">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-653">你可以使用以下方法之一来控制 <xref:System.Xml.XmlReader> 可以访问的资源：</span><span class="sxs-lookup"><span data-stu-id="ec77b-653">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="ec77b-654">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-654">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="ec77b-655">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-655">-or-</span></span>  
>   
>  -   <span data-ttu-id="ec77b-656">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-656">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ec77b-657">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-657">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-658"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-658">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, string baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, string baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, baseUri As String) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::String ^ baseUri);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings * string -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, baseUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="baseUri" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-659">从其中读取 XML 数据的文本读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-659">The text reader from which to read the XML data.</span></span> <span data-ttu-id="ec77b-660">由于文本读取器返回的是 Unicode 字符流，因此，<see cref="T:System.Xml.XmlReader" /> 未使用 XML 声明中指定的编码对数据流进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-660">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the <see cref="T:System.Xml.XmlReader" /> to decode the data stream.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-661">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-661">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="ec77b-662">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-662">This value can be <see langword="null" />.</span></span></param>
        <param name="baseUri"><span data-ttu-id="ec77b-663">正在读取的实体或文档的基 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-663">The base URI for the entity or document being read.</span></span> <span data-ttu-id="ec77b-664">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-664">This value can be <see langword="null" />.</span></span>  
  
 <span data-ttu-id="ec77b-665">**安全说明** 基 URI 用于解析 XML 文档的相对 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-665">**Security Note** The base URI is used to resolve the relative URI of the XML document.</span></span> <span data-ttu-id="ec77b-666">不要使用来自非信任源的基 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-666">Do not use a base URI from an untrusted source.</span></span></param>
        <summary><span data-ttu-id="ec77b-667">使用指定的文本读取器、设置和基 URI 创建一个新的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-667">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and base URI.</span></span></summary>
        <returns><span data-ttu-id="ec77b-668">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-668">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-669">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-669">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-670">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-670">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-671">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-671">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-672">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-672">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-673">你可以使用以下方法之一来控制 <xref:System.Xml.XmlReader> 可以访问的资源：</span><span class="sxs-lookup"><span data-stu-id="ec77b-673">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="ec77b-674">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-674">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="ec77b-675">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-675">-or-</span></span>  
>   
>  -   <span data-ttu-id="ec77b-676">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-676">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ec77b-677">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-677">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-678"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-678">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (System.IO.TextReader input, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(class System.IO.TextReader input, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.IO.TextReader,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (input As TextReader, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::IO::TextReader ^ input, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.TextReader * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (input, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.IO.TextReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="ec77b-679">从其中读取 XML 数据的文本读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-679">The text reader from which to read the XML data.</span></span> <span data-ttu-id="ec77b-680">由于文本读取器返回的是 Unicode 字符流，因此，XML 读取器未使用 XML 声明中指定的编码对数据流进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-680">A text reader returns a stream of Unicode characters, so the encoding specified in the XML declaration isn't used by the XML reader to decode the data stream.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-681">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-681">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="ec77b-682">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-682">This value can be <see langword="null" />.</span></span></param>
        <param name="inputContext"><span data-ttu-id="ec77b-683">分析 XML 片段所需的上下文信息.</span><span class="sxs-lookup"><span data-stu-id="ec77b-683">The context information required to parse the XML fragment.</span></span> <span data-ttu-id="ec77b-684">上下文信息可以包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、编码、命名空间范围、当前的 <c>xml:lang</c> 和 <c>xml:space</c> 范围、基 URI 和文档类型定义。</span><span class="sxs-lookup"><span data-stu-id="ec77b-684">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span></span>  
  
<span data-ttu-id="ec77b-685">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-685">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-686">使用指定的文本读取器、设置和要用于分析的上下文信息创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-686">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified text reader, settings, and context information for parsing.</span></span></summary>
        <returns><span data-ttu-id="ec77b-687">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-687">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-688">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-688">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-689">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-689">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-690">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-690">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-691">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-691">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-692">你可以使用以下方法之一来控制 <xref:System.Xml.XmlReader> 可以访问的资源：</span><span class="sxs-lookup"><span data-stu-id="ec77b-692">You can use one of the following methods to control which resources the <xref:System.Xml.XmlReader> can access:</span></span>  
>   
>  -   <span data-ttu-id="ec77b-693">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 对象限制 <xref:System.Xml.XmlSecureResolver> 可访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-693">Restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
>   
>  <span data-ttu-id="ec77b-694">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-694">-or-</span></span>  
>   
>  -   <span data-ttu-id="ec77b-695">通过将 <xref:System.Xml.XmlReader> 属性设置为 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A>，不允许 `null` 打开任何外部资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-695">Do not allow the <xref:System.Xml.XmlReader> to open any external resources by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to `null`.</span></span>  
  
 <span data-ttu-id="ec77b-696">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-696">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-697">下面的示例创建一个读取 XML 片段的 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-697">The following example creates an <xref:System.Xml.XmlReader> object that reads an XML fragment.</span></span>  
  
 [!code-csharp[XmlReader.Create#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.Create/CS/XmlReader_Create.cs#1)]
 [!code-vb[XmlReader.Create#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.Create/VB/XmlReader_Create.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-698"><paramref name="input" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-698">The <paramref name="input" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-699"><see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 和 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 属性都包含值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-699">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span></span> <span data-ttu-id="ec77b-700">（只能设置并使用这些 <see langword="NameTable" /> 属性之中的一个）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-700">(Only one of these <see langword="NameTable" /> properties can be set and used).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader Create (string inputUri, System.Xml.XmlReaderSettings settings, System.Xml.XmlParserContext inputContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader Create(string inputUri, class System.Xml.XmlReaderSettings settings, class System.Xml.XmlParserContext inputContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Create(System.String,System.Xml.XmlReaderSettings,System.Xml.XmlParserContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (inputUri As String, settings As XmlReaderSettings, inputContext As XmlParserContext) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ Create(System::String ^ inputUri, System::Xml::XmlReaderSettings ^ settings, System::Xml::XmlParserContext ^ inputContext);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Xml.XmlReaderSettings * System.Xml.XmlParserContext -&gt; System.Xml.XmlReader" Usage="System.Xml.XmlReader.Create (inputUri, settings, inputContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputUri" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="settings" Type="System.Xml.XmlReaderSettings" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="inputContext" Type="System.Xml.XmlParserContext" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="inputUri"><span data-ttu-id="ec77b-701">包含 XML 数据的文件的 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-701">The URI for the file containing the XML data.</span></span> <span data-ttu-id="ec77b-702"><see cref="T:System.Xml.XmlReaderSettings" /> 对象上的 <see cref="T:System.Xml.XmlResolver" /> 对象用于将路径转换为规范化数据表示形式。</span><span class="sxs-lookup"><span data-stu-id="ec77b-702">The <see cref="T:System.Xml.XmlResolver" /> object on the <see cref="T:System.Xml.XmlReaderSettings" /> object is used to convert the path to a canonical data representation.</span></span> <span data-ttu-id="ec77b-703">如果 <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> 为 <see langword="null" />，则使用新的 <see cref="T:System.Xml.XmlUrlResolver" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-703">If <see cref="P:System.Xml.XmlReaderSettings.XmlResolver" /> is <see langword="null" />, a new <see cref="T:System.Xml.XmlUrlResolver" /> object is used.</span></span></param>
        <param name="settings"><span data-ttu-id="ec77b-704">新 <see cref="T:System.Xml.XmlReader" /> 实例的设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-704">The settings for the new <see cref="T:System.Xml.XmlReader" /> instance.</span></span> <span data-ttu-id="ec77b-705">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-705">This value can be <see langword="null" />.</span></span></param>
        <param name="inputContext"><span data-ttu-id="ec77b-706">分析 XML 片段所需的上下文信息.</span><span class="sxs-lookup"><span data-stu-id="ec77b-706">The context information required to parse the XML fragment.</span></span> <span data-ttu-id="ec77b-707">上下文信息可以包括要使用的 <see cref="T:System.Xml.XmlNameTable" />、编码、命名空间范围、当前的 <c>xml:lang</c> 和 <c>xml:space</c> 范围、基 URI 和文档类型定义。</span><span class="sxs-lookup"><span data-stu-id="ec77b-707">The context information can include the <see cref="T:System.Xml.XmlNameTable" /> to use, encoding, namespace scope, the current <c>xml:lang</c> and <c>xml:space</c> scope, base URI, and document type definition.</span></span>  
  
<span data-ttu-id="ec77b-708">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-708">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-709">使用指定的 URI、设置和进行分析的上下文信息创建一个新的 <see cref="T:System.Xml.XmlReader" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-709">Creates a new <see cref="T:System.Xml.XmlReader" /> instance by using the specified URI, settings, and context information for parsing.</span></span></summary>
        <returns><span data-ttu-id="ec77b-710">一个用于读取数据流中所含数据的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-710">An object that is used to read the XML data in the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-711">默认情况下，不带凭据的 <xref:System.Xml.XmlUrlResolver> 用于访问任何外部资源，例如文档类型定义（DTD）、实体、架构等。</span><span class="sxs-lookup"><span data-stu-id="ec77b-711">By default an <xref:System.Xml.XmlUrlResolver> with no credentials is used to access any external resources such as a document type definition (DTD), entities, schemas, and so on.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-712">从 .NET Framework 4.5.2 开始，不提供默认 <xref:System.Xml.XmlUrlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-712">Starting with the .NET Framework 4.5.2, no default <xref:System.Xml.XmlUrlResolver> is provided.</span></span> <span data-ttu-id="ec77b-713">如果你的解决方案面向 .NET Framework 4.5.2 或更高版本，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-713">If your solution targets the .NET Framework 4.5.2 or later versions, specify an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ec77b-714">这意味着 <xref:System.Xml.XmlReader> 可以访问不需要身份验证的任何位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-714">This means that the <xref:System.Xml.XmlReader> can access any locations that does not require authentication.</span></span> <span data-ttu-id="ec77b-715">如果外部资源位于要求身份验证的网络资源上，请使用 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> 属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-715">If the external resource is located on a network resource that requires authentication, use the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType> property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-716">可以通过将 <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> 属性设置为 <xref:System.Xml.XmlSecureResolver> 对象，来限制 <xref:System.Xml.XmlReader> 可以访问的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-716">You can restrict the resources that the <xref:System.Xml.XmlReader> can access by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A> property to an <xref:System.Xml.XmlSecureResolver> object.</span></span>  
  
 <span data-ttu-id="ec77b-717">创建的 <xref:System.Xml.XmlReader> 对象扩展实体引用并执行新行字符的 XML 规范化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-717">The created <xref:System.Xml.XmlReader> object expands entity references and performs XML normalization of new line characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-718"><see langword="inputUri" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-718">The <see langword="inputUri" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="ec77b-719"><see cref="T:System.Xml.XmlReader" /> 没有足够的权限访问 XML 数据的位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-719">The <see cref="T:System.Xml.XmlReader" /> does not have sufficient permissions to access the location of the XML data.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-720"><see cref="P:System.Xml.XmlReaderSettings.NameTable" /> 和 <see cref="P:System.Xml.XmlParserContext.NameTable" /> 属性都包含值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-720">The <see cref="P:System.Xml.XmlReaderSettings.NameTable" /> and <see cref="P:System.Xml.XmlParserContext.NameTable" /> properties both contain values.</span></span> <span data-ttu-id="ec77b-721">（只能设置并使用这些 <see langword="NameTable" /> 属性之中的一个）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-721">(Only one of these <see langword="NameTable" /> properties can be set and used).</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="ec77b-722">找不到 URI 指定的文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-722">The file specified by the URI cannot be found.</span></span></exception>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="ec77b-723">URI 格式不正确。</span><span class="sxs-lookup"><span data-stu-id="ec77b-723">The URI format is not correct.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public abstract int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-724">当在派生类中被重写时，获取 XML 文档中当前节点的深度。</span><span class="sxs-lookup"><span data-stu-id="ec77b-724">When overridden in a derived class, gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="ec77b-725">XML 文档中当前节点的深度。</span><span class="sxs-lookup"><span data-stu-id="ec77b-725">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-726">有关使用此属性的示例，请参阅 <xref:System.Xml.XmlTextReader.Depth%2A> （在 `XmlTextReader` 类中）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-726">See <xref:System.Xml.XmlTextReader.Depth%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-727">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-727">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-728">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-728">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-729">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-729">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-730">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-730">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-731">释放 <see cref="T:System.Xml.XmlReader" /> 类使用的资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-731">Releases the resources used by the <see cref="T:System.Xml.XmlReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="xmlReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-732">释放 <see cref="T:System.Xml.XmlReader" /> 类的当前实例所使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-732">Releases all resources used by the current instance of the <see cref="T:System.Xml.XmlReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-733">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-733">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-734">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-734">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="xmlReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="ec77b-735">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-735"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ec77b-736">释放由 <see cref="T:System.Xml.XmlReader" /> 占用的非托管资源，还可以另外再释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="ec77b-736">Releases the unmanaged resources used by the <see cref="T:System.Xml.XmlReader" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-737">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-737">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-738">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-738">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public abstract bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-739">当在派生类中被重写时，获取一个值，该值指示此读取器是否定位在流的结尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-739">When overridden in a derived class, gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value><span data-ttu-id="ec77b-740">如果此读取器定位在流的结尾，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-740"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-741">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-741">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-742">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-742">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-743">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-743">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-744">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-744">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-745">当在派生类中被重写时，获取属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-745">When overridden in a derived class, gets the value of an attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : int -&gt; string" Usage="xmlReader.GetAttribute i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="ec77b-746">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="ec77b-746">The index of the attribute.</span></span> <span data-ttu-id="ec77b-747">索引是从零开始的。</span><span class="sxs-lookup"><span data-stu-id="ec77b-747">The index is zero-based.</span></span> <span data-ttu-id="ec77b-748">（第一个属性的索引为 0。）</span><span class="sxs-lookup"><span data-stu-id="ec77b-748">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="ec77b-749">当在派生类中被重写时，获取具有指定索引的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-749">When overridden in a derived class, gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="ec77b-750">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-750">The value of the specified attribute.</span></span> <span data-ttu-id="ec77b-751">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-751">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-752">下面的示例获取第三个属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-752">The following example gets the value of the third attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#2)]
 [!code-vb[XmlReaderBasic#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec77b-753"><paramref name="i" /> 超出范围。</span><span class="sxs-lookup"><span data-stu-id="ec77b-753"><paramref name="i" /> is out of range.</span></span> <span data-ttu-id="ec77b-754">它必须是非负数且小于特性集合的大小。</span><span class="sxs-lookup"><span data-stu-id="ec77b-754">It must be non-negative and less than the size of the attribute collection.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-755">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-755">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-756">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-756">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string" Usage="xmlReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-757">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-757">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-758">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-758">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-759">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-759">The value of the specified attribute.</span></span> <span data-ttu-id="ec77b-760">如果找不到该属性，或者值为 <see langword="String.Empty" />，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-760">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-761">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-761">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="ec77b-762">如果读取器定位在 `DocumentType` 节点上，则可以使用此方法获取公共和系统文本，例如 `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="ec77b-762">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-763">下面的示例获取 ISBN 特性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-763">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#3)]
 [!code-vb[XmlReaderBasic#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-764"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-764"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-765">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-765">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-766">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-766">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public abstract string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string * string -&gt; string" Usage="xmlReader.GetAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-767">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-767">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-768">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-768">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-769">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-769">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-770">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-770">The value of the specified attribute.</span></span> <span data-ttu-id="ec77b-771">如果找不到该属性，或者值为 <see langword="String.Empty" />，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-771">If the attribute is not found or the value is <see langword="String.Empty" />, <see langword="null" /> is returned.</span></span> <span data-ttu-id="ec77b-772">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-772">This method does not move the reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-773">以下 XML 包含特定命名空间中的属性：</span><span class="sxs-lookup"><span data-stu-id="ec77b-773">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="ec77b-774">可以使用一个参数（前缀和本地名称）或两个参数（本地名称和命名空间 URI）来查找 `dt:type` 特性：</span><span class="sxs-lookup"><span data-stu-id="ec77b-774">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="ec77b-775">若要查找 `xmlns:dt` 属性，请使用以下参数之一：</span><span class="sxs-lookup"><span data-stu-id="ec77b-775">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="ec77b-776">你还可以使用 <xref:System.Xml.XmlReader.Prefix%2A> 属性获取此信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-776">You can also get this information using the <xref:System.Xml.XmlReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-777"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-777"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-778">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-778">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-779">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-779">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; GetValueAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; GetValueAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.GetValueAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ GetValueAsync();" />
      <MemberSignature Language="F#" Value="abstract member GetValueAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.GetValueAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.GetValueAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-780">异步获取当前节点的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-780">Asynchronously gets the value of the current node.</span></span></summary>
        <returns><span data-ttu-id="ec77b-781">当前节点的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-781">The value of the current node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-782">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-782">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-783">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-783">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-784">在这种情况下，将通过消息“异步操作已在进行中”引发 <see cref="T:System.InvalidOperationException" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-784">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress".</span></span>

<span data-ttu-id="ec77b-785">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-785">-or-</span></span>

<span data-ttu-id="ec77b-786">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-786">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-787">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-787">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-788">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-788">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public virtual bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlReader.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-789">获取一个值，该值指示当前节点是否有任何属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-789">Gets a value indicating whether the current node has any attributes.</span></span></summary>
        <value><span data-ttu-id="ec77b-790">如果当前节点具有属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-790"><see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-791">下面的示例显示当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-791">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-792">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-792">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-793">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-793">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public virtual bool HasValue { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasValue As Boolean" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlReader.HasValue" />
      <MemberSignature Language="C#" Value="public abstract bool HasValue { get; }" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasValue As Boolean" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasValue { bool get(); };" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-794">当在派生类中被重写时，获取一个值，该值指示当前节点是否可以具有 <see cref="P:System.Xml.XmlReader.Value" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-794">When overridden in a derived class, gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlReader.Value" />.</span></span></summary>
        <value><span data-ttu-id="ec77b-795">如果读取器当前定位在的节点可以具有 <see langword="Value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-795"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec77b-796">如果为 <see langword="false" />，则节点值为 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-796">If <see langword="false" />, the node has a value of <see langword="String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-797">下表列出具有要返回的值的节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-797">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="ec77b-798">节点类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-798">Node Type</span></span>|<span data-ttu-id="ec77b-799">“值”</span><span class="sxs-lookup"><span data-stu-id="ec77b-799">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="ec77b-800">属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-800">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="ec77b-801">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-801">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="ec77b-802">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-802">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="ec77b-803">内部子集。</span><span class="sxs-lookup"><span data-stu-id="ec77b-803">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="ec77b-804">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-804">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="ec77b-805">混合内容模型中标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="ec77b-805">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="ec77b-806">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-806">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="ec77b-807">标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="ec77b-807">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="ec77b-808">声明的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-808">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-809">有关使用此方法的示例，请参阅 <xref:System.Xml.XmlTextReader.HasValue%2A> （在 `XmlTextReader` 类中）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-809">See <xref:System.Xml.XmlTextReader.HasValue%2A> (in the `XmlTextReader` class) for a sample using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-810">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-810">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-811">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-811">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public virtual bool IsDefault { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDefault As Boolean" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlReader.IsDefault" />
      <MemberSignature Language="C#" Value="public abstract bool IsDefault { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDefault As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDefault { bool get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-812">当在派生类中被重写时，获取一个值，该值指示当前节点是否是从 DTD 或架构中定义的默认值生成的特性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-812">When overridden in a derived class, gets a value indicating whether the current node is an attribute that was generated from the default value defined in the DTD or schema.</span></span></summary>
        <value><span data-ttu-id="ec77b-813">如果当前节点是其值从 DTD 或架构中定义的默认值生成的属性，则为 <see langword="true" />；如果属性值为显式设置的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-813"><see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-814">`IsDefault` 始终返回 `XmlReader` 实现的 `false`，这些实现不支持架构或 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-814">`IsDefault` always returns `false` for implementations of `XmlReader` that do not support schema or DTD information.</span></span> <span data-ttu-id="ec77b-815">此属性仅适用于属性节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-815">This property applies only to an attribute node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-816">下面的示例显示根元素上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-816">The following example displays all attributes on the root element.</span></span>  
  
```csharp  
using System;  
using System.IO;  
using System.Xml;  
  
public class Sample   
{  
  public static void Main(){  
  
    // Create the reader.  
    XmlReader reader = XmlReader.Create("book4.xml");  
  
    reader.MoveToContent();  
  
    // Display each of the attribute nodes, including default attributes.  
    while (reader.MoveToNextAttribute()){  
        if (reader.IsDefault)  
          Console.Write("(default attribute) ");  
        Console.WriteLine("{0} = {1}", reader.Name, reader.Value);    
    }             
  
    //Close the reader.  
    reader.Close();       
  
  }  
} // End class  
```  
  
 <span data-ttu-id="ec77b-817">该示例使用以下文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-817">The example uses the following files as input.</span></span>  
  
 `book4.xml`  
  
```xml  
<!DOCTYPE book SYSTEM 'book.dtd'>  
<book ISBN = '1-861001-57-5'>  
  <title>Pride And Prejudice</title>  
  <price>19.95</price>  
</book>  
```  
  
 `book.dtd`  
  
```  
<!ELEMENT book (title,price)>   
<!ATTLIST book   
   genre CDATA "novel"  
   ISBN CDATA #REQUIRED>  
<!ELEMENT title (#PCDATA)>  
<!ELEMENT price (#PCDATA)>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-818">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-818">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-819">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-819">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public abstract bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-820">当在派生类中被重写时，获取一个值，该值指示当前节点是否为空元素（例如 <c>&lt;MyElement/&gt;</c>）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-820">When overridden in a derived class, gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value><span data-ttu-id="ec77b-821">如果当前节点是以<c>/&gt;</c>结尾的元素（<see cref="P:System.Xml.XmlReader.NodeType" /> 等于 <see langword="XmlNodeType.Element" />），则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-821"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) that ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-822">此属性使您能够确定下面各项之间的差异：</span><span class="sxs-lookup"><span data-stu-id="ec77b-822">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="ec77b-823">`<item num="123"/>` （`IsEmptyElement` `true`）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-823">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="ec77b-824">`<item num="123"></item>` （`IsEmptyElement` `false`，但元素内容为空）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-824">`<item num="123"></item>` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="ec77b-825">不会为空元素生成相应的 `EndElement` 节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-825">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
 <span data-ttu-id="ec77b-826">如果由于架构验证而将默认内容添加到元素，`IsEmptyElement` 仍返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-826">If default content has been added to an element due to schema validation, `IsEmptyElement` still returns `true`.</span></span> <span data-ttu-id="ec77b-827">它与元素是否具有默认值无关。</span><span class="sxs-lookup"><span data-stu-id="ec77b-827">It has no bearing on whether or not the element has a default value.</span></span> <span data-ttu-id="ec77b-828">换句话说，`IsEmptyElement` 仅报告源文档中的元素是否具有结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-828">In other words, `IsEmptyElement` simply reports whether or not the element in the source document had an end element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-829">下面的示例显示每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-829">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="ec77b-830">该示例使用文件（`elems.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-830">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-831">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-831">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-832">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-832">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsName">
      <MemberSignature Language="C#" Value="public static bool IsName (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsName(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsName (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsName(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsName : string -&gt; bool" Usage="System.Xml.XmlReader.IsName str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="ec77b-833">要验证的名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-833">The name to validate.</span></span></param>
        <summary><span data-ttu-id="ec77b-834">返回一个值，该值指示字符串自变量是否是有效的 XML 名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-834">Returns a value indicating whether the string argument is a valid XML name.</span></span></summary>
        <returns><span data-ttu-id="ec77b-835">如果该名称有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-835"><see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-836">此方法使用[W3C XML 1.0 建议](https://go.microsoft.com/fwlink/?LinkId=49863)来确定名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-836">This method uses the [W3C XML 1.0 Recommendation](https://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-837"><paramref name="str" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-837">The <paramref name="str" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNameToken">
      <MemberSignature Language="C#" Value="public static bool IsNameToken (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNameToken(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsNameToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNameToken (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNameToken(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsNameToken : string -&gt; bool" Usage="System.Xml.XmlReader.IsNameToken str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="ec77b-838">要验证的名称标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-838">The name token to validate.</span></span></param>
        <summary><span data-ttu-id="ec77b-839">返回一个值，该值指示该字符串自变量是否是有效的 XML 名称标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-839">Returns a value indicating whether or not the string argument is a valid XML name token.</span></span></summary>
        <returns><span data-ttu-id="ec77b-840">如果它是有效的名称标记，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-840"><see langword="true" /> if it is a valid name token; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-841">此方法使用[W3C XML 1.0 建议](https://go.microsoft.com/fwlink/?LinkId=49863)来确定名称令牌是否有效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-841">This method uses the [W3C XML 1.0 Recommendation](https://go.microsoft.com/fwlink/?LinkId=49863) to determine whether the name token is valid.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-842"><paramref name="str" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-842">The <paramref name="str" /> value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-843">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-843">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-844">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-844">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-845">测试当前内容节点是否是开始标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-845">Tests if the current content node is a start tag.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement();" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : unit -&gt; bool&#xA;override this.IsStartElement : unit -&gt; bool" Usage="xmlReader.IsStartElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-846">调用 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 并测试当前内容节点是否是开始标记或空元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-846">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag.</span></span></summary>
        <returns><span data-ttu-id="ec77b-847">如果 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 找到开始标记或空元素标记，则为 <see langword="true" />；如果找到不同于 <see langword="false" /> 的节点类型，则为 <see langword="XmlNodeType.Element" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-847"><see langword="true" /> if <see cref="M:System.Xml.XmlReader.MoveToContent" /> finds a start tag or empty element tag; <see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-848">此方法跳过空白、注释和处理指令，直到将读取器定位在内容节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-848">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="ec77b-849">然后，方法测试当前节点是否为元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-849">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-850">下面的示例显示每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-850">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#10](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#10)]
 [!code-vb[XmlReaderBasic#10](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#10)]  
  
 <span data-ttu-id="ec77b-851">该示例使用文件（`elems.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-851">The example uses the file, `elems.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#3](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/elems.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-852">在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-852">Incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-853">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-853">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-854">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-854">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : string -&gt; bool&#xA;override this.IsStartElement : string -&gt; bool" Usage="xmlReader.IsStartElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-855">与找到的元素的 <see langword="Name" /> 属性匹配的字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-855">The string matched against the <see langword="Name" /> property of the element found.</span></span></param>
        <summary><span data-ttu-id="ec77b-856">调用 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 并测试当前内容节点是否是开始标记或空元素标记，以及所找到元素的 <see cref="P:System.Xml.XmlReader.Name" /> 属性是否与给定的参数匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-856">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given argument.</span></span></summary>
        <returns><span data-ttu-id="ec77b-857">如果生成的节点是一个元素，且 <see langword="true" /> 属性与指定的字符串匹配，则为 <see langword="Name" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-857"><see langword="true" /> if the resulting node is an element and the <see langword="Name" /> property matches the specified string.</span></span> <span data-ttu-id="ec77b-858">如果找到 <see langword="false" /> 之外的节点类型，或者元素的 <see langword="XmlNodeType.Element" /> 属性与指定的字符串不匹配，则为 <see langword="Name" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-858"><see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the element <see langword="Name" /> property does not match the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-859">此方法跳过空白、注释和处理指令，直到将读取器定位在内容节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-859">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="ec77b-860">然后，方法测试当前节点是否为元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-860">The method then tests if the current node is an element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-861">下面的示例显示每个价格元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-861">The following example displays each price element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#17](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#17)]
 [!code-vb[XmlReaderBasic#17](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-862">在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-862">Incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-863">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-863">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-864">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-864">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <Member MemberName="IsStartElement">
      <MemberSignature Language="C#" Value="public virtual bool IsStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.IsStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStartElement (localname As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member IsStartElement : string * string -&gt; bool&#xA;override this.IsStartElement : string * string -&gt; bool" Usage="xmlReader.IsStartElement (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="ec77b-865">与找到的元素的 <see langword="LocalName" /> 属性匹配的字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-865">The string to match against the <see langword="LocalName" /> property of the element found.</span></span></param>
        <param name="ns"><span data-ttu-id="ec77b-866">与找到的元素的 <see langword="NamespaceURI" /> 属性匹配的字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-866">The string to match against the <see langword="NamespaceURI" /> property of the element found.</span></span></param>
        <summary><span data-ttu-id="ec77b-867">调用 <see cref="M:System.Xml.XmlReader.MoveToContent" /> 并测试当前内容节点是否是开始标记或空元素标记，以及所找到元素的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 属性是否与给定的字符串匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-867">Calls <see cref="M:System.Xml.XmlReader.MoveToContent" /> and tests if the current content node is a start tag or empty element tag and if the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found match the given strings.</span></span></summary>
        <returns><span data-ttu-id="ec77b-868">如果生成的节点是一个元素，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-868"><see langword="true" /> if the resulting node is an element.</span></span> <span data-ttu-id="ec77b-869">如果找到 <see langword="false" /> 之外的节点类型，或者元素的 <see langword="XmlNodeType.Element" /> 和 <see langword="LocalName" /> 属性与指定的字符串不匹配，则为 <see langword="NamespaceURI" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-869"><see langword="false" /> if a node type other than <see langword="XmlNodeType.Element" /> was found or if the <see langword="LocalName" /> and <see langword="NamespaceURI" /> properties of the element do not match the specified strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-870">此方法跳过空白、注释和处理指令，直到将读取器定位在内容节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-870">This method skips white space, comments, and processing instructions until the reader is positioned on a content node.</span></span> <span data-ttu-id="ec77b-871">然后，方法测试当前节点是否为元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-871">The method then tests if the current node is an element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-872">在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-872">Incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-873">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-873">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-874">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-874">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.MoveToContent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-875">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-875">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-876">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-876">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-877">当在派生类中被重写时，获取此属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-877">When overridden in a derived class, gets the value of the attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[int i] { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(i As Integer) As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberSignature Language="C#" Value="public abstract string this[int i] { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(i As Integer) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ default[int] { System::String ^ get(int i); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="ec77b-878">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="ec77b-878">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-879">当在派生类中被重写时，获取具有指定索引的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-879">When overridden in a derived class, gets the value of the attribute with the specified index.</span></span></summary>
        <value><span data-ttu-id="ec77b-880">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-880">The value of the specified attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-881">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-881">This property does not move the reader.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-882">下面的示例显示当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-882">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#1)]
 [!code-vb[XmlReaderBasic#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-883">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-883">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-884">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-884">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name] { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String) As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberSignature Language="C#" Value="public abstract string this[string name] { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(name As String) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-885">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-885">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-886">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-886">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span></span></summary>
        <value><span data-ttu-id="ec77b-887">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-887">The value of the specified attribute.</span></span> <span data-ttu-id="ec77b-888">如果未找到该属性，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-888">If the attribute is not found, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-889">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-889">This property does not move the reader.</span></span>  
  
 <span data-ttu-id="ec77b-890">如果读取器定位在 `DocumentType` 节点上，则可以使用此方法获取公共和系统文本，例如 `reader["PUBLIC"]`</span><span class="sxs-lookup"><span data-stu-id="ec77b-890">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader["PUBLIC"]`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-891">下面的示例获取 ISBN 特性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-891">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#7)]
 [!code-vb[XmlReaderBasic#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-892">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-892">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-893">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-893">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string name, string namespaceURI] { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(name As String, namespaceURI As String) As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlReader.Item" />
      <MemberSignature Language="C#" Value="public abstract string this[string name, string namespaceURI] { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(name As String, namespaceURI As String) As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-894">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-894">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-895">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-895">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-896">当在派生类中被重写时，获取具有指定 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-896">When overridden in a derived class, gets the value of the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span></span></summary>
        <value><span data-ttu-id="ec77b-897">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-897">The value of the specified attribute.</span></span> <span data-ttu-id="ec77b-898">如果未找到该属性，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-898">If the attribute is not found, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-899">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-899">This property does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-900">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-900">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-901">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-901">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.GetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public abstract string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-902">当在派生类中被重写时，获取当前节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-902">When overridden in a derived class, gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-903">移除了前缀的当前节点的名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-903">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="ec77b-904">例如，<see langword="LocalName" /> <see langword="book" /> 用于元素<c>&lt;bk： book&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-904">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="ec77b-905">对于没有名称的节点类型（如 <see langword="Text" />、<see langword="Comment" /> 等），该属性返回 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-905">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns <see langword="String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-906">下面的示例显示每个节点的本地名称，并显示前缀和命名空间 URI （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-906">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="ec77b-907">该示例使用文件 book2 作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-907">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-908">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-908">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-909">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-909">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.Name" />
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public abstract string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string" Usage="xmlReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="ec77b-910">要解析其命名空间 URI 的前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-910">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="ec77b-911">若要匹配默认命名空间，请传递一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-911">To match the default namespace, pass an empty string.</span></span></param>
        <summary><span data-ttu-id="ec77b-912">当在派生类中被重写时，在当前元素的范围内解析命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-912">When overridden in a derived class, resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="ec77b-913">前缀映射到的命名空间 URI；如果未找到任何匹配的前缀，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-913">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-914">在下面的 XML 字符串中，如果读取器定位在 `href` 特性上，则通过调用 `reader.LookupNamespace("a")`来解析前缀 `a`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-914">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="ec77b-915">返回的字符串是 `urn:456`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-915">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
  <item>  
  <ref href="a:b"/>  
  </item>  
 </root>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-916">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-916">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-917">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-917">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-918">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-918">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-919">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-919">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-920">当在派生类中被重写时，移动到指定的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-920">When overridden in a derived class, moves to the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public virtual void MoveToAttribute (int i);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveToAttribute(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveToAttribute (i As Integer)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveToAttribute(int i);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : int -&gt; unit&#xA;override this.MoveToAttribute : int -&gt; unit" Usage="xmlReader.MoveToAttribute i" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public abstract void MoveToAttribute (int i);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub MoveToAttribute (i As Integer)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void MoveToAttribute(int i);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : int -&gt; unit" Usage="xmlReader.MoveToAttribute i" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="ec77b-921">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="ec77b-921">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-922">当在派生类中被重写时，移动到具有指定索引的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-922">When overridden in a derived class, moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-923">下面的示例显示当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-923">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-924">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-924">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-925">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-925">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec77b-926">参数为负值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-926">The parameter has a negative value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string -&gt; bool" Usage="xmlReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-927">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-927">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-928">当在派生类中被重写时，移动到具有指定 <see cref="P:System.Xml.XmlReader.Name" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-928">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.Name" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-929">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-929"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec77b-930">如果为 <see langword="false" />，则读取器的位置未改变。</span><span class="sxs-lookup"><span data-stu-id="ec77b-930">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-931">调用 `MoveToAttribute`后，<xref:System.Xml.XmlReader.Name%2A>、<xref:System.Xml.XmlReader.NamespaceURI%2A>和 <xref:System.Xml.XmlReader.Prefix%2A> 属性将反映该特性的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-931">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-932">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-932">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-933">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-933">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-934">参数是空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-934">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToAttribute (string name, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToAttribute(string name, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToAttribute (name As String, ns As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToAttribute(System::String ^ name, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member MoveToAttribute : string * string -&gt; bool" Usage="xmlReader.MoveToAttribute (name, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-935">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-935">The local name of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="ec77b-936">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-936">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="ec77b-937">当在派生类中被重写时，移动到具有指定的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-937">When overridden in a derived class, moves to the attribute with the specified <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-938">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-938"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec77b-939">如果为 <see langword="false" />，则读取器的位置未改变。</span><span class="sxs-lookup"><span data-stu-id="ec77b-939">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-940">调用 `MoveToAttribute`后，<xref:System.Xml.XmlReader.Name%2A>、<xref:System.Xml.XmlReader.NamespaceURI%2A>和 <xref:System.Xml.XmlReader.Prefix%2A> 属性将反映该特性的属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-940">After calling `MoveToAttribute`, the <xref:System.Xml.XmlReader.Name%2A>, <xref:System.Xml.XmlReader.NamespaceURI%2A>, and <xref:System.Xml.XmlReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-941">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-941">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-942">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-942">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-943">两个参数值均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-943">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContent">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNodeType MoveToContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xml.XmlNodeType MoveToContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContent () As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlNodeType MoveToContent();" />
      <MemberSignature Language="F#" Value="abstract member MoveToContent : unit -&gt; System.Xml.XmlNodeType&#xA;override this.MoveToContent : unit -&gt; System.Xml.XmlNodeType" Usage="xmlReader.MoveToContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-944">检查当前节点是否是内容（非空白文本、<see langword="CDATA" />、<see langword="Element" />、<see langword="EndElement" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" />）节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-944">Checks whether the current node is a content (non-white space text, <see langword="CDATA" />, <see langword="Element" />, <see langword="EndElement" />, <see langword="EntityReference" />, or <see langword="EndEntity" />) node.</span></span> <span data-ttu-id="ec77b-945">如果此节点不是内容节点，则读取器向前跳至下一个内容节点或文件结尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-945">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span></span> <span data-ttu-id="ec77b-946">它跳过以下类型的节点：<see langword="ProcessingInstruction" />、<see langword="DocumentType" />、<see langword="Comment" />、<see langword="Whitespace" /> 或 <see langword="SignificantWhitespace" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-946">It skips over nodes of the following type: <see langword="ProcessingInstruction" />, <see langword="DocumentType" />, <see langword="Comment" />, <see langword="Whitespace" />, or <see langword="SignificantWhitespace" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-947">此方法找到的当前节点的 <see cref="P:System.Xml.XmlReader.NodeType" />；如果读取器已到达输入流的末尾，则为 <see langword="XmlNodeType.None" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-947">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-948">如果当前节点是属性节点，则此方法会将读取器移回拥有该属性的元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-948">If the current node is an attribute node, this method moves the reader back to the element that owns the attribute.</span></span>  
  
 <span data-ttu-id="ec77b-949">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.MoveToContentAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-949">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.MoveToContentAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-950">如果希望编写可在不中断的情况下跳过随机 XML 标记的代码，则此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-950">This is useful when you want to write code that can skip over random XML markup without breaking.</span></span> <span data-ttu-id="ec77b-951">例如，假设有以下代码：</span><span class="sxs-lookup"><span data-stu-id="ec77b-951">For example, suppose you have the following code:</span></span>  
  
 [!code-cpp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlReader.MoveToContent Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlReader.MoveToContent Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ec77b-952">此代码可以在不中断的情况下处理以下输入：</span><span class="sxs-lookup"><span data-stu-id="ec77b-952">This code can handle the following inputs without breaking:</span></span>  
  
```xml  
<price>123.4</price>  
```  
  
 <span data-ttu-id="ec77b-953">和</span><span class="sxs-lookup"><span data-stu-id="ec77b-953">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM  
  "abc"><price>123.4</price>  
```  
  
 <span data-ttu-id="ec77b-954">和</span><span class="sxs-lookup"><span data-stu-id="ec77b-954">and</span></span>  
  
```xml  
<?xml version="1.0"><!DOCTYPE price SYSTEM "abc"  
  [<!ENTITY p  
  "123.4">]><price>&p;</price>  
```  
  
 <span data-ttu-id="ec77b-955">和</span><span class="sxs-lookup"><span data-stu-id="ec77b-955">and</span></span>  
  
```xml  
<!-- some test comment --><?processing  
  instruction?><price>123.4</price>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-956">在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-956">Incorrect XML encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-957">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-957">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-958">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-958">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToContentAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt; MoveToContentAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.Xml.XmlNodeType&gt; MoveToContentAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToContentAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveToContentAsync () As Task(Of XmlNodeType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Xml::XmlNodeType&gt; ^ MoveToContentAsync();" />
      <MemberSignature Language="F#" Value="abstract member MoveToContentAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;&#xA;override this.MoveToContentAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;" Usage="xmlReader.MoveToContentAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Xml.XmlNodeType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-959">异步检查当前节点是否为内容节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-959">Asynchronously checks whether the current node is a content node.</span></span> <span data-ttu-id="ec77b-960">如果此节点不是内容节点，则读取器向前跳至下一个内容节点或文件结尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-960">If the node is not a content node, the reader skips ahead to the next content node or end of file.</span></span></summary>
        <returns><span data-ttu-id="ec77b-961">此方法找到的当前节点的 <see cref="P:System.Xml.XmlReader.NodeType" />；如果读取器已到达输入流的末尾，则为 <see langword="XmlNodeType.None" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-961">The <see cref="P:System.Xml.XmlReader.NodeType" /> of the current node found by the method or <see langword="XmlNodeType.None" /> if the reader has reached the end of the input stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-962">这是 <xref:System.Xml.XmlReader.MoveToContent%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-962">This is the asynchronous version of <xref:System.Xml.XmlReader.MoveToContent%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-963">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-963">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-964">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-964">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-965">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-965">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-966">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-966">-or-</span></span>

<span data-ttu-id="ec77b-967">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-967">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-968">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-968">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-969">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-969">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public abstract bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToElement();" />
      <MemberSignature Language="F#" Value="abstract member MoveToElement : unit -&gt; bool" Usage="xmlReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-970">当在派生类中被重写时，移动到包含当前属性节点的元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-970">When overridden in a derived class, moves to the element that contains the current attribute node.</span></span></summary>
        <returns><span data-ttu-id="ec77b-971">如果读取器定位在属性上（读取器移动到拥有该属性的元素），则为 <see langword="true" />；如果读取器未定位在属性上（读取器的位置不更改），则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-971"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-972">使用此方法可以在通过元素的属性导航后返回到元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-972">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="ec77b-973">此方法将读取器移到以下节点类型之一： `Element`、`DocumentType`或 `XmlDeclaration`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-973">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-974">下面的示例显示当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-974">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#4)]
 [!code-vb[XmlReaderBasic#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-975">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-975">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-976">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-976">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToFirstAttribute : unit -&gt; bool" Usage="xmlReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-977">当在派生类中被重写时，移动到第一个属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-977">When overridden in a derived class, moves to the first attribute.</span></span></summary>
        <returns><span data-ttu-id="ec77b-978">如果属性存在（读取器移动到第一个属性），则为 <see langword="true" />；否则为 <see langword="false" />（读取器的位置不更改）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-978"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-979">下面的示例获取第一个属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-979">The following example gets the value of the first attribute.</span></span>  
  
 [!code-csharp[XmlReaderBasic#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#5)]
 [!code-vb[XmlReaderBasic#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-980">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-980">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-981">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-981">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public abstract bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="abstract member MoveToNextAttribute : unit -&gt; bool" Usage="xmlReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-982">当在派生类中被重写时，移动到下一个属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-982">When overridden in a derived class, moves to the next attribute.</span></span></summary>
        <returns><span data-ttu-id="ec77b-983">如果存在下一个属性，则为 <see langword="true" />；如果没有其他属性，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-983"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-984">如果当前节点是元素节点，则此方法等效于 <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-984">If the current node is an element node, this method is equivalent to <xref:System.Xml.XmlReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="ec77b-985">如果 `MoveToNextAttribute` 返回 `true`，则读取器将移到下一个属性;否则，读取器的位置不会更改。</span><span class="sxs-lookup"><span data-stu-id="ec77b-985">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-986">下面的示例显示当前节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-986">The following example displays all attributes on the current node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#6)]
 [!code-vb[XmlReaderBasic#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-987">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-987">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-988">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-988">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlReader.Name" />
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-989">当在派生类中被重写时，获取当前节点的限定名。</span><span class="sxs-lookup"><span data-stu-id="ec77b-989">When overridden in a derived class, gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-990">当前节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-990">The qualified name of the current node.</span></span> <span data-ttu-id="ec77b-991">例如，<see langword="Name" /> <see langword="bk:book" /> 用于元素<c>&lt;bk： book&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-991">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="ec77b-992">返回的名称取决于节点的 <see cref="P:System.Xml.XmlReader.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-992">The name returned is dependent on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span></span> <span data-ttu-id="ec77b-993">下列节点类型返回所列的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-993">The following node types return the listed values.</span></span> <span data-ttu-id="ec77b-994">所有其他节点类型返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-994">All other node types return an empty string.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ec77b-995">节点类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-995">Node type</span></span> 
 </term><description> <span data-ttu-id="ec77b-996">“属性”</span><span class="sxs-lookup"><span data-stu-id="ec77b-996">Name</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="ec77b-997">属性名。</span><span class="sxs-lookup"><span data-stu-id="ec77b-997">The name of the attribute.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="ec77b-998">文档类型名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-998">The document type name.</span></span>  
  
 </description></item><item><term><see langword="Element" /></term><description> <span data-ttu-id="ec77b-999">标记名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-999">The tag name.</span></span>  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> <span data-ttu-id="ec77b-1000">引用的实体的名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1000">The name of the entity referenced.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="ec77b-1001">处理指令的目标。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1001">The target of the processing instruction.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="ec77b-1002">字符串 <see langword="xml" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1002">The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-1003">下面的示例读取 XML 文件并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1003">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="ec77b-1004">该示例使用 `items.xml` 文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1004">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1005">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1005">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1006">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1006">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.LocalName" />
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public abstract string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-1007">当在派生类中被重写时，获取读取器定位在其上的节点的命名空间 URI（采用 W3C 命名空间规范中定义的形式）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1007">When overridden in a derived class, gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="ec77b-1008">当前节点的命名空间 URI；否则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1008">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1009">此属性仅与 `Element` 和 `Attribute` 节点相关。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1009">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1010">下面的示例显示每个节点的本地名称，并显示前缀和命名空间 URI （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1010">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="ec77b-1011">该示例使用文件 book2 作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1011">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1012">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1012">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1013">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1013">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-1014">当在派生类中被重写时，获取与该实现关联的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1014">When overridden in a derived class, gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="ec77b-1015"><see langword="XmlNameTable" />，它使你能够获取该节点内字符串的原子化版本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1015">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1016">从 <xref:System.Xml.XmlReader> 返回的所有节点和属性名称都使用 `NameTable`进行原子化。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1016">All node and attribute names returned from <xref:System.Xml.XmlReader> are atomized using the `NameTable`.</span></span> <span data-ttu-id="ec77b-1017">如果多次返回相同的名称（例如 `Customer`），则将为该名称返回相同的 `String` 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1017">When the same name is returned multiple times (for example, `Customer`), then the same `String` object will be returned for that name.</span></span> <span data-ttu-id="ec77b-1018">这样一来，就可以编写有效的代码，对这些字符串进行对象比较，而不是对开销较高的字符串进行比较。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1018">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1019">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1019">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1020">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1020">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-1021">当在派生类中被重写时，获取当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1021">When overridden in a derived class, gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-1022">指定当前节点的类型的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1022">One of the enumeration values that specify the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-1023">下面的示例读取 XML 文件并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1023">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="ec77b-1024">该示例使用 `items.xml` 文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1024">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1025">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1025">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1026">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1026">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-1027">当在派生类中被重写时，获取与当前节点关联的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1027">When overridden in a derived class, gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-1028">与当前节点关联的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1028">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-1029">下面的示例显示每个节点的本地名称，并显示前缀和命名空间 URI （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1029">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-csharp[XmlReaderBasic#9](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#9)]
 [!code-vb[XmlReaderBasic#9](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#9)]  
  
 <span data-ttu-id="ec77b-1030">该示例使用文件 book2 作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1030">The example uses the file, book2.xml, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#5](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book2.xml#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1031">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1031">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1032">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1032">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public virtual char QuoteChar { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property QuoteChar As Char" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlReader.QuoteChar" />
      <MemberSignature Language="C#" Value="public abstract char QuoteChar { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property QuoteChar As Char" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property char QuoteChar { char get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-1033">当在派生类中被重写时，获取用于括住特性节点值的引号字符。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1033">When overridden in a derived class, gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="ec77b-1034">用于括起属性节点的值的引号字符（" 或 '）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1034">The quotation mark character (" or ') used to enclose the value of an attribute node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1035">此属性仅适用于属性节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1035">This property applies only to an attribute node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1036">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1036">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1037">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1037">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public abstract bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="xmlReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1038">当在派生类中被重写时，从流中读取下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1038">When overridden in a derived class, reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1039">如果已成功读取下一节点，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1039"><see langword="true" /> if the next node was read successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1040">首次创建和初始化 <xref:System.Xml.XmlReader> 时，没有可用的信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1040">When an <xref:System.Xml.XmlReader> is first created and initialized, there is no information available.</span></span> <span data-ttu-id="ec77b-1041">必须调用 <xref:System.Xml.XmlReader.Read%2A> 才能读取第一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1041">You must call <xref:System.Xml.XmlReader.Read%2A> to read the first node.</span></span> <span data-ttu-id="ec77b-1042"><xref:System.Xml.XmlReader.Read%2A> 方法将 XML 读取器的状态设置为启动 <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType> 并按顺序在 XML 文件中移动，直到它到达文件的末尾，此时该方法返回 `false`的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1042">The <xref:System.Xml.XmlReader.Read%2A> method sets the state of the XML reader to initiate <xref:System.Xml.ReadState.Initial?displayProperty=nameWithType> and moves through the XML file sequentially until it reaches the end of the file, at which point the method returns a value of `false`.</span></span>  
  
 <span data-ttu-id="ec77b-1043">此方法至少需要数据流中的四个字节，才能开始分析。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1043">This method requires at least four bytes from the data stream in order to begin parsing.</span></span> <span data-ttu-id="ec77b-1044">如果返回的字节数少于四个，并且流中没有更多的数据，则该方法将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1044">If fewer than four bytes are returned and there is no more data in the stream, the method returns `false`.</span></span> <span data-ttu-id="ec77b-1045">如果流中有更多数据，该方法将会阻止分析，直到收到第四个字节。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1045">If there is more data in the stream, the method will block parsing until receipt of the fourth byte.</span></span>  
  
 <span data-ttu-id="ec77b-1046">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1046">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1047">下面的示例读取 XML 文件并显示每个节点：</span><span class="sxs-lookup"><span data-stu-id="ec77b-1047">The following example reads an XML file and displays each of the nodes:</span></span>
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="ec77b-1048">该示例使用 `items.xml` 文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1048">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 <span data-ttu-id="ec77b-1049">**输出：**</span><span class="sxs-lookup"><span data-stu-id="ec77b-1049">**Output:**</span></span>  

 [!INCLUDE [xmlreader-read-sample-output](~/includes/xmlreader-read-sample-output.md)] 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1050">分析 XML 时出错。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1050">An error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1051">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1051">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1052">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1052">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;bool&gt; ReadAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync () As Task(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;bool&gt; ^ ReadAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;&#xA;override this.ReadAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="xmlReader.ReadAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1053">异步读取该流的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1053">Asynchronously reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1054">如果成功读取了下一个节点，则为 <see langword="true" />；如果没有其他节点可读取，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1054"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1055">这是 <xref:System.Xml.XmlReader.Read%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1055">This is the asynchronous version of <xref:System.Xml.XmlReader.Read%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1056">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1056">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1057">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1057">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1058">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1058">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1059">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1059">-or-</span></span>

<span data-ttu-id="ec77b-1060">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1060">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1061">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1061">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1062">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1062">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public abstract bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="abstract member ReadAttributeValue : unit -&gt; bool" Usage="xmlReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1063">当在派生类中被重写时，将属性值解析为一个或多个 <see langword="Text" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1063">When overridden in a derived class, parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1064">如果有可返回的节点，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1064"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="ec77b-1065">如果进行初始调用时读取器不是定位在属性节点上，或者如果已读取了所有属性值，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1065"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
<span data-ttu-id="ec77b-1066">如果是空属性（如 <c>misc=""</c>），则返回 <see langword="true" />，同时返回值为 <see langword="String.Empty" /> 的单个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1066">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of <see langword="String.Empty" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1067">在调用 <xref:System.Xml.XmlReader.MoveToAttribute%2A> 读取组成特性值的文本或实体引用节点后，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1067">Use this method after calling <xref:System.Xml.XmlReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="ec77b-1068">属性值节点的 <xref:System.Xml.XmlReader.Depth%2A> 是属性节点的深度，当你单步执行和跳出常规实体引用时，它会递增和递减一个。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1068">The <xref:System.Xml.XmlReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1069">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1069">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1070">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1070">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ReadContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlReader.ReadContentAs (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="ec77b-1071">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1071">The type of the value to be returned.</span></span>  
  
 <span data-ttu-id="ec77b-1072">**注意**：随着 .NET Framework 3.5 的发布，<paramref name="returnType" /> 参数的值现在可以为 <see cref="T:System.DateTimeOffset" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1072">**Note** With the release of the .NET Framework 3.5, the value of the <paramref name="returnType" /> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="ec77b-1073">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1073">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span> <span data-ttu-id="ec77b-1074">例如，将 <see cref="T:System.Xml.XmlQualifiedName" /> 对象转换为 <c>xs:string</c> 时可以使用此对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1074">For example, this can be used when converting an <see cref="T:System.Xml.XmlQualifiedName" /> object to an <c>xs:string</c>.</span></span>  
  
<span data-ttu-id="ec77b-1075">此值可为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1075">This value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ec77b-1076">将内容作为指定类型的对象读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1076">Reads the content as an object of the type specified.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1077">已转换为请求类型的串联文本内容或属性值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1077">The concatenated text content or attribute value converted to the requested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1078">此方法读取当前读取器位置处的文本内容，并将其转换为请求的返回类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1078">This method reads the text content at the current reader position and converts it to the requested return type.</span></span> <span data-ttu-id="ec77b-1079">文本、空白、有效空白和 CDATA 节串联在一起。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1079">Text, white space, significant white space and CDATA sections are concatenated.</span></span> <span data-ttu-id="ec77b-1080">跳过注释和处理指令，并自动解析实体引用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1080">Comments and processing instructions are skipped and entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1081">此方法用于读取、转换（如有必要），并从当前节点内容返回原子值项。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1081">This method is used to read, convert if necessary, and return atomic value items from the current node content.</span></span> <span data-ttu-id="ec77b-1082">如果输入类型是当前节点的类型的有效映射，则返回包含当前节点的值的目标类型的实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1082">If the input type is a valid mappings for the type of the current node then an instance of the target type containing the value of the current node is returned.</span></span> <span data-ttu-id="ec77b-1083">有关默认映射的列表，请参阅 <xref:System.Xml.XmlReader> 引用 "页中的" 备注 "部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1083">See the Remarks section in the <xref:System.Xml.XmlReader> reference page for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="ec77b-1084">例如，如果有以下 XML 文本：</span><span class="sxs-lookup"><span data-stu-id="ec77b-1084">For example, if you had the following XML text:</span></span>  
  
```xml  
<elem>123 <!-- comment --> <?pi my_text?> 456 <?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="ec77b-1085">如果数据已类型化并向 <xref:System.Xml.XmlReader.ReadContentAs%2A> 方法调用提供了字符串数组，则根据有效 CLR 类型映射的列表，将整数值转换为字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1085">If the data is typed and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the integer values are converted from strings according to the list of valid CLR type mappings.</span></span>  
  
 <span data-ttu-id="ec77b-1086">如果数据是非类型化的，并且为 <xref:System.Xml.XmlReader.ReadContentAs%2A> 方法调用提供了字符串数组，则会将内容解析为不同的字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1086">If the data is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call, then the content is parsed into separate strings.</span></span> <span data-ttu-id="ec77b-1087">返回一个包含两个字符串的数组，其值为 "123" 和 "456"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1087">An array containing two strings is returned with the values "123" and "456".</span></span> <span data-ttu-id="ec77b-1088">不会保留内容中的空格。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1088">The spaces are not preserved from the content.</span></span>  
  
 <span data-ttu-id="ec77b-1089">通常，在读取非类型化数据时，将根据提供的类型分析内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1089">In general when reading untyped data the content is parsed according to the supplied type.</span></span> <span data-ttu-id="ec77b-1090">例如，如果向 <xref:System.Xml.XmlReader.ReadContentAs%2A> 方法调用提供了一个整数数组，则该字符串将分析为 {123,456}的整数数组。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1090">For example, if an integer array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then the string is parsed into an array of integers {123,456}.</span></span>  
  
 <span data-ttu-id="ec77b-1091">在下面的示例中，XML 文本不由空格分隔</span><span class="sxs-lookup"><span data-stu-id="ec77b-1091">In the following example the XML text is not separated by spaces</span></span>  
  
```xml  
<elem>123<!-- comment --><?pi my_text?>456789<?pi another_pi?></elem>  
```  
  
 <span data-ttu-id="ec77b-1092">如果内容是非类型化的，并且为 <xref:System.Xml.XmlReader.ReadContentAs%2A> 方法调用提供了字符串数组，则返回一个包含一个串联字符串的数组，其值为 "123456789"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1092">If the content is untyped and a string array is supplied to the <xref:System.Xml.XmlReader.ReadContentAs%2A> method call then an array containing one concatenated string is returned with the value "123456789".</span></span>  
  
 <span data-ttu-id="ec77b-1093">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1093">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1094">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1094">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1095">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1095">Return value</span></span>|<span data-ttu-id="ec77b-1096">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1096">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1097">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1097">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1098">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1098">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1099">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1099">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1100">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1100">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1101">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1101">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1102">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1102">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1103">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1103">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1104">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1104">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1105">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1105">An empty string.</span></span>|<span data-ttu-id="ec77b-1106">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1106">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1107">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1107">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1108">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1108">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1109">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1109">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1110">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadContentAsAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1110">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1111">下面的示例使用 <xref:System.Xml.XmlReader.ReadContentAs%2A> 方法将 colors 元素的内容返回到字符串对象数组中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1111">The following example uses the <xref:System.Xml.XmlReader.ReadContentAs%2A> method to return the contents of the colors element into an array of string objects.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#2)]
 [!code-vb[XmlReader.ReadContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#2)]  
  
 <span data-ttu-id="ec77b-1112">示例使用 `dataFile_2.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1112">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1113">内容格式不是目标类型的正确格式。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1113">The content is not in the correct format for the target type.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1114">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1114">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1115"><paramref name="returnType" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1115">The <paramref name="returnType" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1116">当前节点不是所支持的节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1116">The current node is not a supported node type.</span></span> <span data-ttu-id="ec77b-1117">有关详细信息，请参见下表。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1117">See the table below for details.</span></span>

<span data-ttu-id="ec77b-1118">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1118">-or-</span></span>

<span data-ttu-id="ec77b-1119">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1119">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1120">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1120">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec77b-1121">读取 <see langword="Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1121">Read <see langword="Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadContentAsAsync (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="ec77b-1122">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1122">The type of the value to be returned.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="ec77b-1123">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1123">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <summary><span data-ttu-id="ec77b-1124">将内容作为指定类型的对象异步读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1124">Asynchronously reads the content as an object of the type specified.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1125">已转换为请求类型的串联文本内容或属性值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1125">The concatenated text content or attribute value converted to the requested type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1126">这是 <xref:System.Xml.XmlReader.ReadContentAs%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1126">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1127">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1127">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1128">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1128">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1129">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1129">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1130">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1130">-or-</span></span>

<span data-ttu-id="ec77b-1131">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1131">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1132">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1132">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1133">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1133">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBase64 : byte[] * int * int -&gt; int&#xA;override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1134">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1134">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1135">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1135">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1136">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1136">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1137">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1137">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1138">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1138">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1139">读取内容并返回 Base64 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1139">Reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1140">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1140">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1141">此方法对内容进行流式处理，对 `Base64` 的内容进行解码，并将解码后的二进制字节（例如内联 `Base64` 编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1141">This method streams the content, decodes the `Base64` content, and returns the decoded binary bytes (for example, an inline `Base64` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="ec77b-1142">可以连续调用此方法以读取大量嵌入文本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1142">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="ec77b-1143">有关详细信息，请参阅 RFC 1521 "MIME （多用途 Internet 邮件扩展）第一部分：指定和描述 Internet 邮件正文格式的机制"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1143">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="ec77b-1144">你可以从[征求意见](https://go.microsoft.com/fwlink/?LinkId=37119)网站获取 rfc。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1144">You can obtain RFCs from the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-1145">在方法返回 `0`的值之前，不应访问 <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 方法的调用之间的任何读取器属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1145">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="ec77b-1146">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="ec77b-1146">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="ec77b-1147"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 返回值，该值 `0` 达到其所操作的字节流的末尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1147"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="ec77b-1148">读取器定位在第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1148">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="ec77b-1149">如果要求的数量少于或等于的字节数，则读取器将保留在其当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1149">If you ask for fewer, or the exact number of, bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="ec77b-1150">以下 XML 节点类型不支持 <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>： `Element`、`XmlDeclaration`、`None`、`Document`、`DocumentType`、`Notation`、`Entity`、`DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1150"><xref:System.Xml.XmlReader.ReadContentAsBase64%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation`, `Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="ec77b-1151">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1151">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBase64Async%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1152"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1152">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1153">当前节点不支持 <see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1153"><see cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span>

<span data-ttu-id="ec77b-1154">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1154">-or-</span></span>

<span data-ttu-id="ec77b-1155">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1155">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1156">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1156">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec77b-1157">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1157">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec77b-1158"><see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1158">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadContentAsBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1159">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1159">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1160">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1160">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1161">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1161">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1162">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1162">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1163">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1163">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1164">异步读取内容并返回 Base64 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1164">Asynchronously reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1165">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1165">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1166">这是 <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1166">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1167">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1167">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1168">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1168">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1169">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1169">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1170">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1170">-or-</span></span>

<span data-ttu-id="ec77b-1171">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1171">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1172">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1172">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1173">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1173">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBinHex : byte[] * int * int -&gt; int&#xA;override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1174">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1174">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1175">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1175">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1176">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1176">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1177">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1177">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1178">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1178">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1179">读取内容并返回 <see langword="BinHex" /> 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1179">Reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1180">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1180">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1181">此方法对内容进行流式处理，对 `BinHex` 的内容进行解码，并将解码后的二进制字节（例如内联 `BinHex` 编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1181">This method streams the content, decodes the `BinHex` content, and returns the decoded binary bytes (for example, an inline `BinHex` encoded GIF image) into the buffer.</span></span> <span data-ttu-id="ec77b-1182">可以连续调用此方法以读取大量嵌入文本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1182">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-1183">在方法返回 `0`的值之前，不应访问 <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 方法的调用之间的任何读取器属性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1183">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method until the method returns the value `0`.</span></span>  
  
 <span data-ttu-id="ec77b-1184">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="ec77b-1184">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="ec77b-1185"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 返回值，该值 `0` 达到其所操作的字节流的末尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1185"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> returns the value `0` when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="ec77b-1186">读取器定位在第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1186">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="ec77b-1187">如果请求的字节数少于或小于的字节数，则读取器将保留在其当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1187">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="ec77b-1188">以下 XML 节点类型不支持 <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>： `Element`、`XmlDeclaration`、`None`、`Document`、`DocumentType`、`Notation, Entity`、`DocumentFragment`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1188"><xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: `Element`, `XmlDeclaration`, `None`, `Document`, `DocumentType`, `Notation, Entity`, `DocumentFragment`.</span></span>  
  
 <span data-ttu-id="ec77b-1189">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1189">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsBinHexAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1190"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1190">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1191">当前节点不支持 <see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1191"><see cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span>

<span data-ttu-id="ec77b-1192">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1192">-or-</span></span>

<span data-ttu-id="ec77b-1193">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1193">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1194">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1194">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec77b-1195">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1195">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec77b-1196"><see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1196">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="T:System.Xml.XmlNodeType" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadContentAsBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1197">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1197">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1198">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1198">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1199">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1199">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1200">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1200">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1201">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1201">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1202">异步读取内容并返回 <see langword="BinHex" /> 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1202">Asynchronously reads the content and returns the <see langword="BinHex" /> decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1203">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1203">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1204">这是 <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1204">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1205">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1205">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1206">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1206">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1207">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1207">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1208">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1208">-or-</span></span>

<span data-ttu-id="ec77b-1209">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1209">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1210">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1210">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1211">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1211">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadContentAsBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsBoolean : unit -&gt; bool&#xA;override this.ReadContentAsBoolean : unit -&gt; bool" Usage="xmlReader.ReadContentAsBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1212">将当前位置的文本内容作为 <see langword="Boolean" /> 读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1212">Reads the text content at the current position as a <see langword="Boolean" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1213">作为 <see cref="T:System.Boolean" /> 对象的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1213">The text content as a <see cref="T:System.Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1214">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1214">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1215">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1215">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1216">如果内容是类型 `xsd:boolean`，则读取器将返回取消装箱 <xref:System.Boolean> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1216">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="ec77b-1217">如果内容不是类型化的 `xsd:boolean`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为 <xref:System.Boolean> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1217">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1218">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1218">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1219">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1219">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1220">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1220">Return value</span></span>|<span data-ttu-id="ec77b-1221">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1221">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1222">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1222">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1223">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1223">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1224">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1224">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1225">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1225">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1226">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1226">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1227">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1227">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1228">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1228">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1229">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1229">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1230">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1230">An empty string.</span></span>|<span data-ttu-id="ec77b-1231">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1231">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1232">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1232">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1233">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1233">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1234">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1234">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1235">下面的示例使用 <xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> 方法将属性作为 `Boolean` 值读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1235">The following example uses the <xref:System.Xml.XmlReader.ReadContentAsBoolean%2A> method to read the attribute as a `Boolean` value.</span></span>  
  
 [!code-csharp[XmlReader.ReadContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadContentAs/CS/readContentAs.cs#1)]
 [!code-vb[XmlReader.ReadContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadContentAs/VB/readContentAs.vb#1)]  
  
 <span data-ttu-id="ec77b-1236">示例使用 `dataFile_2.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1236">The example uses the `dataFile_2.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadContentAs#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadContentAs/XML/dataFile_2.xml#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1237">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1237">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1238">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1238">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1239">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1239">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1240">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1240">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadContentAsDateTime();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDateTime : unit -&gt; DateTime&#xA;override this.ReadContentAsDateTime : unit -&gt; DateTime" Usage="xmlReader.ReadContentAsDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1241">将当前位置的文本内容作为 <see cref="T:System.DateTime" /> 对象读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1241">Reads the text content at the current position as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1242">作为 <see cref="T:System.DateTime" /> 对象的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1242">The text content as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1243">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1243">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1244">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1244">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1245">如果内容是类型 `xsd:dateTime`，则读取器将返回取消装箱 <xref:System.DateTime> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1245">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="ec77b-1246">如果内容不是类型化的 `xsd:dateTime`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为 <xref:System.DateTime> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1246">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-1247">如果内容类型化为 <xref:System.DateTime.Year%2A?displayProperty=nameWithType>，则不能使用 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1247">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="ec77b-1248">在这种情况下 <xref:System.Xml.XmlReader> 始终将 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 值设置为1904。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1248"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="ec77b-1249">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1249">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1250">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1250">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1251">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1251">Return value</span></span>|<span data-ttu-id="ec77b-1252">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1252">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1253">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1253">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1254">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1254">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1255">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1255">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1256">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1256">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1257">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1257">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1258">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1258">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1259">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1259">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1260">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1260">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1261">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1261">An empty string.</span></span>|<span data-ttu-id="ec77b-1262">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1262">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1263">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1263">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1264">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1264">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1265">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1265">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1266">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1266">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1267">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1267">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1268">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1268">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1269">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1269">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDateTimeOffset">
      <MemberSignature Language="C#" Value="public virtual DateTimeOffset ReadContentAsDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTimeOffset ReadContentAsDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDateTimeOffset () As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTimeOffset ReadContentAsDateTimeOffset();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDateTimeOffset : unit -&gt; DateTimeOffset&#xA;override this.ReadContentAsDateTimeOffset : unit -&gt; DateTimeOffset" Usage="xmlReader.ReadContentAsDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1270">将当前位置的文本内容作为 <see cref="T:System.DateTimeOffset" /> 对象读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1270">Reads the text content at the current position as a <see cref="T:System.DateTimeOffset" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1271">作为 <see cref="T:System.DateTimeOffset" /> 对象的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1271">The text content as a <see cref="T:System.DateTimeOffset" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1272">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1272">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1273">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1273">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadContentAsDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDecimal : unit -&gt; decimal&#xA;override this.ReadContentAsDecimal : unit -&gt; decimal" Usage="xmlReader.ReadContentAsDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1274">将当前位置的文本内容作为 <see cref="T:System.Decimal" /> 对象读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1274">Reads the text content at the current position as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1275">作为 <see cref="T:System.Decimal" /> 对象的当前位置的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1275">The text content at the current position as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1276">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1276">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1277">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1277">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1278">如果内容是类型 `xsd:decimal`，则读取器将返回取消装箱 <xref:System.Decimal> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1278">If the content is typed `xsd:decimal`, the reader returns an unboxed <xref:System.Decimal> object.</span></span> <span data-ttu-id="ec77b-1279">如果内容不是类型化的 `xsd:decimal`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为 <xref:System.Decimal> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1279">If the content is not typed `xsd:decimal`, the reader attempts to convert it to a <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1280">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1280">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1281">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1281">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1282">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1282">Return value</span></span>|<span data-ttu-id="ec77b-1283">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1283">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1284">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1284">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1285">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1285">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1286">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1286">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1287">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1287">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1288">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1288">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1289">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1289">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1290">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1290">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1291">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1291">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1292">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1292">An empty string.</span></span>|<span data-ttu-id="ec77b-1293">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1293">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1294">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1294">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1295">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1295">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1296">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1296">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1297">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1297">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1298">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1298">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1299">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1299">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1300">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1300">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadContentAsDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsDouble : unit -&gt; double&#xA;override this.ReadContentAsDouble : unit -&gt; double" Usage="xmlReader.ReadContentAsDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1301">将当前位置的文本内容作为双精度浮点数读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1301">Reads the text content at the current position as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1302">作为双精度浮点数的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1302">The text content as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1303">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1303">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1304">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1304">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1305">如果内容是类型 `xsd:double`，则读取器将返回一个双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1305">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="ec77b-1306">如果未 `xsd:double`键入内容，读取器将尝试根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议定义的规则将其转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1306">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1307">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1307">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1308">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1308">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1309">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1309">Return value</span></span>|<span data-ttu-id="ec77b-1310">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1310">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1311">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1311">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1312">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1312">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1313">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1313">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1314">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1314">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1315">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1315">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1316">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1316">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1317">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1317">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1318">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1318">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1319">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1319">An empty string.</span></span>|<span data-ttu-id="ec77b-1320">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1320">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1321">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1321">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1322">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1322">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1323">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1323">For more information, see the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1324">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1324">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1325">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1325">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1326">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1326">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1327">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1327">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadContentAsFloat();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsFloat : unit -&gt; single&#xA;override this.ReadContentAsFloat : unit -&gt; single" Usage="xmlReader.ReadContentAsFloat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1328">将当前位置的文本内容作为单精度浮点数读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1328">Reads the text content at the current position as a single-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1329">作为单精度浮点数的当前位置的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1329">The text content at the current position as a single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1330">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1330">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1331">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1331">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1332">如果内容是类型 `xsd:float`，则读取器将返回取消装箱的单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1332">If the content is typed `xsd:float`, the reader returns an unboxed a single-precision floating point number.</span></span> <span data-ttu-id="ec77b-1333">如果未 `xsd:float`键入内容，读取器将尝试根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议定义的规则将其转换为单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1333">If the content is not typed `xsd:float`, the reader attempts to convert it to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1334">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1334">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1335">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1335">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1336">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1336">Return value</span></span>|<span data-ttu-id="ec77b-1337">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1337">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1338">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1338">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1339">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1339">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1340">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1340">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1341">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1341">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1342">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1342">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1343">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1343">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1344">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1344">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1345">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1345">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1346">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1346">An empty string.</span></span>|<span data-ttu-id="ec77b-1347">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1347">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1348">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1348">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1349">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1349">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1350">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1350">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1351">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1351">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1352">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1352">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1353">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1353">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1354">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1354">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadContentAsInt();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsInt : unit -&gt; int&#xA;override this.ReadContentAsInt : unit -&gt; int" Usage="xmlReader.ReadContentAsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1355">将当前位置的文本内容作为 32 位有符号整数读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1355">Reads the text content at the current position as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1356">作为 32 位有符号整数的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1356">The text content as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1357">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1357">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1358">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1358">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1359">如果内容是类型 `xsd:integer`，则读取器将返回取消装箱的32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1359">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="ec77b-1360">如果内容不是类型化的 `xsd:integer`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1360">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1361">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1361">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1362">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1362">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1363">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1363">Return value</span></span>|<span data-ttu-id="ec77b-1364">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1364">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1365">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1365">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1366">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1366">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1367">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1367">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1368">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1368">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1369">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1369">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1370">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1370">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1371">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1371">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1372">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1372">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1373">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1373">An empty string.</span></span>|<span data-ttu-id="ec77b-1374">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1374">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1375">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1375">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1376">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1376">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1377">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1377">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1378">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1378">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1379">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1379">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1380">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1380">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1381">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1381">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadContentAsLong();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsLong : unit -&gt; int64&#xA;override this.ReadContentAsLong : unit -&gt; int64" Usage="xmlReader.ReadContentAsLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1382">将当前位置的文本内容作为 64 位有符号整数读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1382">Reads the text content at the current position as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1383">作为 64 位有符号整数的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1383">The text content as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1384">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1384">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1385">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1385">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1386">如果内容是类型 `xsd:long`，则读取器将返回取消装箱的64位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1386">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="ec77b-1387">如果内容不是类型化的 `xsd:long`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为64位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1387">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1388">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1388">The following table describes this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1389">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1389">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1390">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1390">Return value</span></span>|<span data-ttu-id="ec77b-1391">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1391">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1392">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1392">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1393">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1393">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1394">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1394">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1395">与属性值 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1395">Same as `XmlConvert.ToXxx` on attribute value.</span></span>|<span data-ttu-id="ec77b-1396">读取器保持在当前位置</span><span class="sxs-lookup"><span data-stu-id="ec77b-1396">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1397">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1397">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1398">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1398">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1399">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1399">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1400">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1400">An empty string.</span></span>|<span data-ttu-id="ec77b-1401">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1401">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1402">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1402">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1403">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1403">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1404">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1404">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1405">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1405">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1406">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1406">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1407">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1407">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1408">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1408">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadContentAsObject();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsObject : unit -&gt; obj&#xA;override this.ReadContentAsObject : unit -&gt; obj" Usage="xmlReader.ReadContentAsObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1409">将当前位置的文本内容作为 <see cref="T:System.Object" /> 读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1409">Reads the text content at the current position as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1410">作为最适当的公共语言运行时 (CLR) 对象的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1410">The text content as the most appropriate common language runtime (CLR) object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1411">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1411">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1412">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1412">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1413">如果内容是类型化的，则读取器将返回由 <xref:System.Xml.XmlReader.ValueType%2A> 属性指定的最适合类型的已装箱 CLR。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1413">If the content is typed, the reader returns a boxed CLR of the most appropriate type, specified by the <xref:System.Xml.XmlReader.ValueType%2A> property.</span></span> <span data-ttu-id="ec77b-1414">如果内容是列表类型，则读取器将返回适当类型的装箱对象的数组。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1414">If the content is a list type, the reader returns an array of boxed objects of the appropriate type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-1415">如果在分析内容时出现验证错误，读取器是 <xref:System.Xml.XmlReader.Create%2A> 方法创建的 <xref:System.Xml.XmlReader> 对象，则读取器将内容作为字符串返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1415">If a validation error occurs while parsing the content and the reader is an <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A> method, the reader returns the content as a string.</span></span> <span data-ttu-id="ec77b-1416">换句话说，当发生验证错误或警告时，内容将被视为非类型化的。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1416">In other words when a validation error or warning occurs, the content is considered to be untyped.</span></span>  
  
 <span data-ttu-id="ec77b-1417">如果内容未类型化，读取器将以字符串的形式返回内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1417">If the content is not typed, the reader returns the content as a string.</span></span>  
  
 <span data-ttu-id="ec77b-1418">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1418">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1419">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1419">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1420">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1420">Return value</span></span>|<span data-ttu-id="ec77b-1421">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1421">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1422">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1422">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1423">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1423">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1424">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1424">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1425">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1425">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1426">读取器保持在当前位置</span><span class="sxs-lookup"><span data-stu-id="ec77b-1426">The reader remains in the current position</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1427">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1427">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1428">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1428">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1429">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1429">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1430">如果读取器是架构验证读取器（<xref:System.Xml.XmlReaderSettings.ValidationType%2A> 设置为 <xref:System.Xml.ValidationType.Schema>），则为元素的值;否则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1430">The value of the element if the reader is a schema validating reader (<xref:System.Xml.XmlReaderSettings.ValidationType%2A> is set to <xref:System.Xml.ValidationType.Schema>); otherwise an empty string.</span></span>|<span data-ttu-id="ec77b-1431">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1431">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1432">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1432">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1433">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1433">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1434">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1434">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1435">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1435">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsObjectAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1436">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1436">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1437">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1437">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1438">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1438">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1439">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1439">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadContentAsObjectAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadContentAsObjectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1440">将当前位置的文本内容作为 <see cref="T:System.Object" /> 对象异步读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1440">Asynchronously reads the text content at the current position as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1441">作为最适当的公共语言运行时 (CLR) 对象的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1441">The text content as the most appropriate common language runtime (CLR) object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1442">这是 <xref:System.Xml.XmlReader.ReadContentAsObject%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1442">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1443">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1443">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1444">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1444">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1445">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1445">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1446">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1446">-or-</span></span>

<span data-ttu-id="ec77b-1447">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1447">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1448">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1448">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1449">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1449">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadContentAsString();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsString : unit -&gt; string&#xA;override this.ReadContentAsString : unit -&gt; string" Usage="xmlReader.ReadContentAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1450">将当前位置的文本内容作为 <see cref="T:System.String" /> 对象读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1450">Reads the text content at the current position as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1451">作为 <see cref="T:System.String" /> 对象的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1451">The text content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1452">此方法连接文本、空格、有效空白和 CDATA 部分，并跳过任何注释或处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1452">This method concatenates text, white space, significant white space, and CDATA sections, and skips any comments or processing instructions.</span></span> <span data-ttu-id="ec77b-1453">实体引用会自动得到解决。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1453">Entity references are automatically resolved.</span></span>  
  
 <span data-ttu-id="ec77b-1454">此方法可用于将类型化值转换为字符串，或在跳过注释和处理指令时读取文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1454">This method can be used convert typed values to a string, or to read the text content while skipping comments and processing instructions.</span></span>  
  
 <span data-ttu-id="ec77b-1455">下表描述了此方法如何处理每个节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1455">The following table describes how this method treats each node type.</span></span>  
  
|<span data-ttu-id="ec77b-1456">XmlNodeType</span><span class="sxs-lookup"><span data-stu-id="ec77b-1456">XmlNodeType</span></span>|<span data-ttu-id="ec77b-1457">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-1457">Return value</span></span>|<span data-ttu-id="ec77b-1458">读取器行为</span><span class="sxs-lookup"><span data-stu-id="ec77b-1458">Reader behavior</span></span>|  
|-----------------|------------------|---------------------|  
|`Text`<br /><br /> `CDATA`<br /><br /> `Whitespace`<br /><br /> `SignificantWhitespace`<br /><br /> `EntityReference`<br /><br /> `EndEntity`|<span data-ttu-id="ec77b-1459">将文本、CDATA、空白和有效空白节点的串联内容转换为所请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1459">Concatenated content of text, CDATA, white space and significant white space nodes converted to the requested type.</span></span>|<span data-ttu-id="ec77b-1460">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1460">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1461">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1461">Entity references are automatically expanded.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-1462">与对属性值调用 `XmlConvert.ToXxx` 相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1462">Same as calling `XmlConvert.ToXxx` on the attribute value.</span></span>|<span data-ttu-id="ec77b-1463">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1463">The reader remains in the current position.</span></span>|  
|`Comment`<br /><br /> `ProcessingInstruction`|<span data-ttu-id="ec77b-1464">忽略处理指令 (PI) 或注释，读取 PI 或注释后面的串联文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1464">Ignores the processing instruction (PI) or comment and reads the concatenated text content that follows the PI or comment.</span></span>|<span data-ttu-id="ec77b-1465">移至下一个开始元素或结束元素标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1465">Moves to the next start element or end element tag.</span></span> <span data-ttu-id="ec77b-1466">实体引用自动展开。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1466">Entity references are automatically expanded.</span></span>|  
|`EndElement`|<span data-ttu-id="ec77b-1467">空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1467">An empty string.</span></span>|<span data-ttu-id="ec77b-1468">读取器仍保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1468">The reader remains in the current position.</span></span>|  
|`Element`<br /><br /> `XmlDeclaration`<br /><br /> `None`<br /><br /> `Document`<br /><br /> `DocumentType`<br /><br /> `Notation`<br /><br /> `Entity`<br /><br /> `DocumentFragment`|<span data-ttu-id="ec77b-1469">引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1469">An <xref:System.InvalidOperationException> is thrown.</span></span>|<span data-ttu-id="ec77b-1470">未定义，尽管通常读取器将保留在当前位置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1470">Undefined, although typically the reader remains in the current position.</span></span>|  
  
 <span data-ttu-id="ec77b-1471">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1471">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1472">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1472">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadContentAsStringAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ec77b-1473">试图进行的强制转换无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1473">The attempted cast is not valid.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1474">该字符串格式无效。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1474">The string format is not valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1475">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1475">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1476">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1476">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadContentAsStringAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadContentAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1477">将当前位置的文本内容作为 <see cref="T:System.String" /> 对象异步读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1477">Asynchronously reads the text content at the current position as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1478">作为 <see cref="T:System.String" /> 对象的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1478">The text content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1479">这是 <xref:System.Xml.XmlReader.ReadContentAsString%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1479">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1480">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1480">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1481">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1481">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1482">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1482">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1483">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1483">-or-</span></span>

<span data-ttu-id="ec77b-1484">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1484">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1485">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1485">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1486">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1486">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAs">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1487">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1487">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1488">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1488">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1489">读取当前元素，并将内容作为指定类型的对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1489">Reads the current element and returns the contents as an object of the type specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj&#xA;override this.ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver -&gt; obj" Usage="xmlReader.ReadElementContentAs (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="ec77b-1490">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1490">The type of the value to be returned.</span></span>  
  
 <span data-ttu-id="ec77b-1491">**注意**：随着 .NET Framework 3.5 的发布，<paramref name="returnType" /> 参数的值现在可以为 <see cref="T:System.DateTimeOffset" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1491">**Note** With the release of the .NET Framework 3.5, the value of the <paramref name="returnType" /> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="ec77b-1492">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1492">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <summary><span data-ttu-id="ec77b-1493">将元素内容作为请求类型读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1493">Reads the element content as the requested type.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1494">转换为请求类型的对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1494">The element content converted to the requested typed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1495">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1495">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1496">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1496">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1497">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1497">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1498">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1498">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1499">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1499">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1500">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1500">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1501">下面的示例使用 <xref:System.Xml.XmlReader.ReadElementContentAs%2A> 方法读取 `date` 节点的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1501">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAs%2A> method to read the content of the `date` node.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#5](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#5)]
 [!code-vb[XmlReader.ReadElementContentAs#5](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#5)]  
  
 <span data-ttu-id="ec77b-1502">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1502">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1503"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1503">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1504">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1504">-or-</span></span>

<span data-ttu-id="ec77b-1505">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1505">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1506">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1506">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1507">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1507">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1508">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1508">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1509">无法将元素内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1509">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1510">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1510">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec77b-1511">读取 <see langword="Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1511">Read <see langword="Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAs">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAs (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAs(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver, string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAs(System.Type,System.Xml.IXmlNamespaceResolver,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAs (returnType As Type, namespaceResolver As IXmlNamespaceResolver, localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAs(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver, System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver * string * string -&gt; obj&#xA;override this.ReadElementContentAs : Type * System.Xml.IXmlNamespaceResolver * string * string -&gt; obj" Usage="xmlReader.ReadElementContentAs (returnType, namespaceResolver, localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localName" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="ec77b-1512">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1512">The type of the value to be returned.</span></span>  
  
 <span data-ttu-id="ec77b-1513">**注意**：随着 .NET Framework 3.5 的发布，<paramref name="returnType" /> 参数的值现在可以为 <see cref="T:System.DateTimeOffset" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1513">**Note** With the release of the .NET Framework 3.5, the value of the <paramref name="returnType" /> parameter can now be the <see cref="T:System.DateTimeOffset" /> type.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="ec77b-1514">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1514">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <param name="localName"><span data-ttu-id="ec77b-1515">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1515">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1516">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1516">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1517">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后将元素内容作为请求类型读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1517">Checks that the specified local name and namespace URI matches that of the current element, then reads the element content as the requested type.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1518">转换为请求类型的对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1518">The element content converted to the requested typed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1519">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1519">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1520">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1520">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1521">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1521">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1522">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1522">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1523">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1523">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1524"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1524">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1525">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1525">-or-</span></span>

<span data-ttu-id="ec77b-1526">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1526">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1527">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1527">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1528">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1528">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1529">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1529">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1530">无法将元素内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1530">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1531">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1531">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1532">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1532">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ec77b-1533">读取 <see langword="Decimal.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1533">Read <see langword="Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsAsync (Type returnType, System.Xml.IXmlNamespaceResolver namespaceResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsAsync(class System.Type returnType, class System.Xml.IXmlNamespaceResolver namespaceResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsAsync(System.Type,System.Xml.IXmlNamespaceResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsAsync (returnType As Type, namespaceResolver As IXmlNamespaceResolver) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsAsync(Type ^ returnType, System::Xml::IXmlNamespaceResolver ^ namespaceResolver);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadElementContentAsAsync : Type * System.Xml.IXmlNamespaceResolver -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadElementContentAsAsync (returnType, namespaceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="returnType" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceResolver" Type="System.Xml.IXmlNamespaceResolver" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="returnType"><span data-ttu-id="ec77b-1534">要返回的值的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1534">The type of the value to be returned.</span></span></param>
        <param name="namespaceResolver"><span data-ttu-id="ec77b-1535">一个 <see cref="T:System.Xml.IXmlNamespaceResolver" /> 对象，用于解析与类型转换有关的任何命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1535">An <see cref="T:System.Xml.IXmlNamespaceResolver" /> object that is used to resolve any namespace prefixes related to type conversion.</span></span></param>
        <summary><span data-ttu-id="ec77b-1536">将元素内容作为请求类型异步读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1536">Asynchronously reads the element content as the requested type.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1537">转换为请求类型的对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1537">The element content converted to the requested typed object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1538">这是 <xref:System.Xml.XmlReader.ReadElementContentAs%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1538">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAs%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1539">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1539">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1540">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1540">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1541">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1541">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>
<span data-ttu-id="ec77b-1542">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1542">-or-</span></span>

<span data-ttu-id="ec77b-1543">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1543">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1544">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1544">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1545">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1545">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBase64 : byte[] * int * int -&gt; int&#xA;override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1546">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1546">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1547">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1547">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1548">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1548">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1549">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1549">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1550">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1550">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1551">读取元素并对 <see langword="Base64" /> 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1551">Reads the element and decodes the <see langword="Base64" /> content.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1552">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1552">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1553">此方法读取元素内容，使用 `Base64` 编码对其进行解码，并将解码后的二进制字节（例如内联 `Base64`编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1553">This method reads the element content, decodes it using `Base64` encoding, and returns the decoded binary bytes (for example, an inline `Base64`-encoded GIF image) into the buffer.</span></span> <span data-ttu-id="ec77b-1554">有关详细信息，请参阅 RFC 1521 "MIME （多用途 Internet 邮件扩展）第一部分：指定和描述 Internet 邮件正文格式的机制"。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1554">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="ec77b-1555">你可以从[征求意见](https://go.microsoft.com/fwlink/?LinkId=37119)网站获取 rfc。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1555">You can obtain RFCs from the [Request for Comments Web site](https://go.microsoft.com/fwlink/?LinkId=37119).</span></span>  
  
 <span data-ttu-id="ec77b-1556"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> 只能读取简单内容元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1556"><xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A> can only read simple-content elements.</span></span> <span data-ttu-id="ec77b-1557">元素可以包含文本、空格、有效空白、CDATA 部分、注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1557">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="ec77b-1558">它还可以包含自动扩展的实体引用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1558">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="ec77b-1559">元素不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1559">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1560">此方法与 <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> 方法非常相似，只不过它只能在元素节点类型上调用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1560">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="ec77b-1561">如果 `count` 值大于文档中的字节数，或者它等于文档中的字节数，则 <xref:System.Xml.XmlReader> 读取文档中的所有剩余字节并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1561">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="ec77b-1562">下一个 <xref:System.Xml.XmlReader> 方法调用返回零，并将读取器移动到 `EndElement`后的节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1562">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="ec77b-1563">如果在所有元素内容使用之前调用 <xref:System.Xml.XmlReader.Read%2A>，则读取器的行为可能与第一个内容的行为相同，然后调用 <xref:System.Xml.XmlReader.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1563">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="ec77b-1564">这意味着读取器将读取所有文本，直到遇到结束元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1564">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="ec77b-1565">然后，它将读取结束标记节点，读取下一个节点，然后在下一个后续节点上定位自身。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1565">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="ec77b-1566">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1566">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBase64Async%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1567">下面的示例读取内联 `Base64` 编码的图像。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1567">The following example reads an inline `Base64` encoded image.</span></span> <span data-ttu-id="ec77b-1568">`Base64` 数据嵌入 `<image>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1568">The `Base64` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="ec77b-1569"><xref:System.IO.BinaryWriter> 用于创建新的二进制数据文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1569">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#4)]
 [!code-vb[XmlReader_Read_Write_Binary#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1570"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1570">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1571">当前节点不是元素节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1571">The current node is not an element node.</span></span>

<span data-ttu-id="ec77b-1572">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1572">-or-</span></span>

<span data-ttu-id="ec77b-1573">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1573">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1574">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1574">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec77b-1575">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1575">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec77b-1576"><see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1576">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1577">该元素包含混合内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1577">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1578">无法将内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1578">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64Async">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBase64Async (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBase64Async(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBase64Async(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBase64Async (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBase64Async(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadElementContentAsBase64Async : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadElementContentAsBase64Async (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1579">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1579">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1580">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1580">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1581">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1581">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1582">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1582">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1583">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1583">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1584">异步读取元素并对 <see langword="Base64" /> 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1584">Asynchronously reads the element and decodes the <see langword="Base64" /> content.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1585">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1585">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1586">这是 <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1586">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1587">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1587">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1588">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1588">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1589">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1589">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1590">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1590">-or-</span></span>

<span data-ttu-id="ec77b-1591">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1591">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1592">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1592">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1593">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1593">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBinHex : byte[] * int * int -&gt; int&#xA;override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1594">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1594">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1595">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1595">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1596">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1596">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1597">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1597">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1598">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1598">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1599">读取元素并对 <see langword="BinHex" /> 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1599">Reads the element and decodes the <see langword="BinHex" /> content.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1600">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1600">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1601">此方法读取元素内容，使用 `BinHex` 编码对其进行解码，并将解码后的二进制字节（例如内联 `BinHex`编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1601">This method reads the element content, decodes it using `BinHex` encoding, and returns the decoded binary bytes (for example, an inline `BinHex`-encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="ec77b-1602">此方法只能读取简单内容元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1602">This method can only read simple-content elements.</span></span> <span data-ttu-id="ec77b-1603">元素可以包含文本、空格、有效空白、CDATA 部分、注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1603">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="ec77b-1604">它还可以包含自动扩展的实体引用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1604">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="ec77b-1605">元素不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1605">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1606">此方法与 <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> 方法非常相似，只不过它只能在元素节点类型上调用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1606">This method is very similar to the <xref:System.Xml.XmlReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="ec77b-1607">如果 `count` 值大于文档中的字节数，或者它等于文档中的字节数，则 <xref:System.Xml.XmlReader> 读取文档中的所有剩余字节并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1607">If the `count` value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="ec77b-1608">下一个 <xref:System.Xml.XmlReader> 方法调用返回零，并将读取器移动到 `EndElement`后的节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1608">The next <xref:System.Xml.XmlReader> method call returns a zero and moves the reader to the node following the `EndElement`.</span></span>  
  
 <span data-ttu-id="ec77b-1609">如果在所有元素内容使用之前调用 <xref:System.Xml.XmlReader.Read%2A>，则读取器的行为可能与第一个内容的行为相同，然后调用 <xref:System.Xml.XmlReader.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1609">If you call <xref:System.Xml.XmlReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlReader.Read%2A> method was called.</span></span> <span data-ttu-id="ec77b-1610">这意味着读取器将读取所有文本，直到遇到结束元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1610">This means that the reader will read all the text until the end element is encountered.</span></span> <span data-ttu-id="ec77b-1611">然后，它将读取结束标记节点，读取下一个节点，然后在下一个后续节点上定位自身。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1611">It will then read the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
 <span data-ttu-id="ec77b-1612">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1612">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsBinHexAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1613">下面的示例读取内联 `BinHex` 编码的图像。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1613">The following example reads an inline `BinHex` encoded image.</span></span> <span data-ttu-id="ec77b-1614">`BinHex` 数据嵌入 `<image>` 元素中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1614">The `BinHex` data is embedded within the `<image>` element.</span></span> <span data-ttu-id="ec77b-1615"><xref:System.IO.BinaryWriter> 用于创建新的二进制数据文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1615">A <xref:System.IO.BinaryWriter> is used to create a new binary data file.</span></span>  
  
 [!code-csharp[XmlReader_Read_Write_Binary#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Read_Write_Binary/CS/readBinary.cs#2)]
 [!code-vb[XmlReader_Read_Write_Binary#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Read_Write_Binary/VB/readBinary.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1616"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1616">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1617">当前节点不是元素节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1617">The current node is not an element node.</span></span>

<span data-ttu-id="ec77b-1618">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1618">-or-</span></span>

<span data-ttu-id="ec77b-1619">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1619">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1620">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1620">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec77b-1621">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1621">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec77b-1622"><see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1622">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1623">该元素包含混合内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1623">The element contains mixed-content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ec77b-1624">无法将内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1624">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHexAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadElementContentAsBinHexAsync (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadElementContentAsBinHexAsync(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBinHexAsync (buffer As Byte(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadElementContentAsBinHexAsync(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadElementContentAsBinHexAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadElementContentAsBinHexAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-1625">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1625">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="ec77b-1626">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1626">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-1627">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1627">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-1628">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1628">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="ec77b-1629">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1629">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-1630">异步读取元素并对 <see langword="BinHex" /> 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1630">Asynchronously reads the element and decodes the <see langword="BinHex" /> content.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1631">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1631">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1632">这是 <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1632">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1633">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1633">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1634">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1634">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1635">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1635">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1636">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1636">-or-</span></span>

<span data-ttu-id="ec77b-1637">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1637">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1638">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1638">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1639">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1639">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsBoolean">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1640">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1640">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1641">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1641">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1642">将当前元素值作为 <see cref="T:System.Boolean" /> 对象读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1642">Reads the current element value as a <see cref="T:System.Boolean" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBoolean : unit -&gt; bool&#xA;override this.ReadElementContentAsBoolean : unit -&gt; bool" Usage="xmlReader.ReadElementContentAsBoolean " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1643">读取当前元素并将内容作为 <see cref="T:System.Boolean" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1643">Reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1644">作为 <see cref="T:System.Boolean" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1644">The element content as a <see cref="T:System.Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1645">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1645">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1646">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1646">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1647">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1647">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1648">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1648">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1649">如果元素内容类型 `xsd:boolean`，则读取器将返回取消装箱 <xref:System.Boolean> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1649">If the element content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="ec77b-1650">如果内容不是类型化的 `xsd:boolean`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为 <xref:System.Boolean> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1650">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1651">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1651">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1652"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1652">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1653">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1653">-or-</span></span>

<span data-ttu-id="ec77b-1654">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1654">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1655">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1655">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1656">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1656">The current element contains child elements.</span></span>  
  
<span data-ttu-id="ec77b-1657">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1657">-or-</span></span> 
<span data-ttu-id="ec77b-1658">无法将元素内容转换为 <see cref="T:System.Boolean" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1658">The element content cannot be converted to a <see cref="T:System.Boolean" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1659">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1659">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBoolean">
      <MemberSignature Language="C#" Value="public virtual bool ReadElementContentAsBoolean (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadElementContentAsBoolean(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsBoolean(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsBoolean (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadElementContentAsBoolean(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsBoolean : string * string -&gt; bool&#xA;override this.ReadElementContentAsBoolean : string * string -&gt; bool" Usage="xmlReader.ReadElementContentAsBoolean (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1660">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1660">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1661">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1661">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1662">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.Boolean" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1662">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Boolean" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1663">作为 <see cref="T:System.Boolean" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1663">The element content as a <see cref="T:System.Boolean" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1664">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1664">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1665">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1665">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1666">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1666">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1667">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1667">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1668">如果内容是类型 `xsd:boolean`，则读取器将返回取消装箱 <xref:System.Boolean> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1668">If the content is typed `xsd:boolean`, the reader returns an unboxed <xref:System.Boolean> object.</span></span> <span data-ttu-id="ec77b-1669">如果内容不是类型化的 `xsd:boolean`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为 <xref:System.Boolean> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1669">If the content is not typed `xsd:boolean`, the reader attempts to convert it to a <xref:System.Boolean> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1670">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1670">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1671"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1671">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1672">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1672">-or-</span></span>

<span data-ttu-id="ec77b-1673">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1673">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1674">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1674">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1675">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1675">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1676">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1676">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1677">无法将元素内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1677">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1678">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1678">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1679">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1679">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1680">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1680">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1681">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1681">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1682">读取当前元素并将内容作为 <see cref="T:System.DateTime" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1682">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime () As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDateTime : unit -&gt; DateTime&#xA;override this.ReadElementContentAsDateTime : unit -&gt; DateTime" Usage="xmlReader.ReadElementContentAsDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1683">读取当前元素并将内容作为 <see cref="T:System.DateTime" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1683">Reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1684">作为 <see cref="T:System.DateTime" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1684">The element content as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1685">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1685">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1686">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1686">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1687">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1687">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1688">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1688">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1689">如果内容是类型 `xsd:dateTime`，则读取器将返回取消装箱 <xref:System.DateTime> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1689">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="ec77b-1690">如果内容不是类型化的 `xsd:dateTime`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为 <xref:System.DateTime> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1690">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-1691">如果内容类型化为 <xref:System.DateTime.Year%2A?displayProperty=nameWithType>，则不能使用 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1691">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="ec77b-1692">在这种情况下 <xref:System.Xml.XmlReader> 始终将 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 值设置为1904。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1692"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="ec77b-1693">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1693">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1694">下面的示例使用 <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> 方法读取 `date` 元素的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1694">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsDateTime%2A> method to read the content of the `date` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#4)]
 [!code-vb[XmlReader.ReadElementContentAs#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#4)]  
  
 <span data-ttu-id="ec77b-1695">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1695">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1696"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1696">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1697">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1697">-or-</span></span>

<span data-ttu-id="ec77b-1698">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1698">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1699">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1699">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1700">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1700">The current element contains child elements.</span></span>  
  
<span data-ttu-id="ec77b-1701">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1701">-or-</span></span> 
<span data-ttu-id="ec77b-1702">无法将元素内容转换为 <see cref="T:System.DateTime" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1702">The element content cannot be converted to a <see cref="T:System.DateTime" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1703">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1703">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDateTime">
      <MemberSignature Language="C#" Value="public virtual DateTime ReadElementContentAsDateTime (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.DateTime ReadElementContentAsDateTime(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDateTime(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDateTime (localName As String, namespaceURI As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual DateTime ReadElementContentAsDateTime(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDateTime : string * string -&gt; DateTime&#xA;override this.ReadElementContentAsDateTime : string * string -&gt; DateTime" Usage="xmlReader.ReadElementContentAsDateTime (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1704">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1704">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1705">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1705">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1706">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.DateTime" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1706">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1707">作为 <see cref="T:System.DateTime" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1707">The element contents as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1708">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1708">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1709">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1709">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1710">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1710">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1711">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1711">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1712">如果内容是类型 `xsd:dateTime`，则读取器将返回取消装箱 <xref:System.DateTime> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1712">If the content is typed `xsd:dateTime`, the reader returns an unboxed <xref:System.DateTime> object.</span></span> <span data-ttu-id="ec77b-1713">如果内容不是类型化的 `xsd:dateTime`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为 <xref:System.DateTime> 的对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1713">If the content is not typed `xsd:dateTime`, the reader attempts to convert it to a <xref:System.DateTime> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-1714">如果内容类型化为 <xref:System.DateTime.Year%2A?displayProperty=nameWithType>，则不能使用 `xsd:gMonthDay` 值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1714">You cannot rely on the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value when the content is typed as `xsd:gMonthDay`.</span></span> <span data-ttu-id="ec77b-1715">在这种情况下 <xref:System.Xml.XmlReader> 始终将 <xref:System.DateTime.Year%2A?displayProperty=nameWithType> 值设置为1904。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1715"><xref:System.Xml.XmlReader> always sets the <xref:System.DateTime.Year%2A?displayProperty=nameWithType> value to 1904 in this case.</span></span>  
  
 <span data-ttu-id="ec77b-1716">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1716">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1717"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1717">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1718">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1718">-or-</span></span>

<span data-ttu-id="ec77b-1719">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1719">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1720">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1720">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1721">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1721">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1722">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1722">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1723">无法将元素内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1723">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1724">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1724">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1725">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1725">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDecimal">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1726">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1726">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1727">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1727">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1728">将当前元素值作为 <see cref="T:System.Decimal" /> 对象读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1728">Reads the current element value as a <see cref="T:System.Decimal" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal () As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDecimal : unit -&gt; decimal&#xA;override this.ReadElementContentAsDecimal : unit -&gt; decimal" Usage="xmlReader.ReadElementContentAsDecimal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1729">读取当前元素并将内容作为 <see cref="T:System.Decimal" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1729">Reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1730">作为 <see cref="T:System.Decimal" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1730">The element content as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1731">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1731">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1732">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1732">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1733">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1733">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1734">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1734">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1735">读取器根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将元素内容转换为 <xref:System.Decimal> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1735">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1736">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1736">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1737"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1737">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1738">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1738">-or-</span></span>

<span data-ttu-id="ec77b-1739">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1739">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1740">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1740">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1741">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1741">The current element contains child elements.</span></span>  
  
<span data-ttu-id="ec77b-1742">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1742">-or-</span></span> 
<span data-ttu-id="ec77b-1743">无法将元素内容转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1743">The element content cannot be converted to a <see cref="T:System.Decimal" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1744">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1744">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDecimal">
      <MemberSignature Language="C#" Value="public virtual decimal ReadElementContentAsDecimal (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Decimal ReadElementContentAsDecimal(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDecimal(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDecimal (localName As String, namespaceURI As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Decimal ReadElementContentAsDecimal(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDecimal : string * string -&gt; decimal&#xA;override this.ReadElementContentAsDecimal : string * string -&gt; decimal" Usage="xmlReader.ReadElementContentAsDecimal (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1745">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1745">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1746">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1746">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1747">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.Decimal" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1747">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1748">作为 <see cref="T:System.Decimal" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1748">The element content as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1749">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1749">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1750">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1750">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1751">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1751">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1752">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1752">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1753">读取器根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将元素内容转换为 <xref:System.Decimal> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1753">The reader attempts to convert the element content to an <xref:System.Decimal> object according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1754">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1754">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1755"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1755">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1756">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1756">-or-</span></span>

<span data-ttu-id="ec77b-1757">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1757">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1758">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1758">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1759">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1759">The current element contains child elements.</span></span>  
  
<span data-ttu-id="ec77b-1760">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1760">-or-</span></span> 
<span data-ttu-id="ec77b-1761">无法将元素内容转换为 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1761">The element content cannot be converted to a <see cref="T:System.Decimal" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1762">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1762">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1763">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1763">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsDouble">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1764">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1764">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1765">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1765">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1766">读取当前元素并将内容作为双精度浮点数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1766">Reads the current element and returns the contents as a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDouble : unit -&gt; double&#xA;override this.ReadElementContentAsDouble : unit -&gt; double" Usage="xmlReader.ReadElementContentAsDouble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1767">读取当前元素并将内容作为双精度浮点数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1767">Reads the current element and returns the contents as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1768">作为双精度浮点数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1768">The element content as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1769">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1769">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1770">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1770">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1771">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1771">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1772">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1772">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1773">如果内容是类型 `xsd:double`，则读取器将返回一个双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1773">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="ec77b-1774">如果未 `xsd:double`键入内容，读取器将尝试根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议定义的规则将其转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1774">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1775">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1775">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1776">下面的示例使用方法将元素内容作为双精度浮点数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1776">The following example uses the method to return the element content as a double-precision floating-point number.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#7](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#7)]
 [!code-vb[XmlReader.ReadElementContentAs#7](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#7)]  
  
 <span data-ttu-id="ec77b-1777">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1777">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1778"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1778">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1779">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1779">-or-</span></span>

<span data-ttu-id="ec77b-1780">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1780">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1781">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1781">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1782">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1782">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1783">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1783">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1784">无法将元素内容转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1784">The element content cannot be converted to a double-precision floating-point number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1785">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1785">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsDouble">
      <MemberSignature Language="C#" Value="public virtual double ReadElementContentAsDouble (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 ReadElementContentAsDouble(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsDouble(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsDouble (localName As String, namespaceURI As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual double ReadElementContentAsDouble(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsDouble : string * string -&gt; double&#xA;override this.ReadElementContentAsDouble : string * string -&gt; double" Usage="xmlReader.ReadElementContentAsDouble (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1786">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1786">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1787">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1787">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1788">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为双精度浮点数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1788">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1789">作为双精度浮点数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1789">The element content as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1790">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1790">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1791">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1791">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1792">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1792">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1793">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1793">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1794">如果内容是类型 `xsd:double`，则读取器将返回一个双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1794">If the content is typed `xsd:double`, the reader returns a double-precision floating-point number.</span></span> <span data-ttu-id="ec77b-1795">如果未 `xsd:double`键入内容，读取器将尝试根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议定义的规则将其转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1795">If the content is not typed `xsd:double`, the reader attempts to convert it to a double-precision floating-point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1796">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1796">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1797"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1797">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1798">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1798">-or-</span></span>

<span data-ttu-id="ec77b-1799">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1799">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1800">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1800">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1801">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1801">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1802">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1802">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1803">无法将元素内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1803">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1804">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1804">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1805">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1805">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsFloat">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1806">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1806">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1807">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1807">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1808">将当前元素值作为单精度浮点数读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1808">Reads the current element value as a single-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsFloat : unit -&gt; single&#xA;override this.ReadElementContentAsFloat : unit -&gt; single" Usage="xmlReader.ReadElementContentAsFloat " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1809">读取当前元素并将内容作为单精度浮点数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1809">Reads the current element and returns the contents as single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1810">作为单精度浮点数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1810">The element content as a single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1811">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1811">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1812">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1812">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1813">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1813">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1814">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1814">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1815">读取器根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将元素内容转换为单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1815">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1816">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1816">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1817"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1817">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1818">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1818">-or-</span></span>

<span data-ttu-id="ec77b-1819">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1819">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1820">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1820">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1821">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1821">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1822">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1822">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1823">元素内容不能转换为单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1823">The element content cannot be converted to a single-precision floating-point number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1824">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1824">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsFloat">
      <MemberSignature Language="C#" Value="public virtual float ReadElementContentAsFloat (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 ReadElementContentAsFloat(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsFloat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsFloat (localName As String, namespaceURI As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float ReadElementContentAsFloat(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsFloat : string * string -&gt; single&#xA;override this.ReadElementContentAsFloat : string * string -&gt; single" Usage="xmlReader.ReadElementContentAsFloat (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1825">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1825">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1826">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1826">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1827">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为单精度浮点数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1827">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1828">作为单精度浮点数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1828">The element content as a single-precision floating point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1829">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1829">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1830">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1830">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1831">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1831">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1832">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1832">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1833">读取器根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将元素内容转换为单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1833">The reader attempts to convert the element content to a single-precision floating point number according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1834">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1834">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1835"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1835">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1836">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1836">-or-</span></span> 
<span data-ttu-id="ec77b-1837">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1837">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1838">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1838">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1839">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1839">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1840">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1840">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1841">元素内容不能转换为单精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1841">The element content cannot be converted to a single-precision floating-point number.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1842">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1842">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1843">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1843">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsInt">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1844">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1844">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1845">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1845">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1846">读取当前元素并将内容作为 32 位有符号整数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1846">Reads the current element and returns the contents as a 32-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsInt : unit -&gt; int&#xA;override this.ReadElementContentAsInt : unit -&gt; int" Usage="xmlReader.ReadElementContentAsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1847">读取当前元素并将内容作为 32 位有符号整数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1847">Reads the current element and returns the contents as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1848">作为 32 位有符号整数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1848">The element content as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1849">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1849">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1850">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1850">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1851">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1851">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1852">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1852">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1853">如果内容是类型 `xsd:integer`，则读取器将返回取消装箱的32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1853">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="ec77b-1854">如果内容不是类型化的 `xsd:integer`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1854">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1855">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1855">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1856"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1856">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1857">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1857">-or-</span></span> 
<span data-ttu-id="ec77b-1858">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1858">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1859">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1859">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1860">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1860">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1861">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1861">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1862">无法将元素内容转换为 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1862">The element content cannot be converted to a 32-bit signed integer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsInt">
      <MemberSignature Language="C#" Value="public virtual int ReadElementContentAsInt (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadElementContentAsInt(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsInt(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsInt (localName As String, namespaceURI As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadElementContentAsInt(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsInt : string * string -&gt; int&#xA;override this.ReadElementContentAsInt : string * string -&gt; int" Usage="xmlReader.ReadElementContentAsInt (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1863">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1863">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1864">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1864">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1865">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 32 位有符号整数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1865">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1866">作为 32 位有符号整数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1866">The element content as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1867">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1867">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1868">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1868">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1869">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1869">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1870">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1870">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1871">如果内容是类型 `xsd:integer`，则读取器将返回取消装箱的32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1871">If the content is typed `xsd:integer`, the reader returns an unboxed 32-bit signed integer.</span></span> <span data-ttu-id="ec77b-1872">如果内容不是类型化的 `xsd:integer`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为32位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1872">If the content is not typed `xsd:integer`, the reader attempts to convert it to a 32-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1873">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1873">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1874"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1874">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1875">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1875">-or-</span></span> 
<span data-ttu-id="ec77b-1876">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1876">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1877">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1877">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1878">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1878">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1879">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1879">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1880">无法将元素内容转换为 32 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1880">The element content cannot be converted to a 32-bit signed integer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1881">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1881">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1882">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1882">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsLong">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1883">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1883">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1884">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1884">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1885">读取当前元素并将内容作为 64 位有符号整数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1885">Reads the current element and returns the contents as a 64-bit signed integer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsLong : unit -&gt; int64&#xA;override this.ReadElementContentAsLong : unit -&gt; int64" Usage="xmlReader.ReadElementContentAsLong " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1886">读取当前元素并将内容作为 64 位有符号整数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1886">Reads the current element and returns the contents as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1887">作为 64 位有符号整数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1887">The element content as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1888">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1888">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1889">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1889">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1890">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1890">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1891">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1891">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1892">如果内容是类型 `xsd:long`，则读取器将返回取消装箱的64位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1892">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="ec77b-1893">如果内容不是类型化的 `xsd:long`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为64位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1893">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1894">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1894">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1895">下面的示例使用 <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A> 方法读取 `longValue` 元素的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1895">The following example uses the <xref:System.Xml.XmlReader.ReadElementContentAsLong%2A> method to read the content of the `longValue` element.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#3)]
 [!code-vb[XmlReader.ReadElementContentAs#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#3)]  
  
 <span data-ttu-id="ec77b-1896">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1896">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1897"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1897">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1898">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1898">-or-</span></span> 
<span data-ttu-id="ec77b-1899">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1899">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1900">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1900">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1901">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1901">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1902">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1902">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1903">无法将元素内容转换为 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1903">The element content cannot be converted to a 64-bit signed integer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1904">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1904">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsLong">
      <MemberSignature Language="C#" Value="public virtual long ReadElementContentAsLong (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 ReadElementContentAsLong(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsLong(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsLong (localName As String, namespaceURI As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long ReadElementContentAsLong(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsLong : string * string -&gt; int64&#xA;override this.ReadElementContentAsLong : string * string -&gt; int64" Usage="xmlReader.ReadElementContentAsLong (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1905">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1905">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1906">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1906">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1907">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 64 位有符号整数返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1907">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1908">作为 64 位有符号整数的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1908">The element content as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1909">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1909">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1910">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1910">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1911">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1911">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1912">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1912">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1913">如果内容是类型 `xsd:long`，则读取器将返回取消装箱的64位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1913">If the content is typed `xsd:long`, the reader returns an unboxed 64-bit signed integer.</span></span> <span data-ttu-id="ec77b-1914">如果内容不是类型化的 `xsd:long`，则读取器将根据[W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议中定义的规则尝试将其转换为64位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1914">If the content is not typed `xsd:long`, the reader attempts to convert it to a 64-bit signed integer according to the rules defined by the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1915">有关详细信息，请参阅 <xref:System.Xml.XmlReader> 引用页的“备注”部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1915">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1916"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1916">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1917">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1917">-or-</span></span> 
<span data-ttu-id="ec77b-1918">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1918">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1919">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1919">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1920">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1920">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1921">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1921">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1922">无法将元素内容转换为 64 位有符号整数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1922">The element content cannot be converted to a 64-bit signed integer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1923">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1923">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1924">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1924">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsObject">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1925">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1925">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1926">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1926">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1927">读取当前元素并将内容作为 <see cref="T:System.Object" /> 返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1927">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObject : unit -&gt; obj&#xA;override this.ReadElementContentAsObject : unit -&gt; obj" Usage="xmlReader.ReadElementContentAsObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1928">读取当前元素并将内容作为 <see cref="T:System.Object" /> 返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1928">Reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1929">一个最适当类型的装箱的公共语言运行时 (CLR) 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1929">A boxed common language runtime (CLR) object of the most appropriate type.</span></span> <span data-ttu-id="ec77b-1930"><see cref="P:System.Xml.XmlReader.ValueType" /> 属性确定了适当的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1930">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span></span> <span data-ttu-id="ec77b-1931">如果将内容类型化为列表类型，则此方法返回一个适当类型的装箱对象的数组。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1931">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1932">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1932">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1933">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1933">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1934">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1934">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1935">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1935">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1936">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1936">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1937">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1937">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsObjectAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1938">下面的示例使用方法读取 `price` 节点的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1938">The following example uses the method to read the content of the `price` node.</span></span> <span data-ttu-id="ec77b-1939">读取器使用架构中的信息将内容映射到正确的数据类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1939">The reader uses the information in the schema to map the content to the correct data type.</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#6)]
 [!code-vb[XmlReader.ReadElementContentAs#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#6)]  
  
 <span data-ttu-id="ec77b-1940">该示例使用以下两个文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1940">The example uses the following two files as input.</span></span>  
  
 `item.xml`  
  
 [!code-xml[XmlReader.ReadElementContentAs#11](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xml#11)]  
  
 `item.xsd`  
  
 [!code-xml[XmlReader.ReadElementContentAs#12](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/item.xsd#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1941"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1941">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1942">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1942">-or-</span></span> 
<span data-ttu-id="ec77b-1943">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1943">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1944">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1944">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1945">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1945">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1946">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1946">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1947">无法将元素内容转换成请求的类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-1947">The element content cannot be converted to the requested type</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1948">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1948">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObject">
      <MemberSignature Language="C#" Value="public virtual object ReadElementContentAsObject (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ReadElementContentAsObject(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObject (localName As String, namespaceURI As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ReadElementContentAsObject(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObject : string * string -&gt; obj&#xA;override this.ReadElementContentAsObject : string * string -&gt; obj" Usage="xmlReader.ReadElementContentAsObject (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-1949">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1949">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-1950">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1950">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-1951">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.Object" /> 返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1951">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1952">一个最适当类型的装箱的公共语言运行时 (CLR) 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1952">A boxed common language runtime (CLR) object of the most appropriate type.</span></span> <span data-ttu-id="ec77b-1953"><see cref="P:System.Xml.XmlReader.ValueType" /> 属性确定了适当的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1953">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span></span> <span data-ttu-id="ec77b-1954">如果将内容类型化为列表类型，则此方法返回一个适当类型的装箱对象的数组。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1954">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1955">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1955">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1956">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1956">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1957">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1957">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1958">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1958">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1959">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1959">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1960"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1960">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1961">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1961">-or-</span></span> 
<span data-ttu-id="ec77b-1962">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1962">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1963">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1963">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1964">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1964">The current element contains child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1965">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1965">-or-</span></span>  
  
 <span data-ttu-id="ec77b-1966">无法将元素内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1966">The element content cannot be converted to the requested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-1967">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1967">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-1968">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1968">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsObjectAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; ReadElementContentAsObjectAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; ReadElementContentAsObjectAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsObjectAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsObjectAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ ReadElementContentAsObjectAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.ReadElementContentAsObjectAsync : unit -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlReader.ReadElementContentAsObjectAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1969">异步读取当前元素并将内容作为 <see cref="T:System.Object" /> 返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1969">Asynchronously reads the current element and returns the contents as an <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1970">一个最适当类型的装箱的公共语言运行时 (CLR) 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1970">A boxed common language runtime (CLR) object of the most appropriate type.</span></span> <span data-ttu-id="ec77b-1971"><see cref="P:System.Xml.XmlReader.ValueType" /> 属性确定了适当的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1971">The <see cref="P:System.Xml.XmlReader.ValueType" /> property determines the appropriate CLR type.</span></span> <span data-ttu-id="ec77b-1972">如果将内容类型化为列表类型，则此方法返回一个适当类型的装箱对象的数组。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1972">If the content is typed as a list type, this method returns an array of boxed objects of the appropriate type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1973">这是 <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1973">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsObject%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-1974">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1974">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1975">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1975">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1976">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1976">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-1977">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1977">-or-</span></span>

<span data-ttu-id="ec77b-1978">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1978">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-1979">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1979">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-1980">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-1980">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementContentAsString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1981">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1981">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1982">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1982">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-1983">读取当前元素并将内容作为 <see cref="T:System.String" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1983">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsString : unit -&gt; string&#xA;override this.ReadElementContentAsString : unit -&gt; string" Usage="xmlReader.ReadElementContentAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-1984">读取当前元素并将内容作为 <see cref="T:System.String" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1984">Reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-1985">作为 <see cref="T:System.String" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1985">The element content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-1986">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1986">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-1987">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1987">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-1988">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1988">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-1989">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1989">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-1990">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1990">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
 <span data-ttu-id="ec77b-1991">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1991">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadElementContentAsStringAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-1992">下面的示例读取 `stringValue` 元素并返回文本内容（忽略注释和处理指令）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1992">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#1)]
 [!code-vb[XmlReader.ReadElementContentAs#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#1)]  
  
 <span data-ttu-id="ec77b-1993">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1993">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-1994"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1994">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-1995">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1995">-or-</span></span>

<span data-ttu-id="ec77b-1996">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1996">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-1997">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-1997">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-1998">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-1998">The current element contains child elements.</span></span>  
  
<span data-ttu-id="ec77b-1999">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-1999">-or-</span></span> 
<span data-ttu-id="ec77b-2000">无法将元素内容转换为 <see cref="T:System.String" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2000">The element content cannot be converted to a <see cref="T:System.String" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-2001">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2001">The method is called with <see langword="null" /> arguments.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementContentAsString (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementContentAsString(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsString (localName As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementContentAsString(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsString : string * string -&gt; string&#xA;override this.ReadElementContentAsString : string * string -&gt; string" Usage="xmlReader.ReadElementContentAsString (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-2002">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2002">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-2003">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2003">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-2004">检查指定的本地名称和命名空间 URI 与当前元素的本地名称和命名空间 URI 是否匹配，然后读取当前元素，并将内容作为 <see cref="T:System.String" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2004">Checks that the specified local name and namespace URI matches that of the current element, then reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2005">作为 <see cref="T:System.String" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2005">The element content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2006">此方法读取开始标记和元素的内容，并将读取器移动到结束元素标记之后。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2006">This method reads the start tag, the contents of the element, and moves the reader past the end element tag.</span></span> <span data-ttu-id="ec77b-2007">它扩展实体并忽略处理指令和注释。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2007">It expands entities and ignores processing instructions and comments.</span></span> <span data-ttu-id="ec77b-2008">元素只能包含简单内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2008">The element can only contain simple content.</span></span> <span data-ttu-id="ec77b-2009">也就是说，它不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2009">That is, it cannot have child elements.</span></span>  
  
 <span data-ttu-id="ec77b-2010">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页和 " [W3C XML 架构第2部分：数据类型](https://go.microsoft.com/fwlink/?LinkId=4871)建议" 的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2010">For more information, see the Remarks section of the <xref:System.Xml.XmlReader> reference page and the [W3C XML Schema Part 2: Datatypes](https://go.microsoft.com/fwlink/?LinkId=4871) recommendation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2011">下面的示例读取 `stringValue` 元素并返回文本内容（忽略注释和处理指令）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2011">The following example reads the `stringValue` element and returns the text content (ignoring the comment and processing instruction).</span></span>  
  
 [!code-csharp[XmlReader.ReadElementContentAs#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader.ReadElementContentAs/CS/readElementContentAs.cs#2)]
 [!code-vb[XmlReader.ReadElementContentAs#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader.ReadElementContentAs/VB/readElementContentAs.vb#2)]  
  
 <span data-ttu-id="ec77b-2012">示例使用 `dataFile.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2012">The example uses the `dataFile.xml` file as input.</span></span>  
  
 [!code-xml[XmlReader.ReadElementContentAs#8](~/samples/snippets/xml/VS_Snippets_Data/XmlReader.ReadElementContentAs/XML/dataFile.xml#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2013"><see cref="T:System.Xml.XmlReader" /> 未定位在元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2013">The <see cref="T:System.Xml.XmlReader" /> is not positioned on an element.</span></span>

<span data-ttu-id="ec77b-2014">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2014">-or-</span></span>

<span data-ttu-id="ec77b-2015">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2015">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2016">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2016">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2017">当前元素包含子元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2017">The current element contains child elements.</span></span>  
  
<span data-ttu-id="ec77b-2018">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2018">-or-</span></span> 
<span data-ttu-id="ec77b-2019">无法将元素内容转换为 <see cref="T:System.String" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2019">The element content cannot be converted to a <see cref="T:System.String" /> object.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-2020">使用 <see langword="null" /> 参数调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2020">The method is called with <see langword="null" /> arguments.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-2021">指定的本地名称和命名空间 URI 与所读取的当前元素的本地名称和命名空间 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2021">The specified local name and namespace URI do not match that of the current element being read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsStringAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadElementContentAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadElementContentAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementContentAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementContentAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadElementContentAsStringAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadElementContentAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadElementContentAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2022">异步读取当前元素并将内容作为 <see cref="T:System.String" /> 对象返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2022">Asynchronously reads the current element and returns the contents as a <see cref="T:System.String" /> object.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2023">作为 <see cref="T:System.String" /> 对象的元素内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2023">The element content as a <see cref="T:System.String" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2024">这是 <xref:System.Xml.XmlReader.ReadElementContentAsString%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2024">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadElementContentAsString%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-2025">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2025">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2026">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2026">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-2027">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2027">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-2028">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-2028">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadElementString">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2029">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2029">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2030">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2030">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-2031">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2031">-or-</span></span>

<span data-ttu-id="ec77b-2032">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2032">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2033">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2033">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-2034">读取只有简单文本的元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2034">Reads the simple text-only elements.</span></span> <span data-ttu-id="ec77b-2035">但是，建议改用 <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2035">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2036">建议使用 <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> 方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2036">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString();" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : unit -&gt; string&#xA;override this.ReadElementString : unit -&gt; string" Usage="xmlReader.ReadElementString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2037">读取纯文本元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2037">Reads a text-only element.</span></span> <span data-ttu-id="ec77b-2038">但是，建议改用 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2038">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2039">所读取的元素中包含的文本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2039">The text contained in the element that was read.</span></span> <span data-ttu-id="ec77b-2040">如果元素为空，则返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2040">An empty string if the element is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2041">建议使用 <xref:System.Xml.XmlReader.ReadElementContentAsString> 方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2041">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2042">下一个内容节点不是开始标记；或者找到的元素不包含简单文本值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2042">The next content node is not a start tag; or the element found does not contain a simple text value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2043">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2043">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2044">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2044">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : string -&gt; string&#xA;override this.ReadElementString : string -&gt; string" Usage="xmlReader.ReadElementString name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-2045">要检查的名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2045">The name to check.</span></span></param>
        <summary><span data-ttu-id="ec77b-2046">在读取纯文本元素之前，检查所找到元素的 <see cref="P:System.Xml.XmlReader.Name" /> 属性是否与给定的字符串匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2046">Checks that the <see cref="P:System.Xml.XmlReader.Name" /> property of the element found matches the given string before reading a text-only element.</span></span> <span data-ttu-id="ec77b-2047">但是，建议改用 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2047">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2048">所读取的元素中包含的文本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2048">The text contained in the element that was read.</span></span> <span data-ttu-id="ec77b-2049">如果元素为空，则返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2049">An empty string if the element is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2050">建议使用 <xref:System.Xml.XmlReader.ReadElementContentAsString> 方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2050">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2051">如果下一个内容节点不是一个开始标记；如果元素 <see langword="Name" /> 与给定的参数不匹配；或者如果找到的元素不包含简单的文本值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2051">If the next content node is not a start tag; if the element <see langword="Name" /> does not match the given argument; or if the element found does not contain a simple text value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2052">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2052">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2053">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2053">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadElementString">
      <MemberSignature Language="C#" Value="public virtual string ReadElementString (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadElementString(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadElementString(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadElementString (localname As String, ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadElementString(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member ReadElementString : string * string -&gt; string&#xA;override this.ReadElementString : string * string -&gt; string" Usage="xmlReader.ReadElementString (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="ns" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="ec77b-2054">要检查的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2054">The local name to check.</span></span></param>
        <param name="ns"><span data-ttu-id="ec77b-2055">要检查的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2055">The namespace URI to check.</span></span></param>
        <summary><span data-ttu-id="ec77b-2056">在读取纯文本元素之前，检查所找到元素的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 属性是否与给定的字符串匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2056">Checks that the <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found matches the given strings before reading a text-only element.</span></span> <span data-ttu-id="ec77b-2057">但是，建议改用 <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> 方法，因为该方法可以更直接地处理此操作。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2057">However, we recommend that you use the <see cref="M:System.Xml.XmlReader.ReadElementContentAsString(System.String,System.String)" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2058">所读取的元素中包含的文本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2058">The text contained in the element that was read.</span></span> <span data-ttu-id="ec77b-2059">如果元素为空，则返回一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2059">An empty string if the element is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2060">建议使用 <xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29> 方法来读取文本元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2060">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%28System.String%2CSystem.String%29> method to read a text element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2061">如果下一个内容节点不是一个开始标记；如果元素 <see langword="LocalName" /> 或 <see langword="NamespaceURI" /> 与给定的参数不匹配；或者如果找到的元素不包含简单的文本值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2061">If the next content node is not a start tag; if the element <see langword="LocalName" /> or <see langword="NamespaceURI" /> do not match the given arguments; or if the element found does not contain a simple text value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2062">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2062">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2063">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2063">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEndElement">
      <MemberSignature Language="C#" Value="public virtual void ReadEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadEndElement();" />
      <MemberSignature Language="F#" Value="abstract member ReadEndElement : unit -&gt; unit&#xA;override this.ReadEndElement : unit -&gt; unit" Usage="xmlReader.ReadEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2064">检查当前内容节点是否为结束标记并将读取器推进到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2064">Checks that the current content node is an end tag and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-2065">下面的示例显示每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2065">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="ec77b-2066">该示例使用 `book3.xml` 文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2066">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2067">当前节点不是一个结束标记，或者如果在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2067">The current node is not an end tag or if incorrect XML is encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2068">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2068">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2069">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2069">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadStartElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXml">
      <MemberSignature Language="C#" Value="public virtual string ReadInnerXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadInnerXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadInnerXml();" />
      <MemberSignature Language="F#" Value="abstract member ReadInnerXml : unit -&gt; string&#xA;override this.ReadInnerXml : unit -&gt; string" Usage="xmlReader.ReadInnerXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2070">当在派生类中被重写时，将所有内容（包括标记）当做字符串读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2070">When overridden in a derived class, reads all the content, including markup, as a string.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2071">当前节点中的所有 XML 内容（包括标记）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2071">All the XML content, including markup, in the current node.</span></span> <span data-ttu-id="ec77b-2072">如果当前节点没有任何子级，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2072">If the current node has no children, an empty string is returned.</span></span>  
  
 <span data-ttu-id="ec77b-2073">如果当前节点既非元素，也非属性，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2073">If the current node is neither an element nor attribute, an empty string is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2074">此方法返回当前节点的所有内容，包括标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2074">This method returns all the content of the current node including the markup.</span></span> <span data-ttu-id="ec77b-2075">不返回当前节点（开始标记）和对应的结束节点（结束标记）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2075">The current node (start tag) and corresponding end node (end tag) are not returned.</span></span> <span data-ttu-id="ec77b-2076">例如，如果你具有以下内容：</span><span class="sxs-lookup"><span data-stu-id="ec77b-2076">For example, if you had the following:</span></span>  
  
```xml  
<node>  
 this <child id="123"/>  
</node>  
```  
  
 <span data-ttu-id="ec77b-2077">`ReadInnerXml` 返回 `this <child id="123"/>`</span><span class="sxs-lookup"><span data-stu-id="ec77b-2077">`ReadInnerXml` returns `this <child id="123"/>`</span></span>  
  
 <span data-ttu-id="ec77b-2078">此方法按以下方式处理元素节点和属性节点：</span><span class="sxs-lookup"><span data-stu-id="ec77b-2078">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="ec77b-2079">节点类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-2079">Node type</span></span>|<span data-ttu-id="ec77b-2080">调用之前的位置</span><span class="sxs-lookup"><span data-stu-id="ec77b-2080">Position before the call</span></span>|<span data-ttu-id="ec77b-2081">XML 片断</span><span class="sxs-lookup"><span data-stu-id="ec77b-2081">XML fragment</span></span>|<span data-ttu-id="ec77b-2082">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-2082">Return value</span></span>|<span data-ttu-id="ec77b-2083">调用后的位置</span><span class="sxs-lookup"><span data-stu-id="ec77b-2083">Position after the call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="ec77b-2084">在 `item1` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2084">On the `item1` start tag.</span></span>|<span data-ttu-id="ec77b-2085">\<item1 > text1\</item1 >\<item2 > 文本 2\</item2 ></span><span class="sxs-lookup"><span data-stu-id="ec77b-2085">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="ec77b-2086">text1</span><span class="sxs-lookup"><span data-stu-id="ec77b-2086">text1</span></span>|<span data-ttu-id="ec77b-2087">在 `item2` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2087">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-2088">在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2088">On the `attr1` attribute node.</span></span>|<span data-ttu-id="ec77b-2089">\<项 attr1 = "val1" attr2 = "val2" > 文本\</item ></span><span class="sxs-lookup"><span data-stu-id="ec77b-2089">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="ec77b-2090">val1</span><span class="sxs-lookup"><span data-stu-id="ec77b-2090">val1</span></span>|<span data-ttu-id="ec77b-2091">保留在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2091">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="ec77b-2092">如果读取器定位在叶节点上，则调用 `ReadInnerXml` 等效于调用 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2092">If the reader is positioned on a leaf node, calling `ReadInnerXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="ec77b-2093">方法返回 `String.Empty` （属性节点除外，在这种情况下，将返回属性的值）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2093">The method returns `String.Empty` (except for attribute nodes, in which case the value of the attribute is returned).</span></span>  
  
 <span data-ttu-id="ec77b-2094">此方法检查格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2094">This method checks for well-formed XML.</span></span> <span data-ttu-id="ec77b-2095">如果从 <xref:System.Xml.XmlValidatingReader>调用 `ReadInnerXml`，此方法还会验证返回的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2095">If `ReadInnerXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned.</span></span>  
  
 <span data-ttu-id="ec77b-2096">在 <xref:System.Xml.XmlNodeReader>中实现时，<xref:System.Xml.XmlTextReader> 和 `XmlValidatingReader` 类 `ReadOuterXml` 方法是识别命名空间的。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2096">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span>  
  
 <span data-ttu-id="ec77b-2097">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2097">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadInnerXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2098">下面的示例对 `ReadInnerXml` 和 <xref:System.Xml.XmlReader.ReadOuterXml%2A> 方法进行比较。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2098">The following example compares the `ReadInnerXml` and <xref:System.Xml.XmlReader.ReadOuterXml%2A> methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="ec77b-2099">该示例使用 `2books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2099">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2100">XML 的格式不良，或分析 XML 时出错。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2100">The XML was not well-formed, or an error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2101">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2101">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2102">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2102">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadInnerXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadInnerXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadInnerXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadInnerXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadInnerXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadInnerXmlAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadInnerXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadInnerXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadInnerXmlAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2103">异步读取所有内容，包括作为字符串的标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2103">Asynchronously reads all the content, including markup, as a string.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2104">当前节点中的所有 XML 内容（包括标记）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2104">All the XML content, including markup, in the current node.</span></span> <span data-ttu-id="ec77b-2105">如果当前节点没有任何子级，则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2105">If the current node has no children, an empty string is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2106">这是 <xref:System.Xml.XmlReader.ReadInnerXml%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2106">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadInnerXml%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-2107">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2107">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2108">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2108">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2109">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2109">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-2110">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2110">-or-</span></span>

<span data-ttu-id="ec77b-2111">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2111">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-2112">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2112">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-2113">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-2113">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXml">
      <MemberSignature Language="C#" Value="public virtual string ReadOuterXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadOuterXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadOuterXml();" />
      <MemberSignature Language="F#" Value="abstract member ReadOuterXml : unit -&gt; string&#xA;override this.ReadOuterXml : unit -&gt; string" Usage="xmlReader.ReadOuterXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2114">当在派生类中被重写时，读取表示该节点和所有它的子级的内容（包括标记）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2114">When overridden in a derived class, reads the content, including markup, representing this node and all its children.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2115">如果读取器定位在元素或属性节点上，此方法将返回当前节点及其所有子级的所有 XML 内容（包括标记）；否则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2115">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2116">此方法类似于 <xref:System.Xml.XmlReader.ReadInnerXml%2A>，只不过它还返回开始标记和结束标记。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2116">This method is similar to <xref:System.Xml.XmlReader.ReadInnerXml%2A> except it also returns the start and end tags.</span></span>  
  
 <span data-ttu-id="ec77b-2117">此方法按以下方式处理元素节点和属性节点：</span><span class="sxs-lookup"><span data-stu-id="ec77b-2117">This method handles element and attribute nodes in the following manner:</span></span>  
  
|<span data-ttu-id="ec77b-2118">节点类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-2118">Node type</span></span>|<span data-ttu-id="ec77b-2119">调用之前的位置</span><span class="sxs-lookup"><span data-stu-id="ec77b-2119">Position before the call</span></span>|<span data-ttu-id="ec77b-2120">XML 片断</span><span class="sxs-lookup"><span data-stu-id="ec77b-2120">XML fragment</span></span>|<span data-ttu-id="ec77b-2121">返回值</span><span class="sxs-lookup"><span data-stu-id="ec77b-2121">Return value</span></span>|<span data-ttu-id="ec77b-2122">调用后的位置</span><span class="sxs-lookup"><span data-stu-id="ec77b-2122">Position After the Call</span></span>|  
|---------------|------------------------------|------------------|------------------|-----------------------------|  
|`Element`|<span data-ttu-id="ec77b-2123">在 `item1` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2123">On the `item1` start tag.</span></span>|<span data-ttu-id="ec77b-2124">\<item1 > text1\</item1 >\<item2 > 文本 2\</item2 ></span><span class="sxs-lookup"><span data-stu-id="ec77b-2124">\<item1>text1\</item1>\<item2>text2\</item2></span></span>|<span data-ttu-id="ec77b-2125">\<item1 > text1\</item1 ></span><span class="sxs-lookup"><span data-stu-id="ec77b-2125">\<item1>text1\</item1></span></span>|<span data-ttu-id="ec77b-2126">在 `item2` 开始标记上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2126">On the `item2` start tag.</span></span>|  
|`Attribute`|<span data-ttu-id="ec77b-2127">在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2127">On the `attr1` attribute node.</span></span>|<span data-ttu-id="ec77b-2128">\<项 attr1 = "val1" attr2 = "val2" > 文本\</item ></span><span class="sxs-lookup"><span data-stu-id="ec77b-2128">\<item attr1="val1" attr2="val2">text\</item></span></span>|<span data-ttu-id="ec77b-2129">attr1="val1"</span><span class="sxs-lookup"><span data-stu-id="ec77b-2129">attr1="val1"</span></span>|<span data-ttu-id="ec77b-2130">保留在 `attr1` 属性节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2130">Remains on the `attr1` attribute node.</span></span>|  
  
 <span data-ttu-id="ec77b-2131">如果读取器定位在叶节点上，则调用 `ReadOuterXml` 等效于调用 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2131">If the reader is positioned on a leaf node, calling `ReadOuterXml` is equivalent to calling <xref:System.Xml.XmlReader.Read%2A>.</span></span> <span data-ttu-id="ec77b-2132">方法返回 `String.Empty` （属性节点除外，在这种情况下，将返回特性标记）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2132">The method returns `String.Empty` (except for attribute nodes, in which case the attribute markup is returned).</span></span>  
  
 <span data-ttu-id="ec77b-2133">此方法检查格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2133">This method checks for well-formed XML.</span></span> <span data-ttu-id="ec77b-2134">如果从 <xref:System.Xml.XmlValidatingReader>调用 `ReadOuterXml`，此方法还会验证返回的内容</span><span class="sxs-lookup"><span data-stu-id="ec77b-2134">If `ReadOuterXml` is called from an <xref:System.Xml.XmlValidatingReader>, this method also validates the content returned</span></span>  
  
 <span data-ttu-id="ec77b-2135">在 <xref:System.Xml.XmlNodeReader>中实现时，<xref:System.Xml.XmlTextReader> 和 `XmlValidatingReader` 类 `ReadOuterXml` 方法是识别命名空间的。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2135">As implemented in the <xref:System.Xml.XmlNodeReader>, <xref:System.Xml.XmlTextReader> and `XmlValidatingReader` classes the `ReadOuterXml` method is namespace aware.</span></span> <span data-ttu-id="ec77b-2136">给定以下 XML 文本 `<A xmlns:S="urn:1"><S:B>hello</S:B></A>`，如果读取器定位在 `S:B` 开始标记上，`ReadOuterXml` 将 `<S:B xmlns:S="urn:1">hello<S:B/>`返回。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2136">Given the following XML text `<A xmlns:S="urn:1"><S:B>hello</S:B></A>`, if the reader were positioned on the `S:B` start tag, `ReadOuterXml` returns `<S:B xmlns:S="urn:1">hello<S:B/>`.</span></span>  
  
 <span data-ttu-id="ec77b-2137">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2137">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadOuterXmlAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2138">下面的示例对 `ReadInnerXml` 和 `ReadOuterXml` 方法进行比较。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2138">The following example compares the `ReadInnerXml` and `ReadOuterXml` methods.</span></span>  
  
 [!code-csharp[XmlReaderBasic#12](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#12)]
 [!code-vb[XmlReaderBasic#12](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#12)]  
  
 <span data-ttu-id="ec77b-2139">该示例使用 `2books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2139">The example uses `2books.xml` file as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2140">XML 的格式不良，或分析 XML 时出错。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2140">The XML was not well-formed, or an error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2141">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2141">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2142">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2142">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadOuterXmlAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadOuterXmlAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadOuterXmlAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadOuterXmlAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadOuterXmlAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadOuterXmlAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadOuterXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadOuterXmlAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="xmlReader.ReadOuterXmlAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2143">异步读取包含该节点和所有它的子级的内容（包括标记）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2143">Asynchronously reads the content, including markup, representing this node and all its children.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2144">如果读取器定位在元素或属性节点上，此方法将返回当前节点及其所有子级的所有 XML 内容（包括标记）；否则返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2144">If the reader is positioned on an element or an attribute node, this method returns all the XML content, including markup, of the current node and all its children; otherwise, it returns an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2145">这是 <xref:System.Xml.XmlReader.ReadOuterXml%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2145">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadOuterXml%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-2146">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2146">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2147">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2147">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-2148">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2148">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-2149">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-2149">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadStartElement">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2150">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2150">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2151">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2151">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-2152">检查当前节点是否为元素并将读取器推进到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2152">Checks that the current node is an element and advances the reader to the next node.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement();" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : unit -&gt; unit&#xA;override this.ReadStartElement : unit -&gt; unit" Usage="xmlReader.ReadStartElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2153">检查当前节点是否为元素并将读取器推进到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2153">Checks that the current node is an element and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2154">此方法调用 <xref:System.Xml.XmlReader.IsStartElement%2A> 后跟 <xref:System.Xml.XmlReader.Read%2A>，以将你置于输入流中找到的该元素的内容上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2154">This method calls <xref:System.Xml.XmlReader.IsStartElement%2A> followed by <xref:System.Xml.XmlReader.Read%2A> to position you on the content of that element found in the input stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2155">在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2155">Incorrect XML was encountered in the input stream.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2156">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2156">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2157">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2157">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : string -&gt; unit&#xA;override this.ReadStartElement : string -&gt; unit" Usage="xmlReader.ReadStartElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-2158">元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2158">The qualified name of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-2159">检查当前内容节点是否为具有给定 <see cref="P:System.Xml.XmlReader.Name" /> 的元素并将读取器推进到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2159">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.Name" /> and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2160">对此方法的调用对应于对 <xref:System.Xml.XmlReader.IsStartElement%2A> 的调用，然后调用 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2160">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2161">下面的示例显示每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2161">The following example displays the text content of each element.</span></span>  
  
 [!code-csharp[XmlReaderBasic#11](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#11)]
 [!code-vb[XmlReaderBasic#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#11)]  
  
 <span data-ttu-id="ec77b-2162">该示例使用 `book3.xml` 文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2162">The example uses the `book3.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#6](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/book3.xml#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2163">在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2163">Incorrect XML was encountered in the input stream.</span></span>  
  
<span data-ttu-id="ec77b-2164">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2164">-or-</span></span> 
<span data-ttu-id="ec77b-2165">元素的 <see cref="P:System.Xml.XmlReader.Name" /> 不匹配给定的 <paramref name="name" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2165">The <see cref="P:System.Xml.XmlReader.Name" /> of the element does not match the given <paramref name="name" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2166">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2166">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2167">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2167">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadStartElement">
      <MemberSignature Language="C#" Value="public virtual void ReadStartElement (string localname, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadStartElement(string localname, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadStartElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReadStartElement (localname As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReadStartElement(System::String ^ localname, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="abstract member ReadStartElement : string * string -&gt; unit&#xA;override this.ReadStartElement : string * string -&gt; unit" Usage="xmlReader.ReadStartElement (localname, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localname" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localname"><span data-ttu-id="ec77b-2168">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2168">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="ec77b-2169">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2169">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-2170">检查当前内容节点是否为具有给定 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 的元素并将读取器推进到下一个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2170">Checks that the current content node is an element with the given <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> and advances the reader to the next node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2171">对此方法的调用对应于对 <xref:System.Xml.XmlReader.IsStartElement%2A> 的调用，然后调用 <xref:System.Xml.XmlReader.Read%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2171">A call to this method corresponds to a call to <xref:System.Xml.XmlReader.IsStartElement%2A> followed by a call to <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2172">在输入流中遇到不正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2172">Incorrect XML was encountered in the input stream.</span></span>  
  
<span data-ttu-id="ec77b-2173">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2173">-or-</span></span> 
<span data-ttu-id="ec77b-2174">所找到元素的 <see cref="P:System.Xml.XmlReader.LocalName" /> 和 <see cref="P:System.Xml.XmlReader.NamespaceURI" /> 属性与给定的参数不匹配。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2174">The <see cref="P:System.Xml.XmlReader.LocalName" /> and <see cref="P:System.Xml.XmlReader.NamespaceURI" /> properties of the element found do not match the given arguments.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2175">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2175">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2176">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2176">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="M:System.Xml.XmlReader.ReadEndElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public abstract System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-2177">当在派生类中被重写时，获取读取器的状态。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2177">When overridden in a derived class, gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="ec77b-2178">指定读取器的状态的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2178">One of the enumeration values that specifies the state of the reader.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2179"><xref:System.Xml.XmlReader.ReadState%2A> 属性具有下列值之一：</span><span class="sxs-lookup"><span data-stu-id="ec77b-2179">The <xref:System.Xml.XmlReader.ReadState%2A> property has one of the following values:</span></span>  
  
-   <span data-ttu-id="ec77b-2180"><xref:System.Xml.ReadState.Initial>，则调用 <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2180"><xref:System.Xml.ReadState.Initial>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="ec77b-2181"><xref:System.Xml.ReadState.Interactive>，当调用 <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> 方法时，可以在读取器上调用其他方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2181"><xref:System.Xml.ReadState.Interactive>, when the <xref:System.Xml.XmlReader.Read%2A?displayProperty=nameWithType> method has been called, and additional methods may be called on the reader.</span></span>  
  
-   <span data-ttu-id="ec77b-2182">已成功到达 XML 文档的末尾时，<xref:System.Xml.ReadState.EndOfFile>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2182"><xref:System.Xml.ReadState.EndOfFile>, when the end of the XML document has been reached successfully.</span></span>  
  
-   <span data-ttu-id="ec77b-2183"><xref:System.Xml.ReadState.Closed>，则调用 <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2183"><xref:System.Xml.ReadState.Closed>, when the <xref:System.Xml.XmlReader.Close%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="ec77b-2184">当错误阻止读取操作继续时，<xref:System.Xml.ReadState.Error>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2184"><xref:System.Xml.ReadState.Error>, when an error is preventing the read operation from continuing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2185">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2185">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2186">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2186">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public virtual string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="abstract member ReadString : unit -&gt; string&#xA;override this.ReadString : unit -&gt; string" Usage="xmlReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2187">当在派生类中被重写时，将元素或文本节点的内容当做字符串读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2187">When overridden in a derived class, reads the contents of an element or text node as a string.</span></span> <span data-ttu-id="ec77b-2188">但是，建议改用 <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> 方法，因为该方法可以更直接地处理此操作。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2188">However, we recommend that you use the <see cref="Overload:System.Xml.XmlReader.ReadElementContentAsString" /> method instead, because it provides a more straightforward way to handle this operation.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2189">元素的内容或空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2189">The contents of the element or an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2190">建议使用 <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> 方法将元素或文本节点的内容读取为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2190">We recommend that you use the <xref:System.Xml.XmlReader.ReadElementContentAsString%2A> method to read the contents of an element or text node as a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2191">分析 XML 时出错。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2191">An error occurred while parsing the XML.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2192">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2192">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2193">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2193">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadSubtree">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReader ReadSubtree ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlReader ReadSubtree() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadSubtree" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadSubtree () As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlReader ^ ReadSubtree();" />
      <MemberSignature Language="F#" Value="abstract member ReadSubtree : unit -&gt; System.Xml.XmlReader&#xA;override this.ReadSubtree : unit -&gt; System.Xml.XmlReader" Usage="xmlReader.ReadSubtree " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2194">返回新的 <see langword="XmlReader" /> 实例，此实例可用于读取当前节点及其所有子节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2194">Returns a new <see langword="XmlReader" /> instance that can be used to read the current node, and all its descendants.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2195">设置为 <see cref="F:System.Xml.ReadState.Initial" /> 的新 XML 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2195">A new XML reader instance set to <see cref="F:System.Xml.ReadState.Initial" />.</span></span> <span data-ttu-id="ec77b-2196">调用 <see cref="M:System.Xml.XmlReader.Read" /> 方法时，会将新的读取器定位在调用 <see cref="M:System.Xml.XmlReader.ReadSubtree" /> 方法之前的当前节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2196">Calling the <see cref="M:System.Xml.XmlReader.Read" /> method positions the new reader on the node that was current before the call to the <see cref="M:System.Xml.XmlReader.ReadSubtree" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2197">只能在元素节点上调用 <xref:System.Xml.XmlReader.ReadSubtree%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2197"><xref:System.Xml.XmlReader.ReadSubtree%2A> can be called only on element nodes.</span></span> <span data-ttu-id="ec77b-2198">读取整个子树后，对 <xref:System.Xml.XmlReader.Read%2A> 方法的调用将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2198">When the entire sub-tree has been read, calls to the <xref:System.Xml.XmlReader.Read%2A> method returns `false`.</span></span> <span data-ttu-id="ec77b-2199">关闭新的 XML 读取器后，原始读取器将定位到子树的 "`EndElement`" 节点上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2199">When the new XML reader has been closed, the original reader is positioned on the `EndElement` node of the sub-tree.</span></span> <span data-ttu-id="ec77b-2200">因此，如果您在 book 元素的开始标记上调用了 <xref:System.Xml.XmlReader.ReadSubtree%2A> 方法，则在读取子树并关闭新的 XML 读取器后，原始的 XML 读取器将定位到 book 元素的结束标记上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2200">Thus, if you called the <xref:System.Xml.XmlReader.ReadSubtree%2A> method on the start tag of the book element, after the sub-tree has been read and the new XML reader has been closed, the original XML reader is positioned on the end tag of the book element.</span></span>  
  
 <span data-ttu-id="ec77b-2201">在关闭新的读取器之前，不应对原始读取器执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2201">You should not perform any operations on the original reader until the new reader has been closed.</span></span> <span data-ttu-id="ec77b-2202">不支持此操作，因为这样可能会导致意想不到的行为。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2202">This action is not supported and can result in unpredictable behavior.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-2203"><xref:System.Xml.XmlReader.ReadSubtree%2A> 方法不用于创建可单独处理的 XML 数据副本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2203">The <xref:System.Xml.XmlReader.ReadSubtree%2A> method isn't intended for creating copies of the XML data that you can work with independently.</span></span> <span data-ttu-id="ec77b-2204">它旨在围绕 XML 元素创建边界。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2204">It's designed to create a boundary around an XML element.</span></span> <span data-ttu-id="ec77b-2205">如果要将数据传递给另一个组件进行处理，并且希望限制组件可以访问的数据量，则这非常有用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2205">This is useful if you want to pass data to another component for processing and you wish to limit how much of your data the component can access.</span></span> <span data-ttu-id="ec77b-2206">将 <xref:System.Xml.XmlReader.ReadSubtree%2A> 方法返回的 XML 读取器传递到另一个应用程序时，应用程序只能访问该 XML 元素，而不能访问整个 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2206">When you pass an XML reader returned by the <xref:System.Xml.XmlReader.ReadSubtree%2A> method to another application, the application can access only that XML element, not the entire XML document.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2207">下面的示例显示如何使用 <xref:System.Xml.XmlReader.ReadSubtree%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2207">The following example shows how to use the <xref:System.Xml.XmlReader.ReadSubtree%2A> method.</span></span>  
  
 [!code-csharp[XmlReaderBasic#13](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#13)]
 [!code-vb[XmlReaderBasic#13](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#13)]  
  
 <span data-ttu-id="ec77b-2208">使用以下 XML 数据运行本主题中的示例：</span><span class="sxs-lookup"><span data-stu-id="ec77b-2208">Use the following XML data to run the examples in this topic:</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<Books>  
  <Book>  
    <Title>A Brief History of Time</Title>  
  </Book>  
  <Book>  
    <Title>Principle Of Relativity</Title>  
  </Book>  
  <Book>  
    <Title>Victory of Reason</Title>  
  </Book>  
  <Book>  
    <Title>The Unicorn that did not Fail</Title>  
  </Book>  
  <Book>  
    <Title>Rational Ontology</Title>  
  </Book>  
  <Book>  
    <Title>The Meaning of Pizza</Title>  
  </Book>  
</Books>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2209">调用此方法时 XML 读取器没有定位在某个元素上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2209">The XML reader isn't positioned on an element when this method is called.</span></span>

<span data-ttu-id="ec77b-2210">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2210">-or-</span></span>

<span data-ttu-id="ec77b-2211">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2211">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2212">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2212">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToDescendant">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2213">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2213">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2214">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2214">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-2215">让 <see cref="T:System.Xml.XmlReader" /> 前进到下一个匹配的子代元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2215">Advances the <see cref="T:System.Xml.XmlReader" /> to the next matching descendant element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToDescendant : string -&gt; bool&#xA;override this.ReadToDescendant : string -&gt; bool" Usage="xmlReader.ReadToDescendant name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-2216">要移动到的元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2216">The qualified name of the element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="ec77b-2217">让 <see cref="T:System.Xml.XmlReader" /> 前进到下一个具有指定限定名的子代元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2217">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified qualified name.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2218">如果找到匹配的子代元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2218"><see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span></span> <span data-ttu-id="ec77b-2219">如果未找到匹配的子元素，<see cref="T:System.Xml.XmlReader" /> 将定位在元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2219">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span></span>  
  
<span data-ttu-id="ec77b-2220">如果调用 <see cref="T:System.Xml.XmlReader" /> 时没有将 <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> 定位在某个元素上，则此方法返回 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 的位置保持不变。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2220">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-2221">下面的示例分析第二个 book 节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2221">The following example parses the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="ec77b-2222">该示例使用文件（`2books.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2222">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2223">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2223">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2224">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2224">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-2225">参数是空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2225">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToDescendant">
      <MemberSignature Language="C#" Value="public virtual bool ReadToDescendant (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToDescendant(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToDescendant (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToDescendant(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToDescendant : string * string -&gt; bool&#xA;override this.ReadToDescendant : string * string -&gt; bool" Usage="xmlReader.ReadToDescendant (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-2226">要移动到的元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2226">The local name of the element you wish to move to.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-2227">要移动到的元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2227">The namespace URI of the element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="ec77b-2228">让 <see cref="T:System.Xml.XmlReader" /> 前进到下一个具有指定的本地名称和命名空间 URI 的子代元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2228">Advances the <see cref="T:System.Xml.XmlReader" /> to the next descendant element with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2229">如果找到匹配的子代元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2229"><see langword="true" /> if a matching descendant element is found; otherwise <see langword="false" />.</span></span> <span data-ttu-id="ec77b-2230">如果未找到匹配的子元素，<see cref="T:System.Xml.XmlReader" /> 将定位在元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2230">If a matching child element is not found, the <see cref="T:System.Xml.XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the element.</span></span>  
  
<span data-ttu-id="ec77b-2231">如果调用 <see cref="T:System.Xml.XmlReader" /> 时没有将 <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> 定位在某个元素上，则此方法返回 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 的位置保持不变。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2231">If the <see cref="T:System.Xml.XmlReader" /> is not positioned on an element when <see cref="M:System.Xml.XmlReader.ReadToDescendant(System.String,System.String)" /> was called, this method returns <see langword="false" /> and the position of the <see cref="T:System.Xml.XmlReader" /> is not changed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2232">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2232">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2233">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2233">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-2234">两个参数值均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2234">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToFollowing">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2235">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2235">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2236">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2236">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-2237">一直读取，直到找到命名元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2237">Reads until the named element is found.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToFollowing : string -&gt; bool&#xA;override this.ReadToFollowing : string -&gt; bool" Usage="xmlReader.ReadToFollowing name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-2238">元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2238">The qualified name of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-2239">一直读取，直到找到具有指定限定名的元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2239">Reads until an element with the specified qualified name is found.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2240">如果找到匹配的元素，则为 <see langword="true" />；否则为 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 位于文件的末尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2240"><see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2241">此方法在功能上等效于从当前节点执行 `following::name` 的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2241">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="ec77b-2242">它提供了一种在 XML 文档中查找命名元素的快捷方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2242">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="ec77b-2243">如果找到匹配的元素，它会使读取器前进到与指定名称匹配的下一个元素，并返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2243">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span> <span data-ttu-id="ec77b-2244">使用下面的示例，读取器将读取到指定元素的第一个实例，同时读取。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2244">Using the example below, the reader would read to the first instance of the specified element while reading forward.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xml version="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item");  
  
```  
  
 <span data-ttu-id="ec77b-2245">可以在所有节点类型上调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2245">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2246">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2246">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2247">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2247">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-2248">参数是空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2248">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToFollowing">
      <MemberSignature Language="C#" Value="public virtual bool ReadToFollowing (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToFollowing(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToFollowing(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToFollowing (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToFollowing(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToFollowing : string * string -&gt; bool&#xA;override this.ReadToFollowing : string * string -&gt; bool" Usage="xmlReader.ReadToFollowing (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-2249">元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2249">The local name of the element.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-2250">元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2250">The namespace URI of the element.</span></span></param>
        <summary><span data-ttu-id="ec77b-2251">一直读取，直到找到具有指定的本地名称和命名空间 URI 的元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2251">Reads until an element with the specified local name and namespace URI is found.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2252">如果找到匹配的元素，则为 <see langword="true" />；否则为 <see langword="false" /> 且 <see cref="T:System.Xml.XmlReader" /> 位于文件的末尾。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2252"><see langword="true" /> if a matching element is found; otherwise <see langword="false" /> and the <see cref="T:System.Xml.XmlReader" /> is in an end of file state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2253">此方法在功能上等效于从当前节点执行 `following::name` 的 XPath 表达式。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2253">This method is functionally equivalent executing the `following::name` XPath expression from the current node.</span></span> <span data-ttu-id="ec77b-2254">它提供了一种在 XML 文档中查找命名元素的快捷方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2254">It provides a quick way to find a named element in the XML document.</span></span> <span data-ttu-id="ec77b-2255">如果找到匹配的元素，它会使读取器前进到与指定名称匹配的下一个元素，并返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2255">It advances the reader to the next following element that matches the specified name and returns `true` if a matching element is found.</span></span>  
  
```xml  
<!--"sample.xml"-->  
<?xml version="1.0">  
   <items>  
      <item xmls="urn:1"/>  
   </items>  
</xml>  
  
```  
  
```csharp  
XmlTextReader reader = newXmlTextReader("sample.xml");  
  
reader.ReadToFollowing("item", "urn:1");  
  
```  
  
 <span data-ttu-id="ec77b-2256">可以在所有节点类型上调用此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2256">This method can be called on all node types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2257">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2257">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2258">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2258">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-2259">两个参数值均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2259">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadToNextSibling">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2260">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2260">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2261">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2261">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <summary><span data-ttu-id="ec77b-2262">让 <see langword="XmlReader" /> 前进到下一个匹配的同级元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2262">Advances the <see langword="XmlReader" /> to the next matching sibling element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member ReadToNextSibling : string -&gt; bool&#xA;override this.ReadToNextSibling : string -&gt; bool" Usage="xmlReader.ReadToNextSibling name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="ec77b-2263">要移动到的同级元素的限定名。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2263">The qualified name of the sibling element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="ec77b-2264">让 <see langword="XmlReader" /> 前进到下一个具有指定限定名的同级元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2264">Advances the <see langword="XmlReader" /> to the next sibling element with the specified qualified name.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2265">如果找到匹配的同级元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2265"><see langword="true" /> if a matching sibling element is found; otherwise <see langword="false" />.</span></span> <span data-ttu-id="ec77b-2266">如果没有找到匹配的同级元素，<see langword="XmlReader" /> 会定位在父元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2266">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-2267">当 `XmlReader` 处于初始状态时，请勿调用 <xref:System.Xml.XmlReader.ReadToNextSibling%2A> （<xref:System.Xml.XmlReader.ReadState%2A> <xref:System.Xml.ReadState.Initial>）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2267">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="ec77b-2268">可以调用 <xref:System.Xml.XmlReader.Read%2A> 来前进 `XmlReader`，然后调用 <xref:System.Xml.XmlReader.ReadToNextSibling%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2268">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2269">下面的示例读取每个 book 节点上的 ISBN 特性。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2269">The following example reads the ISBN attribute on each book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#15](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#15)]
 [!code-vb[XmlReaderBasic#15](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2270">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2270">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2271">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2271">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ec77b-2272">参数是空字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2272">The parameter is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadToNextSibling">
      <MemberSignature Language="C#" Value="public virtual bool ReadToNextSibling (string localName, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadToNextSibling(string localName, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadToNextSibling(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToNextSibling (localName As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ReadToNextSibling(System::String ^ localName, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="abstract member ReadToNextSibling : string * string -&gt; bool&#xA;override this.ReadToNextSibling : string * string -&gt; bool" Usage="xmlReader.ReadToNextSibling (localName, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="ec77b-2273">要移动到的同级元素的本地名称。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2273">The local name of the sibling element you wish to move to.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="ec77b-2274">你希望移动到的同级元素的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2274">The namespace URI of the sibling element you wish to move to.</span></span></param>
        <summary><span data-ttu-id="ec77b-2275">将 <see langword="XmlReader" /> 推进到具有指定的本地名称和命名空间 URI 的下一个同级元素。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2275">Advances the <see langword="XmlReader" /> to the next sibling element with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2276">如果找到匹配的同级元素，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2276"><see langword="true" /> if a matching sibling element is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ec77b-2277">如果没有找到匹配的同级元素，<see langword="XmlReader" /> 会定位在父元素的结束标记（<see cref="P:System.Xml.XmlReader.NodeType" /> 为 <see langword="XmlNodeType.EndElement" />）上。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2277">If a matching sibling element is not found, the <see langword="XmlReader" /> is positioned on the end tag (<see cref="P:System.Xml.XmlReader.NodeType" /> is <see langword="XmlNodeType.EndElement" />) of the parent element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-2278">当 `XmlReader` 处于初始状态时，请勿调用 <xref:System.Xml.XmlReader.ReadToNextSibling%2A> （<xref:System.Xml.XmlReader.ReadState%2A> <xref:System.Xml.ReadState.Initial>）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2278">Do not call <xref:System.Xml.XmlReader.ReadToNextSibling%2A> when the `XmlReader` is an initial state (<xref:System.Xml.XmlReader.ReadState%2A> is <xref:System.Xml.ReadState.Initial>).</span></span> <span data-ttu-id="ec77b-2279">可以调用 <xref:System.Xml.XmlReader.Read%2A> 来前进 `XmlReader`，然后调用 <xref:System.Xml.XmlReader.ReadToNextSibling%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2279">You can call <xref:System.Xml.XmlReader.Read%2A> to advance the `XmlReader` and then call the <xref:System.Xml.XmlReader.ReadToNextSibling%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2280">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2280">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2281">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2281">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-2282">两个参数值均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2282">Both parameter values are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunk">
      <MemberSignature Language="C#" Value="public virtual int ReadValueChunk (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadValueChunk(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunk(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunk (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadValueChunk(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadValueChunk : char[] * int * int -&gt; int&#xA;override this.ReadValueChunk : char[] * int * int -&gt; int" Usage="xmlReader.ReadValueChunk (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-2283">作为文本内容写入到的缓冲区的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2283">The array of characters that serves as the buffer to which the text contents are written.</span></span> <span data-ttu-id="ec77b-2284">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2284">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-2285">缓冲区中的偏移量，<see cref="T:System.Xml.XmlReader" /> 可以从这个位置开始复制结果。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2285">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-2286">要复制到缓冲区中的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2286">The maximum number of characters to copy into the buffer.</span></span> <span data-ttu-id="ec77b-2287">此方法返回复制的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2287">The actual number of characters copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-2288">读取嵌入在 XML 文档中的大量文本流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2288">Reads large streams of text embedded in an XML document.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2289">读取到缓冲区中的字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2289">The number of characters read into the buffer.</span></span> <span data-ttu-id="ec77b-2290">如果不再有文本内容，则返回值零。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2290">The value zero is returned when there is no more text content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2291">此方法允许以流式处理的方式读取嵌入 XML 文档中的大量文本（即一次只需少量字符），而不是为整个值分配一个字符串。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2291">This method enables reading of very large streams of text embedded in an XML document in a streaming fashion, that is, a small number of characters at a time instead of allocating a single string for the whole value.</span></span> <span data-ttu-id="ec77b-2292">此方法可在任何具有值（<xref:System.Xml.XmlReader.HasValue%2A> `true`）的节点上调用，但仅当在文本、空白和有效空白节点上调用时才会发生节点值的实际流式处理。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2292">This method can be called on any node that has a value (<xref:System.Xml.XmlReader.HasValue%2A> is `true`), however actual streaming of the node value only occurs when called on a text, white space and significant white space nodes.</span></span> <span data-ttu-id="ec77b-2293">其他节点类型值缓存，包括属性和 CDATA 节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2293">Other node type values are cached, including attributes and CDATA nodes.</span></span>  
  
 <span data-ttu-id="ec77b-2294">此方法只返回 <xref:System.Xml.XmlReader.Value%2A> 属性的内容，而不移动 <xref:System.Xml.XmlReader>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2294">This method returns only the content of the <xref:System.Xml.XmlReader.Value%2A> property and does not move the <xref:System.Xml.XmlReader>.</span></span>  
  
 <span data-ttu-id="ec77b-2295">此方法将节点值的指定数量的字符（`count`）读入到指定偏移（`index`）的字符缓冲区（`buffer`），并返回写入缓冲区的字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2295">This method reads the specified number of characters (`count`) of the node value into a character buffer (`buffer`) at a specified offset (`index`) and returns the number of characters written to the buffer.</span></span> <span data-ttu-id="ec77b-2296">它在到达值的末尾时返回 `0`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2296">It returns the `0` when it has reached the end of the value.</span></span> <span data-ttu-id="ec77b-2297">它无法重新启动以再次读取该值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2297">It cannot be restarted to read through the value again.</span></span>  
  
 <span data-ttu-id="ec77b-2298">在对的两次调用之间 <xref:System.Xml.XmlReader.ReadValueChunk%2A> <xref:System.Xml.XmlReader> 属性不会更改（<xref:System.Xml.XmlReader.Value%2A> 属性除外）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2298">In between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A> the <xref:System.Xml.XmlReader> properties do no change except for the <xref:System.Xml.XmlReader.Value%2A> property.</span></span> <span data-ttu-id="ec77b-2299">在访问 <xref:System.Xml.XmlReader.Value%2A> 属性时，它可能会返回一个部分值（包含未由 <xref:System.Xml.XmlReader.ReadValueChunk%2A>返回的字符）或一个完整值（具体取决于实现）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2299">When the <xref:System.Xml.XmlReader.Value%2A> property is accessed it may either return a partial value (with characters not yet returned by <xref:System.Xml.XmlReader.ReadValueChunk%2A>) or a full value depending on the implementation.</span></span> <span data-ttu-id="ec77b-2300"><xref:System.Xml> 命名空间中的所有 <xref:System.Xml.XmlReader> 实现都返回 <xref:System.Xml.XmlReader.Value%2A> 属性实现的部分值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2300">All the <xref:System.Xml.XmlReader> implementations in the <xref:System.Xml> namespace return a partial value for the <xref:System.Xml.XmlReader.Value%2A> property implementation.</span></span>  
  
 <span data-ttu-id="ec77b-2301">可以在对 <xref:System.Xml.XmlReader.ReadValueChunk%2A>的调用之间调用任何读取方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2301">Any Read method can be called in between calls to <xref:System.Xml.XmlReader.ReadValueChunk%2A>.</span></span> <span data-ttu-id="ec77b-2302">如果发生这种情况，则 <xref:System.Xml.XmlReader> 会移动到流中的下一 <xref:System.Xml.XmlNodeType>，而不会跳过任何尚未返回的字符。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2302">If this occurs, the <xref:System.Xml.XmlReader> moves to the next <xref:System.Xml.XmlNodeType> in the stream and any characters not yet returned are skipped.</span></span>  
  
 <span data-ttu-id="ec77b-2303">如果 <xref:System.Xml.XmlReader.ReadValueChunk%2A> 返回的字符数小于所请求的字符数，则可能会出现这种情况。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2303">There may be a case when <xref:System.Xml.XmlReader.ReadValueChunk%2A> returns less than the requested number of characters.</span></span> <span data-ttu-id="ec77b-2304">例如，如果你的长度为200个字符的长度为个字符的值，而代理项对位置127和128，且你使用128字符缓冲区调用了 <xref:System.Xml.XmlReader.ReadValueChunk%2A>，则该方法调用将返回127字符，而不是请求的128。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2304">For example, if you had a 200-character long value with a surrogate pair at positions 127 and 128 and you called <xref:System.Xml.XmlReader.ReadValueChunk%2A> with a 128-character buffer, the method call would return 127 characters instead of the requested 128.</span></span> <span data-ttu-id="ec77b-2305">然后，将在下一个 <xref:System.Xml.XmlReader.ReadValueChunk%2A> 调用中返回代理项对。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2305">The surrogate pair would then be returned in the next <xref:System.Xml.XmlReader.ReadValueChunk%2A> call.</span></span> <span data-ttu-id="ec77b-2306">在这种情况下，<xref:System.Xml.XmlReader.ReadValueChunk%2A> 不返回请求的128字符，这是因为这样做可能会导致缓冲区末尾的代理项对不完整。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2306">In this case, <xref:System.Xml.XmlReader.ReadValueChunk%2A> did not return the requested 128 characters because doing so would have resulted in an incomplete surrogate pair at the end of the buffer.</span></span>  
  
 <span data-ttu-id="ec77b-2307">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2307">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.ReadValueChunkAsync%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2308">当前节点没有值（<see cref="P:System.Xml.XmlReader.HasValue" /> 为 <see langword="false" />）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2308">The current node does not have a value (<see cref="P:System.Xml.XmlReader.HasValue" /> is <see langword="false" />).</span></span>

<span data-ttu-id="ec77b-2309">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2309">-or-</span></span> 
<span data-ttu-id="ec77b-2310">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2310">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2311">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2311">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ec77b-2312"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2312">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ec77b-2313">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2313">The index into the buffer, or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="ec77b-2314"><see cref="T:System.Xml.XmlReader" /> 实现不支持此方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2314">The <see cref="T:System.Xml.XmlReader" /> implementation does not support this method.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="ec77b-2315">XML 数据不是格式良好的。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2315">The XML data is not well-formed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadValueChunkAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadValueChunkAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadValueChunkAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ReadValueChunkAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadValueChunkAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadValueChunkAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadValueChunkAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadValueChunkAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="xmlReader.ReadValueChunkAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="ec77b-2316">作为文本内容写入到的缓冲区的字符数组。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2316">The array of characters that serves as the buffer to which the text contents are written.</span></span> <span data-ttu-id="ec77b-2317">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2317">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="ec77b-2318">缓冲区中的偏移量，<see cref="T:System.Xml.XmlReader" /> 可以从这个位置开始复制结果。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2318">The offset within the buffer where the <see cref="T:System.Xml.XmlReader" /> can start to copy the results.</span></span></param>
        <param name="count"><span data-ttu-id="ec77b-2319">要复制到缓冲区中的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2319">The maximum number of characters to copy into the buffer.</span></span> <span data-ttu-id="ec77b-2320">此方法返回复制的实际字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2320">The actual number of characters copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="ec77b-2321">异步读取嵌入在 XML 文档中的大量文本流。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2321">Asynchronously reads large streams of text embedded in an XML document.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2322">读取到缓冲区中的字符数。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2322">The number of characters read into the buffer.</span></span> <span data-ttu-id="ec77b-2323">如果不再有文本内容，则返回值零。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2323">The value zero is returned when there is no more text content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2324">这是 <xref:System.Xml.XmlReader.ReadValueChunk%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2324">This is the asynchronous version of <xref:System.Xml.XmlReader.ReadValueChunk%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-2325">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2325">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2326">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2326">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2327">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2327">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>
<span data-ttu-id="ec77b-2328">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2328">-or-</span></span>

<span data-ttu-id="ec77b-2329">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2329">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-2330">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2330">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-2331">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-2331">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public abstract void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResolveEntity();" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntity : unit -&gt; unit" Usage="xmlReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2332">当在派生类中被重写时，解析 <see langword="EntityReference" /> 节点的实体引用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2332">When overridden in a derived class, resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2333">如果读取器定位在 `EntityReference` 节点（`XmlNodeType.EntityReference`）上，如果在调用此方法后调用 <xref:System.Xml.XmlReader.Read%2A>，则将分析实体替换文本。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2333">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="ec77b-2334">实体替换文本完成后，将返回 `EndEntity` 节点以关闭实体引用作用域。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2334">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ec77b-2335">调用此方法后，如果实体是属性值的一部分，则必须调用 <xref:System.Xml.XmlReader.ReadAttributeValue%2A> 以单步执行实体。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2335">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2336">读取器未定位在 <see langword="EntityReference" /> 节点上；该读取器的实现不能解析实体（<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> 返回 <see langword="false" />）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2336">The reader is not positioned on an <see langword="EntityReference" /> node; this implementation of the reader cannot resolve entities (<see cref="P:System.Xml.XmlReader.CanResolveEntity" /> returns <see langword="false" />).</span></span>

<span data-ttu-id="ec77b-2337">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2337">-or-</span></span>

<span data-ttu-id="ec77b-2338">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2338">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2339">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2339">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="T:System.Xml.EntityHandling" />
        <altmember cref="P:System.Xml.XmlReader.CanResolveEntity" />
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlReader.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-2340">获取作为架构验证结果分配给当前节点的架构信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2340">Gets the schema information that has been assigned to the current node as a result of schema validation.</span></span></summary>
        <value><span data-ttu-id="ec77b-2341">一个包含当前节点的架构信息的 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2341">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the schema information for the current node.</span></span> <span data-ttu-id="ec77b-2342">架构信息可以在元素、特性或具有非空 <see cref="P:System.Xml.XmlReader.ValueType" />（类型化值）的文本节点上设置。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2342">Schema information can be set on elements, attributes, or on text nodes with a non-null <see cref="P:System.Xml.XmlReader.ValueType" /> (typed values).</span></span>  
  
<span data-ttu-id="ec77b-2343">如果当前节点不属于上述节点类型，或者如果 <see langword="XmlReader" /> 实例未报告架构信息，则此属性返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2343">If the current node is not one of the above node types, or if the <see langword="XmlReader" /> instance does not report schema information, this property returns <see langword="null" />.</span></span>  
  
<span data-ttu-id="ec77b-2344">如果从 <see cref="T:System.Xml.XmlTextReader" /> 或 <see cref="T:System.Xml.XmlValidatingReader" /> 对象调用此属性，则此属性总是返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2344">If this property is called from an <see cref="T:System.Xml.XmlTextReader" /> or an <see cref="T:System.Xml.XmlValidatingReader" /> object, this property always returns <see langword="null" />.</span></span> <span data-ttu-id="ec77b-2345">这些 <see langword="XmlReader" /> 实现不会通过 <see langword="SchemaInfo" /> 属性公开架构信息。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2345">These <see langword="XmlReader" /> implementations do not expose schema information through the <see langword="SchemaInfo" /> property.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="ec77b-2346">如果必须为某个元素获取架构验证后信息集 (PSVI)，请在此元素的结束标记处（而不是在开始标记处）放置读取器。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2346">If you have to get the post-schema-validation information set (PSVI) for an element, position the reader on the end tag of the element, rather than on the start tag.</span></span> <span data-ttu-id="ec77b-2347">您可以通过读取器的 <see langword="SchemaInfo" /> 属性获取 PSVI。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2347">You get the PSVI through the <see langword="SchemaInfo" /> property of a reader.</span></span> <span data-ttu-id="ec77b-2348">通过 <see cref="Overload:System.Xml.XmlReader.Create" /> 并使用设置为 <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> 的 <see cref="F:System.Xml.ValidationType.Schema" /> 属性创建的验证读取器具有完整的 PSVI，仅在将读取器放置在元素的结束标记处时，此 PSVI 才对元素可用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2348">The validating reader that is created through <see cref="Overload:System.Xml.XmlReader.Create" /> with the <see cref="P:System.Xml.XmlReaderSettings.ValidationType" /> property set to <see cref="F:System.Xml.ValidationType.Schema" /> has complete PSVI for an element only when the reader is positioned on the end tag of an element.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2349"><xref:System.Xml.Schema.IXmlSchemaInfo> 接口公开与 XML 节点关联的后架构验证信息集（PSVI）的子集。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2349">The <xref:System.Xml.Schema.IXmlSchemaInfo> interface exposes a subset of the Post Schema Validation Infoset (PSVI) associated with an XML node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2350">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2350">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2351">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2351">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlReaderSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlReaderSettings Settings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Settings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Settings As XmlReaderSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlReaderSettings ^ Settings { System::Xml::XmlReaderSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Settings : System.Xml.XmlReaderSettings" Usage="System.Xml.XmlReader.Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReaderSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-2352">获取用于创建此 <see cref="T:System.Xml.XmlReader" /> 实例的 <see cref="T:System.Xml.XmlReaderSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2352">Gets the <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this <see cref="T:System.Xml.XmlReader" /> instance.</span></span></summary>
        <value><span data-ttu-id="ec77b-2353">用于创建此读取器实例的 <see cref="T:System.Xml.XmlReaderSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2353">The <see cref="T:System.Xml.XmlReaderSettings" /> object used to create this reader instance.</span></span> <span data-ttu-id="ec77b-2354">如果此读取器不是使用 <see cref="Overload:System.Xml.XmlReader.Create" /> 方法创建的，则此属性返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2354">If this reader was not created using the <see cref="Overload:System.Xml.XmlReader.Create" /> method, this property returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ec77b-2355"><xref:System.Xml.XmlReaderSettings> 对象可以包含敏感信息，例如用户凭据。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2355">The <xref:System.Xml.XmlReaderSettings> object can contain sensitive information such as user credentials.</span></span> <span data-ttu-id="ec77b-2356">在缓存此对象或将其传递给其他组件时，应用程序一定要小心。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2356">Applications must be careful when caching this object or passing it to another component.</span></span>  
  
 <span data-ttu-id="ec77b-2357"><xref:System.Xml.XmlReaderSettings> 类用于指定要在创建的读取器实例上支持的功能集。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2357">The <xref:System.Xml.XmlReaderSettings> class is used to specify the set of features to support on the created reader instance.</span></span> <span data-ttu-id="ec77b-2358">不能修改此属性返回的 <xref:System.Xml.XmlReaderSettings> 对象。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2358">The <xref:System.Xml.XmlReaderSettings> object returned by this property cannot be modified.</span></span> <span data-ttu-id="ec77b-2359">尝试更改各个设置会导致引发异常。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2359">Any attempt to change individual settings results in an exception being thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2360">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2360">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2361">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2361">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public virtual void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Skip();" />
      <MemberSignature Language="F#" Value="abstract member Skip : unit -&gt; unit&#xA;override this.Skip : unit -&gt; unit" Usage="xmlReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2362">跳过当前节点的子级。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2362">Skips the children of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2363">在以下 XML 输入中，如果读取器定位在 `<a>` 节点或它的任何属性上，则调用 `Skip` 会将读取器定位到 `<b>` 节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2363">In the following XML input if the reader is positioned on the `<a>` node or any of its attributes, calling `Skip` positions the reader to the `<b>` node.</span></span>  
  
 <span data-ttu-id="ec77b-2364">如果读取器定位在叶节点上（例如 `<x>` 节点或文本节点 `abc`），则调用 `Skip` 与调用 <xref:System.Xml.XmlReader.Read%2A>时相同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2364">If the reader is positioned on a leaf node already (such as the `<x>` node or the text node `abc`), calling `Skip` is the same as calling <xref:System.Xml.XmlReader.Read%2A>.</span></span>  
  
```xml  
<a name="bob" age="123">  
 <x/>abc<y/>  
</a>  
<b>  
...  
</b>  
```  
  
 <span data-ttu-id="ec77b-2365">此方法检查格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2365">This method checks for well-formed XML.</span></span>  
  
 <span data-ttu-id="ec77b-2366">如果读取器是 <xref:System.Xml.XmlValidatingReader>，则此方法还会验证已跳过的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2366">If the reader is an <xref:System.Xml.XmlValidatingReader>, this method also validates the skipped content.</span></span>  
  
 <span data-ttu-id="ec77b-2367">`XmlReader` 实现确定 `Skip` 方法是否将展开外部实体。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2367">The `XmlReader` implementation determines whether or not the `Skip` method will expand external entities.</span></span> <span data-ttu-id="ec77b-2368">下表描述了是否对各种类型的 `XmlReader` 对象展开外部实体。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2368">The following table describes whether the external entities are expanded for the various types of `XmlReader` objects.</span></span>  
  
|<span data-ttu-id="ec77b-2369">XmlReader 的类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-2369">Type of XmlReader</span></span>|<span data-ttu-id="ec77b-2370">展开外部实体</span><span class="sxs-lookup"><span data-stu-id="ec77b-2370">Expands external entities</span></span>|  
|-----------------------|-------------------------------|  
|<xref:System.Xml.XmlTextReader>|<span data-ttu-id="ec77b-2371">不是。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2371">No.</span></span>|  
|<span data-ttu-id="ec77b-2372">由读取文本数据的 <xref:System.Xml.XmlReader.Create%2A> 方法创建 <xref:System.Xml.XmlReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2372"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading text data.</span></span>|<span data-ttu-id="ec77b-2373">不是。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2373">No.</span></span>|  
|<span data-ttu-id="ec77b-2374">由读取二进制数据的 <xref:System.Xml.XmlReader.Create%2A> 方法创建 <xref:System.Xml.XmlReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2374"><xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method that is reading binary data.</span></span>|<span data-ttu-id="ec77b-2375">不适用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2375">Not applicable.</span></span>|  
|<span data-ttu-id="ec77b-2376">验证 <xref:System.Xml.XmlReader.Create%2A> 方法创建 <xref:System.Xml.XmlReader> 实例的架构。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2376">A schema validating <xref:System.Xml.XmlReader> instance created by the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>|<span data-ttu-id="ec77b-2377">可以。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2377">Yes.</span></span>|  
|<xref:System.Xml.XmlValidatingReader>|<span data-ttu-id="ec77b-2378">可以。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2378">Yes.</span></span>|  
|<span data-ttu-id="ec77b-2379"><xref:System.Xml.XmlReader> 由 <xref:System.Xml.XPath.XPathNavigator> 对象返回的实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2379"><xref:System.Xml.XmlReader> instance returned by a <xref:System.Xml.XPath.XPathNavigator> object.</span></span>|<span data-ttu-id="ec77b-2380">不适用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2380">Not applicable.</span></span>|  
|<xref:System.Xml.XmlNodeReader>|<span data-ttu-id="ec77b-2381">不是。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2381">No.</span></span>|  
|<span data-ttu-id="ec77b-2382">围绕另一个 <xref:System.Xml.XmlReader> 实例 <xref:System.Xml.XmlReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2382"><xref:System.Xml.XmlReader> instance wrapped around another <xref:System.Xml.XmlReader> instance.</span></span>|<span data-ttu-id="ec77b-2383">取决于基础 <xref:System.Xml.XmlReader>的实现。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2383">Depends on the implementation of the underlying <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="ec77b-2384">（调用基础 <xref:System.Xml.XmlReader> 上的 `Skip` 方法）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2384">(The `Skip` method on the underlying <xref:System.Xml.XmlReader> is called).</span></span>|  
  
 <span data-ttu-id="ec77b-2385">有关此方法的异步版本，请参阅 <xref:System.Xml.XmlReader.SkipAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2385">For the asynchronous version of this method, see <xref:System.Xml.XmlReader.SkipAsync%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2386">下面的示例分析从第二个 book 节点开始的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2386">The following example parses an XML file starting on the second book node.</span></span>  
  
 [!code-csharp[XmlReaderBasic#14](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#14)]
 [!code-vb[XmlReaderBasic#14](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#14)]  
  
 <span data-ttu-id="ec77b-2387">该示例使用文件（`2books.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2387">The example uses the file, `2books.xml`, as input.</span></span>  
  
 [!code-xml[XML_Core_Files#7](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/2books.xml#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2388">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2388">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2389">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2389">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SkipAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SkipAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SkipAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.SkipAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SkipAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ SkipAsync();" />
      <MemberSignature Language="F#" Value="abstract member SkipAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.SkipAsync : unit -&gt; System.Threading.Tasks.Task" Usage="xmlReader.SkipAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2390">异步跳过当前节点的子级。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2390">Asynchronously skips the children of the current node.</span></span></summary>
        <returns><span data-ttu-id="ec77b-2391">当前节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2391">The current node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2392">这是 <xref:System.Xml.XmlReader.Skip%2A>的异步版本，具有相同的功能。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2392">This is the asynchronous version of <xref:System.Xml.XmlReader.Skip%2A>, with the same functionality.</span></span> <span data-ttu-id="ec77b-2393">若要使用此方法，必须将 <xref:System.Xml.XmlReaderSettings.Async%2A> 标志设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2393">To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2394">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2394">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2395">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2395">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span>

<span data-ttu-id="ec77b-2396">- 或 -</span><span class="sxs-lookup"><span data-stu-id="ec77b-2396">-or-</span></span>

<span data-ttu-id="ec77b-2397">调用了 <see cref="T:System.Xml.XmlReader" /> 异步方法，但未将 <see cref="P:System.Xml.XmlReaderSettings.Async" /> 标志设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2397">An <see cref="T:System.Xml.XmlReader" /> asynchronous method was called without setting the <see cref="P:System.Xml.XmlReaderSettings.Async" /> flag to <see langword="true" />.</span></span> <span data-ttu-id="ec77b-2398">在此情况下，将引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“若要使用 Async 方法，请将 XmlReaderSettings.Async 设置为 True。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2398">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "Set XmlReaderSettings.Async to true if you want to use Async Methods."</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="ec77b-2399">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="ec77b-2399">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="xmlReader.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec77b-2400">有关此成员的说明，请参见 <see cref="M:System.IDisposable.Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2400">For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="ec77b-2401">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2401">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ec77b-2402">它只能在 <xref:System.Xml.XmlReader> 实例被强制转换为 <xref:System.IDisposable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2402">It can be used only when the <xref:System.Xml.XmlReader> instance is cast to an <xref:System.IDisposable> interface.</span></span>

<span data-ttu-id="ec77b-2403">此成员在[可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)项目中使用时的行为可能不同。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2403">This member may behave differently when it is used in a [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) project.</span></span> <span data-ttu-id="ec77b-2404">有关详细信息，请参阅[可移植类库中的 API 差异](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2404">For more information, see [API Differences in Portable Class Library](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/gg597392(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-2405">当在派生类中被重写时，获取当前节点的文本值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2405">When overridden in a derived class, gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-2406">返回的值取决于节点的 <see cref="P:System.Xml.XmlReader.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2406">The value returned depends on the <see cref="P:System.Xml.XmlReader.NodeType" /> of the node.</span></span> <span data-ttu-id="ec77b-2407">下表列出具有要返回的值的节点类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2407">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="ec77b-2408">所有其他节点类型返回 <see langword="String.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2408">All other node types return <see langword="String.Empty" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ec77b-2409">节点类型</span><span class="sxs-lookup"><span data-stu-id="ec77b-2409">Node type</span></span> 
 </term><description> <span data-ttu-id="ec77b-2410">“值”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2410">Value</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="ec77b-2411">属性的值。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2411">The value of the attribute.</span></span>  
  
 </description></item><item><term><see langword="CDATA" /></term><description> <span data-ttu-id="ec77b-2412">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2412">The content of the CDATA section.</span></span>  
  
 </description></item><item><term><see langword="Comment" /></term><description> <span data-ttu-id="ec77b-2413">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2413">The content of the comment.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="ec77b-2414">内部子集。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2414">The internal subset.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="ec77b-2415">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2415">The entire content, excluding the target.</span></span>  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> <span data-ttu-id="ec77b-2416">混合内容模型中标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2416">The white space between markup in a mixed content model.</span></span>  
  
 </description></item><item><term><see langword="Text" /></term><description> <span data-ttu-id="ec77b-2417">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2417">The content of the text node.</span></span>  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> <span data-ttu-id="ec77b-2418">标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2418">The white space between markup.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="ec77b-2419">声明的内容。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2419">The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2420">有关此属性的异步版本，请参阅 <xref:System.Xml.XmlReader.GetValueAsync%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2420">For the asynchronous version of this property, see the <xref:System.Xml.XmlReader.GetValueAsync%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2421">下面的示例读取 XML 文件并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2421">The following example reads an XML file and displays each of the nodes.</span></span>  
  
 [!code-csharp[XmlReaderBasic#8](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderBasic/CS/XmlReader_Basic.cs#8)]
 [!code-vb[XmlReaderBasic#8](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderBasic/VB/xmlreader_basic.vb#8)]  
  
 <span data-ttu-id="ec77b-2422">该示例使用 `items.xml` 文件。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2422">The sample uses the `items.xml` file.</span></span>  
  
 [!code-xml[XML_Core_Files#2](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/items.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2423">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2423">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2424">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2424">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ValueType">
      <MemberSignature Language="C#" Value="public virtual Type ValueType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ValueType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.ValueType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ValueType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ValueType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValueType : Type" Usage="System.Xml.XmlReader.ValueType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-2425">获取当前节点的公共语言运行时 (CLR) 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2425">Gets The Common Language Runtime (CLR) type for the current node.</span></span></summary>
        <value><span data-ttu-id="ec77b-2426">与节点的类型化值对应的 CLR 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2426">The CLR type that corresponds to the typed value of the node.</span></span> <span data-ttu-id="ec77b-2427">默认值为 <see langword="System.String" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2427">The default is <see langword="System.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2428">有关默认映射的列表，请参阅[System.web 类中的类型支持](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2428">See [Type Support in the System.Xml Classes](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md) for a list of the default mappings.</span></span>  
  
 <span data-ttu-id="ec77b-2429">默认情况下，类型 `xs:int` 的元素具有 `System.Int32` `ValueType`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2429">An element of type `xs:int` has a `ValueType` of `System.Int32` by default.</span></span> <span data-ttu-id="ec77b-2430">但 `ValueType` 可以是可以映射到 `xs:int`的有效类型之一，如 `System.Int16` 或 `System.Double`。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2430">However, the `ValueType` could be one of the valid types that can be mapped to `xs:int`, such as `System.Int16` or `System.Double`.</span></span>  
  
 <span data-ttu-id="ec77b-2431">如果节点未类型化，或者节点是包含混合内容的元素，则将节点值映射到 `System.String` 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2431">If a node is un-typed, or if the node is an element that contains mixed content, the node value is mapped to the `System.String` type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2432">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2432">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2433">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2433">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="ec77b-2434">实现程序必须为每个节点提供 <see langword="ValueType" />，即使它只是 <see langword="System.String" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2434">Implementers must provide a <see langword="ValueType" /> for every node, even if it is only the <see langword="System.String" /> type.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public virtual string XmlLang { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlLang As String" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlReader.XmlLang" />
      <MemberSignature Language="C#" Value="public abstract string XmlLang { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlLang As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ XmlLang { System::String ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-2435">当在派生类中被重写时，获取当前的 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2435">When overridden in a derived class, gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="ec77b-2436">当前 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2436">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec77b-2437">此属性表示当前节点所在 `xml:lang` 范围。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2437">This property represents the `xml:lang` scope within which the current node resides.</span></span> <span data-ttu-id="ec77b-2438">例如，以下是根元素中 `xml:lang` 设置为 US 英语的 XML 片段：</span><span class="sxs-lookup"><span data-stu-id="ec77b-2438">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="ec77b-2439">当读取器定位在 `name` 元素上时，可以使用此属性来查找它是否在美国英语 `xml:lang` 属性的作用域中。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2439">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ec77b-2440">有关使用此属性的示例，请参阅 <xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2440">See <xref:System.Xml.XmlTextReader.XmlLang%2A?displayProperty=nameWithType> for an example of using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2441">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2441">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2442">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2442">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.XmlSpace" />
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlSpace XmlSpace { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property XmlSpace As XmlSpace" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlReader.XmlSpace" />
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlSpace XmlSpace { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property XmlSpace As XmlSpace" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec77b-2443">当在派生类中被重写时，获取当前的 <see langword="xml:space" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2443">When overridden in a derived class, gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="ec77b-2444"><see cref="T:System.Xml.XmlSpace" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2444">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="ec77b-2445">如果不存在任何 <see langword="xml:space" /> 范围，则该属性默认值为 <see langword="XmlSpace.None" />。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2445">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ec77b-2446">有关使用此属性的示例，请参阅 <xref:System.Xml.XmlTextReader.XmlSpace%2A> （在 `XmlTextReader` 类中）。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2446">See <xref:System.Xml.XmlTextReader.XmlSpace%2A> (in the `XmlTextReader` class) for an example using this property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ec77b-2447">在上一次异步操作完成之前调用了 <see cref="T:System.Xml.XmlReader" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="ec77b-2447">An <see cref="T:System.Xml.XmlReader" /> method was called before a previous asynchronous operation finished.</span></span> <span data-ttu-id="ec77b-2448">在此情况下，会引发 <see cref="T:System.InvalidOperationException" /> 并显示消息“异步操作已在进行中。”</span><span class="sxs-lookup"><span data-stu-id="ec77b-2448">In this case, <see cref="T:System.InvalidOperationException" /> is thrown with the message "An asynchronous operation is already in progress."</span></span></exception>
        <altmember cref="P:System.Xml.XmlReader.XmlLang" />
      </Docs>
    </Member>
  </Members>
</Type>
