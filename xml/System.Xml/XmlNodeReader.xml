<Type Name="XmlNodeReader" FullName="System.Xml.XmlNodeReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb48b930842a12a5db4d3297ee1e2435dab83edf" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78829405" /></Metadata><TypeSignature Language="C#" Value="public class XmlNodeReader : System.Xml.XmlReader, System.Xml.IXmlNamespaceResolver" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNodeReader extends System.Xml.XmlReader implements class System.Xml.IXmlNamespaceResolver" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNodeReader" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNodeReader&#xA;Inherits XmlReader&#xA;Implements IXmlNamespaceResolver" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNodeReader : System::Xml::XmlReader, System::Xml::IXmlNamespaceResolver" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type XmlNodeReader = class&#xA;    inherit XmlReader&#xA;    interface IXmlNamespaceResolver" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class XmlNodeReader : System.Xml.XmlReader" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNodeReader extends System.Xml.XmlReader" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNodeReader&#xA;Inherits XmlReader" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNodeReader : System::Xml::XmlReader" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type XmlNodeReader = class&#xA;    inherit XmlReader" FrameworkAlternate="netframework-1.1" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlReader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a1688-101">表示提供对 <see cref="T:System.Xml.XmlNode" /> 中的 XML 数据进行快速、非缓存的只进访问的读取器。</span><span class="sxs-lookup"><span data-stu-id="a1688-101">Represents a reader that provides fast, non-cached forward only access to XML data in an <see cref="T:System.Xml.XmlNode" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-102">建议使用 <xref:System.Xml.XmlReaderSettings> 类和 <xref:System.Xml.XmlReader.Create%2A> 方法创建 <xref:System.Xml.XmlReader> 实例，而不是使用 <xref:System.Xml.XmlNodeReader>。</span><span class="sxs-lookup"><span data-stu-id="a1688-102">Instead of using the <xref:System.Xml.XmlNodeReader>, we recommend that you create <xref:System.Xml.XmlReader> instances by using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-103">这使您可以利用对 XML 1.0 建议的一致性检查和符合性。</span><span class="sxs-lookup"><span data-stu-id="a1688-103">This enables you to take advantage of conformance checking and compliance to the XML 1.0 recommendation.</span></span>  
  
 <span data-ttu-id="a1688-104">`XmlNodeReader` 可以读取 XML DOM 子树。</span><span class="sxs-lookup"><span data-stu-id="a1688-104">The `XmlNodeReader` has the ability to read an XML DOM subtree.</span></span> <span data-ttu-id="a1688-105">此类不支持文档类型定义（DTD）或架构验证。</span><span class="sxs-lookup"><span data-stu-id="a1688-105">This class does not support document type definition (DTD) or schema validation.</span></span> <span data-ttu-id="a1688-106">但是，你可以创建一个 <xref:System.Xml.XmlReader> 对象，该对象环绕 <xref:System.Xml.XmlNodeReader> 对象以验证存储在 <xref:System.Xml.XmlNodeReader> 对象中的数据，如 "示例" 部分所示。</span><span class="sxs-lookup"><span data-stu-id="a1688-106">However, you can create an <xref:System.Xml.XmlReader> object that wraps around the <xref:System.Xml.XmlNodeReader> object to validate the data stored in the <xref:System.Xml.XmlNodeReader> object, as shown in Examples section.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-107">在以下示例中，XML 文件加载到 XML 文档中并进行修改。</span><span class="sxs-lookup"><span data-stu-id="a1688-107">In the following example, an XML file is loaded into an XML document and modified.</span></span> <span data-ttu-id="a1688-108">XML 文档传递给 <xref:System.Xml.XmlNodeReader>，后者再传递给 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1688-108">The XML document is passed to an <xref:System.Xml.XmlNodeReader>, which is then passed to the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="a1688-109">在验证读取器分析文件时，可以验证对 XML 文件所作的任何更改。</span><span class="sxs-lookup"><span data-stu-id="a1688-109">When the validating reader parses the file, it can validate any changes made to the XML file.</span></span>  
  
 [!code-csharp[XmlReader_Validate_DOM#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_DOM/CS/valid_dom.cs#1)]
 [!code-vb[XmlReader_Validate_DOM#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_DOM/VB/valid_dom.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="a1688-110">输入</span><span class="sxs-lookup"><span data-stu-id="a1688-110">Input</span></span>  
 <span data-ttu-id="a1688-111">下列文件作为输入使用。</span><span class="sxs-lookup"><span data-stu-id="a1688-111">The following files are used as input.</span></span>  
  
#### <a name="bookschemaxml"></a><span data-ttu-id="a1688-112">bookSchema.xml</span><span class="sxs-lookup"><span data-stu-id="a1688-112">bookSchema.xml</span></span>  
 [!code-xml[XML_Core_Files#8](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/booksschema.xml#8)]  
  
#### <a name="booksxsd"></a><span data-ttu-id="a1688-113">books.xsd</span><span class="sxs-lookup"><span data-stu-id="a1688-113">books.xsd</span></span>  
 [!code-xml[XML_Core_Files#9](~/samples/snippets/xml/VS_Snippets_Data/XML_Core_Files/XML/books.xsd#9)]  
  
## <a name="output"></a><span data-ttu-id="a1688-114">Output</span><span class="sxs-lookup"><span data-stu-id="a1688-114">Output</span></span>  
 <span data-ttu-id="a1688-115">验证错误：未声明“publisher”属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-115">Validation Error: The 'publisher' attribute is not declared.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNodeReader (System.Xml.XmlNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.#ctor(System.Xml.XmlNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (node As XmlNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNodeReader(System::Xml::XmlNode ^ node);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlNodeReader : System.Xml.XmlNode -&gt; System.Xml.XmlNodeReader" Usage="new System.Xml.XmlNodeReader node" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="node" Type="System.Xml.XmlNode" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="a1688-116">要读取的 <see langword="XmlNode" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-116">The <see langword="XmlNode" /> you want to read.</span></span></param>
        <summary><span data-ttu-id="a1688-117">使用指定的 <see cref="T:System.Xml.XmlNode" /> 创建 <see langword="XmlNodeReader" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-117">Creates an instance of the <see langword="XmlNodeReader" /> class using the specified <see cref="T:System.Xml.XmlNode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-118">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-118">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-119">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-119">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-120">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-120">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-121">有关用于创建 `XmlNodeReader`的代码的详细信息和示例，请参阅 <xref:System.Xml.XmlReader.Create%2A> 方法的 <xref:System.Xml.XmlReader> 和重载。</span><span class="sxs-lookup"><span data-stu-id="a1688-121">For more information and examples of the code used to create an `XmlNodeReader`, see <xref:System.Xml.XmlReader> and overloads of the <xref:System.Xml.XmlReader.Create%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public override int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.AttributeCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AttributeCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="System.Xml.XmlNodeReader.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-122">获取当前节点上的属性数目。</span><span class="sxs-lookup"><span data-stu-id="a1688-122">Gets the number of attributes on the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-123">当前节点上的属性数目。</span><span class="sxs-lookup"><span data-stu-id="a1688-123">The number of attributes on the current node.</span></span> <span data-ttu-id="a1688-124">该数目包括默认属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-124">This number includes default attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-125">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-125">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-126">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-126">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-127">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-127">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-128">此属性仅与 `Element`、`DocumentType` 和 `XmlDeclaration` 节点相关。</span><span class="sxs-lookup"><span data-stu-id="a1688-128">This property is relevant to `Element`, `DocumentType` and `XmlDeclaration` nodes only.</span></span> <span data-ttu-id="a1688-129">（其他节点类型不具有属性。）</span><span class="sxs-lookup"><span data-stu-id="a1688-129">(Other node types do not have attributes.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-130">下面的示例读取根节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-130">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseURI">
      <MemberSignature Language="C#" Value="public override string BaseURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.BaseURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BaseURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseURI : string" Usage="System.Xml.XmlNodeReader.BaseURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-131">获取当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="a1688-131">Gets the base URI of the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-132">当前节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="a1688-132">The base URI of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-133">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-133">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-134">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-134">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-135">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-135">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-136">联网的 XML 文档包含使用各种 W3C 标准包含机制聚合的数据块，因此包含来自不同位置的节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-136">A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</span></span> <span data-ttu-id="a1688-137">DTD 实体就是这样一个例子，但这并不局限于 Dtd。</span><span class="sxs-lookup"><span data-stu-id="a1688-137">DTD entities are an example of this, but this is not limited to DTDs.</span></span> <span data-ttu-id="a1688-138">基本 URI 告诉您这些节点的来源。</span><span class="sxs-lookup"><span data-stu-id="a1688-138">The base URI tells you where these nodes came from.</span></span> <span data-ttu-id="a1688-139">如果返回的节点没有基 URI （例如，从内存中字符串中对其进行了分析），则返回 String。</span><span class="sxs-lookup"><span data-stu-id="a1688-139">If there is no base URI for the nodes being returned (for example, they were parsed from an in-memory string), String.Empty is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-140">下面的示例分析文件，并显示每个节点的基 URI。</span><span class="sxs-lookup"><span data-stu-id="a1688-140">The following example parses a file and displays the base URI of each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.BaseURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1688-141">该示例使用文件（`uri.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="a1688-141">The example uses the file, `uri.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.BaseURI Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.BaseURI Example/XML/source.xml#2)]  
  
 <span data-ttu-id="a1688-142">`style.xml` 文件包含 XML 文本 `<style>hardcover</style>`。</span><span class="sxs-lookup"><span data-stu-id="a1688-142">The `style.xml` file contains the XML text `<style>hardcover</style>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReadBinaryContent">
      <MemberSignature Language="C#" Value="public override bool CanReadBinaryContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReadBinaryContent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanReadBinaryContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReadBinaryContent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReadBinaryContent : bool" Usage="System.Xml.XmlNodeReader.CanReadBinaryContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-143">获取一个值，该值指示 <see cref="T:System.Xml.XmlNodeReader" /> 是否实现二进制内容读取方法。</span><span class="sxs-lookup"><span data-stu-id="a1688-143">Gets a value indicating whether the <see cref="T:System.Xml.XmlNodeReader" /> implements the binary content read methods.</span></span></summary>
        <value><span data-ttu-id="a1688-144">如果实现了二进制内容读取方法，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-144"><see langword="true" /> if the binary content read methods are implemented; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a1688-145"><see cref="T:System.Xml.XmlNodeReader" /> 类始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-145">The <see cref="T:System.Xml.XmlNodeReader" /> class always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-146">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-146">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-147">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-147">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-148">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-148">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-149">二进制内容读取方法包括 <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A>、<xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A>、<xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A>和 <xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1688-149">The binary content read methods include the <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A>, <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A>, <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A>, and <xref:System.Xml.XmlNodeReader.ReadElementContentAsBinHex%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResolveEntity">
      <MemberSignature Language="C#" Value="public override bool CanResolveEntity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResolveEntity" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanResolveEntity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanResolveEntity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResolveEntity : bool" Usage="System.Xml.XmlNodeReader.CanResolveEntity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-150">获取一个值，该值指示此读取器是否可以分析和解析实体。</span><span class="sxs-lookup"><span data-stu-id="a1688-150">Gets a value indicating whether this reader can parse and resolve entities.</span></span></summary>
        <value><span data-ttu-id="a1688-151">如果此读取器可以分析和解析实体，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-151"><see langword="true" /> if the reader can parse and resolve entities; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a1688-152"><see langword="XmlNodeReader" /> 始终返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-152"><see langword="XmlNodeReader" /> always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-153">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-153">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-154">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-154">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-155">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-155">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlNodeReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-156">将 <see cref="P:System.Xml.XmlNodeReader.ReadState" /> 改为 <see langword="Closed" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-156">Changes the <see cref="P:System.Xml.XmlNodeReader.ReadState" /> to <see langword="Closed" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-157">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-157">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-158">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-158">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-159">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-159">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-160">此方法还释放读取时保存的任何资源。</span><span class="sxs-lookup"><span data-stu-id="a1688-160">This method also releases any resources held while reading.</span></span> <span data-ttu-id="a1688-161">如果已调用 `Close`，则不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="a1688-161">If `Close` has already been called, no action is performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-162">下面的示例分析文件并关闭读取器。</span><span class="sxs-lookup"><span data-stu-id="a1688-162">The following example parses a file and closes the reader.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1688-163">该示例使用文件（`items.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="a1688-163">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Xml.XmlNodeReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-164">获取 XML 文档中当前节点的深度。</span><span class="sxs-lookup"><span data-stu-id="a1688-164">Gets the depth of the current node in the XML document.</span></span></summary>
        <value><span data-ttu-id="a1688-165">XML 文档中当前节点的深度。</span><span class="sxs-lookup"><span data-stu-id="a1688-165">The depth of the current node in the XML document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-166">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-166">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-167">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-167">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-168">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-168">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EOF">
      <MemberSignature Language="C#" Value="public override bool EOF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EOF" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.EOF" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EOF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EOF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EOF : bool" Usage="System.Xml.XmlNodeReader.EOF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-169">获取一个值，该值指示读取器是否定位在流结尾。</span><span class="sxs-lookup"><span data-stu-id="a1688-169">Gets a value indicating whether the reader is positioned at the end of the stream.</span></span></summary>
        <value><span data-ttu-id="a1688-170">如果此读取器定位在流的结尾，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-170"><see langword="true" /> if the reader is positioned at the end of the stream; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-171">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-171">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-172">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-172">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-173">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-173">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1688-174">获取属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-174">Gets the value of an attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (attributeIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : int -&gt; string" Usage="xmlNodeReader.GetAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex"><span data-ttu-id="a1688-175">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="a1688-175">The index of the attribute.</span></span> <span data-ttu-id="a1688-176">索引是从零开始的。</span><span class="sxs-lookup"><span data-stu-id="a1688-176">The index is zero-based.</span></span> <span data-ttu-id="a1688-177">（第一个属性的索引为 0。）</span><span class="sxs-lookup"><span data-stu-id="a1688-177">(The first attribute has index 0.)</span></span></param>
        <summary><span data-ttu-id="a1688-178">获取具有指定索引的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-178">Gets the value of the attribute with the specified index.</span></span></summary>
        <returns><span data-ttu-id="a1688-179">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-179">The value of the specified attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-180">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-180">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-181">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-181">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-182">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-182">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-183">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="a1688-183">This method does not move the reader.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1688-184"><paramref name="i" /> 参数小于 0 或大于等于 <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-184">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string -&gt; string" Usage="xmlNodeReader.GetAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1688-185">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-185">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="a1688-186">获取具有指定名称的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-186">Gets the value of the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="a1688-187">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-187">The value of the specified attribute.</span></span> <span data-ttu-id="a1688-188">如果未找到该属性，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-188">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-189">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-189">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-190">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-190">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-191">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-191">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-192">此方法不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="a1688-192">This method does not move the reader.</span></span>  
  
 <span data-ttu-id="a1688-193">如果读取器定位在 `DocumentType` 节点上，则可以使用此方法获取公共和系统文本，例如 `reader.GetAttribute("PUBLIC")`</span><span class="sxs-lookup"><span data-stu-id="a1688-193">If the reader is positioned on a `DocumentType` node, this method can be used to get the PUBLIC and SYSTEM literals, for example, `reader.GetAttribute("PUBLIC")`</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-194">下面的示例获取 ISBN 特性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-194">The following example gets the value of the ISBN attribute.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.GetAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.GetAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public override string GetAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.GetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAttribute (name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.GetAttribute : string * string -&gt; string" Usage="xmlNodeReader.GetAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1688-195">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-195">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a1688-196">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="a1688-196">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="a1688-197">获取具有指定本地名称和命名空间 URI 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-197">Gets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="a1688-198">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-198">The value of the specified attribute.</span></span> <span data-ttu-id="a1688-199">如果未找到该属性，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-199">If the attribute is not found, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-200">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-200">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-201">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-201">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-202">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-202">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-203">以下 XML 包含特定命名空间中的属性：</span><span class="sxs-lookup"><span data-stu-id="a1688-203">The following XML contains an attribute in a specific namespace:</span></span>  
  
```xml  
<test xmlns:dt="urn:datatypes" dt:type="int"/>  
```  
  
 <span data-ttu-id="a1688-204">可以使用一个参数（前缀和本地名称）或两个参数（本地名称和命名空间 URI）来查找 `dt:type` 特性：</span><span class="sxs-lookup"><span data-stu-id="a1688-204">You can lookup the `dt:type` attribute using one argument (prefix and local name) or two arguments (local name and namespace URI):</span></span>  
  
```csharp  
String dt = reader.GetAttribute("dt:type");  
String dt2 = reader.GetAttribute("type","urn:datatypes");  
```  
  
 <span data-ttu-id="a1688-205">若要查找 `xmlns:dt` 属性，请使用以下参数之一：</span><span class="sxs-lookup"><span data-stu-id="a1688-205">To lookup the `xmlns:dt` attribute, use one of the following arguments:</span></span>  
  
```csharp  
String dt3 = reader.GetAttribute("xmlns:dt");  
String dt4 = reader.GetAttribute("dt",http://www.w3.org/2000/xmlns/);  
```  
  
 <span data-ttu-id="a1688-206">你还可以使用 <xref:System.Xml.XmlNodeReader.Prefix%2A> 属性获取此信息。</span><span class="sxs-lookup"><span data-stu-id="a1688-206">You can also get this information using the <xref:System.Xml.XmlNodeReader.Prefix%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public override bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Xml.XmlNodeReader.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-207">获取一个值，该值指示当前节点是否有任何属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-207">Gets a value indicating whether the current node has any attributes.</span></span></summary>
        <value><span data-ttu-id="a1688-208">如果当前节点具有属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-208"><see langword="true" /> if the current node has attributes; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-209">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-209">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-210">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-210">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-211">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-211">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-212">下面的示例读取根节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-212">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValue">
      <MemberSignature Language="C#" Value="public override bool HasValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValue" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.HasValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValue : bool" Usage="System.Xml.XmlNodeReader.HasValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-213">获取一个值，该值指示当前节点是否可以具有 <see cref="P:System.Xml.XmlNodeReader.Value" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-213">Gets a value indicating whether the current node can have a <see cref="P:System.Xml.XmlNodeReader.Value" />.</span></span></summary>
        <value><span data-ttu-id="a1688-214">如果读取器当前定位在的节点可以具有 <see langword="Value" />，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-214"><see langword="true" /> if the node on which the reader is currently positioned can have a <see langword="Value" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-215">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-215">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-216">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-216">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-217">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-217">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-218">下表列出具有要返回的值的节点类型。</span><span class="sxs-lookup"><span data-stu-id="a1688-218">The following table lists node types that have a value to return.</span></span>  
  
|<span data-ttu-id="a1688-219">节点类型</span><span class="sxs-lookup"><span data-stu-id="a1688-219">Node Type</span></span>|<span data-ttu-id="a1688-220">“值”</span><span class="sxs-lookup"><span data-stu-id="a1688-220">Value</span></span>|  
|---------------|-----------|  
|`Attribute`|<span data-ttu-id="a1688-221">属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-221">The value of the attribute.</span></span>|  
|`CDATA`|<span data-ttu-id="a1688-222">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-222">The content of the CDATA section.</span></span>|  
|`Comment`|<span data-ttu-id="a1688-223">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-223">The content of the comment.</span></span>|  
|`DocumentType`|<span data-ttu-id="a1688-224">内部子集。</span><span class="sxs-lookup"><span data-stu-id="a1688-224">The internal subset.</span></span>|  
|`ProcessingInstruction`|<span data-ttu-id="a1688-225">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="a1688-225">The entire content, excluding the target.</span></span>|  
|`SignificantWhitespace`|<span data-ttu-id="a1688-226">混合内容模型中标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="a1688-226">The white space between markup in a mixed content model.</span></span>|  
|`Text`|<span data-ttu-id="a1688-227">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-227">The content of the text node.</span></span>|  
|`Whitespace`|<span data-ttu-id="a1688-228">标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="a1688-228">The white space between markup.</span></span>|  
|`XmlDeclaration`|<span data-ttu-id="a1688-229">声明的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-229">The content of the declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a1688-230">下面的示例显示了可以具有值的每个节点的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-230">The following example displays the value for every node which can have a value.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.HasValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.HasValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public override bool IsDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDefault { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool" Usage="System.Xml.XmlNodeReader.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-231">获取一个值，该值指示当前节点是否是从文档类型定义 (DTD) 或架构中定义的默认值生成的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-231">Gets a value indicating whether the current node is an attribute that was generated from the default value defined in the document type definition (DTD) or schema.</span></span></summary>
        <value><span data-ttu-id="a1688-232">如果当前节点是其值从 DTD 或架构中定义的默认值生成的属性，则为 <see langword="true" />；如果属性值为显式设置的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-232"><see langword="true" /> if the current node is an attribute whose value was generated from the default value defined in the DTD or schema; <see langword="false" /> if the attribute value was explicitly set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-233">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-233">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-234">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-234">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-235">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-235">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-236">此属性仅适用于属性节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-236">This property applies to attribute nodes only.</span></span> <span data-ttu-id="a1688-237">如果读取器未定位在属性节点上，则此属性将返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="a1688-237">If the reader is not positioned on an attribute node, this property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElement">
      <MemberSignature Language="C#" Value="public override bool IsEmptyElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElement" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEmptyElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmptyElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElement : bool" Usage="System.Xml.XmlNodeReader.IsEmptyElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-238">获取一个值，该值指示当前节点是否为空元素（例如 <c>&lt;MyElement/&gt;</c>）。</span><span class="sxs-lookup"><span data-stu-id="a1688-238">Gets a value indicating whether the current node is an empty element (for example, <c>&lt;MyElement/&gt;</c>).</span></span></summary>
        <value><span data-ttu-id="a1688-239"><see langword="true" /> 如果当前节点是一个元素（<see cref="P:System.Xml.XmlNodeReader.NodeType" /> 等于 <see langword="XmlNodeType.Element" />），并且它以<c>/&gt;</c>结束，则为;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-239"><see langword="true" /> if the current node is an element (<see cref="P:System.Xml.XmlNodeReader.NodeType" /> equals <see langword="XmlNodeType.Element" />) and it ends with <c>/&gt;</c>; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-240">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-240">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-241">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-241">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-242">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-242">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-243">此属性使您能够确定下面各项之间的差异：</span><span class="sxs-lookup"><span data-stu-id="a1688-243">This property enables you to determine the difference between the following:</span></span>  
  
 <span data-ttu-id="a1688-244">`<item num="123"/>` （`IsEmptyElement` `true`）。</span><span class="sxs-lookup"><span data-stu-id="a1688-244">`<item num="123"/>` (`IsEmptyElement` is `true`).</span></span>  
  
 <span data-ttu-id="a1688-245">`<item num="123">` （`IsEmptyElement` `false`，但元素内容为空）。</span><span class="sxs-lookup"><span data-stu-id="a1688-245">`<item num="123">` (`IsEmptyElement` is `false`, although element content is empty).</span></span>  
  
 <span data-ttu-id="a1688-246">不会为空元素生成相应的 `EndElement` 节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-246">A corresponding `EndElement` node is not generated for empty elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-247">下面的示例显示每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-247">The following example displays the text content of each element.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[int] { System::String ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="a1688-248">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="a1688-248">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="a1688-249">获取具有指定索引的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-249">Gets the value of the attribute with the specified index.</span></span></summary>
        <value><span data-ttu-id="a1688-250">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-250">The value of the specified attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="a1688-251">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-251">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-252">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-252">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-253">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-253">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

<span data-ttu-id="a1688-254">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="a1688-254">This property does not move the reader.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1688-255"><paramref name="i" /> 参数小于 0 或大于等于 <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-255">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlNodeReader.AttributeCount" />.</span></span></exception>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override string this[string name, string namespaceURI] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string, string)" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Item(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(name As String, namespaceURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^, System::String ^] { System::String ^ get(System::String ^ name, System::String ^ namespaceURI); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * string) : string" Usage="System.Xml.XmlNodeReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="namespaceURI" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1688-256">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-256">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a1688-257">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="a1688-257">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="a1688-258">获取具有指定本地名称和命名空间 URI 的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-258">Gets the value of the attribute with the specified local name and namespace URI.</span></span></summary>
        <value><span data-ttu-id="a1688-259">指定的属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-259">The value of the specified attribute.</span></span> <span data-ttu-id="a1688-260">如果未找到该属性，则返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-260">If the attribute is not found, <see langword="null" /> is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
> <span data-ttu-id="a1688-261">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-261">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-262">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-262">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-263">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-263">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

<span data-ttu-id="a1688-264">此属性不移动读取器。</span><span class="sxs-lookup"><span data-stu-id="a1688-264">This property does not move the reader.</span></span>

]]></format>
        </remarks>
        <altmember cref="Overload:System.Xml.XmlNodeReader.GetAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LocalName">
      <MemberSignature Language="C#" Value="public override string LocalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.LocalName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ LocalName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalName : string" Usage="System.Xml.XmlNodeReader.LocalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-265">获取当前节点的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-265">Gets the local name of the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-266">移除了前缀的当前节点的名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-266">The name of the current node with the prefix removed.</span></span> <span data-ttu-id="a1688-267">例如，<see langword="LocalName" /> <see langword="book" /> 用于元素<c>&lt;bk： book&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="a1688-267">For example, <see langword="LocalName" /> is <see langword="book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="a1688-268">对于没有名称的节点类型（如 <see langword="Text" />、<see langword="Comment" /> 等），该属性返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="a1688-268">For node types that do not have a name (like <see langword="Text" />, <see langword="Comment" />, and so on), this property returns String.Empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-269">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-269">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-270">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-270">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-271">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-271">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-272">下面的示例显示每个节点的本地名称，并显示前缀和命名空间 URI （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a1688-272">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public override string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="override this.LookupNamespace : string -&gt; string" Usage="xmlNodeReader.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a1688-273">要解析其命名空间 URI 的前缀。</span><span class="sxs-lookup"><span data-stu-id="a1688-273">The prefix whose namespace URI you want to resolve.</span></span> <span data-ttu-id="a1688-274">若要匹配默认命名空间，请传递一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1688-274">To match the default namespace, pass an empty string.</span></span> <span data-ttu-id="a1688-275">不必原子化该字符串。</span><span class="sxs-lookup"><span data-stu-id="a1688-275">This string does not have to be atomized.</span></span></param>
        <summary><span data-ttu-id="a1688-276">解析当前元素的范围内的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="a1688-276">Resolves a namespace prefix in the current element's scope.</span></span></summary>
        <returns><span data-ttu-id="a1688-277">前缀映射到的命名空间 URI；如果未找到任何匹配的前缀，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-277">The namespace URI to which the prefix maps or <see langword="null" /> if no matching prefix is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-278">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-278">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-279">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-279">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-280">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-280">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-281">在下面的 XML 字符串中，如果读取器定位在 `href` 特性上，则通过调用 `reader.LookupNamespace("a")`来解析前缀 `a`。</span><span class="sxs-lookup"><span data-stu-id="a1688-281">In the following XML string, if the reader is positioned on the `href` attribute, the prefix `a` is resolved by calling `reader.LookupNamespace("a")`.</span></span> <span data-ttu-id="a1688-282">返回的字符串是 `urn:456`。</span><span class="sxs-lookup"><span data-stu-id="a1688-282">The returned string is `urn:456`.</span></span>  
  
```xml  
<root xmlns:a="urn:456">  
 <item>  
 <ref href="a:b"/>  
 </item>  
</root>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MoveToAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1688-283">移动到指定的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-283">Moves to the specified attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override void MoveToAttribute (int attributeIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void MoveToAttribute(int32 attributeIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub MoveToAttribute (attributeIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void MoveToAttribute(int attributeIndex);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : int -&gt; unit" Usage="xmlNodeReader.MoveToAttribute attributeIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributeIndex"><span data-ttu-id="a1688-284">属性的索引。</span><span class="sxs-lookup"><span data-stu-id="a1688-284">The index of the attribute.</span></span></param>
        <summary><span data-ttu-id="a1688-285">移动到具有指定索引的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-285">Moves to the attribute with the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-286">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-286">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-287">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-287">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-288">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-288">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-289">下面的示例读取根节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-289">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1688-290"><paramref name="i" /> 参数小于 0 或大于等于 <see cref="P:System.Xml.XmlReader.AttributeCount" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-290">The <paramref name="i" /> parameter is less than 0 or greater than or equal to <see cref="P:System.Xml.XmlReader.AttributeCount" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1688-291">属性的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-291">The qualified name of the attribute.</span></span></param>
        <summary><span data-ttu-id="a1688-292">移动到具有指定名称的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-292">Moves to the attribute with the specified name.</span></span></summary>
        <returns><span data-ttu-id="a1688-293">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-293"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a1688-294">如果为 <see langword="false" />，则读取器的位置未改变。</span><span class="sxs-lookup"><span data-stu-id="a1688-294">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-295">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-295">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-296">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-296">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-297">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-297">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-298">在调用此方法之后，<xref:System.Xml.XmlNodeReader.Name%2A>、<xref:System.Xml.XmlNodeReader.NamespaceURI%2A>和 <xref:System.Xml.XmlNodeReader.Prefix%2A> 属性将反映该特性的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-298">After calling this method, the <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, and <xref:System.Xml.XmlNodeReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToAttribute (string name, string namespaceURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToAttribute(string name, string namespaceURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToAttribute (name As String, namespaceURI As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToAttribute(System::String ^ name, System::String ^ namespaceURI);" />
      <MemberSignature Language="F#" Value="override this.MoveToAttribute : string * string -&gt; bool" Usage="xmlNodeReader.MoveToAttribute (name, namespaceURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1688-299">属性的本地名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-299">The local name of the attribute.</span></span></param>
        <param name="namespaceURI"><span data-ttu-id="a1688-300">属性的命名空间 URI。</span><span class="sxs-lookup"><span data-stu-id="a1688-300">The namespace URI of the attribute.</span></span></param>
        <summary><span data-ttu-id="a1688-301">移动到具有指定本地名称和命名空间 URI 的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-301">Moves to the attribute with the specified local name and namespace URI.</span></span></summary>
        <returns><span data-ttu-id="a1688-302">如果找到了属性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-302"><see langword="true" /> if the attribute is found; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a1688-303">如果为 <see langword="false" />，则读取器的位置未改变。</span><span class="sxs-lookup"><span data-stu-id="a1688-303">If <see langword="false" />, the reader's position does not change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-304">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-304">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-305">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-305">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-306">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-306">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-307">在调用此方法之后，<xref:System.Xml.XmlNodeReader.Name%2A>、<xref:System.Xml.XmlNodeReader.NamespaceURI%2A>和 <xref:System.Xml.XmlNodeReader.Prefix%2A> 属性将反映该特性的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-307">After calling this method, the <xref:System.Xml.XmlNodeReader.Name%2A>, <xref:System.Xml.XmlNodeReader.NamespaceURI%2A>, and <xref:System.Xml.XmlNodeReader.Prefix%2A> properties reflect the properties of that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToElement">
      <MemberSignature Language="C#" Value="public override bool MoveToElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToElement () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToElement();" />
      <MemberSignature Language="F#" Value="override this.MoveToElement : unit -&gt; bool" Usage="xmlNodeReader.MoveToElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-308">移动到包含当前属性节点的元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-308">Moves to the element that contains the current attribute node.</span></span></summary>
        <returns><span data-ttu-id="a1688-309">如果读取器定位在属性上（读取器移动到拥有该属性的元素），则为 <see langword="true" />；如果读取器未定位在属性上（读取器的位置不更改），则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-309"><see langword="true" /> if the reader is positioned on an attribute (the reader moves to the element that owns the attribute); <see langword="false" /> if the reader is not positioned on an attribute (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-310">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-310">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-311">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-311">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-312">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-312">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-313">使用此方法可以在通过元素的属性导航后返回到元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-313">Use this method to return to an element after navigating through its attributes.</span></span> <span data-ttu-id="a1688-314">此方法将读取器移到以下节点类型之一： `Element`、`DocumentType`或 `XmlDeclaration`。</span><span class="sxs-lookup"><span data-stu-id="a1688-314">This method moves the reader to one of the following node types: `Element`, `DocumentType`, or `XmlDeclaration`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-315">下面的示例读取根节点上的所有属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-315">The following example reads all the attributes on the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.AttributeCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.AttributeCount Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToFirstAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToFirstAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToFirstAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToFirstAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToFirstAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToFirstAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToFirstAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToFirstAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-316">移动到第一个属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-316">Moves to the first attribute.</span></span></summary>
        <returns><span data-ttu-id="a1688-317">如果属性存在（读取器移动到第一个属性），则为 <see langword="true" />；否则为 <see langword="false" />（读取器的位置不更改）。</span><span class="sxs-lookup"><span data-stu-id="a1688-317"><see langword="true" /> if an attribute exists (the reader moves to the first attribute); otherwise, <see langword="false" /> (the position of the reader does not change).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-318">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-318">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-319">这允许您充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]中引入的所有新功能。有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 参考" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-319">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-320">下面的示例获取根节点的第一个属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-320">The following example gets the value of the first attribute of the root node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToFirstAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToFirstAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveToNextAttribute">
      <MemberSignature Language="C#" Value="public override bool MoveToNextAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveToNextAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.MoveToNextAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MoveToNextAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveToNextAttribute();" />
      <MemberSignature Language="F#" Value="override this.MoveToNextAttribute : unit -&gt; bool" Usage="xmlNodeReader.MoveToNextAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-321">移动到下一个属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-321">Moves to the next attribute.</span></span></summary>
        <returns><span data-ttu-id="a1688-322">如果存在下一个属性，则为 <see langword="true" />；如果没有其他属性，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-322"><see langword="true" /> if there is a next attribute; <see langword="false" /> if there are no more attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-323">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-323">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-324">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-324">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-325">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-325">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-326">如果当前节点不是属性节点，则此方法等效于 <xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A>。</span><span class="sxs-lookup"><span data-stu-id="a1688-326">If the current node is not an attribute node, this method is equivalent to <xref:System.Xml.XmlNodeReader.MoveToFirstAttribute%2A>.</span></span> <span data-ttu-id="a1688-327">如果 `MoveToNextAttribute` 返回 `true`，则读取器将移到下一个属性;否则，读取器的位置不会更改。</span><span class="sxs-lookup"><span data-stu-id="a1688-327">If `MoveToNextAttribute` returns `true`, the reader moves to the next attribute; otherwise, the position of the reader does not change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-328">下面的示例读取书籍。</span><span class="sxs-lookup"><span data-stu-id="a1688-328">The following example reads a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.MoveToNextAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.MoveToNextAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Xml.XmlNodeReader.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-329">获取当前节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-329">Gets the qualified name of the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-330">当前节点的限定名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-330">The qualified name of the current node.</span></span> <span data-ttu-id="a1688-331">例如，<see langword="Name" /> <see langword="bk:book" /> 用于元素<c>&lt;bk： book&gt;</c>。</span><span class="sxs-lookup"><span data-stu-id="a1688-331">For example, <see langword="Name" /> is <see langword="bk:book" /> for the element <c>&lt;bk:book&gt;</c>.</span></span>  
  
<span data-ttu-id="a1688-332">返回的名称取决于节点的 <see cref="P:System.Xml.XmlNodeReader.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-332">The name returned is dependent on the <see cref="P:System.Xml.XmlNodeReader.NodeType" /> of the node.</span></span> <span data-ttu-id="a1688-333">下列节点类型返回所列的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-333">The following node types return the listed values.</span></span> <span data-ttu-id="a1688-334">所有其他节点类型返回空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1688-334">All other node types return an empty string.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a1688-335">节点类型</span><span class="sxs-lookup"><span data-stu-id="a1688-335">Node Type</span></span> 
 </term><description> <span data-ttu-id="a1688-336">name</span><span class="sxs-lookup"><span data-stu-id="a1688-336">Name</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="a1688-337">属性名。</span><span class="sxs-lookup"><span data-stu-id="a1688-337">The name of the attribute.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="a1688-338">文档类型名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-338">The document type name.</span></span>  
  
 </description></item><item><term><see langword="Element" /></term><description> <span data-ttu-id="a1688-339">标记名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-339">The tag name.</span></span>  
  
 </description></item><item><term><see langword="EntityReference" /></term><description> <span data-ttu-id="a1688-340">引用的实体的名称。</span><span class="sxs-lookup"><span data-stu-id="a1688-340">The name of the entity referenced.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="a1688-341">处理指令的目标。</span><span class="sxs-lookup"><span data-stu-id="a1688-341">The target of the processing instruction.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="a1688-342">字符串 <see langword="xml" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-342">The literal string <see langword="xml" />.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-343">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-343">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-344">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-344">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-345">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-345">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-346">下面的示例读取一个 XML 并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-346">The following example reads an XML and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1688-347">该示例使用文件（`items.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="a1688-347">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceURI">
      <MemberSignature Language="C#" Value="public override string NamespaceURI { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceURI" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NamespaceURI As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NamespaceURI { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceURI : string" Usage="System.Xml.XmlNodeReader.NamespaceURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-348">获取读取器定位在的节点的命名空间 URI（采用 W3C 命名空间规范中定义）。</span><span class="sxs-lookup"><span data-stu-id="a1688-348">Gets the namespace URI (as defined in the W3C Namespace specification) of the node on which the reader is positioned.</span></span></summary>
        <value><span data-ttu-id="a1688-349">当前节点的命名空间 URI；否则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1688-349">The namespace URI of the current node; otherwise an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-350">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-350">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-351">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-351">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-352">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-352">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-353">此属性仅与 `Element` 和 `Attribute` 节点相关。</span><span class="sxs-lookup"><span data-stu-id="a1688-353">This property is relevant to `Element` and `Attribute` nodes only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-354">下面的示例显示每个节点的本地名称，并显示前缀和命名空间 URI （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a1688-354">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlNodeReader.NameTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-355">获取与此实现关联的 <see cref="T:System.Xml.XmlNameTable" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-355">Gets the <see cref="T:System.Xml.XmlNameTable" /> associated with this implementation.</span></span></summary>
        <value><span data-ttu-id="a1688-356"><see langword="XmlNameTable" />，它使你能够获取该节点内字符串的原子化版本。</span><span class="sxs-lookup"><span data-stu-id="a1688-356">The <see langword="XmlNameTable" /> enabling you to get the atomized version of a string within the node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-357">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-357">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-358">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-358">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-359">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-359">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-360">从此类返回的所有节点和属性名称都使用 `NameTable`进行原子化。</span><span class="sxs-lookup"><span data-stu-id="a1688-360">All node and attribute names returned from this class are atomized using the `NameTable`.</span></span> <span data-ttu-id="a1688-361">如果多次返回相同的名称（例如 `Customer`），则将为该名称返回相同的 `String` 对象。</span><span class="sxs-lookup"><span data-stu-id="a1688-361">When the same name is returned multiple times (for example, `Customer`), then the same `String` object is returned for that name.</span></span> <span data-ttu-id="a1688-362">这样一来，就可以编写有效的代码，对这些字符串进行对象比较，而不是对开销较高的字符串进行比较。</span><span class="sxs-lookup"><span data-stu-id="a1688-362">This makes it possible for you to write efficient code that does object comparisons on these strings instead of expensive string comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.XmlNodeReader.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-363">获取当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="a1688-363">Gets the type of the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-364"><see cref="T:System.Xml.XmlNodeType" /> 值之一，表示当前节点的类型。</span><span class="sxs-lookup"><span data-stu-id="a1688-364">One of the <see cref="T:System.Xml.XmlNodeType" /> values representing the type of the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-365">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-365">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-366">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-366">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-367">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-367">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-368">下面的示例读取一个 XML 并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-368">The following example reads an XML and displays each of the nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1688-369">该示例使用文件（`items.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="a1688-369">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public override string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="System.Xml.XmlNodeReader.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-370">获取与当前节点关联的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="a1688-370">Gets the namespace prefix associated with the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-371">与当前节点关联的命名空间前缀。</span><span class="sxs-lookup"><span data-stu-id="a1688-371">The namespace prefix associated with the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-372">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-372">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-373">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-373">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-374">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-374">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-375">下面的示例显示每个节点的本地名称，并显示前缀和命名空间 URI （如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a1688-375">The following example displays the local name of each node, and, if they exist, the prefix and namespace URI.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.NamespaceURI Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.NamespaceURI Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public override char QuoteChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char QuoteChar { char get(); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char" Usage="System.Xml.XmlNodeReader.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-376">获取用于括起属性节点的值的引号字符。</span><span class="sxs-lookup"><span data-stu-id="a1688-376">Gets the quotation mark character used to enclose the value of an attribute node.</span></span></summary>
        <value><span data-ttu-id="a1688-377">XmlNodeReader 始终使用双引号（"）。</span><span class="sxs-lookup"><span data-stu-id="a1688-377">XmlNodeReader always uses a double quote (").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  

> [!NOTE]
>  <span data-ttu-id="a1688-378">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-378">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-379">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-379">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-380">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-380">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="xmlNodeReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-381">从流中读取下一个节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-381">Reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="a1688-382">如果成功读取了下一个节点，则为 <see langword="true" />；如果没有其他节点可读取，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-382"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes to read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-383">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-383">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-384">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-384">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-385">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-385">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-386">首次创建和初始化读者时，没有可用的信息。</span><span class="sxs-lookup"><span data-stu-id="a1688-386">When a reader is first created and initialized, there is no information available.</span></span> <span data-ttu-id="a1688-387">必须调用 `Read` 才能读取第一个节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-387">You must call `Read` to read the first node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-388">下面的示例读取一个 XML 并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-388">The following example reads an XML and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1688-389">该示例使用文件（`items.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="a1688-389">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAttributeValue">
      <MemberSignature Language="C#" Value="public override bool ReadAttributeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ReadAttributeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadAttributeValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadAttributeValue () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ReadAttributeValue();" />
      <MemberSignature Language="F#" Value="override this.ReadAttributeValue : unit -&gt; bool" Usage="xmlNodeReader.ReadAttributeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-390">将属性值分析为一个或多个 <see langword="Text" />、<see langword="EntityReference" /> 或 <see langword="EndEntity" /> 节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-390">Parses the attribute value into one or more <see langword="Text" />, <see langword="EntityReference" />, or <see langword="EndEntity" /> nodes.</span></span></summary>
        <returns><span data-ttu-id="a1688-391">如果有可返回的节点，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-391"><see langword="true" /> if there are nodes to return.</span></span>  
  
 <span data-ttu-id="a1688-392">如果进行初始调用时读取器不是定位在属性节点上，或者如果已读取了所有属性值，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-392"><see langword="false" /> if the reader is not positioned on an attribute node when the initial call is made or if all the attribute values have been read.</span></span>  
  
<span data-ttu-id="a1688-393">如果是空属性，如 <c>misc=""</c>，则返回 <see langword="true" />，同时返回值为 String.Empty 的单个节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-393">An empty attribute, such as, <c>misc=""</c>, returns <see langword="true" /> with a single node with a value of String.Empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-394">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-394">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-395">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-395">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-396">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-396">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-397">在调用 <xref:System.Xml.XmlNodeReader.MoveToAttribute%2A> 读取组成特性值的文本或实体引用节点后，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a1688-397">Use this method after calling <xref:System.Xml.XmlNodeReader.MoveToAttribute%2A> to read through the text or entity reference nodes that make up the attribute value.</span></span> <span data-ttu-id="a1688-398">属性值节点的 <xref:System.Xml.XmlNodeReader.Depth%2A> 是属性节点的深度，当你单步执行和跳出常规实体引用时，它会递增和递减一个。</span><span class="sxs-lookup"><span data-stu-id="a1688-398">The <xref:System.Xml.XmlNodeReader.Depth%2A> of the attribute value nodes is one plus the depth of the attribute node; it increments and decrements by one when you step into and out of general entity references.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-399">下面的示例将读取具有文本和实体引用节点的属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-399">The following example reads an attribute with text and entity reference nodes.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ReadAttributeValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ReadAttributeValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a1688-400">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a1688-400">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="a1688-401">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-401">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="a1688-402">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-402">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="a1688-403">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-403">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="a1688-404">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-404">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="a1688-405">读取内容并返回 Base64 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="a1688-405">Reads the content and returns the Base64 decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="a1688-406">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-406">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-407">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-407">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-408">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-408">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-409">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-409">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-410">此方法对内容进行流式处理，对 Base64 内容进行解码，并将解码后的二进制字节（例如内联 Base64 编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-410">This method streams the content, decodes the Base64 content, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="a1688-411">可以连续调用此方法以读取大量嵌入文本。</span><span class="sxs-lookup"><span data-stu-id="a1688-411">This method can be called successively to read large streams of embedded text.</span></span> <span data-ttu-id="a1688-412">有关详细信息，请参阅 RFC 1521 "MIME （多用途 Internet 邮件扩展）第一部分：指定和描述 Internet 邮件正文格式的机制"。</span><span class="sxs-lookup"><span data-stu-id="a1688-412">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="a1688-413">你可以从[征求意见](https://www.rfc-editor.org)网站获取 rfc。</span><span class="sxs-lookup"><span data-stu-id="a1688-413">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1688-414">在方法返回值0之前，不应访问对 <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> 方法的调用之间的任何读取器属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-414">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="a1688-415">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="a1688-415">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="a1688-416"><xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> 在达到其所操作的字节流的末尾时返回值0。</span><span class="sxs-lookup"><span data-stu-id="a1688-416"><xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="a1688-417">读取器定位在第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="a1688-417">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="a1688-418">如果请求的字节数少于或小于的字节数，则读取器将保留在其当前位置。</span><span class="sxs-lookup"><span data-stu-id="a1688-418">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="a1688-419">以下 XML 节点类型不支持 <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A>： Element、XmlDeclaration、None、Document、DocumentType、Notation、Entity、DocumentFragment。</span><span class="sxs-lookup"><span data-stu-id="a1688-419"><xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1688-420"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-420">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1688-421">当前节点不支持 <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-421"><see cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1688-422">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="a1688-422">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a1688-423">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a1688-423">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="a1688-424">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-424">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="a1688-425">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-425">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="a1688-426">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-426">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="a1688-427">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-427">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="a1688-428">读取内容并返回 BinHex 解码的二进制字节。</span><span class="sxs-lookup"><span data-stu-id="a1688-428">Reads the content and returns the BinHex decoded binary bytes.</span></span></summary>
        <returns><span data-ttu-id="a1688-429">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-429">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-430">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-430">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-431">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-431">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-432">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-432">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-433">此方法对内容进行流式处理，对 BinHex 内容进行解码，并将解码后的二进制字节（例如内联 BinHex 编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-433">This method streams the content, decodes the BinHex content, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span> <span data-ttu-id="a1688-434">可以连续调用此方法以读取大量嵌入文本。</span><span class="sxs-lookup"><span data-stu-id="a1688-434">This method can be called successively to read large streams of embedded text.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1688-435">在方法返回值0之前，不应访问对 <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> 方法的调用之间的任何读取器属性。</span><span class="sxs-lookup"><span data-stu-id="a1688-435">You should not access any of the reader properties between calls to the <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> method until the method returns the value 0.</span></span>  
  
 <span data-ttu-id="a1688-436">此方法具有以下行为：</span><span class="sxs-lookup"><span data-stu-id="a1688-436">This method has the following behavior:</span></span>  
  
-   <span data-ttu-id="a1688-437"><xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> 在达到其所操作的字节流的末尾时返回值0。</span><span class="sxs-lookup"><span data-stu-id="a1688-437"><xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> returns the value 0 when it has reached the end of the byte stream it was operating on.</span></span> <span data-ttu-id="a1688-438">读取器定位在第一个非内容节点上。</span><span class="sxs-lookup"><span data-stu-id="a1688-438">The reader is positioned on the first non-content node.</span></span>  
  
-   <span data-ttu-id="a1688-439">如果请求的字节数少于或小于的字节数，则读取器将保留在其当前位置。</span><span class="sxs-lookup"><span data-stu-id="a1688-439">If you ask for fewer, or the exact number, of bytes than are left in the stream the reader remains in its current position.</span></span>  
  
-   <span data-ttu-id="a1688-440">以下 XML 节点类型不支持 <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A>： Element、XmlDeclaration、None、Document、DocumentType、Notation、Entity、DocumentFragment。</span><span class="sxs-lookup"><span data-stu-id="a1688-440"><xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> is not supported on the following XML node types: Element, XmlDeclaration, None, Document, DocumentType, Notation, Entity, DocumentFragment.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1688-441"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-441">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1688-442">当前节点不支持 <see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-442"><see cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" /> is not supported on the current node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1688-443">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="a1688-443">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBase64">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBase64 (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBase64 : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a1688-444">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a1688-444">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="a1688-445">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-445">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="a1688-446">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-446">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="a1688-447">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-447">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="a1688-448">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-448">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="a1688-449">读取元素并对 Base64 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="a1688-449">Reads the element and decodes the Base64 content.</span></span></summary>
        <returns><span data-ttu-id="a1688-450">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-450">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-451">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-451">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-452">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-452">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-453">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-453">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-454">此方法读取内容，使用 Base64 编码对内容进行解码，并将解码后的二进制字节（例如内联 Base64 编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-454">This method reads the content, decodes it using Base64 encoding, and returns the decoded binary bytes (for example, an inline Base64 encoded GIF image) into the buffer.</span></span> <span data-ttu-id="a1688-455">有关详细信息，请参阅 RFC 1521 "MIME （多用途 Internet 邮件扩展）第一部分：指定和描述 Internet 邮件正文格式的机制"。</span><span class="sxs-lookup"><span data-stu-id="a1688-455">For more information, see RFC 1521, "MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies".</span></span> <span data-ttu-id="a1688-456">你可以从[征求意见](https://www.rfc-editor.org)网站获取 rfc。</span><span class="sxs-lookup"><span data-stu-id="a1688-456">You can obtain RFCs from the [Request for Comments Web site](https://www.rfc-editor.org).</span></span>  
  
 <span data-ttu-id="a1688-457">此方法只能读取简单内容元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-457">This method can only read simple-content elements.</span></span> <span data-ttu-id="a1688-458">元素可以包含文本、空格、有效空白、CDATA 部分、注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="a1688-458">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="a1688-459">它还可以包含自动扩展的实体引用。</span><span class="sxs-lookup"><span data-stu-id="a1688-459">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="a1688-460">元素不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-460">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="a1688-461">此方法与 <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> 方法非常相似，只不过它只能在元素节点类型上调用。</span><span class="sxs-lookup"><span data-stu-id="a1688-461">This method is very similar to the <xref:System.Xml.XmlNodeReader.ReadContentAsBase64%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="a1688-462">如果 count 值大于文档中的字节数，或者它等于文档中的字节数，则 <xref:System.Xml.XmlNodeReader> 将读取文档中的所有剩余字节并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-462">If the count value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlNodeReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="a1688-463">下一个 <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A> 方法调用返回零，并将读取器移动到 <xref:System.Xml.XmlNodeType.EndElement> 节点之后的节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-463">The next <xref:System.Xml.XmlNodeReader.ReadElementContentAsBase64%2A> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement> node.</span></span>  
  
 <span data-ttu-id="a1688-464">如果在所有元素内容使用之前调用 <xref:System.Xml.XmlNodeReader.Read%2A>，则读取器的行为可能与第一个内容的行为相同，然后调用 <xref:System.Xml.XmlNodeReader.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1688-464">If you call <xref:System.Xml.XmlNodeReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlNodeReader.Read%2A> method was called.</span></span> <span data-ttu-id="a1688-465">这意味着读取器将读取所有文本，直到遇到结束元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-465">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="a1688-466">然后读取结束标记节点，读取下一个节点，然后在下一个后续节点上定位自身。</span><span class="sxs-lookup"><span data-stu-id="a1688-466">It then reads the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-467">有关使用此方法的示例，请参阅 <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1688-467">See <xref:System.Xml.XmlReader.ReadElementContentAsBase64%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1688-468"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-468">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1688-469">当前节点不是元素节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-469">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1688-470">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="a1688-470">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a1688-471">该元素包含混合内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-471">The element contains mixed content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a1688-472">无法将内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="a1688-472">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadElementContentAsBinHex">
      <MemberSignature Language="C#" Value="public override int ReadElementContentAsBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadElementContentAsBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadElementContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadElementContentAsBinHex (buffer As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadElementContentAsBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.ReadElementContentAsBinHex : byte[] * int * int -&gt; int" Usage="xmlNodeReader.ReadElementContentAsBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="a1688-473">结果文本复制到的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="a1688-473">The buffer into which to copy the resulting text.</span></span> <span data-ttu-id="a1688-474">此值不能为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-474">This value cannot be <see langword="null" />.</span></span></param>
        <param name="index"><span data-ttu-id="a1688-475">缓冲区中的偏移，从这个位置开始将结果复制到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-475">The offset into the buffer where to start copying the result.</span></span></param>
        <param name="count"><span data-ttu-id="a1688-476">要复制到缓冲区的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-476">The maximum number of bytes to copy into the buffer.</span></span> <span data-ttu-id="a1688-477">此方法返回复制的实际字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-477">The actual number of bytes copied is returned from this method.</span></span></param>
        <summary><span data-ttu-id="a1688-478">读取元素并对 BinHex 内容进行解码。</span><span class="sxs-lookup"><span data-stu-id="a1688-478">Reads the element and decodes the BinHex content.</span></span></summary>
        <returns><span data-ttu-id="a1688-479">写入缓冲区的字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-479">The number of bytes written to the buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-480">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-480">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-481">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-481">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-482">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-482">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-483">此方法读取元素内容，使用 BinHex 编码对其进行解码，并将解码后的二进制字节（例如，内联 BinHex 编码 GIF 图像）返回到缓冲区中。</span><span class="sxs-lookup"><span data-stu-id="a1688-483">This method reads the element content, decodes it using BinHex encoding, and returns the decoded binary bytes (for example, an inline BinHex encoded GIF image) into the buffer.</span></span>  
  
 <span data-ttu-id="a1688-484">此方法只能读取简单内容元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-484">This method can only read simple-content elements.</span></span> <span data-ttu-id="a1688-485">元素可以包含文本、空格、有效空白、CDATA 部分、注释和处理指令。</span><span class="sxs-lookup"><span data-stu-id="a1688-485">The element can contain text, white space, significant white space, CDATA sections, comments and processing instructions.</span></span> <span data-ttu-id="a1688-486">它还可以包含自动扩展的实体引用。</span><span class="sxs-lookup"><span data-stu-id="a1688-486">It can also contain entity references, which are automatically expanded.</span></span> <span data-ttu-id="a1688-487">元素不能有子元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-487">The element cannot have child elements.</span></span>  
  
 <span data-ttu-id="a1688-488">此方法与 <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> 方法非常相似，只不过它只能在元素节点类型上调用。</span><span class="sxs-lookup"><span data-stu-id="a1688-488">This method is very similar to the <xref:System.Xml.XmlNodeReader.ReadContentAsBinHex%2A> method except that it can only be called on element node types.</span></span>  
  
 <span data-ttu-id="a1688-489">如果 count 值大于文档中的字节数，或者它等于文档中的字节数，则 <xref:System.Xml.XmlNodeReader> 将读取文档中的所有剩余字节并返回读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="a1688-489">If the count value is higher than the number of bytes in the document, or if it is equal to the number of bytes in the document, the <xref:System.Xml.XmlNodeReader> reads all the remaining bytes in the document and returns the number of bytes read.</span></span> <span data-ttu-id="a1688-490">下一个 <xref:System.Xml.XmlNodeReader> 方法调用返回零，并将读取器移动到 <xref:System.Xml.XmlNodeType.EndElement> 节点之后的节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-490">The next <xref:System.Xml.XmlNodeReader> method call returns a zero and moves the reader to the node following the <xref:System.Xml.XmlNodeType.EndElement> node.</span></span>  
  
 <span data-ttu-id="a1688-491">如果在所有元素内容使用之前调用 <xref:System.Xml.XmlNodeReader.Read%2A>，则读取器的行为可能与第一个内容的行为相同，然后调用 <xref:System.Xml.XmlNodeReader.Read%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a1688-491">If you call <xref:System.Xml.XmlNodeReader.Read%2A> before all of the element content is consumed, the reader may behave as if the first content was consumed and then the <xref:System.Xml.XmlNodeReader.Read%2A> method was called.</span></span> <span data-ttu-id="a1688-492">这意味着读取器将读取所有文本，直到遇到结束元素。</span><span class="sxs-lookup"><span data-stu-id="a1688-492">This means that the reader reads all the text until the end element is encountered.</span></span> <span data-ttu-id="a1688-493">然后读取结束标记节点，读取下一个节点，然后在下一个后续节点上定位自身。</span><span class="sxs-lookup"><span data-stu-id="a1688-493">It then reads the end tag node, read the next node, and then position itself on the next subsequent node.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-494">有关使用此方法的示例，请参阅 <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a1688-494">See <xref:System.Xml.XmlReader.ReadElementContentAsBinHex%2A?displayProperty=nameWithType> to see an example using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1688-495"><paramref name="buffer" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-495">The <paramref name="buffer" /> value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1688-496">当前节点不是元素节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-496">The current node is not an element node.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a1688-497">缓冲区中的索引或者索引与计数之和大于分配的缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="a1688-497">The index into the buffer or index + count is larger than the allocated buffer size.</span></span></exception>
        <exception cref="T:System.Xml.XmlException"><span data-ttu-id="a1688-498">该元素包含混合内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-498">The element contains mixed content.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="a1688-499">无法将内容转换成请求的类型。</span><span class="sxs-lookup"><span data-stu-id="a1688-499">The content cannot be converted to the requested type.</span></span></exception>
        <altmember cref="M:System.Xml.XmlNodeReader.ReadContentAsBinHex(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Xml.XmlNodeReader.ReadElementContentAsBase64(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadState">
      <MemberSignature Language="C#" Value="public override System.Xml.ReadState ReadState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ReadState ReadState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.ReadState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReadState As ReadState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::ReadState ReadState { System::Xml::ReadState get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadState : System.Xml.ReadState" Usage="System.Xml.XmlNodeReader.ReadState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ReadState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-500">获取读取器的状态。</span><span class="sxs-lookup"><span data-stu-id="a1688-500">Gets the state of the reader.</span></span></summary>
        <value><span data-ttu-id="a1688-501"><see cref="T:System.Xml.ReadState" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="a1688-501">One of the <see cref="T:System.Xml.ReadState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-502">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-502">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-503">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-503">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-504">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-504">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadString">
      <MemberSignature Language="C#" Value="public override string ReadString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ReadString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ReadString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ReadString();" />
      <MemberSignature Language="F#" Value="override this.ReadString : unit -&gt; string" Usage="xmlNodeReader.ReadString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-505">将元素或文本节点的内容读取为一个字符串。</span><span class="sxs-lookup"><span data-stu-id="a1688-505">Reads the contents of an element or text node as a string.</span></span></summary>
        <returns><span data-ttu-id="a1688-506">元素或类似文本节点（这可以包括 CDATA、Text 节点等）的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-506">The contents of the element or text-like node (This can include CDATA, Text nodes, and so on).</span></span> <span data-ttu-id="a1688-507">如果读取器定位在元素或文本节点以外的位置，或者当前上下文中没有其他文本内容可返回，则这可以是空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1688-507">This can be an empty string if the reader is positioned on something other than an element or text node, or if there is no more text content to return in the current context.</span></span>  
  
 <span data-ttu-id="a1688-508"><see langword="Note:" />文本节点可以是元素或属性文本节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-508"><see langword="Note:" /> The text node can be either an element or an attribute text node.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-509">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-509">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-510">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-510">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-511">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-511">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-512">如果定位在某个元素上，`ReadString` 会将所有文本、有效空白、空白和 CData 节节点类型连接在一起，并将连接的数据作为元素内容返回。</span><span class="sxs-lookup"><span data-stu-id="a1688-512">If positioned on an element, `ReadString` concatenates all text, significant white space, white space, and CData section node types together and returns the concatenated data as the element content.</span></span> <span data-ttu-id="a1688-513">如果遇到任何标记，它将停止。</span><span class="sxs-lookup"><span data-stu-id="a1688-513">It stops when any markup is encountered.</span></span> <span data-ttu-id="a1688-514">这可以在混合内容模型中发生，也可以在读取元素结束标记时发生。</span><span class="sxs-lookup"><span data-stu-id="a1688-514">This could occur in a mixed content model, or when an element end tag is read.</span></span>  
  
 <span data-ttu-id="a1688-515">如果定位在类似于文本的节点上，`ReadString` 将执行从文本节点到元素结束标记的相同串联。</span><span class="sxs-lookup"><span data-stu-id="a1688-515">If positioned on a text-like node, `ReadString` performs the same concatenation from the text node to the element end tag.</span></span> <span data-ttu-id="a1688-516">如果读取器定位在属性文本节点上，则 `ReadString` 与读取器定位在元素开始标记上时的功能相同。</span><span class="sxs-lookup"><span data-stu-id="a1688-516">If the reader is positioned on an attribute text node, `ReadString` has the same functionality as if the reader were position on the element start tag.</span></span> <span data-ttu-id="a1688-517">它返回所有串联在一起的元素文本节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-517">It returns all the concatenated element text nodes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-518">下面的示例显示每个元素的文本内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-518">The following example displays the text content of each of the elements.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.IsEmptyElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.IsEmptyElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public override void ResolveEntity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ResolveEntity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.ResolveEntity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ResolveEntity ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ResolveEntity();" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : unit -&gt; unit" Usage="xmlNodeReader.ResolveEntity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-519">解析 <see langword="EntityReference" /> 节点的实体引用。</span><span class="sxs-lookup"><span data-stu-id="a1688-519">Resolves the entity reference for <see langword="EntityReference" /> nodes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-520">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-520">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-521">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-521">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-522">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-522">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-523">如果读取器定位在 `EntityReference` 节点（`XmlNodeType.EntityReference`）上，如果在调用此方法后调用 <xref:System.Xml.XmlNodeReader.Read%2A>，则将分析实体替换文本。</span><span class="sxs-lookup"><span data-stu-id="a1688-523">If the reader is positioned on an `EntityReference` node (`XmlNodeType.EntityReference`), if <xref:System.Xml.XmlNodeReader.Read%2A> is called after calling this method, the entity replacement text is parsed.</span></span> <span data-ttu-id="a1688-524">实体替换文本完成后，将返回 `EndEntity` 节点以关闭实体引用作用域。</span><span class="sxs-lookup"><span data-stu-id="a1688-524">When the entity replacement text is finished, an `EndEntity` node is returned to close the entity reference scope.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1688-525">调用此方法后，如果实体是属性值的一部分，则必须调用 <xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A> 以单步执行实体。</span><span class="sxs-lookup"><span data-stu-id="a1688-525">After calling this method, if the entity is part of an attribute value, you must call <xref:System.Xml.XmlNodeReader.ReadAttributeValue%2A> to step into the entity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-526">下面的示例使用 `ResolveEntity` 来展开常规实体。</span><span class="sxs-lookup"><span data-stu-id="a1688-526">The following example uses `ResolveEntity` to expand a general entity.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.ResolveEntity Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.ResolveEntity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a1688-527">读取器不是定位在 <see langword="EntityReference" /> 节点上。</span><span class="sxs-lookup"><span data-stu-id="a1688-527">The reader is not positioned on an <see langword="EntityReference" /> node.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SchemaInfo">
      <MemberSignature Language="C#" Value="public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.IXmlSchemaInfo SchemaInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SchemaInfo As IXmlSchemaInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Schema::IXmlSchemaInfo ^ SchemaInfo { System::Xml::Schema::IXmlSchemaInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SchemaInfo : System.Xml.Schema.IXmlSchemaInfo" Usage="System.Xml.XmlNodeReader.SchemaInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.IXmlSchemaInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-528">获取已分配给当前节点的架构信息。</span><span class="sxs-lookup"><span data-stu-id="a1688-528">Gets the schema information that has been assigned to the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-529">一个包含当前节点的架构信息的 <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1688-529">An <see cref="T:System.Xml.Schema.IXmlSchemaInfo" /> object containing the schema information for the current node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-530">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-530">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-531">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-531">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-532">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-532">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-533"><xref:System.Xml.Schema.IXmlSchemaInfo> 接口表示基础 XML 节点的后架构验证信息集（PSVI）。</span><span class="sxs-lookup"><span data-stu-id="a1688-533">The <xref:System.Xml.Schema.IXmlSchemaInfo> interface represents the Post Schema Validation Infoset (PSVI) of the underlying XML node.</span></span> <span data-ttu-id="a1688-534">在验证节点后，将设置此属性的 PSVI 内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-534">The PSVI contents of this property are set after the node has been validated.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Schema.XmlSchemaInfo" />
        <altmember cref="Overload:System.Xml.XmlDocument.Validate" />
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public override void Skip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Skip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.Skip" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Skip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Skip();" />
      <MemberSignature Language="F#" Value="override this.Skip : unit -&gt; unit" Usage="xmlNodeReader.Skip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1688-535">跳过当前节点的子级。</span><span class="sxs-lookup"><span data-stu-id="a1688-535">Skips the children of the current node.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-536">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-536">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-537">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-537">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-538">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-538">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-539">例如，假设您具有以下 XML 输入：</span><span class="sxs-lookup"><span data-stu-id="a1688-539">For example, suppose you have the following XML input:</span></span>  
  
```xml  
<a name="bob" age="123">  
   <x/>abc<y/>  
 </a>  
 <b>  
...  
 </b>  
```  
  
 <span data-ttu-id="a1688-540">如果读取器定位在 "\<>" 节点或其任何特性上，则调用 `Skip` 会将读取器定位到 "\<b >" 节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-540">If the reader is positioned on the "\<a>" node or any of its attributes, calling `Skip` positions the reader to the "\<b>" node.</span></span>  
  
 <span data-ttu-id="a1688-541">如果读取器已定位在叶节点上（例如元素 "x" 或文本节点 "abc"），则调用 `Skip` 与调用 <xref:System.Xml.XmlNodeReader.Read%2A>相同。</span><span class="sxs-lookup"><span data-stu-id="a1688-541">If the reader is positioned on a leaf node already (such as element "x" or the text node "abc"), calling `Skip` is the same as calling <xref:System.Xml.XmlNodeReader.Read%2A>.</span></span>  
  
 <span data-ttu-id="a1688-542">此方法检查格式正确的 XML。</span><span class="sxs-lookup"><span data-stu-id="a1688-542">This method checks for well-formed XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-543">下面的示例读取 XML 文档中的 price 元素节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-543">The following example reads the price element node in the XML document.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Skip Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Skip Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.GetNamespacesInScope">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IDictionary&lt;string,string&gt; IXmlNamespaceResolver.GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String) Implements IXmlNamespaceResolver.GetNamespacesInScope" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System::Xml::XmlNamespaceScope scope) = System::Xml::IXmlNamespaceResolver::GetNamespacesInScope;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.IXmlNamespaceResolver.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;&#xA;override this.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlNodeReader.System.Xml.IXmlNamespaceResolver.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope"><span data-ttu-id="a1688-544"><see cref="T:System.Xml.XmlNamespaceScope" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1688-544"><see cref="T:System.Xml.XmlNamespaceScope" /> object.</span></span></param>
        <summary><span data-ttu-id="a1688-545">有关此成员的说明，请参见 <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-545">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />.</span></span></summary>
        <returns><span data-ttu-id="a1688-546">包含范围内命名空间的 <see cref="T:System.Collections.IDictionary" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1688-546"><see cref="T:System.Collections.IDictionary" /> object that contains the namespaces that are in scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1688-547">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1688-547">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1688-548">它只能在 <xref:System.Xml.XmlNodeReader> 实例被强制转换为 <xref:System.Xml.IXmlNamespaceResolver> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1688-548">It can be used only when the <xref:System.Xml.XmlNodeReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupNamespace">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupNamespace (prefix As String) As String Implements IXmlNamespaceResolver.LookupNamespace" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupNamespace(System::String ^ prefix) = System::Xml::IXmlNamespaceResolver::LookupNamespace;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.IXmlNamespaceResolver.LookupNamespace : string -&gt; string&#xA;override this.System.Xml.IXmlNamespaceResolver.LookupNamespace : string -&gt; string" Usage="xmlNodeReader.System.Xml.IXmlNamespaceResolver.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="a1688-549">包含命名空间前缀的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-549"><see cref="T:System.String" /> that contains the namespace prefix.</span></span></param>
        <summary><span data-ttu-id="a1688-550">有关此成员的说明，请参见 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-550">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="a1688-551">包含命名空间名称的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-551"><see cref="T:System.String" /> that contains the namespace name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1688-552">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1688-552">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1688-553">它只能在 <xref:System.Xml.XmlNodeReader> 实例被强制转换为 <xref:System.Xml.IXmlNamespaceResolver> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1688-553">It can be used only when the <xref:System.Xml.XmlNodeReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.IXmlNamespaceResolver.LookupPrefix">
      <MemberSignature Language="C#" Value="string IXmlNamespaceResolver.LookupPrefix (string namespaceName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Xml.IXmlNamespaceResolver.LookupPrefix(string namespaceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNodeReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function LookupPrefix (namespaceName As String) As String Implements IXmlNamespaceResolver.LookupPrefix" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Xml.IXmlNamespaceResolver.LookupPrefix(System::String ^ namespaceName) = System::Xml::IXmlNamespaceResolver::LookupPrefix;" />
      <MemberSignature Language="F#" Value="abstract member System.Xml.IXmlNamespaceResolver.LookupPrefix : string -&gt; string&#xA;override this.System.Xml.IXmlNamespaceResolver.LookupPrefix : string -&gt; string" Usage="xmlNodeReader.System.Xml.IXmlNamespaceResolver.LookupPrefix namespaceName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceName" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="namespaceName"><span data-ttu-id="a1688-554">标识命名空间的 <see cref="T:System.String" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1688-554"><see cref="T:System.String" /> object that identifies the namespace.</span></span></param>
        <summary><span data-ttu-id="a1688-555">有关此成员的说明，请参见 <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-555">For a description of this member, see <see cref="M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="a1688-556">包含命名空间前缀的 <see cref="T:System.String" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="a1688-556"><see cref="T:System.String" /> object that contains the namespace prefix.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1688-557">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="a1688-557">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="a1688-558">它只能在 <xref:System.Xml.XmlNodeReader> 实例被强制转换为 <xref:System.Xml.IXmlNamespaceResolver> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="a1688-558">It can be used only when the <xref:System.Xml.XmlNodeReader> instance is cast to an <xref:System.Xml.IXmlNamespaceResolver> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public override string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.Value" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Xml.XmlNodeReader.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-559">获取当前节点的文本值。</span><span class="sxs-lookup"><span data-stu-id="a1688-559">Gets the text value of the current node.</span></span></summary>
        <value><span data-ttu-id="a1688-560">返回的值取决于节点的 <see cref="P:System.Xml.XmlNodeReader.NodeType" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-560">The value returned depends on the <see cref="P:System.Xml.XmlNodeReader.NodeType" /> of the node.</span></span> <span data-ttu-id="a1688-561">下表列出具有要返回的值的节点类型。</span><span class="sxs-lookup"><span data-stu-id="a1688-561">The following table lists node types that have a value to return.</span></span> <span data-ttu-id="a1688-562">所有其他节点类型返回 String.Empty。</span><span class="sxs-lookup"><span data-stu-id="a1688-562">All other node types return String.Empty.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a1688-563">节点类型</span><span class="sxs-lookup"><span data-stu-id="a1688-563">Node Type</span></span> 
 </term><description> <span data-ttu-id="a1688-564">“值”</span><span class="sxs-lookup"><span data-stu-id="a1688-564">Value</span></span> 
 </description></listheader><item><term><see langword="Attribute" /></term><description> <span data-ttu-id="a1688-565">属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1688-565">The value of the attribute.</span></span>  
  
 </description></item><item><term><see langword="CDATA" /></term><description> <span data-ttu-id="a1688-566">CDATA 节的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-566">The content of the CDATA section.</span></span>  
  
 </description></item><item><term><see langword="Comment" /></term><description> <span data-ttu-id="a1688-567">注释的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-567">The content of the comment.</span></span>  
  
 </description></item><item><term><see langword="DocumentType" /></term><description> <span data-ttu-id="a1688-568">内部子集。</span><span class="sxs-lookup"><span data-stu-id="a1688-568">The internal subset.</span></span>  
  
 </description></item><item><term><see langword="ProcessingInstruction" /></term><description> <span data-ttu-id="a1688-569">全部内容（不包括指令目标）。</span><span class="sxs-lookup"><span data-stu-id="a1688-569">The entire content, excluding the target.</span></span>  
  
 </description></item><item><term><see langword="SignificantWhitespace" /></term><description> <span data-ttu-id="a1688-570">混合内容模型中标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="a1688-570">The white space between markup in a mixed content model.</span></span>  
  
 </description></item><item><term><see langword="Text" /></term><description> <span data-ttu-id="a1688-571">文本节点的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-571">The content of the text node.</span></span>  
  
 </description></item><item><term><see langword="Whitespace" /></term><description> <span data-ttu-id="a1688-572">标记之间的空白。</span><span class="sxs-lookup"><span data-stu-id="a1688-572">The white space between markup.</span></span>  
  
 </description></item><item><term><see langword="XmlDeclaration" /></term><description> <span data-ttu-id="a1688-573">声明的内容。</span><span class="sxs-lookup"><span data-stu-id="a1688-573">The content of the declaration.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-574">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-574">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-575">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-575">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-576">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-576">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1688-577">下面的示例读取一个 XML 并显示每个节点。</span><span class="sxs-lookup"><span data-stu-id="a1688-577">The following example reads an XML and displays each node.</span></span>  
  
 [!code-cpp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNodeReader.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/VB/source.vb#1)]  
  
 <span data-ttu-id="a1688-578">该示例使用文件（`items.xml`）作为输入。</span><span class="sxs-lookup"><span data-stu-id="a1688-578">The example uses the file, `items.xml`, as input.</span></span>  
  
 [!code-xml[Classic WebData XmlNodeReader.Name Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlNodeReader.Name Example/XML/source.xml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlNodeReader.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-579">获取当前 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="a1688-579">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="a1688-580">当前 <see langword="xml:lang" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="a1688-580">The current <see langword="xml:lang" /> scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-581">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-581">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-582">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-582">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-583">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-583">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 <span data-ttu-id="a1688-584">此属性表示当前节点所在的 xml： lang 范围。</span><span class="sxs-lookup"><span data-stu-id="a1688-584">This property represents the xml:lang scope within which the current node resides.</span></span> <span data-ttu-id="a1688-585">例如，以下是根元素中 `xml:lang` 设置为 US 英语的 XML 片段：</span><span class="sxs-lookup"><span data-stu-id="a1688-585">For example, here is an XML fragment with `xml:lang` set to US English in the root element:</span></span>  
  
```xml  
<root xml:lang="en-us">   
<name>Fred</name>   
</root>   
```  
  
 <span data-ttu-id="a1688-586">当读取器定位在 `name` 元素上时，可以使用此属性来查找它是否在美国英语 `xml:lang` 属性的作用域中。</span><span class="sxs-lookup"><span data-stu-id="a1688-586">When the reader is positioned on the `name` element, you can use this property to find that it is in the scope of a US English `xml:lang` attribute.</span></span>  
  
 <span data-ttu-id="a1688-587">返回的字符串也在 <xref:System.Xml.XmlNodeReader.NameTable%2A>中。</span><span class="sxs-lookup"><span data-stu-id="a1688-587">The string returned is also in <xref:System.Xml.XmlNodeReader.NameTable%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNodeReader.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlNodeReader.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1688-588">获取当前 <see langword="xml:space" /> 范围。</span><span class="sxs-lookup"><span data-stu-id="a1688-588">Gets the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="a1688-589"><see cref="T:System.Xml.XmlSpace" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="a1688-589">One of the <see cref="T:System.Xml.XmlSpace" /> values.</span></span> <span data-ttu-id="a1688-590">如果不存在任何 <see langword="xml:space" /> 范围，则该属性默认值为 <see langword="XmlSpace.None" />。</span><span class="sxs-lookup"><span data-stu-id="a1688-590">If no <see langword="xml:space" /> scope exists, this property defaults to <see langword="XmlSpace.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="a1688-591">在 [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)] 中，建议的做法是使用 <xref:System.Xml.XmlReader> 类和 <xref:System.Xml.XmlReaderSettings> 方法创建 <xref:System.Xml.XmlReader.Create%2A> 实例。</span><span class="sxs-lookup"><span data-stu-id="a1688-591">In the [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], the recommended practice is to create <xref:System.Xml.XmlReader> instances using the <xref:System.Xml.XmlReaderSettings> class and the <xref:System.Xml.XmlReader.Create%2A> method.</span></span> <span data-ttu-id="a1688-592">这样可以充分利用 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中引入的所有新功能。</span><span class="sxs-lookup"><span data-stu-id="a1688-592">This allows you to take full advantage of all the new features introduced in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span> <span data-ttu-id="a1688-593">有关详细信息，请参阅 "<xref:System.Xml.XmlReader> 引用" 页中的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="a1688-593">For more information, see the Remarks section in the <xref:System.Xml.XmlReader> reference page.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
