<Type Name="XmlWriterSettings" FullName="System.Xml.XmlWriterSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8ad3de7e5a452e023e964e736c9f8c64994c869d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78829184" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlWriterSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlWriterSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlWriterSettings" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlWriterSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlWriterSettings sealed" />
  <TypeSignature Language="F#" Value="type XmlWriterSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml" FromVersion="4.0.0.0" To="System.Xml.ReaderWriter" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4acb6-101">指定在由 <see cref="T:System.Xml.XmlWriter" /> 方法创建的 <see cref="Overload:System.Xml.XmlWriter.Create" /> 对象上支持的一组功能。</span><span class="sxs-lookup"><span data-stu-id="4acb6-101">Specifies a set of features to support on the <see cref="T:System.Xml.XmlWriter" /> object created by the <see cref="Overload:System.Xml.XmlWriter.Create" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-102"><xref:System.Xml.XmlWriter.Create%2A> 方法是用于获取 <xref:System.Xml.XmlWriter> 实例的首选机制。</span><span class="sxs-lookup"><span data-stu-id="4acb6-102">The <xref:System.Xml.XmlWriter.Create%2A> method is the preferred mechanism for obtaining <xref:System.Xml.XmlWriter> instances.</span></span> <span data-ttu-id="4acb6-103"><xref:System.Xml.XmlWriter.Create%2A> 方法使用 <xref:System.Xml.XmlWriterSettings> 类来指定要在创建的 <xref:System.Xml.XmlWriter> 对象中实现哪些功能。</span><span class="sxs-lookup"><span data-stu-id="4acb6-103">The <xref:System.Xml.XmlWriter.Create%2A> method uses the <xref:System.Xml.XmlWriterSettings> class to specify which features to implement in the <xref:System.Xml.XmlWriter> object that is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4acb6-104">如果要将 <xref:System.Xml.XmlWriter> 对象与 <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> 方法一起使用，则应使用 <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> 属性获取具有正确设置的 <xref:System.Xml.XmlWriterSettings> 对象。</span><span class="sxs-lookup"><span data-stu-id="4acb6-104">If you're using the <xref:System.Xml.XmlWriter> object with the <xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A> method, you should use the <xref:System.Xml.Xsl.XslCompiledTransform.OutputSettings%2A> property to obtain an <xref:System.Xml.XmlWriterSettings> object with the correct settings.</span></span> <span data-ttu-id="4acb6-105">这样可以确保所创建的 <xref:System.Xml.XmlWriter> 对象的输出设置是正确的。</span><span class="sxs-lookup"><span data-stu-id="4acb6-105">This ensures that the created <xref:System.Xml.XmlWriter> object has the correct output settings.</span></span>  
  
 <span data-ttu-id="4acb6-106"><xref:System.Xml.XmlWriterSettings> 类提供控制数据一致性和输出格式的属性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-106">The <xref:System.Xml.XmlWriterSettings> class provides properties that control data conformance and output format.</span></span>  
  
 <span data-ttu-id="4acb6-107">对于数据一致性检查和自动更正，请使用以下属性：</span><span class="sxs-lookup"><span data-stu-id="4acb6-107">For data conformance checks and auto-corrections, use these properties:</span></span>  
  
|<span data-ttu-id="4acb6-108">Property</span><span class="sxs-lookup"><span data-stu-id="4acb6-108">Property</span></span>|<span data-ttu-id="4acb6-109">指定</span><span class="sxs-lookup"><span data-stu-id="4acb6-109">Specifies</span></span>|<span data-ttu-id="4acb6-110">“值”</span><span class="sxs-lookup"><span data-stu-id="4acb6-110">Value</span></span>|<span data-ttu-id="4acb6-111">默认</span><span class="sxs-lookup"><span data-stu-id="4acb6-111">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="4acb6-112">是否检查字符是否符合 W3C 定义的合法 XML 字符集。</span><span class="sxs-lookup"><span data-stu-id="4acb6-112">Whether to check that characters are in the legal XML character set, as defined by W3C.</span></span>|<span data-ttu-id="4acb6-113">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="4acb6-113">`true` or `false`</span></span>|`true`|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="4acb6-114">是否检查输出是否为格式正确的 XML 1.0 文档或片段。</span><span class="sxs-lookup"><span data-stu-id="4acb6-114">Whether to check that output is a well-formed XML 1.0 document or fragment.</span></span>|<span data-ttu-id="4acb6-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> （文档级）、<xref:System.Xml.ConformanceLevel.Fragment> （段落级）或 <xref:System.Xml.ConformanceLevel.Auto> （自动检测）</span><span class="sxs-lookup"><span data-stu-id="4acb6-115"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level), <xref:System.Xml.ConformanceLevel.Fragment> (fragment-level), or <xref:System.Xml.ConformanceLevel.Auto> (auto-detection)</span></span>|<span data-ttu-id="4acb6-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> （文档级一致性）</span><span class="sxs-lookup"><span data-stu-id="4acb6-116"><xref:System.Xml.ConformanceLevel.Document?displayProperty=nameWithType> (document-level conformance)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="4acb6-117">调用 <xref:System.Xml.XmlWriter.Close%2A> 方法时，是否向所有未关闭的元素添加结束标记。</span><span class="sxs-lookup"><span data-stu-id="4acb6-117">Whether to add closing tags to all unclosed elements when the <xref:System.Xml.XmlWriter.Close%2A> method is called.</span></span>|<span data-ttu-id="4acb6-118">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="4acb6-118">`true` or `false`</span></span>|`true`|  
  
 <span data-ttu-id="4acb6-119">若要指定输出格式，请使用以下属性：</span><span class="sxs-lookup"><span data-stu-id="4acb6-119">To specify output format, use these properties:</span></span>  
  
|<span data-ttu-id="4acb6-120">Property</span><span class="sxs-lookup"><span data-stu-id="4acb6-120">Property</span></span>|<span data-ttu-id="4acb6-121">指定</span><span class="sxs-lookup"><span data-stu-id="4acb6-121">Specifies</span></span>|<span data-ttu-id="4acb6-122">“值”</span><span class="sxs-lookup"><span data-stu-id="4acb6-122">Value</span></span>|<span data-ttu-id="4acb6-123">默认</span><span class="sxs-lookup"><span data-stu-id="4acb6-123">Default</span></span>|  
|--------------|---------------|-----------|-------------|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="4acb6-124">要使用的文本编码。</span><span class="sxs-lookup"><span data-stu-id="4acb6-124">Text encoding to use.</span></span>|<span data-ttu-id="4acb6-125"><xref:System.Text.Encoding?displayProperty=nameWithType> 值</span><span class="sxs-lookup"><span data-stu-id="4acb6-125"><xref:System.Text.Encoding?displayProperty=nameWithType> value</span></span>|<xref:System.Text.Encoding.UTF8?displayProperty=nameWithType>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="4acb6-126">是否缩进元素</span><span class="sxs-lookup"><span data-stu-id="4acb6-126">Whether to indent elements</span></span>|<span data-ttu-id="4acb6-127">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="4acb6-127">`true` or `false`</span></span>|<span data-ttu-id="4acb6-128">`false` （无缩进）</span><span class="sxs-lookup"><span data-stu-id="4acb6-128">`false` (no indentation)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="4acb6-129">缩进时使用的字符串（在将 <xref:System.Xml.XmlWriterSettings.Indent%2A> 设置为 `true`时使用）。</span><span class="sxs-lookup"><span data-stu-id="4acb6-129">Character string to use when indenting (used when <xref:System.Xml.XmlWriterSettings.Indent%2A> is set to `true`).</span></span>|<span data-ttu-id="4acb6-130">String</span><span class="sxs-lookup"><span data-stu-id="4acb6-130">String</span></span>|<span data-ttu-id="4acb6-131">两个空格</span><span class="sxs-lookup"><span data-stu-id="4acb6-131">Two spaces</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="4acb6-132">用于分行符的字符串。</span><span class="sxs-lookup"><span data-stu-id="4acb6-132">Character string to use for line breaks.</span></span>|<span data-ttu-id="4acb6-133">String</span><span class="sxs-lookup"><span data-stu-id="4acb6-133">String</span></span>|<span data-ttu-id="4acb6-134">`\r\n` （回车符、换行符）</span><span class="sxs-lookup"><span data-stu-id="4acb6-134">`\r\n` (carriage return, line feed)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="4acb6-135">如何处理换行符。</span><span class="sxs-lookup"><span data-stu-id="4acb6-135">How to handle newline characters.</span></span>|<span data-ttu-id="4acb6-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> 值： <xref:System.Xml.NewLineHandling.Entitize> （规范化）、<xref:System.Xml.NewLineHandling.Replace> （replace）或 <xref:System.Xml.NewLineHandling.None> （保持不变）</span><span class="sxs-lookup"><span data-stu-id="4acb6-136"><xref:System.Xml.NewLineHandling?displayProperty=nameWithType> value: <xref:System.Xml.NewLineHandling.Entitize> (normalize), <xref:System.Xml.NewLineHandling.Replace> (replace), or <xref:System.Xml.NewLineHandling.None> (leave unchanged)</span></span>|<span data-ttu-id="4acb6-137"><xref:System.Xml.NewLineHandling.Replace> （替换为 <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>指定的字符）</span><span class="sxs-lookup"><span data-stu-id="4acb6-137"><xref:System.Xml.NewLineHandling.Replace> (replace with characters specified by <xref:System.Xml.XmlWriterSettings.NewLineChars%2A>)</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="4acb6-138">是否在单独的行上写入属性（在 `false`<xref:System.Xml.XmlWriterSettings.Indent%2A> 时不起作用）。</span><span class="sxs-lookup"><span data-stu-id="4acb6-138">Whether to write attributes on individual lines (has no effect when <xref:System.Xml.XmlWriterSettings.Indent%2A> is `false`).</span></span>|<span data-ttu-id="4acb6-139">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="4acb6-139">`true` or `false`</span></span>|`false`|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="4acb6-140">是否写入 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-140">Whether to write an XML declaration.</span></span>|<span data-ttu-id="4acb6-141">`true` 或 `false`</span><span class="sxs-lookup"><span data-stu-id="4acb6-141">`true` or `false`</span></span>|`false`|  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-142">下面的示例创建一个写入 XML 文件的 <xref:System.Xml.XmlWriter>，并在新行上写入每个属性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-142">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="4acb6-143">该示例生成以下输出：</span><span class="sxs-lookup"><span data-stu-id="4acb6-143">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlWriterSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlWriterSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4acb6-144">初始化 <see cref="T:System.Xml.XmlWriterSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4acb6-144">Initializes a new instance of the <see cref="T:System.Xml.XmlWriterSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-145">下表显示了 <xref:System.Xml.XmlWriterSettings>实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-145">The following table shows initial property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="4acb6-146">Property</span><span class="sxs-lookup"><span data-stu-id="4acb6-146">Property</span></span>|<span data-ttu-id="4acb6-147">初始值</span><span class="sxs-lookup"><span data-stu-id="4acb6-147">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="4acb6-148">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-148">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="4acb6-149">`true`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-149">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="4acb6-150">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-150">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="4acb6-151"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-151"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="4acb6-152">`Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-152">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="4acb6-153">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-153">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="4acb6-154">两个空格。</span><span class="sxs-lookup"><span data-stu-id="4acb6-154">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="4acb6-155">`\r\n` （回车符，换行）。</span><span class="sxs-lookup"><span data-stu-id="4acb6-155">`\r\n` (carriage return, new line).</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="4acb6-156"><xref:System.Xml.NewLineHandling.Replace>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-156"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="4acb6-157">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-157">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="4acb6-158">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-158">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="4acb6-159">`true`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-159">`true`.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-160">下面的示例创建一个 <xref:System.Xml.XmlWriter> 对象，该对象使用制表符进行缩进。</span><span class="sxs-lookup"><span data-stu-id="4acb6-160">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Async">
      <MemberSignature Language="C#" Value="public bool Async { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Async" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Async" />
      <MemberSignature Language="VB.NET" Value="Public Property Async As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Async { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Async : bool with get, set" Usage="System.Xml.XmlWriterSettings.Async" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-161">获取或设置一个值，该值指示是否可对特定的 <see cref="T:System.Xml.XmlWriter" /> 实例使用异步 <see cref="T:System.Xml.XmlWriter" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="4acb6-161">Gets or sets a value that indicates whether asynchronous <see cref="T:System.Xml.XmlWriter" /> methods can be used on a particular <see cref="T:System.Xml.XmlWriter" /> instance.</span></span></summary>
        <value><span data-ttu-id="4acb6-162">则可以使用异步方法，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-162"><see langword="true" /> if asynchronous methods can be used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-163">如果要在该实例上使用异步 <xref:System.Xml.XmlWriter> 方法，则在创建新的 <xref:System.Xml.XmlWriter> 实例时，必须将此值设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-163">You must set this value to `true` when you create a new <xref:System.Xml.XmlWriter> instance if you want to use asynchronous <xref:System.Xml.XmlWriter> methods on that instance.</span></span> <span data-ttu-id="4acb6-164">创建 <xref:System.Xml.XmlWriter> 实例后，<xref:System.Xml.XmlWriterSettings.Async%2A> 属性是只读的。</span><span class="sxs-lookup"><span data-stu-id="4acb6-164">After the <xref:System.Xml.XmlWriter> instance is created, the <xref:System.Xml.XmlWriterSettings.Async%2A> property is read-only.</span></span> <span data-ttu-id="4acb6-165">此属性的默认值为 `false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-165">The default value of this property is `false`.</span></span>  
  
 <span data-ttu-id="4acb6-166"><xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> 重载将忽略此标志。</span><span class="sxs-lookup"><span data-stu-id="4acb6-166">This flag is ignored by the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> overload.</span></span> <span data-ttu-id="4acb6-167">这意味着，如果基于现有 <xref:System.Xml.XmlWriter>创建新的 <xref:System.Xml.XmlWriter>，则异步行为取决于输入 <xref:System.Xml.XmlWriter>，而不能使用 <xref:System.Xml.XmlWriterSettings.Async%2A> 标志来更改异步行为。</span><span class="sxs-lookup"><span data-stu-id="4acb6-167">This means that if you create a new <xref:System.Xml.XmlWriter> based on an existing <xref:System.Xml.XmlWriter>, the async behavior depends on the input <xref:System.Xml.XmlWriter>, and you cannot use the <xref:System.Xml.XmlWriterSettings.Async%2A> flag to change the async behavior.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7"><span data-ttu-id="4acb6-168">使用 Async 和 Await 的异步编程（C# 和 Visual Basic）</span><span class="sxs-lookup"><span data-stu-id="4acb6-168">Asynchronous Programming with Async and Await (C# and Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckCharacters">
      <MemberSignature Language="C#" Value="public bool CheckCharacters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCharacters As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCharacters { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCharacters : bool with get, set" Usage="System.Xml.XmlWriterSettings.CheckCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-169">获取或设置一个值，该值指示是否应检查 XML 编写器以确保文档中的所有字符都符合 W3C [XML 1.0 建议](https://www.w3.org/TR/REC-xml/#charsets)中的“2.2 字符”部分。</span><span class="sxs-lookup"><span data-stu-id="4acb6-169">Gets or sets a value that indicates whether the XML writer should check to ensure that all characters in the document conform to the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span></span></summary>
        <value><span data-ttu-id="4acb6-170">如果进行字符检查，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-170"><see langword="true" /> to do character checking; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4acb6-171">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-171">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-172">如果 <xref:System.Xml.XmlWriter> 对象支持字符检查，则在 W3C [XML 1.0 建议](https://www.w3.org/TR/REC-xml/#charsets)的 "2.2 字符" 部分指定的合法 XML 字符范围之外，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4acb6-172">If the <xref:System.Xml.XmlWriter> object supports character checking, it throws an exception if any characters are outside the range of legal XML characters specified by the "2.2 Characters" section of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/#charsets).</span></span>  
  
 <span data-ttu-id="4acb6-173">字符检查不包括检查 XML 名称中的非法字符或检查所有 XML 名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="4acb6-173">Character checking does not include checking for illegal characters in XML names or checking that all XML names are valid.</span></span> <span data-ttu-id="4acb6-174">这些检查是一致性检查的一部分，始终执行。</span><span class="sxs-lookup"><span data-stu-id="4acb6-174">These checks are part of conformance checking and are always performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Xml.XmlWriterSettings Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlWriterSettings Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As XmlWriterSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlWriterSettings ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Xml.XmlWriterSettings" Usage="xmlWriterSettings.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlWriterSettings</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4acb6-175">创建 <see cref="T:System.Xml.XmlWriterSettings" /> 实例的副本。</span><span class="sxs-lookup"><span data-stu-id="4acb6-175">Creates a copy of the <see cref="T:System.Xml.XmlWriterSettings" /> instance.</span></span></summary>
        <returns><span data-ttu-id="4acb6-176">克隆的 <see cref="T:System.Xml.XmlWriterSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="4acb6-176">The cloned <see cref="T:System.Xml.XmlWriterSettings" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-177">可以修改克隆的 <xref:System.Xml.XmlWriterSettings> 对象，而不会影响原始对象上的设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-177">The cloned <xref:System.Xml.XmlWriterSettings> object can be modified without affecting the settings on the original object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseOutput">
      <MemberSignature Language="C#" Value="public bool CloseOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CloseOutput" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property CloseOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CloseOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CloseOutput : bool with get, set" Usage="System.Xml.XmlWriterSettings.CloseOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-178">获取或设置一个值，该值指示调用 <see cref="M:System.Xml.XmlWriter.Close" /> 方法时 <see cref="T:System.Xml.XmlWriter" /> 是否也应关闭基础流或 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-178">Gets or sets a value indicating whether the <see cref="T:System.Xml.XmlWriter" /> should also close the underlying stream or <see cref="T:System.IO.TextWriter" /> when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span></span></summary>
        <value><span data-ttu-id="4acb6-179">如果还应该关闭该基础流或 <see cref="T:System.IO.TextWriter" />，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-179"><see langword="true" /> to also close the underlying stream or <see cref="T:System.IO.TextWriter" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4acb6-180">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-180">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-181">如果希望将 XML 写入流，然后在 <xref:System.Xml.XmlWriter> 完成写入后将额外信息添加到流的末尾，则此设置很有用。</span><span class="sxs-lookup"><span data-stu-id="4acb6-181">This setting is useful when you wish to write XML to a stream, and then add extra information to the end of the stream after the <xref:System.Xml.XmlWriter> has finished writing.</span></span>  
  
 <span data-ttu-id="4acb6-182">此属性仅适用于将 XML 内容输出到流或 <xref:System.IO.TextWriter><xref:System.Xml.XmlWriter> 实例;否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-182">This property only applies to <xref:System.Xml.XmlWriter> instances that output XML content to a stream or <xref:System.IO.TextWriter>; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-183">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="4acb6-183">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConformanceLevel">
      <MemberSignature Language="C#" Value="public System.Xml.ConformanceLevel ConformanceLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.ConformanceLevel ConformanceLevel" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ConformanceLevel As ConformanceLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::ConformanceLevel ConformanceLevel { System::Xml::ConformanceLevel get(); void set(System::Xml::ConformanceLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ConformanceLevel : System.Xml.ConformanceLevel with get, set" Usage="System.Xml.XmlWriterSettings.ConformanceLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.ConformanceLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-184">获取或设置的 XML 写入器检查 XML 输出的一致性级别。</span><span class="sxs-lookup"><span data-stu-id="4acb6-184">Gets or sets the level of conformance that the XML writer checks the XML output for.</span></span></summary>
        <value><span data-ttu-id="4acb6-185">指定一致性级别（文档、片段或自动检测）的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="4acb6-185">One of the enumeration values that specifies the level of conformance (document, fragment, or automatic detection).</span></span> <span data-ttu-id="4acb6-186">默认值为 <see cref="F:System.Xml.ConformanceLevel.Document" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-186">The default is <see cref="F:System.Xml.ConformanceLevel.Document" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-187"><xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> 属性将 XML 编写器配置为检查并确保所写入的流符合一组特定的规则。</span><span class="sxs-lookup"><span data-stu-id="4acb6-187">The <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A?displayProperty=nameWithType> property configures the XML writer to check and guarantee that the stream being written complies with a certain set of rules.</span></span> <span data-ttu-id="4acb6-188">可以检查 XML 数据是否符合格式正确的 XML 1.0 文档或文档片段的规则。</span><span class="sxs-lookup"><span data-stu-id="4acb6-188">The XML data can be checked to see that it conforms to the rules for a well-formed XML 1.0 document or a document fragment.</span></span> <span data-ttu-id="4acb6-189">下表描述了这三个设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-189">The following table describes the three settings.</span></span> <span data-ttu-id="4acb6-190">默认值为文档级一致性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-190">The default is document-level conformance.</span></span>  
  
|<span data-ttu-id="4acb6-191">设置</span><span class="sxs-lookup"><span data-stu-id="4acb6-191">Setting</span></span>|<span data-ttu-id="4acb6-192">描述</span><span class="sxs-lookup"><span data-stu-id="4acb6-192">Description</span></span>|  
|-------------|-----------------|  
|<xref:System.Xml.ConformanceLevel.Document>|<span data-ttu-id="4acb6-193">确保 XML 输出符合[格式正确的 XML 1.0 文档的规则](https://www.w3.org/TR/REC-xml/#sec-well-formed)，并可由任何符合要求的处理器处理。</span><span class="sxs-lookup"><span data-stu-id="4acb6-193">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document](https://www.w3.org/TR/REC-xml/#sec-well-formed) and can be processed by any conforming processor.</span></span><br /><br /> <span data-ttu-id="4acb6-194">文档一致性检查包含大部分片段级别检查，并确保以下各项：</span><span class="sxs-lookup"><span data-stu-id="4acb6-194">The document conformance checks include most of the fragment-level checks and also ensure the following:</span></span><br /><br /> <span data-ttu-id="4acb6-195">-顶级项没有 XML 声明、DTD、元素、注释、空白或处理指令以外的任何节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-195">-   The top-level item doesn't have any nodes other than XML Declaration, DTD, element, comment, white space, or processing instruction.</span></span><br /><span data-ttu-id="4acb6-196">-XML 数据有且只有一个顶级元素节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-196">-   The XML data has one and only one top-level element node.</span></span><br /><br /> <span data-ttu-id="4acb6-197">XML 编写器不会分析写入的 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="4acb6-197">The XML writer doesn't parse DTD information that is written.</span></span> <span data-ttu-id="4acb6-198">用户负责确保 DTD 格式正确。</span><span class="sxs-lookup"><span data-stu-id="4acb6-198">The user is responsible for ensuring that the DTD is well-formed.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Fragment>|<span data-ttu-id="4acb6-199">确保 XML 输出符合[格式正确的 xml 1.0 文档片段的规则](https://www.w3.org/TR/REC-xml/#wf-entities)。</span><span class="sxs-lookup"><span data-stu-id="4acb6-199">Ensures that the XML output conforms to the [rules for a well-formed XML 1.0 document fragment](https://www.w3.org/TR/REC-xml/#wf-entities).</span></span><br /><br /> <span data-ttu-id="4acb6-200">此设置接受在顶级包含多个根元素或文本节点的 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="4acb6-200">This setting accepts XML data that has multiple root elements or text nodes at the top level.</span></span> <span data-ttu-id="4acb6-201">此检查级别确保任何处理器可以将正在读取的流作为 XML 1.0 外部分析的实体使用。</span><span class="sxs-lookup"><span data-stu-id="4acb6-201">This level of checking ensures that any processor can consume the stream being read as an XML 1.0 external parsed entity.</span></span><br /><br /> <span data-ttu-id="4acb6-202">文档片段中不允许使用 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="4acb6-202">DTD information isn't allowed in document fragments.</span></span>|  
|<xref:System.Xml.ConformanceLevel.Auto>|<span data-ttu-id="4acb6-203">指定 XML 编写器应根据传入数据确定一致性检查的级别。</span><span class="sxs-lookup"><span data-stu-id="4acb6-203">Specifies that the XML writer should determine the level of conformance checking based on the incoming data.</span></span> <span data-ttu-id="4acb6-204">如果你不知道生成的 XML 是格式正确的 XML 文档还是片段，则此设置可能很有用。</span><span class="sxs-lookup"><span data-stu-id="4acb6-204">This setting can be useful when you don't know whether the generated XML will be a well-formed XML document or a fragment.</span></span><br /><br /> <span data-ttu-id="4acb6-205">在下列情况下应用文档一致性检查：</span><span class="sxs-lookup"><span data-stu-id="4acb6-205">Document conformance checking is applied in the following cases:</span></span><br /><br /> <span data-ttu-id="4acb6-206">-如果调用 <xref:System.Xml.XmlWriter.WriteStartDocument%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4acb6-206">-   If the <xref:System.Xml.XmlWriter.WriteStartDocument%2A> method is called.</span></span><br /><span data-ttu-id="4acb6-207">-如果写入 DTD 信息，则为。</span><span class="sxs-lookup"><span data-stu-id="4acb6-207">-   If DTD information is written.</span></span><br /><br /> <span data-ttu-id="4acb6-208">如果 XML 数据包含以下其中一项，则应用片段一致性检查：</span><span class="sxs-lookup"><span data-stu-id="4acb6-208">Fragment conformance checking is applied if the XML data contains one of these:</span></span><br /><br /> <span data-ttu-id="4acb6-209">根级别的文本、CDATA 或 EntityReference 节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-209">-   Text, CDATA, or EntityReference node at the root level.</span></span><br /><span data-ttu-id="4acb6-210">-根级别有多个元素。</span><span class="sxs-lookup"><span data-stu-id="4acb6-210">-   More than one element at the root level.</span></span><br /><span data-ttu-id="4acb6-211">-根级别上没有元素。</span><span class="sxs-lookup"><span data-stu-id="4acb6-211">-   No element at the root level.</span></span><br /><br /> <span data-ttu-id="4acb6-212">如果存在冲突，例如在根级别尝试写入文本节点和 DTD 时，将引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-212">An <xref:System.Xml.XmlException> is thrown if there is a conflict, such as when you try to write a text node and a DTD at the root level.</span></span><br /><br /> <span data-ttu-id="4acb6-213">如果要将另一个 <xref:System.Xml.XmlWriter> 对象换行，则外部对象不执行任何其他一致性检查;这会留给基础对象。</span><span class="sxs-lookup"><span data-stu-id="4acb6-213">If you are wrapping another <xref:System.Xml.XmlWriter> object, the outer object doesn't do any additional conformance checking; this is left to the underlying object.</span></span>|  
  
 <span data-ttu-id="4acb6-214">如果 XML 编写器检测到任何会违反指定一致性级别的信息，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4acb6-214">If the XML writer detects any information that would violate the specified level of conformance, it throws an exception.</span></span> <span data-ttu-id="4acb6-215">在某些情况下，XML 编写器会自动纠正一致性错误。</span><span class="sxs-lookup"><span data-stu-id="4acb6-215">In some cases, the XML writer automatically corrects the conformance error.</span></span> <span data-ttu-id="4acb6-216">例如，编写器关闭未关闭的属性，而不引发异常。</span><span class="sxs-lookup"><span data-stu-id="4acb6-216">For example, the writer closes an unclosed attribute without throwing an exception.</span></span> <span data-ttu-id="4acb6-217">下表显示了如何在每个设置中处理各种一致性冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-217">The following table shows how various conformance violations are handled in each setting.</span></span>  
  
|<span data-ttu-id="4acb6-218">条件</span><span class="sxs-lookup"><span data-stu-id="4acb6-218">Condition</span></span>|<xref:System.Xml.ConformanceLevel.Document>|<xref:System.Xml.ConformanceLevel.Fragment>|<xref:System.Xml.ConformanceLevel.Auto>|  
|---------------|---------------------------------------------------------------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------|  
|<span data-ttu-id="4acb6-219">找到 DTD 信息。</span><span class="sxs-lookup"><span data-stu-id="4acb6-219">DTD information is found.</span></span>|<span data-ttu-id="4acb6-220">不违反此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-220">Not a violation for this setting.</span></span> <span data-ttu-id="4acb6-221">但是，XML 编写器不会检查 DTD;用户必须确保 DTD 格式正确。</span><span class="sxs-lookup"><span data-stu-id="4acb6-221">However, the XML writer doesn't check the DTD; the user must ensure that the DTD is well-formed.</span></span>|<span data-ttu-id="4acb6-222">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-222"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-223">应用文档一致性检查。</span><span class="sxs-lookup"><span data-stu-id="4acb6-223">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="4acb6-224">调用 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-224"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called.</span></span>|<span data-ttu-id="4acb6-225">不视为违反此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-225">Not considered a violation for this setting.</span></span>|<span data-ttu-id="4acb6-226">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-226"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-227">应用文档一致性检查。</span><span class="sxs-lookup"><span data-stu-id="4acb6-227">Document conformance checking is applied.</span></span>|  
|<span data-ttu-id="4acb6-228">多次调用了 <xref:System.Xml.XmlWriter.WriteStartDocument%2A>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-228"><xref:System.Xml.XmlWriter.WriteStartDocument%2A> is called multiple times.</span></span>|<span data-ttu-id="4acb6-229">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-229"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-230">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-230"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-231">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-231"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4acb6-232">文本值显示在顶级（不在元素或属性节点下）。</span><span class="sxs-lookup"><span data-stu-id="4acb6-232">A text value appears at the top level (not below an element or attribute node).</span></span>|<span data-ttu-id="4acb6-233">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-233"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-234">不视为冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-234">Not considered a violation.</span></span>|<span data-ttu-id="4acb6-235">应用片断一致性检查。</span><span class="sxs-lookup"><span data-stu-id="4acb6-235">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="4acb6-236">多个元素或没有元素出现在顶级。</span><span class="sxs-lookup"><span data-stu-id="4acb6-236">Multiple elements or no elements appear at the top level.</span></span>|<span data-ttu-id="4acb6-237">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-237"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-238">不视为冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-238">Not considered a violation.</span></span>|<span data-ttu-id="4acb6-239">应用片断一致性检查。</span><span class="sxs-lookup"><span data-stu-id="4acb6-239">Fragment conformance checking is applied.</span></span>|  
|<span data-ttu-id="4acb6-240">顶级项为空白。</span><span class="sxs-lookup"><span data-stu-id="4acb6-240">Top-level item is white space.</span></span>|<span data-ttu-id="4acb6-241">不视为冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-241">Not considered a violation.</span></span>|<span data-ttu-id="4acb6-242">不视为冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-242">Not considered a violation.</span></span>|<span data-ttu-id="4acb6-243">不视为冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-243">Not considered a violation.</span></span>|  
|<span data-ttu-id="4acb6-244">不调用 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A> 来结束属性节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-244"><xref:System.Xml.XmlWriter.WriteEndAttribute%2A> isn't called to end an attribute node.</span></span>|<span data-ttu-id="4acb6-245">由 XML 编写器修复。</span><span class="sxs-lookup"><span data-stu-id="4acb6-245">Fixed by XML writer.</span></span>|<span data-ttu-id="4acb6-246">由 XML 编写器修复。</span><span class="sxs-lookup"><span data-stu-id="4acb6-246">Fixed by XML writer.</span></span>|<span data-ttu-id="4acb6-247">由 XML 编写器修复。</span><span class="sxs-lookup"><span data-stu-id="4acb6-247">Fixed by XML writer.</span></span>|  
|<span data-ttu-id="4acb6-248">XML 编写器的状态不正确（例如，<xref:System.Xml.XmlWriter.WriteStartElement%2A> 调用后跟 <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>）。</span><span class="sxs-lookup"><span data-stu-id="4acb6-248">The XML writer is in an improperly nested state (for example, a <xref:System.Xml.XmlWriter.WriteStartElement%2A> call is followed by a <xref:System.Xml.XmlWriter.WriteEndAttribute%2A>).</span></span>|<span data-ttu-id="4acb6-249">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-249"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-250">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-250"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-251">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-251"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4acb6-252">顶级项是一个属性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-252">Top-level item is an attribute.</span></span>|<span data-ttu-id="4acb6-253">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-253"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-254">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-254"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-255">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-255"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4acb6-256">发现多个连续的文本节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-256">Multiple, contiguous text nodes are found.</span></span>|<span data-ttu-id="4acb6-257">不视为冲突，但用户需要负责连接文本节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-257">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="4acb6-258">不视为冲突，但用户需要负责连接文本节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-258">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|<span data-ttu-id="4acb6-259">不视为冲突，但用户需要负责连接文本节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-259">Not considered a violation, but it's the responsibility of the user to concatenate the text nodes.</span></span>|  
|<span data-ttu-id="4acb6-260">相同的命名空间前缀在元素中声明两次。</span><span class="sxs-lookup"><span data-stu-id="4acb6-260">The same namespace prefix is declared twice in an element.</span></span>|<span data-ttu-id="4acb6-261">XML 编写器为第二个命名空间生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="4acb6-261">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="4acb6-262">XML 编写器为第二个命名空间生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="4acb6-262">The XML writer generates a new prefix for the second namespace.</span></span>|<span data-ttu-id="4acb6-263">XML 编写器为第二个命名空间生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="4acb6-263">The XML writer generates a new prefix for the second namespace.</span></span>|  
|<span data-ttu-id="4acb6-264"><xref:System.Xml.XmlWriter.WriteStartElement%2A> 指定在该范围内未声明的前缀和命名空间，或与其他命名空间关联的前缀。</span><span class="sxs-lookup"><span data-stu-id="4acb6-264"><xref:System.Xml.XmlWriter.WriteStartElement%2A> specifies a prefix and a namespace that isn't declared within that scope, or the prefix is associated with a different namespace.</span></span>|<span data-ttu-id="4acb6-265">XML 编写器写入必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-265">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="4acb6-266">XML 编写器写入必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-266">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="4acb6-267">XML 编写器写入必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-267">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="4acb6-268"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 指定在该范围内未声明的前缀和命名空间。</span><span class="sxs-lookup"><span data-stu-id="4acb6-268"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace that isn't declared within that scope.</span></span>|<span data-ttu-id="4acb6-269">XML 编写器写入必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-269">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="4acb6-270">XML 编写器写入必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-270">The XML writer writes the necessary namespace node.</span></span>|<span data-ttu-id="4acb6-271">XML 编写器写入必要的命名空间节点。</span><span class="sxs-lookup"><span data-stu-id="4acb6-271">The XML writer writes the necessary namespace node.</span></span>|  
|<span data-ttu-id="4acb6-272"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> 指定前缀和命名空间，但前缀与不同的范围内命名空间相关联。</span><span class="sxs-lookup"><span data-stu-id="4acb6-272"><xref:System.Xml.XmlWriter.WriteStartAttribute%2A> specifies a prefix and a namespace, but the prefix is associated with a different in-scope namespace.</span></span>|<span data-ttu-id="4acb6-273">XML 编写器忽略指定的前缀，并查找正确的前缀或生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="4acb6-273">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="4acb6-274">XML 编写器忽略指定的前缀，并查找正确的前缀或生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="4acb6-274">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|<span data-ttu-id="4acb6-275">XML 编写器忽略指定的前缀，并查找正确的前缀或生成新的前缀。</span><span class="sxs-lookup"><span data-stu-id="4acb6-275">The XML writer ignores the specified prefix and either looks up the correct prefix or generates a new prefix.</span></span>|  
|<span data-ttu-id="4acb6-276"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 用于通过使用范围中不存在的命名空间来写入元素内容。</span><span class="sxs-lookup"><span data-stu-id="4acb6-276"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write element content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="4acb6-277">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-277"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-278">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-278"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-279">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-279"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4acb6-280"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> 用于通过使用范围中不存在的命名空间来编写属性内容。</span><span class="sxs-lookup"><span data-stu-id="4acb6-280"><xref:System.Xml.XmlWriter.WriteQualifiedName%2A> is used to write attribute content by using a namespace that doesn't exist within the scope.</span></span>|<span data-ttu-id="4acb6-281">XML 编写器写入必要的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-281">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="4acb6-282">XML 编写器写入必要的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-282">The XML writer writes the necessary namespace declaration.</span></span>|<span data-ttu-id="4acb6-283">XML 编写器写入必要的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-283">The XML writer writes the necessary namespace declaration.</span></span>|  
|<span data-ttu-id="4acb6-284">`xml:space` 属性不包含有效的值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-284">The `xml:space` attribute doesn't contain a valid value.</span></span>|<span data-ttu-id="4acb6-285">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-285"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-286">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-286"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-287">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-287"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4acb6-288">遇到无效的名称。</span><span class="sxs-lookup"><span data-stu-id="4acb6-288">An invalid name is encountered.</span></span>|<span data-ttu-id="4acb6-289">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-289"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-290">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-290"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-291">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-291"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4acb6-292">`xml` 前缀与 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="4acb6-292">The `xml` prefix isn't matched to a URI.</span></span>|<span data-ttu-id="4acb6-293">XML 编写器不会检查是否有这种类型的冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-293">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="4acb6-294">XML 编写器不会检查是否有这种类型的冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-294">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="4acb6-295">XML 编写器不会检查是否有这种类型的冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-295">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="4acb6-296">`xml` 前缀与 http://www.w3.org/XML/1998/namespace URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="4acb6-296">The `xml` prefix isn't matched to the http://www.w3.org/XML/1998/namespace URI.</span></span>|<span data-ttu-id="4acb6-297">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-297"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-298">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-298"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-299">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-299"><xref:System.Xml.XmlException> is thrown.</span></span>|  
|<span data-ttu-id="4acb6-300">`xmlns` 前缀或本地名称与 URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="4acb6-300">The `xmlns` prefix or local name isn't matched to a URI.</span></span>|<span data-ttu-id="4acb6-301">XML 编写器不会检查是否有这种类型的冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-301">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="4acb6-302">XML 编写器不会检查是否有这种类型的冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-302">The XML writer doesn't check for this type of violation.</span></span>|<span data-ttu-id="4acb6-303">XML 编写器不会检查是否有这种类型的冲突。</span><span class="sxs-lookup"><span data-stu-id="4acb6-303">The XML writer doesn't check for this type of violation.</span></span>|  
|<span data-ttu-id="4acb6-304">`xmlns` 前缀或本地名称与 http://www.w3.org/2000/xmlns URI 不匹配。</span><span class="sxs-lookup"><span data-stu-id="4acb6-304">The `xmlns` prefix or local name isn't matched to the http://www.w3.org/2000/xmlns URI.</span></span>|<span data-ttu-id="4acb6-305">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-305"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-306">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-306"><xref:System.Xml.XmlException> is thrown.</span></span>|<span data-ttu-id="4acb6-307">引发 <xref:System.Xml.XmlException>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-307"><xref:System.Xml.XmlException> is thrown.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-308">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="4acb6-308">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNotEscapeUriAttributes">
      <MemberSignature Language="C#" Value="public bool DoNotEscapeUriAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoNotEscapeUriAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DoNotEscapeUriAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DoNotEscapeUriAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoNotEscapeUriAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.DoNotEscapeUriAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-309">获取或设置一个值，该值指示 <see cref="T:System.Xml.XmlWriter" /> 是否未转义 URI 属性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-309">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes.</span></span></summary>
        <value><span data-ttu-id="4acb6-310">如果 <see cref="T:System.Xml.XmlWriter" /> 未转义 URI 属性，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-310"><see langword="true" /> if the <see cref="T:System.Xml.XmlWriter" /> does not escape URI attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4acb6-311">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-311">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.Xml.XmlWriterSettings.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-312">获取或设置要使用的文本编码的类型。</span><span class="sxs-lookup"><span data-stu-id="4acb6-312">Gets or sets the type of text encoding to use.</span></span></summary>
        <value><span data-ttu-id="4acb6-313">要使用的文本编码。</span><span class="sxs-lookup"><span data-stu-id="4acb6-313">The text encoding to use.</span></span> <span data-ttu-id="4acb6-314">默认值为 <see langword="Encoding.UTF8" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-314">The default is <see langword="Encoding.UTF8" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-315"><xref:System.Xml.XmlWriter> 一次对字符的缓冲区进行编码，而不是按字符对字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="4acb6-315">The <xref:System.Xml.XmlWriter> encodes a buffer of characters all at once, rather than character by character.</span></span> <span data-ttu-id="4acb6-316">如果遇到任何编码错误，则调用 <xref:System.Xml.XmlWriter.Flush%2A> 方法时，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="4acb6-316">An exception is thrown when the <xref:System.Xml.XmlWriter.Flush%2A> method is called if any encoding errors are encountered.</span></span>  
  
 <span data-ttu-id="4acb6-317"><xref:System.Xml.XmlWriterSettings.Encoding%2A> 属性仅适用于通过指定 <xref:System.IO.Stream> 或指定的文件名创建的 <xref:System.Xml.XmlWriter> 实例。</span><span class="sxs-lookup"><span data-stu-id="4acb6-317">The <xref:System.Xml.XmlWriterSettings.Encoding%2A> property only applies to the <xref:System.Xml.XmlWriter> instances that are created either with the specified <xref:System.IO.Stream> or with the specified file name.</span></span> <span data-ttu-id="4acb6-318">如果使用指定的 <xref:System.IO.TextWriter>创建了 <xref:System.Xml.XmlWriter> 实例，则 <xref:System.Xml.XmlWriterSettings.Encoding%2A> 的属性将由基础 <xref:System.IO.TextWriter>的编码重写。</span><span class="sxs-lookup"><span data-stu-id="4acb6-318">If the <xref:System.Xml.XmlWriter> instance is created with the specified <xref:System.IO.TextWriter>, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is overridden by the encoding of the underlying <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="4acb6-319">例如，如果将特定 <xref:System.Xml.XmlWriter>的此属性设置为 Unicode （UTF-16），但基础编写器是其编码设置为 UTF8 的 <xref:System.IO.StreamWriter> （从 <xref:System.IO.TextWriter>派生），则输出将为 UTF-8 编码。</span><span class="sxs-lookup"><span data-stu-id="4acb6-319">For example, if this property is set to Unicode (UTF-16) for a particular <xref:System.Xml.XmlWriter>, but the underlying writer is a <xref:System.IO.StreamWriter> (which derives from <xref:System.IO.TextWriter>) with its encoding set to UTF8, the output will be UTF-8 encoded.</span></span>  
  
 <span data-ttu-id="4acb6-320">如果 <xref:System.Xml.XmlWriter> 实例是用其他输出参数创建的，则忽略 <xref:System.Xml.XmlWriterSettings.Encoding%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-320">If the <xref:System.Xml.XmlWriter> instance is created with other output parameters, the <xref:System.Xml.XmlWriterSettings.Encoding%2A> property is ignored.</span></span>  
  
 <span data-ttu-id="4acb6-321">如下示例中：</span><span class="sxs-lookup"><span data-stu-id="4acb6-321">In the following example:</span></span>  
  
-   <span data-ttu-id="4acb6-322"><xref:System.Xml.XmlWriterSettings.Encoding%2A> 的默认值为 `Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-322">The default value of <xref:System.Xml.XmlWriterSettings.Encoding%2A> is `Encoding.UTF8`.</span></span>  
  
-   <span data-ttu-id="4acb6-323"><xref:System.IO.StreamWriter> 设置为 `Encoding.Unicode`，<xref:System.IO.StreamWriter>的编码将覆盖 <xref:System.Xml.XmlWriterSettings.Encoding%2A> 设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-323">The <xref:System.IO.StreamWriter> is set to `Encoding.Unicode` and the <xref:System.IO.StreamWriter>'s encoding overrides the <xref:System.Xml.XmlWriterSettings.Encoding%2A> setting.</span></span>  
  
-   <span data-ttu-id="4acb6-324">将 `Encoding.Unicode`输出。</span><span class="sxs-lookup"><span data-stu-id="4acb6-324">The output will be `Encoding.Unicode`.</span></span>  
  
```csharp  
using (StreamWriter output =  
    new StreamWriter(new FileStream("Xml01.xml", FileMode.Create), Encoding.Unicode))  
{  
    using (XmlWriter xmlWriter =  
        XmlWriter.Create(output, new XmlWriterSettings()))  
    {  
        xmlWriter.WriteStartDocument();  
        xmlWriter.WriteStartElement("Root");  
        xmlWriter.WriteEndElement();  
        xmlWriter.WriteEndDocument();  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="4acb6-325">不要接受来自不受信任源的 <xref:System.Text.Encoding> 对象。</span><span class="sxs-lookup"><span data-stu-id="4acb6-325">Do not accept an <xref:System.Text.Encoding> object from an untrusted source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-326">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="4acb6-326">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public bool Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Indent" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Indent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : bool with get, set" Usage="System.Xml.XmlWriterSettings.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-327">获取或设置指示是否缩进元素的值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-327">Gets or sets a value indicating whether to indent elements.</span></span></summary>
        <value><span data-ttu-id="4acb6-328">如果将各元素分别写入新行并将其缩进，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-328"><see langword="true" /> to write individual elements on new lines and indent; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4acb6-329">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-329">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-330">此属性仅适用于输出文本内容 <xref:System.Xml.XmlWriter> 实例;否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-330">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="4acb6-331">只要元素不包含混合内容，就会缩进元素。</span><span class="sxs-lookup"><span data-stu-id="4acb6-331">The elements are indented as long as the element does not contain mixed content.</span></span> <span data-ttu-id="4acb6-332">调用 <xref:System.Xml.XmlWriter.WriteString%2A> 或 <xref:System.Xml.XmlWriter.WriteWhitespace%2A> 方法来写出混合元素内容后，<xref:System.Xml.XmlWriter> 将停止缩进。</span><span class="sxs-lookup"><span data-stu-id="4acb6-332">Once the <xref:System.Xml.XmlWriter.WriteString%2A> or <xref:System.Xml.XmlWriter.WriteWhitespace%2A> method is called to write out a mixed element content, the <xref:System.Xml.XmlWriter> stops indenting.</span></span> <span data-ttu-id="4acb6-333">当混合内容元素关闭之后，缩进会恢复。</span><span class="sxs-lookup"><span data-stu-id="4acb6-333">The indenting resumes once the mixed content element is closed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-334">下面的示例创建一个 <xref:System.Xml.XmlWriter> 对象，该对象使用制表符进行缩进。</span><span class="sxs-lookup"><span data-stu-id="4acb6-334">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndentChars">
      <MemberSignature Language="C#" Value="public string IndentChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IndentChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.IndentChars" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IndentChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChars : string with get, set" Usage="System.Xml.XmlWriterSettings.IndentChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-335">获取或设置缩进时要使用的字符串。</span><span class="sxs-lookup"><span data-stu-id="4acb6-335">Gets or sets the character string to use when indenting.</span></span> <span data-ttu-id="4acb6-336">在 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 属性设置为 <see langword="true" /> 时使用此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-336">This setting is used when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property is set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="4acb6-337">缩进时要使用的字符串。</span><span class="sxs-lookup"><span data-stu-id="4acb6-337">The character string to use when indenting.</span></span> <span data-ttu-id="4acb6-338">它可以设置为任何字符串值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-338">This can be set to any string value.</span></span> <span data-ttu-id="4acb6-339">但是，为了确保 XML 有效，应该只指定有效的空白字符，例如空格、制表符、回车符或换行符。</span><span class="sxs-lookup"><span data-stu-id="4acb6-339">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span></span> <span data-ttu-id="4acb6-340">默认值为两个空格。</span><span class="sxs-lookup"><span data-stu-id="4acb6-340">The default is two spaces.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-341">此属性仅适用于输出文本内容 <xref:System.Xml.XmlWriter> 实例;否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-341">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="4acb6-342">如果缩进字符将导致无效的 XML，则 <xref:System.Xml.XmlWriter> 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4acb6-342">The <xref:System.Xml.XmlWriter> throws an exception if the indent characters would result in invalid XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-343">下面的示例创建一个 <xref:System.Xml.XmlWriter> 对象，该对象使用制表符进行缩进。</span><span class="sxs-lookup"><span data-stu-id="4acb6-343">The following example creates an <xref:System.Xml.XmlWriter> object that uses the TAB character for indentation.</span></span>  
  
 [!code-csharp[XmlWriterSettings.Indent#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.Indent/CS/writeindent.cs#1)]
 [!code-vb[XmlWriterSettings.Indent#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.Indent/VB/writeindent.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4acb6-344">分配给 <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> 的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-344">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.IndentChars" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NamespaceHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NamespaceHandling NamespaceHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NamespaceHandling NamespaceHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceHandling As NamespaceHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NamespaceHandling NamespaceHandling { System::Xml::NamespaceHandling get(); void set(System::Xml::NamespaceHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceHandling : System.Xml.NamespaceHandling with get, set" Usage="System.Xml.XmlWriterSettings.NamespaceHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NamespaceHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-345">获取或设置一个值，该值指示在写入 XML 内容时 <see cref="T:System.Xml.XmlWriter" /> 是否应移除重复的命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-345">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> should remove duplicate namespace declarations when writing XML content.</span></span> <span data-ttu-id="4acb6-346">编写器的默认行为是输出编写器的命名空间解析程序中出现的所有命名空间声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-346">The default behavior is for the writer to output all namespace declarations that are present in the writer's namespace resolver.</span></span></summary>
        <value><span data-ttu-id="4acb6-347">用于指定是否在 <see cref="T:System.Xml.NamespaceHandling" /> 中移除重复的命名空间声明的 <see cref="T:System.Xml.XmlWriter" /> 枚举。</span><span class="sxs-lookup"><span data-stu-id="4acb6-347">The <see cref="T:System.Xml.NamespaceHandling" /> enumeration used to specify whether to remove duplicate namespace declarations in the <see cref="T:System.Xml.XmlWriter" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineChars">
      <MemberSignature Language="C#" Value="public string NewLineChars { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLineChars" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineChars As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLineChars { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineChars : string with get, set" Usage="System.Xml.XmlWriterSettings.NewLineChars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-348">获取或设置要用于分行符的字符串。</span><span class="sxs-lookup"><span data-stu-id="4acb6-348">Gets or sets the character string to use for line breaks.</span></span></summary>
        <value><span data-ttu-id="4acb6-349">要用于分行符的字符串。</span><span class="sxs-lookup"><span data-stu-id="4acb6-349">The character string to use for line breaks.</span></span> <span data-ttu-id="4acb6-350">它可以设置为任何字符串值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-350">This can be set to any string value.</span></span> <span data-ttu-id="4acb6-351">但是，为了确保 XML 有效，应该只指定有效的空格字符，例如空格、制表符、回车符或换行符。</span><span class="sxs-lookup"><span data-stu-id="4acb6-351">However, to ensure valid XML, you should specify only valid white space characters, such as space characters, tabs, carriage returns, or line feeds.</span></span> <span data-ttu-id="4acb6-352">默认值为<c>\r\n</c> （回车符、换行符）。</span><span class="sxs-lookup"><span data-stu-id="4acb6-352">The default is <c>\r\n</c> (carriage return, new line).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-353">此属性仅适用于输出文本内容 <xref:System.Xml.XmlWriter> 实例;否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-353">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span> <span data-ttu-id="4acb6-354">如果换行符导致无效的 XML，则 <xref:System.Xml.XmlWriter> 会引发异常。</span><span class="sxs-lookup"><span data-stu-id="4acb6-354">The <xref:System.Xml.XmlWriter> throws an exception if the line break characters would result in invalid XML.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4acb6-355">分配给 <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> 的值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-355">The value assigned to the <see cref="P:System.Xml.XmlWriterSettings.NewLineChars" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewLineHandling">
      <MemberSignature Language="C#" Value="public System.Xml.NewLineHandling NewLineHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.NewLineHandling NewLineHandling" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineHandling As NewLineHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::NewLineHandling NewLineHandling { System::Xml::NewLineHandling get(); void set(System::Xml::NewLineHandling value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineHandling : System.Xml.NewLineHandling with get, set" Usage="System.Xml.XmlWriterSettings.NewLineHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.NewLineHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-356">获取或设置一个值，该值指示是否将输出中的分行符正常化。</span><span class="sxs-lookup"><span data-stu-id="4acb6-356">Gets or sets a value indicating whether to normalize line breaks in the output.</span></span></summary>
        <value><span data-ttu-id="4acb6-357"><see cref="T:System.Xml.NewLineHandling" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="4acb6-357">One of the <see cref="T:System.Xml.NewLineHandling" /> values.</span></span> <span data-ttu-id="4acb6-358">默认值为 <see cref="F:System.Xml.NewLineHandling.Replace" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-358">The default is <see cref="F:System.Xml.NewLineHandling.Replace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-359">写入文本内容或属性值时，将应用此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-359">This setting applies when writing text content or attribute values.</span></span> <span data-ttu-id="4acb6-360">下面介绍了每个 <xref:System.Xml.NewLineHandling> 值：</span><span class="sxs-lookup"><span data-stu-id="4acb6-360">Each of the <xref:System.Xml.NewLineHandling> values is described below:</span></span>  
  
-   <span data-ttu-id="4acb6-361"><xref:System.Xml.NewLineHandling.Entitize> 设置通知 <xref:System.Xml.XmlWriter> 替换新行字符，这些字符不会由包含字符实体的正常化 <xref:System.Xml.XmlReader> 保留。</span><span class="sxs-lookup"><span data-stu-id="4acb6-361">The <xref:System.Xml.NewLineHandling.Entitize> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters that would not be otherwise preserved by a normalizing <xref:System.Xml.XmlReader> with character entities.</span></span> <span data-ttu-id="4acb6-362">这在使用规范化 <xref:System.Xml.XmlReader>读取输出的往返过程中非常有用。</span><span class="sxs-lookup"><span data-stu-id="4acb6-362">This is useful in round-trip scenarios where the output is read by a normalizing <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="4acb6-363">其他规范化规则适用于自 `\t`后往返时的属性值，在 <xref:System.Xml.XmlReader>中规范化时，`\n` 和 `\r` 替换为属性值中的空格。</span><span class="sxs-lookup"><span data-stu-id="4acb6-363">Additional normalization rules apply for attribute values when round tripping since `\t`, `\n` and `\r` are replaced with a space in attribute values when normalized in an <xref:System.Xml.XmlReader>.</span></span>  
  
-   <span data-ttu-id="4acb6-364"><xref:System.Xml.NewLineHandling.Replace> 设置通知 <xref:System.Xml.XmlWriter> 使用 `\r\n`（这是 Microsoft Windows 操作系统使用的新线路格式）替换新的行字符。</span><span class="sxs-lookup"><span data-stu-id="4acb6-364">The <xref:System.Xml.NewLineHandling.Replace> setting tells the <xref:System.Xml.XmlWriter> to replace new line characters with `\r\n`, which is the new line format used by the Microsoft Windows operating system.</span></span> <span data-ttu-id="4acb6-365">这有助于确保记事本或 Microsoft Word 应用程序可以正确地显示文件。</span><span class="sxs-lookup"><span data-stu-id="4acb6-365">This helps to ensure that the file can be correctly displayed by the Notepad or Microsoft Word applications.</span></span> <span data-ttu-id="4acb6-366">此设置还将属性中的新行替换为字符实体，以保留字符。</span><span class="sxs-lookup"><span data-stu-id="4acb6-366">This setting also replaces new lines in attributes with character entities to preserve the characters.</span></span> <span data-ttu-id="4acb6-367">这是默认值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-367">This is the default value.</span></span>  
  
-   <span data-ttu-id="4acb6-368"><xref:System.Xml.NewLineHandling.None> 设置通知 <xref:System.Xml.XmlWriter> 不更改输入。</span><span class="sxs-lookup"><span data-stu-id="4acb6-368">The <xref:System.Xml.NewLineHandling.None> setting tells the <xref:System.Xml.XmlWriter> to leave the input unchanged.</span></span> <span data-ttu-id="4acb6-369">如果不想进行任何新行处理，则使用此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-369">This setting is used when you do not want any new-line processing.</span></span> <span data-ttu-id="4acb6-370">当输出由不执行任何规范化的 <xref:System.Xml.XmlReader> 读取时（例如，使用默认设置的 <xref:System.Xml.XmlTextReader>），这非常有用。</span><span class="sxs-lookup"><span data-stu-id="4acb6-370">This is useful when the output is read by an <xref:System.Xml.XmlReader> that does not do any normalization (for example, an <xref:System.Xml.XmlTextReader> with default settings.)</span></span>  
  
 <span data-ttu-id="4acb6-371">下表显示了随输入值提供的 <xref:System.Xml.XmlWriter.WriteString%2A> 方法的输出，具体取决于 <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> 属性设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-371">The following tables show the output of the <xref:System.Xml.XmlWriter.WriteString%2A> method when supplied with the input value depending on the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property setting.</span></span> <span data-ttu-id="4acb6-372">这些表显示了写入文本内容时以及写入特性值时的输出。</span><span class="sxs-lookup"><span data-stu-id="4acb6-372">The tables show the output when writing text content and also when writing an attribute value.</span></span>  
  
 `Text Node Value:`  
  
||<span data-ttu-id="4acb6-373">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-373">\r\n</span></span>|<span data-ttu-id="4acb6-374">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-374">\n</span></span>|<span data-ttu-id="4acb6-375">\r</span><span class="sxs-lookup"><span data-stu-id="4acb6-375">\r</span></span>|<span data-ttu-id="4acb6-376">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-376">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="4acb6-377">对</span><span class="sxs-lookup"><span data-stu-id="4acb6-377">Entitize</span></span>|<span data-ttu-id="4acb6-378">& #D; \n</span><span class="sxs-lookup"><span data-stu-id="4acb6-378">&#D;\n</span></span>|<span data-ttu-id="4acb6-379">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-379">\n</span></span>|<span data-ttu-id="4acb6-380">&#D;</span><span class="sxs-lookup"><span data-stu-id="4acb6-380">&#D;</span></span>|<span data-ttu-id="4acb6-381">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-381">\t</span></span>|  
|<span data-ttu-id="4acb6-382">替换</span><span class="sxs-lookup"><span data-stu-id="4acb6-382">Replace</span></span>|<span data-ttu-id="4acb6-383">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-383">\r\n</span></span>|<span data-ttu-id="4acb6-384">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-384">\r\n</span></span>|<span data-ttu-id="4acb6-385">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-385">\r\n</span></span>|<span data-ttu-id="4acb6-386">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-386">\t</span></span>|  
|<span data-ttu-id="4acb6-387">None</span><span class="sxs-lookup"><span data-stu-id="4acb6-387">None</span></span>|<span data-ttu-id="4acb6-388">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-388">\r\n</span></span>|<span data-ttu-id="4acb6-389">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-389">\n</span></span>|<span data-ttu-id="4acb6-390">\r</span><span class="sxs-lookup"><span data-stu-id="4acb6-390">\r</span></span>|<span data-ttu-id="4acb6-391">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-391">\t</span></span>|  
  
 `Attribute Value:`  
  
||<span data-ttu-id="4acb6-392">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-392">\r\n</span></span>|<span data-ttu-id="4acb6-393">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-393">\n</span></span>|<span data-ttu-id="4acb6-394">\r</span><span class="sxs-lookup"><span data-stu-id="4acb6-394">\r</span></span>|<span data-ttu-id="4acb6-395">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-395">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="4acb6-396">对</span><span class="sxs-lookup"><span data-stu-id="4acb6-396">Entitize</span></span>|<span data-ttu-id="4acb6-397">& #D; & #A;</span><span class="sxs-lookup"><span data-stu-id="4acb6-397">&#D;&#A;</span></span>|<span data-ttu-id="4acb6-398">& #A;</span><span class="sxs-lookup"><span data-stu-id="4acb6-398">&#A;</span></span>|<span data-ttu-id="4acb6-399">&#D;</span><span class="sxs-lookup"><span data-stu-id="4acb6-399">&#D;</span></span>|<span data-ttu-id="4acb6-400">&\#9;</span><span class="sxs-lookup"><span data-stu-id="4acb6-400">&\#9;</span></span>|  
|<span data-ttu-id="4acb6-401">替换</span><span class="sxs-lookup"><span data-stu-id="4acb6-401">Replace</span></span>|<span data-ttu-id="4acb6-402">& #D; & #A;</span><span class="sxs-lookup"><span data-stu-id="4acb6-402">&#D;&#A;</span></span>|<span data-ttu-id="4acb6-403">& #A;</span><span class="sxs-lookup"><span data-stu-id="4acb6-403">&#A;</span></span>|<span data-ttu-id="4acb6-404">&#D;</span><span class="sxs-lookup"><span data-stu-id="4acb6-404">&#D;</span></span>|<span data-ttu-id="4acb6-405">&\#9;</span><span class="sxs-lookup"><span data-stu-id="4acb6-405">&\#9;</span></span>|  
|<span data-ttu-id="4acb6-406">None</span><span class="sxs-lookup"><span data-stu-id="4acb6-406">None</span></span>|<span data-ttu-id="4acb6-407">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-407">\r\n</span></span>|<span data-ttu-id="4acb6-408">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-408">\n</span></span>|<span data-ttu-id="4acb6-409">\r</span><span class="sxs-lookup"><span data-stu-id="4acb6-409">\r</span></span>|<span data-ttu-id="4acb6-410">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-410">\t</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="4acb6-411">在 CDATA 节、注释或处理指令中写入内容时，<xref:System.Xml.XmlWriter> 具有以下行为。</span><span class="sxs-lookup"><span data-stu-id="4acb6-411">The <xref:System.Xml.XmlWriter> has the following behavior when writing content within a CDATA section, comment, or processing instruction.</span></span> <span data-ttu-id="4acb6-412">即使 <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> 属性设置为 <xref:System.Xml.NewLineHandling.Entitize>，也永远不会将新行替换为它们的字符实体。</span><span class="sxs-lookup"><span data-stu-id="4acb6-412">New lines are never replaced with their character entities, even when the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.Entitize>.</span></span> <span data-ttu-id="4acb6-413">这是因为，在 CDATA 节、注释或处理指令中不能识别字符实体。</span><span class="sxs-lookup"><span data-stu-id="4acb6-413">This is because character entities are not recognized in CDATA sections, comments or processing instructions.</span></span> <span data-ttu-id="4acb6-414">如果 <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> 属性设置为 <xref:System.Xml.NewLineHandling.None> 或 <xref:System.Xml.NewLineHandling.Replace>，则行为与写入文本节点值时的行为相同。</span><span class="sxs-lookup"><span data-stu-id="4acb6-414">If the <xref:System.Xml.XmlWriterSettings.NewLineHandling%2A> property is set to <xref:System.Xml.NewLineHandling.None> or <xref:System.Xml.NewLineHandling.Replace>, the behavior is the same as when writing a text node value.</span></span>  
  
 <span data-ttu-id="4acb6-415">下表描述了规范化 <xref:System.Xml.XmlReader> 为每个空白输入返回的内容。</span><span class="sxs-lookup"><span data-stu-id="4acb6-415">The following table describes what a normalizing <xref:System.Xml.XmlReader> returns for each white space input.</span></span> <span data-ttu-id="4acb6-416">有关详细信息，请参阅 W3C [XML 1.0 建议](https://www.w3.org/TR/REC-xml/)的2.11 和3.3.3 节。</span><span class="sxs-lookup"><span data-stu-id="4acb6-416">For more information, see sections 2.11 and 3.3.3 of the W3C [XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml/).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4acb6-417">规范化读取器是 <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> 方法创建的任何 <xref:System.Xml.XmlReader> 对象。</span><span class="sxs-lookup"><span data-stu-id="4acb6-417">A normalizing reader is any <xref:System.Xml.XmlReader> object created by the <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="4acb6-418">这些对象始终执行换行符规范化和属性的完全规范化。</span><span class="sxs-lookup"><span data-stu-id="4acb6-418">These objects always perform line break normalization and full normalization of attributes.</span></span> <span data-ttu-id="4acb6-419">如果 <xref:System.Xml.XmlTextReader.Normalization%2A> 属性设置为 `true`，则 <xref:System.Xml.XmlTextReader> 对象也可以是规范化读取器。</span><span class="sxs-lookup"><span data-stu-id="4acb6-419">The <xref:System.Xml.XmlTextReader> object can also be a normalizing reader if it's <xref:System.Xml.XmlTextReader.Normalization%2A> property is set to `true`.</span></span>  
  
||<span data-ttu-id="4acb6-420">\r\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-420">\r\n</span></span>|<span data-ttu-id="4acb6-421">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-421">\n</span></span>|<span data-ttu-id="4acb6-422">\r</span><span class="sxs-lookup"><span data-stu-id="4acb6-422">\r</span></span>|<span data-ttu-id="4acb6-423">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-423">\t</span></span>|  
|-|------------|---------|---------|---------|  
|<span data-ttu-id="4acb6-424">文本节点值</span><span class="sxs-lookup"><span data-stu-id="4acb6-424">Text Node Value</span></span>|<span data-ttu-id="4acb6-425">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-425">\n</span></span>|<span data-ttu-id="4acb6-426">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-426">\n</span></span>|<span data-ttu-id="4acb6-427">\n</span><span class="sxs-lookup"><span data-stu-id="4acb6-427">\n</span></span>|<span data-ttu-id="4acb6-428">\t</span><span class="sxs-lookup"><span data-stu-id="4acb6-428">\t</span></span>|  
|<span data-ttu-id="4acb6-429">特性值</span><span class="sxs-lookup"><span data-stu-id="4acb6-429">Attribute Value</span></span>|<span data-ttu-id="4acb6-430">单个空格</span><span class="sxs-lookup"><span data-stu-id="4acb6-430">single space</span></span>|<span data-ttu-id="4acb6-431">单个空格</span><span class="sxs-lookup"><span data-stu-id="4acb6-431">single space</span></span>|<span data-ttu-id="4acb6-432">单个空格</span><span class="sxs-lookup"><span data-stu-id="4acb6-432">single space</span></span>|<span data-ttu-id="4acb6-433">单个空格</span><span class="sxs-lookup"><span data-stu-id="4acb6-433">single space</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewLineOnAttributes">
      <MemberSignature Language="C#" Value="public bool NewLineOnAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewLineOnAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLineOnAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewLineOnAttributes { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NewLineOnAttributes : bool with get, set" Usage="System.Xml.XmlWriterSettings.NewLineOnAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-434">获取或设置一个值，该值指示是否在新行上写入属性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-434">Gets or sets a value indicating whether to write attributes on a new line.</span></span></summary>
        <value><span data-ttu-id="4acb6-435">如果将特性写入单独的行，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-435"><see langword="true" /> to write attributes on individual lines; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4acb6-436">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-436">The default is <see langword="false" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="4acb6-437">如果 <see cref="P:System.Xml.XmlWriterSettings.Indent" /> 属性值为 <see langword="false" />，则此设置无效。</span><span class="sxs-lookup"><span data-stu-id="4acb6-437">This setting has no effect when the <see cref="P:System.Xml.XmlWriterSettings.Indent" /> property value is <see langword="false" />.</span></span>  
  
</para></block>  
  
 <span data-ttu-id="4acb6-438">如果 <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> 设置为 <see langword="true" />，则每个属性都会写入到一个新行并应用一个额外的缩进级别。</span><span class="sxs-lookup"><span data-stu-id="4acb6-438">When <see cref="P:System.Xml.XmlWriterSettings.NewLineOnAttributes" /> is set to <see langword="true" />, each attribute is pre-pended with a new line and one extra level of indentation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-439">此属性仅适用于输出文本内容 <xref:System.Xml.XmlWriter> 实例;否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-439">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-440">下面的示例创建一个写入 XML 文件的 <xref:System.Xml.XmlWriter>，并在新行上写入每个属性。</span><span class="sxs-lookup"><span data-stu-id="4acb6-440">The following example creates an <xref:System.Xml.XmlWriter> that writes to an XML file and writes each attribute on a new line.</span></span>  
  
 [!code-csharp[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/CS/writenewlineattrs.cs#1)]
 [!code-vb[XmlWriterSettings.NewLineOnAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.NewLineOnAttributes/VB/writenewlineattrs.vb#1)]  
  
 <span data-ttu-id="4acb6-441">该示例生成以下输出：</span><span class="sxs-lookup"><span data-stu-id="4acb6-441">The sample produces the following output:</span></span>  
  
```xml  
<order  
  orderID="367A54"  
  date="2001-05-03">  
  <price>19.95</price>  
</order>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OmitXmlDeclaration">
      <MemberSignature Language="C#" Value="public bool OmitXmlDeclaration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OmitXmlDeclaration" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Property OmitXmlDeclaration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OmitXmlDeclaration { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OmitXmlDeclaration : bool with get, set" Usage="System.Xml.XmlWriterSettings.OmitXmlDeclaration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-442">获取或设置一个值，该值指示是否省略 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-442">Gets or sets a value indicating whether to omit an XML declaration.</span></span></summary>
        <value><span data-ttu-id="4acb6-443">如果省略 XML 声明，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-443"><see langword="true" /> to omit the XML declaration; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4acb6-444">默认值为 <see langword="false" />，即编写 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-444">The default is <see langword="false" />, an XML declaration is written.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-445">此属性仅适用于输出文本内容 <xref:System.Xml.XmlWriter> 实例;否则，将忽略此设置。</span><span class="sxs-lookup"><span data-stu-id="4acb6-445">This property only applies to <xref:System.Xml.XmlWriter> instances that output text content; otherwise, this setting is ignored.</span></span>  
  
 <span data-ttu-id="4acb6-446">如果 <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> 设置为 `false`，则将自动写入 XML 声明</span><span class="sxs-lookup"><span data-stu-id="4acb6-446">If <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `false`, The XML declaration is written automatically</span></span>  
  
 <span data-ttu-id="4acb6-447">即使将 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> 设置为 <xref:System.Xml.ConformanceLevel.Document>（即使 <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> 设置为 `true`），也始终编写 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-447">The XML declaration is always written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Document>, even if <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="4acb6-448">如果 <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> 设置为 <xref:System.Xml.ConformanceLevel.Fragment>，则绝不会编写 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-448">The XML declaration is never written if <xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A> is set to <xref:System.Xml.ConformanceLevel.Fragment>.</span></span> <span data-ttu-id="4acb6-449">可以调用 <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> 来显式写出 XML 声明。</span><span class="sxs-lookup"><span data-stu-id="4acb6-449">You can call <xref:System.Xml.XmlWriter.WriteProcessingInstruction%2A> to explicitly write out an XML declaration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4acb6-450">下面的示例将 XML 片段写入内存流。</span><span class="sxs-lookup"><span data-stu-id="4acb6-450">The following example writes an XML fragment to a memory stream.</span></span>  
  
 [!code-csharp[XmlWriterSettings.CloseOutput#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriterSettings.CloseOutput/CS/writestream2.cs#1)]
 [!code-vb[XmlWriterSettings.CloseOutput#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriterSettings.CloseOutput/VB/writestream2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputMethod">
      <MemberSignature Language="C#" Value="public System.Xml.XmlOutputMethod OutputMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlOutputMethod OutputMethod" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputMethod As XmlOutputMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlOutputMethod OutputMethod { System::Xml::XmlOutputMethod get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputMethod : System.Xml.XmlOutputMethod" Usage="System.Xml.XmlWriterSettings.OutputMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlOutputMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-451">获取用于串行化 <see cref="T:System.Xml.XmlWriter" /> 输出的方法。</span><span class="sxs-lookup"><span data-stu-id="4acb6-451">Gets the method used to serialize the <see cref="T:System.Xml.XmlWriter" /> output.</span></span></summary>
        <value><span data-ttu-id="4acb6-452"><see cref="T:System.Xml.XmlOutputMethod" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="4acb6-452">One of the <see cref="T:System.Xml.XmlOutputMethod" /> values.</span></span> <span data-ttu-id="4acb6-453">默认值为 <see cref="F:System.Xml.XmlOutputMethod.Xml" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-453">The default is <see cref="F:System.Xml.XmlOutputMethod.Xml" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-454">此属性指定用于序列化输出的方法。</span><span class="sxs-lookup"><span data-stu-id="4acb6-454">This property specifies the method used to serialize the output.</span></span> <span data-ttu-id="4acb6-455">可以使用 HTML 规则、XML 1.0 规则等对输出进行序列化。</span><span class="sxs-lookup"><span data-stu-id="4acb6-455">The output can be serialized using the HTML rules, the XML 1.0 rules, and so on.</span></span> <span data-ttu-id="4acb6-456">此设置由 XSLT 处理器设置，由 Visual Studio 在内部使用。</span><span class="sxs-lookup"><span data-stu-id="4acb6-456">This setting is set by the XSLT processor and is used internally by Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlWriterSettings.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="xmlWriterSettings.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4acb6-457">将设置类的成员重置为各自的默认值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-457">Resets the members of the settings class to their default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-458">下表显示 <xref:System.Xml.XmlWriterSettings>实例的默认属性值。</span><span class="sxs-lookup"><span data-stu-id="4acb6-458">The following table shows the default property values for an instance of <xref:System.Xml.XmlWriterSettings>.</span></span>  
  
|<span data-ttu-id="4acb6-459">Property</span><span class="sxs-lookup"><span data-stu-id="4acb6-459">Property</span></span>|<span data-ttu-id="4acb6-460">初始值</span><span class="sxs-lookup"><span data-stu-id="4acb6-460">Initial value</span></span>|  
|--------------|-------------------|  
|<xref:System.Xml.XmlWriterSettings.Async%2A>|<span data-ttu-id="4acb6-461">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-461">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CheckCharacters%2A>|<span data-ttu-id="4acb6-462">`true`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-462">`true`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.CloseOutput%2A>|<span data-ttu-id="4acb6-463">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-463">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.ConformanceLevel%2A>|<span data-ttu-id="4acb6-464"><xref:System.Xml.ConformanceLevel.Document>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-464"><xref:System.Xml.ConformanceLevel.Document>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Encoding%2A>|<span data-ttu-id="4acb6-465">`Encoding.UTF8`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-465">`Encoding.UTF8`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.Indent%2A>|<span data-ttu-id="4acb6-466">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-466">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.IndentChars%2A>|<span data-ttu-id="4acb6-467">两个空格。</span><span class="sxs-lookup"><span data-stu-id="4acb6-467">Two spaces.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineChars%2A>|<span data-ttu-id="4acb6-468">`\r\n`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-468">`\r\n`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineHandling%2A>|<span data-ttu-id="4acb6-469"><xref:System.Xml.NewLineHandling.Replace>。</span><span class="sxs-lookup"><span data-stu-id="4acb6-469"><xref:System.Xml.NewLineHandling.Replace>.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.NewLineOnAttributes%2A>|<span data-ttu-id="4acb6-470">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-470">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A>|<span data-ttu-id="4acb6-471">`false`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-471">`false`.</span></span>|  
|<xref:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose%2A>|<span data-ttu-id="4acb6-472">`true`。</span><span class="sxs-lookup"><span data-stu-id="4acb6-472">`true`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocumentOnClose">
      <MemberSignature Language="C#" Value="public bool WriteEndDocumentOnClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteEndDocumentOnClose" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteEndDocumentOnClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteEndDocumentOnClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.WriteEndDocumentOnClose : bool with get, set" Usage="System.Xml.XmlWriterSettings.WriteEndDocumentOnClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4acb6-473">获取或设置一个值，该值指示在调用 <see cref="M:System.Xml.XmlWriter.Close" /> 方法时 <see cref="T:System.Xml.XmlWriter" /> 是否会向所有未关闭的元素标记添加结束标记。</span><span class="sxs-lookup"><span data-stu-id="4acb6-473">Gets or sets a value that indicates whether the <see cref="T:System.Xml.XmlWriter" /> will add closing tags to all unclosed element tags when the <see cref="M:System.Xml.XmlWriter.Close" /> method is called.</span></span></summary>
        <value><span data-ttu-id="4acb6-474">如果将抛售所有未关闭元素标记，则为 <see langword="true" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-474"><see langword="true" /> if all unclosed element tags will be closed out; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4acb6-475">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="4acb6-475">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4acb6-476">如果将此标志设置为 `false`，则输出 XML 文件的格式可能不正确。</span><span class="sxs-lookup"><span data-stu-id="4acb6-476">If you set this flag to `false`, the output XML file may not be well-formed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
