<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fb2e66ef625e203237f890d5759c43585abebf8" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75174346" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1eebb-101">使用可扩展样式表转换语言 (XSLT) 转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-102"><xref:System.Xml.Xsl.XslTransform> 类在 Microsoft .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-103"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-104">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-105"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-106">XSLT 样式表必须使用命名空间 `http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-107">还可以使用 <xref:System.Xml.Xsl.XsltArgumentList> 类将其他参数添加到样式表中。</span><span class="sxs-lookup"><span data-stu-id="1eebb-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="1eebb-108">此类包含可从样式表中调用的样式表和扩展对象的输入参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="1eebb-109">转换 XML 数据：</span><span class="sxs-lookup"><span data-stu-id="1eebb-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="1eebb-110">创建 <xref:System.Xml.Xsl.XslTransform> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="1eebb-111">使用 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法加载转换的样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="1eebb-112">此方法具有多个重载，并且可以使用 <xref:System.Xml.XmlReader>、<xref:System.Xml.XPath.XPathNavigator>、<xref:System.Xml.XPath.IXPathNavigable>或包含文件位置的 URL 加载样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="1eebb-113">使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法来转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="1eebb-114">此方法具有多个重载，并且可以处理不同类型的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="1eebb-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="1eebb-115">您还可以指定一个 <xref:System.Xml.Xsl.XsltArgumentList>，其中包含要在转换过程中用作输入的其他参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="1eebb-116">**安全注意事项**</span><span class="sxs-lookup"><span data-stu-id="1eebb-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="1eebb-117">在创建使用 <xref:System.Xml.Xsl.XslTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="1eebb-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="1eebb-118">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="1eebb-119">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="1eebb-120">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="1eebb-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="1eebb-121">恶意用户可以通过向您提供数据或样式表来利用此方法，在执行该操作时，将导致系统在计算机资源不足的情况下进行处理。</span><span class="sxs-lookup"><span data-stu-id="1eebb-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="1eebb-122">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="1eebb-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="1eebb-123">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="1eebb-124">不接受来自不受信任源的 <xref:System.Xml.Xsl.XslTransform> 对象、XSLT 样式表或 XML 源数据，可以减轻这些安全问题。</span><span class="sxs-lookup"><span data-stu-id="1eebb-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="1eebb-125">**脚本支持**</span><span class="sxs-lookup"><span data-stu-id="1eebb-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="1eebb-126">此类使用 `msxsl:script` 元素支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="1eebb-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="1eebb-127">在 .NET Framework 版本1.1 中，样式表的证据确定授予嵌入脚本的权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="1eebb-128">如果样式表是从统一资源标识符（URI）加载的，则使用 URI 创建证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="1eebb-129">此证据包含 URI 及其站点和区域。</span><span class="sxs-lookup"><span data-stu-id="1eebb-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="1eebb-130">如果使用其他源加载了样式表，则可以通过将 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 对象传递到 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法来提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="1eebb-131">否则，脚本程序集会完全信任。</span><span class="sxs-lookup"><span data-stu-id="1eebb-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="1eebb-132">不完全受信任的调用方：编译嵌入式脚本需要 `UnmanagedCode` 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="1eebb-133">需要 `ControlEvidence` 权限才能提供 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法的 <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="1eebb-134">如果调用方不具有所需的权限，则会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="1eebb-135">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>和<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="1eebb-136">`msxsl:script` 元素具有以下要求：</span><span class="sxs-lookup"><span data-stu-id="1eebb-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="1eebb-137">`msxsl:script` 元素属于 `urn:schemas-microsoft-com:xslt` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="1eebb-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="1eebb-138">样式表必须包括命名空间声明 `xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="1eebb-139">`msxsl:script` 元素可以包含指定要使用的脚本语言的 `language` 属性。</span><span class="sxs-lookup"><span data-stu-id="1eebb-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="1eebb-140">`language` 特性的值必须是下列值之一： C#、CSHARP、VB、操作、JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="1eebb-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="1eebb-141">由于语言名称不区分大小写，因此 JavaScript 和 javascript 都是有效的。</span><span class="sxs-lookup"><span data-stu-id="1eebb-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="1eebb-142">如果未指定 `language` 属性，则默认为 JScript。</span><span class="sxs-lookup"><span data-stu-id="1eebb-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="1eebb-143">`msxsl:script` 元素必须包含一个 `implements-prefix` 属性，该属性包含表示与脚本块关联的命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="1eebb-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="1eebb-144">此命名空间必须在样式表中定义。</span><span class="sxs-lookup"><span data-stu-id="1eebb-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="1eebb-145">样式表可以包含多个按命名空间分组的脚本块。</span><span class="sxs-lookup"><span data-stu-id="1eebb-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="1eebb-146">同一命名空间中不能有多个语言的脚本块。</span><span class="sxs-lookup"><span data-stu-id="1eebb-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="1eebb-147">脚本块可以调用另一个脚本块中定义的函数，前提是脚本块驻留在同一命名空间中。</span><span class="sxs-lookup"><span data-stu-id="1eebb-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="1eebb-148">脚本块的内容根据脚本语言的规则和语法（由 `language` 属性提供）进行分析。</span><span class="sxs-lookup"><span data-stu-id="1eebb-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="1eebb-149">例如，如果您有一个C#脚本块，注释将以 `//` 字符作为前缀。</span><span class="sxs-lookup"><span data-stu-id="1eebb-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="1eebb-150">注释必须为有效的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="1eebb-150">The comments must be valid XML content.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="1eebb-151">建议你将脚本块包装在 CDATA 节中。</span><span class="sxs-lookup"><span data-stu-id="1eebb-151">It is recommended that you wrap script blocks in a CDATA section.</span></span>
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 <span data-ttu-id="1eebb-152">函数可以在 `msxsl:script` 元素内声明。</span><span class="sxs-lookup"><span data-stu-id="1eebb-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="1eebb-153">下表显示了默认情况下支持的命名空间。</span><span class="sxs-lookup"><span data-stu-id="1eebb-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="1eebb-154">支持的命名空间</span><span class="sxs-lookup"><span data-stu-id="1eebb-154">Supported Namespaces</span></span>|<span data-ttu-id="1eebb-155">说明</span><span class="sxs-lookup"><span data-stu-id="1eebb-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="1eebb-156">系统类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="1eebb-157">集合类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="1eebb-158">文本处理类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="1eebb-159">核心 XML 类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="1eebb-160">XSLT 类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="1eebb-161">XML 路径语言 (XPath) 类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="1eebb-162">脚本函数定义的所提供的参数和返回值必须是下列万维网联合会（W3C）类型之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="1eebb-163">下表详细说明了 W3C 类型（XPath 或 XSLT）与相应 .NET Framework 类之间的映射。</span><span class="sxs-lookup"><span data-stu-id="1eebb-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="1eebb-164">W3C 类型</span><span class="sxs-lookup"><span data-stu-id="1eebb-164">W3C Type</span></span>|<span data-ttu-id="1eebb-165">等效的 .NET 类</span><span class="sxs-lookup"><span data-stu-id="1eebb-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="1eebb-166">String （XPath）</span><span class="sxs-lookup"><span data-stu-id="1eebb-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="1eebb-167">布尔（XPath）</span><span class="sxs-lookup"><span data-stu-id="1eebb-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="1eebb-168">Number （XPath）</span><span class="sxs-lookup"><span data-stu-id="1eebb-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="1eebb-169">结果树片段（XSLT）</span><span class="sxs-lookup"><span data-stu-id="1eebb-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="1eebb-170">节点集（XPath）</span><span class="sxs-lookup"><span data-stu-id="1eebb-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="1eebb-171">如果脚本函数使用下列数值类型之一： Int16、UInt16、Int32、UInt32、Int64、UInt64、Single 或 Decimal，则会将这些类型强制转换为双精度类型的双精度值。</span><span class="sxs-lookup"><span data-stu-id="1eebb-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="1eebb-172">如果调用的函数无法将参数结果转换为所需的类型之一，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="1eebb-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-173">`msxsl:script` 和 `msxsl:node-list` 是 <xref:System.Xml.Xsl.XslTransform> 类支持的 `urn:schemas-microsoft-com:xslt` 命名空间中唯一的函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="1eebb-174"><xref:System.Xml.Xsl.XslTransform> 可以使用公共语言运行时（CLR）代码作为扩展机制。</span><span class="sxs-lookup"><span data-stu-id="1eebb-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="1eebb-175">这是通过将类的实例传递给 <xref:System.Xml.Xsl.XslTransform> 类并在 XSLT 样式表中调用其公共方法来完成的。</span><span class="sxs-lookup"><span data-stu-id="1eebb-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="1eebb-176">使用 `params` 关键字定义的方法允许传递未指定数量的参数，这种情况下不能正常工作。</span><span class="sxs-lookup"><span data-stu-id="1eebb-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="1eebb-177">有关更多详细信息，请参阅[params](~/docs/csharp/language-reference/keywords/params.md) 。</span><span class="sxs-lookup"><span data-stu-id="1eebb-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="1eebb-178">有关详细信息，请参阅[具有 XslTransform 类的 XSLT 转换](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-179">下面的示例将转换指定的 XML 文档，并将结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="1eebb-180"><see cref="T:System.Xml.Xsl.XslTransform" /> 对象仅对转换操作而言是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="1eebb-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="1eebb-181">其他操作不一定是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="1eebb-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="1eebb-182">您必须确保在加载操作期间没有为对象调用任何其他方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1eebb-183">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1eebb-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1eebb-184">加载 XSLT 样式表，包括在 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 元素中引用的样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-185"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-186"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-187">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1eebb-188">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="1eebb-189">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-190"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-191"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-192">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-193"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-194">XSLT 样式表必须包括命名空间声明 `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="1eebb-195">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="1eebb-196">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="1eebb-197">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="1eebb-198">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-199">样式表的 URI 用于创建将应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-200">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-201">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-202">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-202">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="1eebb-203">它显示表中每本书的 ISBN、标题和价格。</span><span class="sxs-lookup"><span data-stu-id="1eebb-203">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="1eebb-204">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="1eebb-204">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-205">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-205">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-206">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-206">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-207">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-207">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="1eebb-208">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-209"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-210"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-211">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-212"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-213">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-214">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="1eebb-215">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="1eebb-216">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="1eebb-217">样式表从 <xref:System.Xml.XmlReader> 的当前节点到其所有子项加载。</span><span class="sxs-lookup"><span data-stu-id="1eebb-217">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="1eebb-218">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-218">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="1eebb-219"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-219">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="1eebb-220">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-220">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="1eebb-221">如果样式表包含实体，则应指定可解析实体的 <xref:System.Xml.XmlReader> （<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-221">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="1eebb-222">在这种情况下，可以使用 <xref:System.Xml.XmlValidatingReader>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-222">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="1eebb-223">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-223">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-224">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="1eebb-224">The assembly has full trust.</span></span> <span data-ttu-id="1eebb-225">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-225">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-226">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-226">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-227">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-227">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-228">下面的示例将转换按标题对所有书籍进行排序的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="1eebb-228">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="1eebb-229">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="1eebb-229">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-230">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="1eebb-230">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-231">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-231">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-232">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-232">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-233">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-233">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="1eebb-234">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-234">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-235"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-235">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-236"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-236">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-237">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-237">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-238"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-238"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-239">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-239">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-240">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-240">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="1eebb-241">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-241">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="1eebb-242">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-242">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="1eebb-243">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-243">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-244">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="1eebb-244">The assembly has full trust.</span></span> <span data-ttu-id="1eebb-245">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-245">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-246">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-246">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-247">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-247">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-248">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-248">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-249">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-249">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-250">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-250">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="1eebb-251">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-251">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-252"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-253"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-254">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-255"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-256">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-257">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-257">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="1eebb-258">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-258">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="1eebb-259">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-259">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="1eebb-260">将从 <xref:System.Xml.XPath.XPathNavigator>的当前位置加载样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-260">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="1eebb-261">若要仅使用已加载文档的一部分作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-261">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="1eebb-262"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XPath.XPathNavigator> 位于样式表的开头（在 `xsl:style sheet` 节点上）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-262">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="1eebb-263">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-263">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-264">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="1eebb-264">The assembly has full trust.</span></span> <span data-ttu-id="1eebb-265">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-265">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-266">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-266">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-267">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-267">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-268">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="1eebb-268">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-269">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-269">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1eebb-270">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-270">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-271"><see cref="T:System.Xml.XmlResolver" /> 用于加载该样式表以及 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-271">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="1eebb-272">如果这是 <see langword="null" />，将使用不具有用户凭据的默认 <see cref="T:System.Xml.XmlUrlResolver" /> 来打开样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-272">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="1eebb-273">不使用默认的 <see cref="T:System.Xml.XmlUrlResolver" /> 来解析样式表中的任何外部资源，因此将不解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-273">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="1eebb-274">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-274">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-275">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-275">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-276"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-276">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-277"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-277">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-278">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-278">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-279"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-279"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-280">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-280">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-281">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-281">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-282">样式表的 URI 用于创建将应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-282">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-283">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-284">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-285">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-285">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="1eebb-286">该示例将加载一个包含引用另一个样式表的 `xsl:include` 元素的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-286">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="1eebb-287"><xref:System.Xml.XmlUrlResolver> 传递到 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法，该方法可设置为所包含的样式表访问网络资源所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-287">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="1eebb-288">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="1eebb-288">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-289">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-289">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-290">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-290">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-291">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-291">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-292"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-292">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="1eebb-293">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-293">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="1eebb-294">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-294">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-295">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-295">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-296"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-296">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-297"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-297">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-298">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-298">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-299"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-299"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-300">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-300">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-301">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-301">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="1eebb-302">样式表从 <xref:System.Xml.XmlReader> 的当前节点到其所有子项加载。</span><span class="sxs-lookup"><span data-stu-id="1eebb-302">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="1eebb-303">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-303">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="1eebb-304"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-304">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="1eebb-305">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-305">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="1eebb-306">如果样式表包含实体，则应指定可解析实体的 <xref:System.Xml.XmlReader> （<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-306">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="1eebb-307">在这种情况下，可以使用 <xref:System.Xml.XmlValidatingReader>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-307">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="1eebb-308">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-308">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-309">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="1eebb-309">The assembly has full trust.</span></span> <span data-ttu-id="1eebb-310">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-310">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-311">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-311">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-312">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-312">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-313">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="1eebb-313">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-314">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-314">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-315">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-315">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-316">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-316">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-317"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-317">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="1eebb-318">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-318">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="1eebb-319">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-319">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-320">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-320">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-321"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-321">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-322"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-322">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-323">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-323">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-324"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-324"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-325">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-325">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-326">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-326">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-327">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="1eebb-327">The assembly has full trust.</span></span> <span data-ttu-id="1eebb-328">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-328">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-329">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-330">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-331">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-331">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-332">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-333">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-333">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-334"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="1eebb-335">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-335">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="1eebb-336">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-337">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-337">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-338"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-338">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-339"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-339">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-340">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-340">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-341"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-341"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-342">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-342">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-343">将从 <xref:System.Xml.XPath.XPathNavigator>的当前位置加载样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-343">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="1eebb-344">若要使用部分已加载的文档作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-344">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="1eebb-345"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XPath.XPathNavigator> 位于样式表的开头（在 `xsl:style sheet` 节点上）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-345">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="1eebb-346">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="1eebb-346">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="1eebb-347">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="1eebb-347">The assembly has full trust.</span></span> <span data-ttu-id="1eebb-348">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-348">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="1eebb-349">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-349">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="1eebb-350">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-350">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-351">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="1eebb-351">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-352">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-352">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-353">包含要加载的样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-353">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-354"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-354">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="1eebb-355">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-355">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="1eebb-356">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-356">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="1eebb-357">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-357">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="1eebb-358">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-358">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="1eebb-359">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-359">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="1eebb-360">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-360">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1eebb-361">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-361">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="1eebb-362">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-362">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-363"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-363">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-364"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-364">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-365">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-365">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-366"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-366"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-367">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-367">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-368">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-368">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="1eebb-369">样式表从 <xref:System.Xml.XmlReader> 的当前节点到其所有子项加载。</span><span class="sxs-lookup"><span data-stu-id="1eebb-369">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="1eebb-370">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-370">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="1eebb-371"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-371">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="1eebb-372">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-372">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="1eebb-373">如果样式表包含实体，则应指定可解析实体的 <xref:System.Xml.XmlReader> （<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-373">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="1eebb-374">在这种情况下，可以使用 <xref:System.Xml.XmlValidatingReader>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-374">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="1eebb-375">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="1eebb-375">There are different ways to provide evidence.</span></span> <span data-ttu-id="1eebb-376">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="1eebb-376">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="1eebb-377">方案</span><span class="sxs-lookup"><span data-stu-id="1eebb-377">Scenario</span></span>|<span data-ttu-id="1eebb-378">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="1eebb-378">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="1eebb-379">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="1eebb-379">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="1eebb-380">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-380">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="1eebb-381">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-381">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-382">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-382">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="1eebb-383">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-383">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="1eebb-384">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-384">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-385">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="1eebb-385">The origin of the source is not known.</span></span>|<span data-ttu-id="1eebb-386">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-386">Set evidence to `null`.</span></span> <span data-ttu-id="1eebb-387">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-387">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="1eebb-388">此外，还可以将 `resolver` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-388">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="1eebb-389">这可确保不处理 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-389">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="1eebb-390">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-390">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-391">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="1eebb-391">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="1eebb-392">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-392">Request evidence from the caller.</span></span> <span data-ttu-id="1eebb-393">调用方的 API 必须提供一种方法来提供证据，通常是 <xref:System.Security.Policy.Evidence> 类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-393">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="1eebb-394">下面的示例执行 XSLT 转换，其中 `xsltReader` 是包含样式表的 <xref:System.Xml.XmlReader>，`secureURL` 是可用于创建 <xref:System.Security.Policy.Evidence>的可信 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-394">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="1eebb-395"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> 方法用于创建应用于样式表的 <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-395">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-396">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="1eebb-396">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-397">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="1eebb-397">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="1eebb-398">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-398">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1eebb-399">用于提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-399">for providing evidence.</span></span> <span data-ttu-id="1eebb-400">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1eebb-400">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-401">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-401">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-402">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-402">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-403"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-403">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="1eebb-404">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-404">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="1eebb-405">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-405">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="1eebb-406">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-406">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="1eebb-407">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-407">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="1eebb-408">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-408">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="1eebb-409">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-409">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1eebb-410">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-410">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="1eebb-411">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-411">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-412"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-412">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-413"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-413">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-414">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-414">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-415"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-415"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-416">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-416">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="1eebb-417">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="1eebb-417">There are different ways to provide evidence.</span></span> <span data-ttu-id="1eebb-418">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="1eebb-418">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="1eebb-419">方案</span><span class="sxs-lookup"><span data-stu-id="1eebb-419">Scenario</span></span>|<span data-ttu-id="1eebb-420">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="1eebb-420">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="1eebb-421">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="1eebb-421">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="1eebb-422">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-422">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="1eebb-423">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-423">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-424">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-424">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="1eebb-425">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-425">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="1eebb-426">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-426">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-427">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="1eebb-427">The origin of the source is not known.</span></span>|<span data-ttu-id="1eebb-428">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-428">Set evidence to `null`.</span></span> <span data-ttu-id="1eebb-429">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-429">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="1eebb-430">此外，还可以将 `resolver` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-430">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="1eebb-431">这可确保不处理 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-431">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="1eebb-432">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-432">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-433">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="1eebb-433">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="1eebb-434">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-434">Request evidence from the caller.</span></span> <span data-ttu-id="1eebb-435">调用方的 API 必须提供一种方法来提供证据，通常是 <xref:System.Security.Policy.Evidence> 类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-435">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-436">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-436">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-437">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="1eebb-437">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="1eebb-438">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-438">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1eebb-439">用于提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-439">for providing evidence.</span></span> <span data-ttu-id="1eebb-440">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1eebb-440">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="1eebb-441">包含要加载的样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-441">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-442"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-442">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="1eebb-443">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-443">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="1eebb-444">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-444">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="1eebb-445">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-445">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="1eebb-446">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-446">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="1eebb-447">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-447">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="1eebb-448">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-448">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="1eebb-449">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-449">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="1eebb-450">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-450">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-451"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-451">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-452"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-452">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-453">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-453">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-454"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-454"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-455">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-455">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-456">将从 <xref:System.Xml.XPath.XPathNavigator>的当前位置加载样式表。</span><span class="sxs-lookup"><span data-stu-id="1eebb-456">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="1eebb-457">若要使用部分已加载的文档作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-457">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="1eebb-458"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XPath.XPathNavigator> 位于样式表的开头（在 `xsl:style sheet` 节点上）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-458">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="1eebb-459">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="1eebb-459">There are different ways to provide evidence.</span></span> <span data-ttu-id="1eebb-460">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="1eebb-460">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="1eebb-461">方案</span><span class="sxs-lookup"><span data-stu-id="1eebb-461">Scenario</span></span>|<span data-ttu-id="1eebb-462">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="1eebb-462">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="1eebb-463">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="1eebb-463">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="1eebb-464">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-464">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="1eebb-465">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-465">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-466">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-466">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="1eebb-467">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-467">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="1eebb-468">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-468">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-469">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="1eebb-469">The origin of the source is not known.</span></span>|<span data-ttu-id="1eebb-470">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-470">Set evidence to `null`.</span></span> <span data-ttu-id="1eebb-471">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-471">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="1eebb-472">此外，还可以将 `resolver` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-472">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="1eebb-473">这可确保不处理 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-473">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="1eebb-474">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-474">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="1eebb-475">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="1eebb-475">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="1eebb-476">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-476">Request evidence from the caller.</span></span> <span data-ttu-id="1eebb-477">调用方的 API 必须提供一种方法来提供证据，通常是 `Evidence` 类。</span><span class="sxs-lookup"><span data-stu-id="1eebb-477">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-478">下面的示例使用外部源中的样式表执行 XSLT 转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-478">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="1eebb-479">由于样式表来自不受信任的源，因此 `resolver` 和 `evidence` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-479">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="1eebb-480">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="1eebb-480">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="1eebb-481">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="1eebb-481">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="1eebb-482">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="1eebb-482">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1eebb-483">用于提供证据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-483">for providing evidence.</span></span> <span data-ttu-id="1eebb-484">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="1eebb-484">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1eebb-485">使用加载的 XSLT 样式表转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-485">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-486"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-486">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-487"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-487">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-488">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-488">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="1eebb-489">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-489">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="1eebb-490">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-490">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="1eebb-491">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="1eebb-491">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-492"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-492">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-493"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-493">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-494">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-494">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-495"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-495"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-496">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-496">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-497">此方法在 .NET Framework 版本1.1 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-497">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="1eebb-498"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-498">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-499">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-499">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-500">下面的示例使用 `output.xsl` 样式表转换 `books.xml` 文件，并将结果输出到 `books.html` 文件中。</span><span class="sxs-lookup"><span data-stu-id="1eebb-500">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="1eebb-501">该示例使用以下两个输入文件：</span><span class="sxs-lookup"><span data-stu-id="1eebb-501">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-502">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-502">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-503">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-503">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-504">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-504">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-505">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-505">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-506"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-506">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="1eebb-507">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-507">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="1eebb-508">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-508">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-509"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-509">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-510"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-510">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-511">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-511">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-512"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-512"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-513">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-513">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-514">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-514">This method is now obsolete.</span></span> <span data-ttu-id="1eebb-515"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-515">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-516">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-516">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="1eebb-517">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-517">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-518">当输出到 <xref:System.Xml.XmlReader> （忽略 `xsl:output` 元素）时，不支持 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-518">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="1eebb-519">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-519">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="1eebb-520">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-520">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="1eebb-521">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-521">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-522">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-522">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-523">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-523">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-524">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-524">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="1eebb-525">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-525">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-526">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-526">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-527">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-527">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-528"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-528">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-529"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-529">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="1eebb-530">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-530">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="1eebb-531">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-531">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-532"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-532">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-533"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-533">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-534">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-534">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-535"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-535"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-536">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-536">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-537">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-537">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-538">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-538">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-539">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-539">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-540">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-540">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-541">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-541">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-542">由于 <xref:System.Xml.XmlReader> 提供只读输出，因此忽略 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-542">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="1eebb-543">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-543">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="1eebb-544">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-544">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-545">此方法已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-545">This method is obsolete.</span></span> <span data-ttu-id="1eebb-546"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定如何解析 XSLT document （）函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-546">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="1eebb-547">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-547">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-548">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-548">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-549">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-549">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-550">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-550">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-551">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-551">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="1eebb-552">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-552">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="1eebb-553">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="1eebb-553">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-554">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-554">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-555">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-555">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-556">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-556">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-557">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="1eebb-557">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-558"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-558">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-559"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-559">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-560">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-560">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-561"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-561"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-562">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-562">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-563">下面的示例执行 XSLT 转换并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="1eebb-563">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="1eebb-564">使用具有默认凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="1eebb-564">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="1eebb-565">有关更多信息，请参见<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-565">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-566">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-566">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-567">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-567">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-568"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-568">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-569">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="1eebb-569">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="1eebb-570">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-570">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-571"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-571">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-572"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-572">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-573">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-573">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-574"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-574"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-575">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-575">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-576">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-576">This method is now obsolete.</span></span> <span data-ttu-id="1eebb-577"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-577">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-578">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-578">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="1eebb-579">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-579">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="1eebb-580">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-580">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-581">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-581">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-582">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-582">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-583">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-583">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="1eebb-584">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-584">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-585">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-585">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-586">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-586">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-587">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-587">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-588">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-588">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-589">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-589">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-590">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-590">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-591">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-591">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-592"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-592">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-593">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-593">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="1eebb-594">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-594">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-595"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-595">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-596"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-596">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-597">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-597">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-598"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-598"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-599">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-599">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-600">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-600">This method is now obsolete.</span></span> <span data-ttu-id="1eebb-601"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-601">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-602">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-602">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="1eebb-603">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-603">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="1eebb-604">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="1eebb-604">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="1eebb-605">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-605">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="1eebb-606">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-606">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-607">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-607">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-608">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-608">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-609">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-609">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="1eebb-610">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-610">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-611">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-611">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-612">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-612">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-613">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-613">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-614">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-614">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-615">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-615">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-616">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-616">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-617">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-617">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-618"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-618">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-619">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-619">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-620">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-620">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-621">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-621">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-622">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-622">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="1eebb-623">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-623">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-624"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-624">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-625"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-625">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-626">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-626">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-627"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-627"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-628">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-628">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-629">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-629">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-630">当输出到 <xref:System.Xml.XmlReader> （忽略 `xsl:output` 元素）时，不支持 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-630">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="1eebb-631">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-631">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="1eebb-632">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-632">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="1eebb-633">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-633">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-634">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-634">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-635">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-635">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-636">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-636">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="1eebb-637">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-637">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-638">下面的示例将转换 XML 文档，并将结果输出到 `XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-638">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="1eebb-639">具有必要凭据的 <xref:System.Xml.XmlUrlResolver> 用于处理任何 XSLT `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-639">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-640">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-640">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-641">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-641">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-642">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-642">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-643">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-643">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-644"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-644">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-645">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-645">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="1eebb-646">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-646">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-647"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-647">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-648"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-648">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-649">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-649">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-650"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-650"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-651">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-651">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-652">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-652">This method is now obsolete.</span></span> <span data-ttu-id="1eebb-653"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-653">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-654">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-654">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="1eebb-655">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-655">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-656">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-656">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="1eebb-657">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-657">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="1eebb-658">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-658">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-659">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-659">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-660">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-660">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-661">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-661">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="1eebb-662">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-662">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-663">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-663">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-664">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-664">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-665">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-665">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-666">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-666">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-667">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-667">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-668"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-668">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-669"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-669">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-670">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="1eebb-670">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="1eebb-671">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-671">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-672"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-672">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-673"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-673">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-674">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-674">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-675"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-675"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-676">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-676">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-677">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-677">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-678">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-678">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-679">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-679">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-680">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-680">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-681">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-681">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-682">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-682">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-683">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-683">This method is now obsolete.</span></span> <span data-ttu-id="1eebb-684"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-684">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-685">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-685">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-686">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-686">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-687">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-687">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-688">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-688">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-689">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-689">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-690"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-690">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-691"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-691">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-692">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-692">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="1eebb-693">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-693">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-694"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-694">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-695"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-695">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-696">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-696">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-697"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-697"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-698">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-698">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-699">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-699">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-700">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-700">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-701">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-701">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-702">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-702">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-703">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-703">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-704">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="1eebb-704">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="1eebb-705">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-705">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-706">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-706">This method is now obsolete.</span></span> <span data-ttu-id="1eebb-707"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-707">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-708">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-708">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-709">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-709">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-710">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-710">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-711">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-711">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-712">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-712">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-713"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-713">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-714"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-714">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-715">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-715">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-716">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-716">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-717">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-717">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-718">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-718">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="1eebb-719">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-719">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-720"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-720">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-721"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-721">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-722">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-722">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-723"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-723"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-724">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-724">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-725">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-725">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-726">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-726">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-727">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-727">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-728">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-728">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-729">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-729">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-730">由于 <xref:System.Xml.XmlReader> 提供只读输出，因此忽略 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-730">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="1eebb-731">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-731">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="1eebb-732">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-732">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-733">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-733">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-734">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-734">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-735">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-735">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-736">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-736">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-737"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-737">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-738"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-738">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-739">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-739">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="1eebb-740">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-740">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-741"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-741">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-742"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-742">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-743">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-743">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-744"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-744"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-745">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-745">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-746">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-746">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-747">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-747">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-748">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-748">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-749">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-749">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-750">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，当前节点将保留在转换过程之前的节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-750">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-751">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-751">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="1eebb-752">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-752">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-753">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-753">This method is now obsolete.</span></span> <span data-ttu-id="1eebb-754"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="1eebb-754">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="1eebb-755">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-755">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-756">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-756">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-757">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-757">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-758">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-758">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-759">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-759">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-760">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-760">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-761">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-761">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-762"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-762">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-763">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="1eebb-763">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-764">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-764">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-765">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-765">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-766">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-766">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-767">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-767">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-768"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-768">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-769"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-769">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-770">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-770">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-771"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-771"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-772">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-772">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-773">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-773">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="1eebb-774">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-774">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-775">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-775">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-776">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-776">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-777">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-777">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="1eebb-778">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-778">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-779">下面的示例在 ASP.NET 页中执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-779">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-780">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-780">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-781">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-781">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-782">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-782">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-783">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-783">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-784">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-784">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-785">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-785">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-786">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-786">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-787"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-787">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-788">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-788">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-789">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-789">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-790">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-790">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-791">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-791">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-792">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-792">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-793"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-793">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-794"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-794">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-795">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-795">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-796"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-796"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-797">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-797">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-798">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-798">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="1eebb-799">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="1eebb-799">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="1eebb-800">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-800">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="1eebb-801">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-801">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-802">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-802">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-803">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-803">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-804">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-804">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="1eebb-805">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-805">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-806">下面的示例转换 XML 文件并输出 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="1eebb-806">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="1eebb-807"><xref:System.IO.StringReader> 和 <xref:System.IO.StringWriter> 类用于读取和写入字符串。</span><span class="sxs-lookup"><span data-stu-id="1eebb-807">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="1eebb-808">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="1eebb-808">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-809">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-809">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-810">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-810">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-811">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-811">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-812">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-812">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-813">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-813">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-814">实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="1eebb-814">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="1eebb-815">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-815">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-816"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-816">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-817">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-817">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-818">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-818">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-819">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-819">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-820">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-820">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-821">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-821">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-822"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-822">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-823"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-823">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-824">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-824">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-825"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-825"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-826">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-826">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-827">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-827">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-828">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-828">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="1eebb-829">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-829">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="1eebb-830">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-830">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-831">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-831">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-832">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-832">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="1eebb-833">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="1eebb-833">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="1eebb-834">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="1eebb-834">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-835">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-835">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="1eebb-836">它显示表中每本书的 ISBN、标题和价格。</span><span class="sxs-lookup"><span data-stu-id="1eebb-836">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="1eebb-837">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="1eebb-837">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-838">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-838">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-839">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-839">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-840">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-840">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-841">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-841">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="1eebb-842">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="1eebb-842">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-843"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-843">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-844"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-844">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-845">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="1eebb-845">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-846">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-846">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-847">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-847">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-848">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-848">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-849">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-849">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-850"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-850">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-851"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-851">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-852">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-852">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-853"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-853"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-854">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-854">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-855">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-855">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-856">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-856">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-857">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-857">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-858">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-858">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-859">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-859">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-860">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-860">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-861">下面的示例将 customer 表加载到 <xref:System.Xml.XmlDataDocument> 中，并执行 XSLT 转换以将客户数据提取到 HTML 表中。</span><span class="sxs-lookup"><span data-stu-id="1eebb-861">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="1eebb-862">该示例使用 Microsoft SQL Server 2000 Northwind 数据库。</span><span class="sxs-lookup"><span data-stu-id="1eebb-862">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="1eebb-863">示例使用 `customers.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="1eebb-863">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-864">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-864">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-865">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-865">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-866">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-866">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-867">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-867">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-868"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-868">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-869"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-869">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-870">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-870">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-871">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-871">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-872">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-872">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-873">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-873">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-874">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-874">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-875"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-875">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-876"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-876">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-877">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-877">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-878"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-878"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-879">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-879">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-880">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-880">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-881">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-881">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-882">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-882">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-883">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-883">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-884">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-884">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-885">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="1eebb-885">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="1eebb-886">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-886">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-887">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-887">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-888">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-888">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-889">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-889">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-890">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-890">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1eebb-891"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="1eebb-891">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="1eebb-892"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-892">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="1eebb-893">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-893">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="1eebb-894">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-894">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="1eebb-895">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-895">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="1eebb-896">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-896">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="1eebb-897">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-897">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-898"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-898">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-899"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-899">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-900">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-900">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-901"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="1eebb-901"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="1eebb-902">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="1eebb-902">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="1eebb-903">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="1eebb-903">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="1eebb-904">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-904">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="1eebb-905">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-905">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="1eebb-906">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="1eebb-906">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="1eebb-907">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，当前节点将保留在转换过程之前的节点。</span><span class="sxs-lookup"><span data-stu-id="1eebb-907">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="1eebb-908">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="1eebb-908">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="1eebb-909">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-909">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1eebb-910">下面的示例在执行 XSLT 转换之前加载并编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="1eebb-910">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1eebb-911">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="1eebb-911">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="1eebb-912">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="1eebb-912">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="1eebb-913">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-913">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="1eebb-914">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="1eebb-914">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1eebb-915">设置调用 <see cref="T:System.Xml.XmlResolver" /> 方法时用于解析外部资源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-915">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="1eebb-916">要在转换期间使用的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="1eebb-916">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="1eebb-917">如果设置为 <see langword="null" />，则不解析 XSLT <c>document （）</c>函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-917">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-918"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-918">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="1eebb-919"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="1eebb-919">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="1eebb-920">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="1eebb-920">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="1eebb-921">在 .NET Framework 版本1.1 中，应用程序的信任级别确定了默认行为：</span><span class="sxs-lookup"><span data-stu-id="1eebb-921">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="1eebb-922">`Fully trusted code:` 没有用户凭据的默认 <xref:System.Xml.XmlUrlResolver> 用于解析 `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="1eebb-922">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="1eebb-923">如果访问外部资源需要身份验证，请使用此属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-923">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="1eebb-924">`Semi-trusted code:` 属性设置为 `null`，这意味着 `document()` 函数未解析。</span><span class="sxs-lookup"><span data-stu-id="1eebb-924">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="1eebb-925">由于指定 <xref:System.Xml.XmlResolver>需要完全信任，因此也不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="1eebb-925">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="1eebb-926">调用 XSLT `document()` 函数时，将使用此解析程序。</span><span class="sxs-lookup"><span data-stu-id="1eebb-926">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="1eebb-927">它不用于解析样式表中引用 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="1eebb-927">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="1eebb-928">若要指定用于解析样式表中引用的 `xsl:import` 和 `xsl:include` 元素的 <xref:System.Xml.XmlResolver>，请使用 <xref:System.Xml.Xsl.XslTransform.Load%2A> 重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="1eebb-928">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1eebb-929">此属性在 .NET Framework 版本1.1 中已过时。</span><span class="sxs-lookup"><span data-stu-id="1eebb-929">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="1eebb-930">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-930">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="1eebb-931">在这种情况下，<xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法完成后，不会缓存 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="1eebb-931">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>
