<Type Name="XslTransform" FullName="System.Xml.Xsl.XslTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb546fc46d97d162ea1f0a1f2f73d222425cc1b9" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82286143" /></Metadata><TypeSignature Language="C#" Value="public sealed class XslTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XslTransform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Xsl.XslTransform" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XslTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class XslTransform sealed" />
  <TypeSignature Language="F#" Value="type XslTransform = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c922f-101">使用可扩展样式表转换语言 (XSLT) 转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-101">Transforms XML data using an Extensible Stylesheet Language for Transformations (XSLT) style sheet.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-102"><xref:System.Xml.Xsl.XslTransform> 类在 Microsoft .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-102">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the Microsoft .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-103"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-103">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-104">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-104">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-105"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-105"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-106">XSLT 样式表必须使用命名空间 `http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-106">The XSLT style sheet must use the namespace `http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-107">还可以使用 <xref:System.Xml.Xsl.XsltArgumentList> 类将其他参数添加到样式表中。</span><span class="sxs-lookup"><span data-stu-id="c922f-107">Additional arguments can also be added to the style sheet using the <xref:System.Xml.Xsl.XsltArgumentList> class.</span></span> <span data-ttu-id="c922f-108">此类包含可从样式表中调用的样式表和扩展对象的输入参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-108">This class contains input parameters for the style sheet and extension objects which can be called from the style sheet.</span></span>  
  
 <span data-ttu-id="c922f-109">转换 XML 数据：</span><span class="sxs-lookup"><span data-stu-id="c922f-109">To transform XML data:</span></span>  
  
1.  <span data-ttu-id="c922f-110">创建 <xref:System.Xml.Xsl.XslTransform> 对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-110">Create an <xref:System.Xml.Xsl.XslTransform> object.</span></span>  
  
2.  <span data-ttu-id="c922f-111">使用 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法加载转换的样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-111">Use the <xref:System.Xml.Xsl.XslTransform.Load%2A> method to load the style sheet for the transformation.</span></span> <span data-ttu-id="c922f-112">此方法具有多个重载，并且可以使用 <xref:System.Xml.XmlReader>、<xref:System.Xml.XPath.XPathNavigator>、<xref:System.Xml.XPath.IXPathNavigable>或包含文件位置的 URL 加载样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-112">This method has several overloads and can load a style sheet using an <xref:System.Xml.XmlReader>, <xref:System.Xml.XPath.XPathNavigator>, <xref:System.Xml.XPath.IXPathNavigable>, or a URL with the location of the file.</span></span>  
  
3.  <span data-ttu-id="c922f-113">使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法来转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-113">Use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method to transform the XML data.</span></span> <span data-ttu-id="c922f-114">此方法具有多个重载，并且可以处理不同类型的输入和输出。</span><span class="sxs-lookup"><span data-stu-id="c922f-114">This method has several overloads and can handle different types of input and output.</span></span> <span data-ttu-id="c922f-115">您还可以指定一个 <xref:System.Xml.Xsl.XsltArgumentList>，其中包含要在转换过程中用作输入的其他参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-115">You can also specify an <xref:System.Xml.Xsl.XsltArgumentList> containing additional arguments to use as input during the transformation.</span></span>  
  
 <span data-ttu-id="c922f-116">**安全注意事项**</span><span class="sxs-lookup"><span data-stu-id="c922f-116">**Security Considerations**</span></span>  
  
 <span data-ttu-id="c922f-117">在创建使用 <xref:System.Xml.Xsl.XslTransform> 类的应用程序时，应了解下列项及其含义：</span><span class="sxs-lookup"><span data-stu-id="c922f-117">When creating an application that uses the <xref:System.Xml.Xsl.XslTransform> class, you should be aware of the following items and their implications:</span></span>  
  
-   <span data-ttu-id="c922f-118">默认情况下启用扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-118">Extension objects are enabled by default.</span></span> <span data-ttu-id="c922f-119">如果包含扩展对象的 <xref:System.Xml.Xsl.XsltArgumentList> 对象传递给 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，将利用这些扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-119">If an <xref:System.Xml.Xsl.XsltArgumentList> object containing extension objects is passed to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method, they are utilized.</span></span>  
  
-   <span data-ttu-id="c922f-120">XSLT 样式表可以包括对其他文件的引用以及嵌入式脚本块。</span><span class="sxs-lookup"><span data-stu-id="c922f-120">XSLT style sheets can include references to other files and embedded script blocks.</span></span> <span data-ttu-id="c922f-121">恶意用户可以通过向您提供数据或样式表来利用此方法，在执行该操作时，将导致系统在计算机资源不足的情况下进行处理。</span><span class="sxs-lookup"><span data-stu-id="c922f-121">A malicious user can exploit this by supplying you with data or style sheets that when executed will cause your system to process until the computer runs low on resources.</span></span>  
  
-   <span data-ttu-id="c922f-122">在混合信任环境下运行的 XSLT 应用程序可能会引发样式表欺骗。</span><span class="sxs-lookup"><span data-stu-id="c922f-122">XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</span></span> <span data-ttu-id="c922f-123">例如，恶意用户可能会为对象加载有害的样式表，并将其交给另一个用户，而后者会继续调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法并执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-123">For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method and executes the transformation.</span></span>  
  
 <span data-ttu-id="c922f-124">不接受来自不受信任源的 <xref:System.Xml.Xsl.XslTransform> 对象、XSLT 样式表或 XML 源数据，可以减轻这些安全问题。</span><span class="sxs-lookup"><span data-stu-id="c922f-124">These security issues can be mitigated by not accepting <xref:System.Xml.Xsl.XslTransform> objects, XSLT style sheets, or XML source data from untrusted sources.</span></span>  
  
 <span data-ttu-id="c922f-125">**脚本支持**</span><span class="sxs-lookup"><span data-stu-id="c922f-125">**Scripting Support**</span></span>  
  
 <span data-ttu-id="c922f-126">此类使用 `msxsl:script` 元素支持嵌入的脚本。</span><span class="sxs-lookup"><span data-stu-id="c922f-126">This class supports embedded scripting using the `msxsl:script` element.</span></span>  
  
 <span data-ttu-id="c922f-127">在 .NET Framework 版本1.1 中，样式表的证据确定授予嵌入脚本的权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-127">In version 1.1 of the .NET Framework, the evidence of the style sheet determines what permissions are given to embedded scripts.</span></span>  
  
-   <span data-ttu-id="c922f-128">如果样式表是从统一资源标识符（URI）加载的，则使用 URI 创建证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-128">If the style sheet was loaded from a Uniform Resource Identifier (URI), the URI is used to create the evidence.</span></span> <span data-ttu-id="c922f-129">此证据包含 URI 及其站点和区域。</span><span class="sxs-lookup"><span data-stu-id="c922f-129">This evidence includes the URI along with its site and zone.</span></span>  
  
-   <span data-ttu-id="c922f-130">如果使用其他源加载了样式表，则可以通过将 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 对象传递到 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法来提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-130">If the style sheet was loaded using another source, you can provide evidence by passing a <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> object to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="c922f-131">否则，脚本程序集会完全信任。</span><span class="sxs-lookup"><span data-stu-id="c922f-131">Otherwise, the script assembly has full trust.</span></span>  
  
 <span data-ttu-id="c922f-132">不完全受信任的调用方：编译嵌入式脚本需要 `UnmanagedCode` 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-132">Semi-trusted callers: `UnmanagedCode` permission is required to compile the embedded script.</span></span> <span data-ttu-id="c922f-133">需要 `ControlEvidence` 权限才能提供 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法的 <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="c922f-133">`ControlEvidence` permission is required to provide <xref:System.Security.Policy.Evidence> to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method.</span></span> <span data-ttu-id="c922f-134">如果调用方不具有所需的权限，则会引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-134">A <xref:System.Security.SecurityException> is thrown if the caller does not have the necessary permissions.</span></span> <span data-ttu-id="c922f-135">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType>和<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-135">See <xref:System.Security.Permissions.SecurityPermission?displayProperty=nameWithType> and <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=nameWithType> for more information.</span></span>  
  
 <span data-ttu-id="c922f-136">`msxsl:script` 元素具有以下要求：</span><span class="sxs-lookup"><span data-stu-id="c922f-136">The `msxsl:script` element has the following requirements:</span></span>  
  
-   <span data-ttu-id="c922f-137">`msxsl:script` 元素属于 `urn:schemas-microsoft-com:xslt` 命名空间。</span><span class="sxs-lookup"><span data-stu-id="c922f-137">The `msxsl:script` element belongs to the `urn:schemas-microsoft-com:xslt` namespace.</span></span> <span data-ttu-id="c922f-138">样式表必须包括命名空间声明 `xmlns:msxsl=urn:schemas-microsoft-com:xslt`。</span><span class="sxs-lookup"><span data-stu-id="c922f-138">The style sheet must include the namespace declaration `xmlns:msxsl=urn:schemas-microsoft-com:xslt`.</span></span>  
  
-   <span data-ttu-id="c922f-139">`msxsl:script` 元素可以包含指定要使用的脚本语言的 `language` 属性。</span><span class="sxs-lookup"><span data-stu-id="c922f-139">The `msxsl:script` element can include a `language` attribute that specifies the scripting language to use.</span></span> <span data-ttu-id="c922f-140">`language` 特性的值必须是下列值之一： C#、CSHARP、VB、操作、JScript 或 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="c922f-140">The value of the `language` attribute must be one of the following: C#, CSharp, VB, VisualBasic, JScript, or JavaScript.</span></span> <span data-ttu-id="c922f-141">由于语言名称不区分大小写，因此 JavaScript 和 javascript 都是有效的。</span><span class="sxs-lookup"><span data-stu-id="c922f-141">Because the language name is not case-sensitive, JavaScript and javascript are both valid.</span></span> <span data-ttu-id="c922f-142">如果未指定 `language` 属性，则默认为 JScript。</span><span class="sxs-lookup"><span data-stu-id="c922f-142">If a `language` attribute is not specified, it defaults to JScript.</span></span>  
  
-   <span data-ttu-id="c922f-143">`msxsl:script` 元素必须包含一个 `implements-prefix` 属性，该属性包含表示与脚本块关联的命名空间的前缀。</span><span class="sxs-lookup"><span data-stu-id="c922f-143">The `msxsl:script` element must include an `implements-prefix` attribute that contains the prefix representing the namespace associated with the script block.</span></span> <span data-ttu-id="c922f-144">此命名空间必须在样式表中定义。</span><span class="sxs-lookup"><span data-stu-id="c922f-144">This namespace must be defined within the style sheet.</span></span> <span data-ttu-id="c922f-145">样式表可以包含多个按命名空间分组的脚本块。</span><span class="sxs-lookup"><span data-stu-id="c922f-145">A style sheet can include multiple script blocks which are grouped by namespace.</span></span> <span data-ttu-id="c922f-146">同一命名空间中不能有多个语言的脚本块。</span><span class="sxs-lookup"><span data-stu-id="c922f-146">You cannot have script blocks with multiple languages within the same namespace.</span></span> <span data-ttu-id="c922f-147">脚本块可以调用另一个脚本块中定义的函数，前提是脚本块驻留在同一命名空间中。</span><span class="sxs-lookup"><span data-stu-id="c922f-147">Script blocks can call a function defined in another script block, provided the script blocks reside within the same namespace.</span></span> <span data-ttu-id="c922f-148">脚本块的内容根据脚本语言的规则和语法（由 `language` 属性提供）进行分析。</span><span class="sxs-lookup"><span data-stu-id="c922f-148">The contents of a script block are parsed according to the rules and syntax of the scripting language (supplied by the `language` attribute).</span></span> <span data-ttu-id="c922f-149">例如，如果您有一个C#脚本块，注释将以 `//` 字符作为前缀。</span><span class="sxs-lookup"><span data-stu-id="c922f-149">For example, if you had a C# script block, comments would be prefixed by the `//` characters.</span></span> <span data-ttu-id="c922f-150">注释必须为有效的 XML 内容。</span><span class="sxs-lookup"><span data-stu-id="c922f-150">The comments must be valid XML content.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="c922f-151">建议你将脚本块包装在 CDATA 节中。</span><span class="sxs-lookup"><span data-stu-id="c922f-151">It is recommended that you wrap script blocks in a CDATA section.</span></span>
  
 [!INCLUDE [xsltransform-script](~/includes/xsltransform-script.md)] 
   
 <span data-ttu-id="c922f-152">函数可以在 `msxsl:script` 元素内声明。</span><span class="sxs-lookup"><span data-stu-id="c922f-152">Functions can be declared within the `msxsl:script` element.</span></span> <span data-ttu-id="c922f-153">下表显示了默认情况下支持的命名空间。</span><span class="sxs-lookup"><span data-stu-id="c922f-153">The following table shows the namespaces that are supported by default.</span></span>  
  
|<span data-ttu-id="c922f-154">支持的命名空间</span><span class="sxs-lookup"><span data-stu-id="c922f-154">Supported Namespaces</span></span>|<span data-ttu-id="c922f-155">说明</span><span class="sxs-lookup"><span data-stu-id="c922f-155">Description</span></span>|  
|--------------------------|-----------------|  
|`System`|<span data-ttu-id="c922f-156">系统类。</span><span class="sxs-lookup"><span data-stu-id="c922f-156">System classes.</span></span>|  
|`System.Collection`|<span data-ttu-id="c922f-157">集合类。</span><span class="sxs-lookup"><span data-stu-id="c922f-157">Collection classes.</span></span>|  
|`System.Text`|<span data-ttu-id="c922f-158">文本处理类。</span><span class="sxs-lookup"><span data-stu-id="c922f-158">Text handling classes.</span></span>|  
|`System.Xml`|<span data-ttu-id="c922f-159">核心 XML 类。</span><span class="sxs-lookup"><span data-stu-id="c922f-159">Core XML classes.</span></span>|  
|`System.Xml.Xsl`|<span data-ttu-id="c922f-160">XSLT 类。</span><span class="sxs-lookup"><span data-stu-id="c922f-160">XSLT classes.</span></span>|  
|`System.Xml.XPath`|<span data-ttu-id="c922f-161">XML 路径语言 (XPath) 类。</span><span class="sxs-lookup"><span data-stu-id="c922f-161">XML Path Language (XPath) classes.</span></span>|  
  
 <span data-ttu-id="c922f-162">脚本函数定义的所提供的参数和返回值必须是下列万维网联合会（W3C）类型之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-162">The supplied arguments and return values defined by the script functions must be one of the World Wide Web Consortium (W3C) types listed below.</span></span> <span data-ttu-id="c922f-163">下表详细说明了 W3C 类型（XPath 或 XSLT）与相应 .NET Framework 类之间的映射。</span><span class="sxs-lookup"><span data-stu-id="c922f-163">The following table details the mapping between the W3C types, either XPath or XSLT, and the corresponding .NET Framework classes.</span></span>  
  
|<span data-ttu-id="c922f-164">W3C 类型</span><span class="sxs-lookup"><span data-stu-id="c922f-164">W3C Type</span></span>|<span data-ttu-id="c922f-165">等效的 .NET 类</span><span class="sxs-lookup"><span data-stu-id="c922f-165">Equivalent .NET class</span></span>|  
|--------------|---------------------------|  
|<span data-ttu-id="c922f-166">String （XPath）</span><span class="sxs-lookup"><span data-stu-id="c922f-166">String (XPath)</span></span>|`System.String`|  
|<span data-ttu-id="c922f-167">布尔（XPath）</span><span class="sxs-lookup"><span data-stu-id="c922f-167">Boolean (XPath)</span></span>|`System.Boolean`|  
|<span data-ttu-id="c922f-168">Number （XPath）</span><span class="sxs-lookup"><span data-stu-id="c922f-168">Number (XPath)</span></span>|`System.Double`|  
|<span data-ttu-id="c922f-169">结果树片段（XSLT）</span><span class="sxs-lookup"><span data-stu-id="c922f-169">Result Tree Fragment (XSLT)</span></span>|`System.Xml.XPath.XPathNavigator`|  
|<span data-ttu-id="c922f-170">节点集（XPath）</span><span class="sxs-lookup"><span data-stu-id="c922f-170">Node Set (XPath)</span></span>|`System.Xml.XPath.XPathNodeIterator`|  
  
 <span data-ttu-id="c922f-171">如果脚本函数使用下列数值类型之一： Int16、UInt16、Int32、UInt32、Int64、UInt64、Single 或 Decimal，则会将这些类型强制转换为双精度类型的双精度值。</span><span class="sxs-lookup"><span data-stu-id="c922f-171">If the script function utilizes one of the following numeric types: Int16, UInt16, Int32, UInt32, Int64, UInt64, Single, or Decimal, these types are coerced to Double, which maps to the W3C XPath type number.</span></span>  
  
 <span data-ttu-id="c922f-172">如果调用的函数无法将参数结果转换为所需的类型之一，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="c922f-172">An exception is thrown when a function is called that cannot convert the argument result to one of the required types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-173">`msxsl:script` 和 `msxsl:node-list` 是 <xref:System.Xml.Xsl.XslTransform> 类支持的 `urn:schemas-microsoft-com:xslt` 命名空间中唯一的函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-173">`msxsl:script` and `msxsl:node-list` are the only functions from the `urn:schemas-microsoft-com:xslt` namespace that are supported by the <xref:System.Xml.Xsl.XslTransform> class.</span></span>  
  
 <span data-ttu-id="c922f-174"><xref:System.Xml.Xsl.XslTransform> 可以使用公共语言运行时（CLR）代码作为扩展机制。</span><span class="sxs-lookup"><span data-stu-id="c922f-174"><xref:System.Xml.Xsl.XslTransform> has the ability to utilize common language runtime (CLR) code as an extension mechanism.</span></span> <span data-ttu-id="c922f-175">这是通过将类的实例传递给 <xref:System.Xml.Xsl.XslTransform> 类并在 XSLT 样式表中调用其公共方法来完成的。</span><span class="sxs-lookup"><span data-stu-id="c922f-175">This is accomplished by passing an instance of a class to the <xref:System.Xml.Xsl.XslTransform> class and calling its public methods within an XSLT style sheet.</span></span> <span data-ttu-id="c922f-176">使用 `params` 关键字定义的方法允许传递未指定数量的参数，这种情况下不能正常工作。</span><span class="sxs-lookup"><span data-stu-id="c922f-176">Methods that are defined with the `params` keyword, which allows an unspecified number of parameters to be passed, do not work correctly in this scenario.</span></span> <span data-ttu-id="c922f-177">有关更多详细信息，请参阅[params](~/docs/csharp/language-reference/keywords/params.md) 。</span><span class="sxs-lookup"><span data-stu-id="c922f-177">See [params](~/docs/csharp/language-reference/keywords/params.md) for more details.</span></span>  
  
 <span data-ttu-id="c922f-178">有关详细信息，请参阅[具有 XslTransform 类的 XSLT 转换](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-178">For more information see [XSLT Transformations with the XslTransform Class](~/docs/standard/data/xml/xslt-transformations-with-the-xsltransform-class.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-179">下面的示例将转换指定的 XML 文档，并将结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-179">The following example transforms the specified XML document and outputs the result to the console.</span></span>  
  
 [!code-csharp[Classic WebData XslTransform Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c922f-180"><see cref="T:System.Xml.Xsl.XslTransform" /> 对象仅对转换操作而言是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="c922f-180"><see cref="T:System.Xml.Xsl.XslTransform" /> objects are only thread-safe for transform operations.</span></span> <span data-ttu-id="c922f-181">其他操作不一定是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="c922f-181">Other operations are not guaranteed to be thread-safe.</span></span> <span data-ttu-id="c922f-182">您必须确保在加载操作期间没有为对象调用任何其他方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-182">You must ensure that no other methods are called on the object during load operations.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XslTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XslTransform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c922f-183">初始化 <see cref="T:System.Xml.Xsl.XslTransform" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c922f-183">Initializes a new instance of the <see cref="T:System.Xml.Xsl.XslTransform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c922f-184">加载 XSLT 样式表，包括在 <see langword="xsl:include" /> 和 <see langword="xsl:import" /> 元素中引用的样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-184">Loads the XSLT style sheet, including style sheets referenced in <see langword="xsl:include" /> and <see langword="xsl:import" /> elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-185"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-185">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-186"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-186">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-187">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-187">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="xslTransform.Load url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="c922f-188">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-188">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <summary><span data-ttu-id="c922f-189">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-189">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-190"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-190">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-191"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-191">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-192">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-192">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-193"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-193"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-194">XSLT 样式表必须包括命名空间声明 `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`。</span><span class="sxs-lookup"><span data-stu-id="c922f-194">The XSLT style sheet must include the namespace declaration `xmlns:xsl="http://www.w3.org/1999/XSL/Transform"`.</span></span>  
  
 <span data-ttu-id="c922f-195">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-195">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c922f-196">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-196">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c922f-197">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="c922f-197">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c922f-198">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-198">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-199">样式表的 URI 用于创建将应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-199">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-200">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-200">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-201">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-201">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-202">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-202">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c922f-203">它显示表中每本书的 ISBN、标题和价格。</span><span class="sxs-lookup"><span data-stu-id="c922f-203">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c922f-204">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="c922f-204">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-205">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-205">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-206">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-206">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-207">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-207">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="c922f-208">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-208">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-209"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-209">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-210"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-210">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-211">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-211">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-212"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-212"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-213">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-213">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-214">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-214">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c922f-215">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-215">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c922f-216">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="c922f-216">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c922f-217">样式表从 <xref:System.Xml.XmlReader> 的当前节点到其所有子项加载。</span><span class="sxs-lookup"><span data-stu-id="c922f-217">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c922f-218">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-218">This enables you to use a portion of a document as the style sheet.</span></span> <span data-ttu-id="c922f-219"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-219">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c922f-220">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="c922f-220">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c922f-221">如果样式表包含实体，则应指定可解析实体的 <xref:System.Xml.XmlReader> （<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`）。</span><span class="sxs-lookup"><span data-stu-id="c922f-221">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c922f-222">在这种情况下，可以使用 <xref:System.Xml.XmlValidatingReader>。</span><span class="sxs-lookup"><span data-stu-id="c922f-222">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="c922f-223">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-223">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-224">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c922f-224">The assembly has full trust.</span></span> <span data-ttu-id="c922f-225">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-225">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-226">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-226">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-227">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-227">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-228">下面的示例将转换按标题对所有书籍进行排序的 XML 文件。</span><span class="sxs-lookup"><span data-stu-id="c922f-228">The following example transforms an XML file sorting all the books by title.</span></span>  
  
 [!code-cpp[XslTransform.Load3#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load3/CPP/trans3.cpp#1)]
 [!code-csharp[XslTransform.Load3#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load3/CS/trans3.cs#1)]
 [!code-vb[XslTransform.Load3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load3/VB/trans3.vb#1)]  
  
 <span data-ttu-id="c922f-229">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c922f-229">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load3#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/books.xml#2)]  
  
 `titles.xsl`  
  
 [!code-xml[XslTransform.Load3#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load3/XML/titles.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-230">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="c922f-230">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-231">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-231">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-232">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-232">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-233">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-233">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="c922f-234">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-234">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-235"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-235">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-236"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-236">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-237">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-237">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-238"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-238"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-239">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-239">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-240">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-240">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c922f-241">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-241">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c922f-242">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="c922f-242">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c922f-243">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-243">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-244">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c922f-244">The assembly has full trust.</span></span> <span data-ttu-id="c922f-245">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-245">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-246">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-246">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-247">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-247">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-248">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-248">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-249">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-249">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator -&gt; unit" Usage="xslTransform.Load stylesheet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-250">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-250">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <summary><span data-ttu-id="c922f-251">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-251">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-252"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-252">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-253"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-253">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-254">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-254">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-255"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-255"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-256">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-256">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-257">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-257">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c922f-258">使用没有用户凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-258">External resources are resolved using an <xref:System.Xml.XmlUrlResolver> with no user credentials.</span></span> <span data-ttu-id="c922f-259">如果样式表位于要求身份验证的网络资源上，则使用重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一，并使用所需的凭据指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="c922f-259">If the style sheet(s) are located on a network resource which requires authentication, use the overload that takes an <xref:System.Xml.XmlResolver> as one of its arguments and specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c922f-260">将从 <xref:System.Xml.XPath.XPathNavigator>的当前位置加载样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-260">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c922f-261">若要仅使用已加载文档的一部分作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-261">To use just a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c922f-262"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XPath.XPathNavigator> 位于样式表的开头（在 `xsl:style sheet` 节点上）。</span><span class="sxs-lookup"><span data-stu-id="c922f-262">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="c922f-263">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-263">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-264">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c922f-264">The assembly has full trust.</span></span> <span data-ttu-id="c922f-265">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-265">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-266">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-266">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-267">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-267">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-268">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="c922f-268">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-269">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-269">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string url, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string url, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (url As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ url, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (url, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="c922f-270">指定要加载的 XSLT 样式表的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-270">The URL that specifies the XSLT style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-271"><see cref="T:System.Xml.XmlResolver" /> 用于加载该样式表以及 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-271">The <see cref="T:System.Xml.XmlResolver" /> to use to load the style sheet and any style sheet(s) referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span>  
  
<span data-ttu-id="c922f-272">如果这是 <see langword="null" />，将使用不具有用户凭据的默认 <see cref="T:System.Xml.XmlUrlResolver" /> 来打开样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-272">If this is <see langword="null" />, a default <see cref="T:System.Xml.XmlUrlResolver" /> with no user credentials is used to open the style sheet.</span></span> <span data-ttu-id="c922f-273">不使用默认的 <see cref="T:System.Xml.XmlUrlResolver" /> 来解析样式表中的任何外部资源，因此将不解析 <c>xsl:import</c> 和 <c>xsl:include</c> 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-273">The default <see cref="T:System.Xml.XmlUrlResolver" /> is not used to resolve any external resources in the style sheet, so <c>xsl:import</c> and <c>xsl:include</c> elements are not resolved.</span></span>  
  
<span data-ttu-id="c922f-274">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-274">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-275">加载由一个 URL 指定的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-275">Loads the XSLT style sheet specified by a URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-276"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-276">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-277"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-277">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-278">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-278">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-279"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-279"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-280">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-280">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-281">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-281">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-282">样式表的 URI 用于创建将应用于程序集的证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-282">The URI of the style sheet is used to create evidence, which is applied to the assembly.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-283">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-283">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-284">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-284">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-285">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-285">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c922f-286">该示例将加载一个包含引用另一个样式表的 `xsl:include` 元素的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-286">The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet.</span></span> <span data-ttu-id="c922f-287"><xref:System.Xml.XmlUrlResolver> 传递到 <xref:System.Xml.Xsl.XslTransform.Load%2A> 方法，该方法可设置为所包含的样式表访问网络资源所需的凭据。</span><span class="sxs-lookup"><span data-stu-id="c922f-287">An <xref:System.Xml.XmlUrlResolver> is passed to the <xref:System.Xml.Xsl.XslTransform.Load%2A> method which sets the credentials necessary to access the network resource for the included style sheet.</span></span>  
  
 [!code-csharp[XslTransform.Load2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load2/CS/trans2.cs#1)]
 [!code-vb[XslTransform.Load2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load2/VB/trans2.vb#1)]  
  
 <span data-ttu-id="c922f-288">该示例使用以下数据文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c922f-288">The example uses the following data files as input.</span></span>  
  
 `books.xml`  
  
 [!code-xml[XslTransform.Load2#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/books.xml#2)]  
  
 `sort.xsl`  
  
 [!code-xml[XslTransform.Load2#3](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/sort.xsl#3)]  
  
 `includefile.xsl`  
  
 [!code-xml[XslTransform.Load2#4](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Load2/XML/includefile.xsl#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-289">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-289">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-290">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-290">The style sheet contains embedded script, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-291">包含 XSLT 样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-291">An <see cref="T:System.Xml.XmlReader" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-292"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-292">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c922f-293">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-293">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c922f-294">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-294">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-295">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-295">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-296"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-296">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-297"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-297">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-298">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-298">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-299"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-299"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-300">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-300">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-301">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-301">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c922f-302">样式表从 <xref:System.Xml.XmlReader> 的当前节点到其所有子项加载。</span><span class="sxs-lookup"><span data-stu-id="c922f-302">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c922f-303">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-303">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="c922f-304"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-304">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c922f-305">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="c922f-305">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c922f-306">如果样式表包含实体，则应指定可解析实体的 <xref:System.Xml.XmlReader> （<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`）。</span><span class="sxs-lookup"><span data-stu-id="c922f-306">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c922f-307">在这种情况下，可以使用 <xref:System.Xml.XmlValidatingReader>。</span><span class="sxs-lookup"><span data-stu-id="c922f-307">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  
 <span data-ttu-id="c922f-308">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-308">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-309">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c922f-309">The assembly has full trust.</span></span> <span data-ttu-id="c922f-310">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-310">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-311">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-311">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-312">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-312">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-313">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="c922f-313">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-314">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-314">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-315">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-315">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-316">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-316">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-317"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-317">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c922f-318">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-318">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c922f-319">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-319">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-320">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-320">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-321"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-321">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-322"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-322">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-323">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-323">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-324"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-324"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-325">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-325">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-326">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-326">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-327">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c922f-327">The assembly has full trust.</span></span> <span data-ttu-id="c922f-328">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> 方法提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-328">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> method.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-329">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-329">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-330">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-330">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-331">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-331">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-332">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-332">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass evidence to Load() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-333">包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-333">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-334"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-334">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c922f-335">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-335">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c922f-336">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-336">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-337">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-337">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-338"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-338">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-339"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-339">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-340">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-340">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-341"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-341"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-342">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-342">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-343">将从 <xref:System.Xml.XPath.XPathNavigator>的当前位置加载样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-343">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c922f-344">若要使用部分已加载的文档作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-344">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c922f-345"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XPath.XPathNavigator> 位于样式表的开头（在 `xsl:style sheet` 节点上）。</span><span class="sxs-lookup"><span data-stu-id="c922f-345">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  
 <span data-ttu-id="c922f-346">如果样式表包含嵌入式脚本，则该脚本将编译为程序集。</span><span class="sxs-lookup"><span data-stu-id="c922f-346">If the style sheet contains embedded scripting, the script is compiled to an assembly.</span></span> <span data-ttu-id="c922f-347">程序集具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="c922f-347">The assembly has full trust.</span></span> <span data-ttu-id="c922f-348">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-348">The recommended practice is to provide evidence using the <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="c922f-349">如果调用方没有 `UnmanagedCode` 的权限，则不会编译嵌入的脚本并引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="c922f-349">If the caller does not have `UnmanagedCode` permission, the embedded script is not compiled and a <xref:System.Security.SecurityException> is thrown.</span></span> <span data-ttu-id="c922f-350">有关更多信息，请参见<xref:System.Security.Permissions.SecurityPermission>和<xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="c922f-350">See <xref:System.Security.Permissions.SecurityPermission> and <xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode?displayProperty=nameWithType> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-351">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="c922f-351">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-352">样式表包含嵌入式脚本，并且调用方没有 <see langword="UnmanagedCode" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-352">The style sheet contains embedded scripts, and the caller does not have <see langword="UnmanagedCode" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XmlReader stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XmlReader, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XmlReader ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XmlReader * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-353">包含要加载的样式表的 <see cref="T:System.Xml.XmlReader" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-353">An <see cref="T:System.Xml.XmlReader" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-354"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-354">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c922f-355">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-355">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c922f-356">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-356">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="c922f-357">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-357">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="c922f-358">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-358">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="c922f-359">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-359">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="c922f-360">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-360">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c922f-361">加载 <see cref="T:System.Xml.XmlReader" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-361">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XmlReader" />.</span></span> <span data-ttu-id="c922f-362">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-362">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-363"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-363">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-364"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-364">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-365">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-365">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-366"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-366"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-367">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-367">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-368">此方法加载 XSLT 样式表，包括 `xsl:include` 和 `xsl:import` 元素中引用的所有样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-368">This method loads the XSLT style sheet, including any style sheets referenced in `xsl:include` and `xsl:import` elements.</span></span> <span data-ttu-id="c922f-369">样式表从 <xref:System.Xml.XmlReader> 的当前节点到其所有子项加载。</span><span class="sxs-lookup"><span data-stu-id="c922f-369">The style sheet loads from the current node of the <xref:System.Xml.XmlReader> through all its children.</span></span> <span data-ttu-id="c922f-370">这使您可以使用文档的一部分作为样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-370">This enables you to use a portion of a document as the style sheet.</span></span>  
  
 <span data-ttu-id="c922f-371"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XmlReader> 将定位到样式表末尾后的下一个节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-371">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XmlReader> is positioned on the next node after the end of the style sheet.</span></span> <span data-ttu-id="c922f-372">如果已到达文档结尾，<xref:System.Xml.XmlReader> 将位于文件结尾 (EOF)。</span><span class="sxs-lookup"><span data-stu-id="c922f-372">If the end of the document is reached, the <xref:System.Xml.XmlReader> is positioned at the end of file (EOF).</span></span>  
  
 <span data-ttu-id="c922f-373">如果样式表包含实体，则应指定可解析实体的 <xref:System.Xml.XmlReader> （<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> 返回 `true`）。</span><span class="sxs-lookup"><span data-stu-id="c922f-373">If the style sheet contains entities, you should specify an <xref:System.Xml.XmlReader> that can resolve entities (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=nameWithType> returns `true`).</span></span> <span data-ttu-id="c922f-374">在这种情况下，可以使用 <xref:System.Xml.XmlValidatingReader>。</span><span class="sxs-lookup"><span data-stu-id="c922f-374">In this case, an <xref:System.Xml.XmlValidatingReader> can be used.</span></span>  
  

  
 <span data-ttu-id="c922f-375">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="c922f-375">There are different ways to provide evidence.</span></span> <span data-ttu-id="c922f-376">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="c922f-376">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="c922f-377">场景</span><span class="sxs-lookup"><span data-stu-id="c922f-377">Scenario</span></span>|<span data-ttu-id="c922f-378">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="c922f-378">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="c922f-379">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="c922f-379">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="c922f-380">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-380">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslReader, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="c922f-381">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-381">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-382">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-382">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="c922f-383">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-383">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform();&#13;&#10; Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(stylesheetURL); &#13;&#10;xslt.Load(xslReader,resolver,evidence);</code></pre>|  
|<span data-ttu-id="c922f-384">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-384">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-385">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="c922f-385">The origin of the source is not known.</span></span>|<span data-ttu-id="c922f-386">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c922f-386">Set evidence to `null`.</span></span> <span data-ttu-id="c922f-387">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-387">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="c922f-388">此外，还可以将 `resolver` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c922f-388">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="c922f-389">这可确保不处理 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-389">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="c922f-390">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-390">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-391">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="c922f-391">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="c922f-392">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-392">Request evidence from the caller.</span></span> <span data-ttu-id="c922f-393">调用方的 API 必须提供一种方法来提供证据，通常是 <xref:System.Security.Policy.Evidence> 类。</span><span class="sxs-lookup"><span data-stu-id="c922f-393">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
     
## Examples  
 <span data-ttu-id="c922f-394">下面的示例执行 XSLT 转换，其中 `xsltReader` 是包含样式表的 <xref:System.Xml.XmlReader>，`secureURL` 是可用于创建 <xref:System.Security.Policy.Evidence>的可信 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-394">The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>.</span></span> <span data-ttu-id="c922f-395"><xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> 方法用于创建应用于样式表的 <xref:System.Security.Policy.Evidence>。</span><span class="sxs-lookup"><span data-stu-id="c922f-395">The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=nameWithType> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.</span></span>  
  
 [!code-cpp[XslTransform.Load4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Load4/CPP/trans_ev.cpp#1)]
 [!code-csharp[XslTransform.Load4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load4/CS/trans_ev.cs#1)]
 [!code-vb[XslTransform.Load4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load4/VB/trans_ev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-396">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="c922f-396">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-397">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="c922f-397">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="c922f-398">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-398">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.IXPathNavigable stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As IXPathNavigable, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::IXPathNavigable ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.IXPathNavigable * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.IXPathNavigable" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-399">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-399">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-400">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含 XSLT 样式表的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-400">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the XSLT style sheet.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-401"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-401">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c922f-402">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-402">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c922f-403">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-403">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="c922f-404">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-404">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="c922f-405">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-405">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="c922f-406">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-406">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="c922f-407">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-407">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c922f-408">加载 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-408">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.IXPathNavigable" />.</span></span> <span data-ttu-id="c922f-409">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-409">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-410"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-410">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-411"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-411">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-412">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-412">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-413"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-413"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-414">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-414">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  

  
 <span data-ttu-id="c922f-415">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="c922f-415">There are different ways to provide evidence.</span></span> <span data-ttu-id="c922f-416">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="c922f-416">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="c922f-417">场景</span><span class="sxs-lookup"><span data-stu-id="c922f-417">Scenario</span></span>|<span data-ttu-id="c922f-418">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="c922f-418">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="c922f-419">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="c922f-419">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="c922f-420">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-420">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(style sheet, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="c922f-421">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-421">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-422">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-422">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="c922f-423">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-423">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(style sheet,resolver,evidence);</code></pre>|  
|<span data-ttu-id="c922f-424">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-424">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-425">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="c922f-425">The origin of the source is not known.</span></span>|<span data-ttu-id="c922f-426">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c922f-426">Set evidence to `null`.</span></span> <span data-ttu-id="c922f-427">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-427">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="c922f-428">此外，还可以将 `resolver` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c922f-428">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="c922f-429">这可确保不处理 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-429">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="c922f-430">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-430">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-431">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="c922f-431">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="c922f-432">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-432">Request evidence from the caller.</span></span> <span data-ttu-id="c922f-433">调用方的 API 必须提供一种方法来提供证据，通常是 <xref:System.Security.Policy.Evidence> 类。</span><span class="sxs-lookup"><span data-stu-id="c922f-433">The API of the caller must provide a way to provide evidence, typically the <xref:System.Security.Policy.Evidence> class.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-434">加载的资源不是有效的样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-434">The loaded resource is not a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-435">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="c922f-435">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="c922f-436">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-436">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Xml.XPath.XPathNavigator stylesheet, class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (stylesheet As XPathNavigator, resolver As XmlResolver, evidence As Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Xml::XPath::XPathNavigator ^ stylesheet, System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="member this.Load : System.Xml.XPath.XPathNavigator * System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; unit" Usage="xslTransform.Load (stylesheet, resolver, evidence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylesheet" Type="System.Xml.XPath.XPathNavigator" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="stylesheet"><span data-ttu-id="c922f-437">包含要加载的样式表的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-437">An <see cref="T:System.Xml.XPath.XPathNavigator" /> object containing the style sheet to load.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-438"><see cref="T:System.Xml.XmlResolver" />，用于加载 <c>xsl:import</c> 和 <c>xsl:include</c> 元素中引用的任何样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-438">The <see cref="T:System.Xml.XmlResolver" /> used to load any style sheets referenced in <c>xsl:import</c> and <c>xsl:include</c> elements.</span></span> <span data-ttu-id="c922f-439">如果这为 <see langword="null" />，则不解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-439">If this is <see langword="null" />, external resources are not resolved.</span></span>  
  
<span data-ttu-id="c922f-440">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Load" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-440">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Load" /> method completes.</span></span></param>
        <param name="evidence"><span data-ttu-id="c922f-441">在为 XSLT 样式表中的脚本块生成的程序集上设置的 <see cref="T:System.Security.Policy.Evidence" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-441">The <see cref="T:System.Security.Policy.Evidence" /> set on the assembly generated for the script block in the XSLT style sheet.</span></span>  
  
<span data-ttu-id="c922f-442">如果为 <see langword="null" />，则不处理脚本块、不支持 XSLT <c>document()</c> 函数，并且不允许使用特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-442">If this is <see langword="null" />, script blocks are not processed, the XSLT <c>document()</c> function is not supported, and privileged extension objects are disallowed.</span></span>  
  
<span data-ttu-id="c922f-443">调用方必须有 <see langword="ControlEvidence" /> 权限，才能为脚本程序集提供证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-443">The caller must have <see langword="ControlEvidence" /> permission in order to supply evidence for the script assembly.</span></span> <span data-ttu-id="c922f-444">不完全受信任的调用方可以将此参数设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-444">Semi-trusted callers can set this parameter to <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c922f-445">加载 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中包含的 XSLT 样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-445">Loads the XSLT style sheet contained in the <see cref="T:System.Xml.XPath.XPathNavigator" />.</span></span> <span data-ttu-id="c922f-446">此方法允许您通过指定证据来限制样式表的权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-446">This method allows you to limit the permissions of the style sheet by specifying evidence.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-447"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-447">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-448"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-448">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-449">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-449">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-450"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-450"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-451">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-451">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-452">将从 <xref:System.Xml.XPath.XPathNavigator>的当前位置加载样式表。</span><span class="sxs-lookup"><span data-stu-id="c922f-452">The style sheet is loaded from the current position of the <xref:System.Xml.XPath.XPathNavigator>.</span></span> <span data-ttu-id="c922f-453">若要使用部分已加载的文档作为样式表，请导航到与样式表的开头相对应的节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-453">To use a portion of the loaded document as the style sheet, navigate to the node corresponding to the beginning of the style sheet.</span></span> <span data-ttu-id="c922f-454"><xref:System.Xml.Xsl.XslTransform.Load%2A> 方法返回后，<xref:System.Xml.XPath.XPathNavigator> 位于样式表的开头（在 `xsl:style sheet` 节点上）。</span><span class="sxs-lookup"><span data-stu-id="c922f-454">After the <xref:System.Xml.Xsl.XslTransform.Load%2A> method returns, the <xref:System.Xml.XPath.XPathNavigator> is positioned at the beginning of the style sheet (on the `xsl:style sheet` node).</span></span>  
  

  
 <span data-ttu-id="c922f-455">提供证据的方法有多种。</span><span class="sxs-lookup"><span data-stu-id="c922f-455">There are different ways to provide evidence.</span></span> <span data-ttu-id="c922f-456">下表描述了为常见用户方案提供的证据类型。</span><span class="sxs-lookup"><span data-stu-id="c922f-456">The following table describes what type of evidence to provide for common user scenarios.</span></span>  
  
|<span data-ttu-id="c922f-457">场景</span><span class="sxs-lookup"><span data-stu-id="c922f-457">Scenario</span></span>|<span data-ttu-id="c922f-458">要提供的证据类型</span><span class="sxs-lookup"><span data-stu-id="c922f-458">Type of evidence to provide</span></span>|  
|--------------|---------------------------------|  
|<span data-ttu-id="c922f-459">XSLT 样式表是自包含的，或来自你信任的代码库。</span><span class="sxs-lookup"><span data-stu-id="c922f-459">The XSLT style sheet is self-contained or comes from a code base that you trust.</span></span>|<span data-ttu-id="c922f-460">使用程序集中的证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-460">Use the evidence from your assembly.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;xslt.Load(xslNav, resolver, this.GetType().Assembly.Evidence);</code></pre>|  
|<span data-ttu-id="c922f-461">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-461">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-462">源的来源已知，并且存在可验证的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-462">The origin of the source is known, and there is a verifiable URL.</span></span>|<span data-ttu-id="c922f-463">使用 URL 创建证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-463">Create evidence using the URL.</span></span><br /><br /> <pre><code class="lang-csharp">XsltTransform xslt = new XslTransform(); &#13;&#10;Evidence evidence = XmlSecureResolver.CreateEvidenceForUrl(style sheetURL); &#13;&#10;xslt.Load(xslNav,resolver,evidence);</code></pre>|  
|<span data-ttu-id="c922f-464">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-464">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-465">源的来源未知。</span><span class="sxs-lookup"><span data-stu-id="c922f-465">The origin of the source is not known.</span></span>|<span data-ttu-id="c922f-466">将 evidence 设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c922f-466">Set evidence to `null`.</span></span> <span data-ttu-id="c922f-467">脚本块将不进行处理，不支持 XSLT `document()` 函数，而且不允许特权扩展对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-467">Script blocks are not processed, the XSLT `document()` function is not supported, and privileged extension objects are disallowed.</span></span><br /><br /> <span data-ttu-id="c922f-468">此外，还可以将 `resolver` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c922f-468">Additionally, you can also set the `resolver` parameter to `null`.</span></span> <span data-ttu-id="c922f-469">这可确保不处理 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-469">This ensures that `xsl:import` and `xsl:include` elements are not processed.</span></span>|  
|<span data-ttu-id="c922f-470">XSLT 样式表来自外部源。</span><span class="sxs-lookup"><span data-stu-id="c922f-470">The XSLT style sheet comes from an outside source.</span></span> <span data-ttu-id="c922f-471">源的来源未知，但您需要脚本支持。</span><span class="sxs-lookup"><span data-stu-id="c922f-471">The origin of the source is not known, but you require script support.</span></span>|<span data-ttu-id="c922f-472">从调用方请求证据。</span><span class="sxs-lookup"><span data-stu-id="c922f-472">Request evidence from the caller.</span></span> <span data-ttu-id="c922f-473">调用方的 API 必须提供一种方法来提供证据，通常是 `Evidence` 类。</span><span class="sxs-lookup"><span data-stu-id="c922f-473">The API of the caller must provide a way to provide evidence, typically the `Evidence` class.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c922f-474">下面的示例使用外部源中的样式表执行 XSLT 转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-474">The following example performs an XSLT transformation using a style sheet from an outside source.</span></span> <span data-ttu-id="c922f-475">由于样式表来自不受信任的源，因此 `resolver` 和 `evidence` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="c922f-475">Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.</span></span>  
 
 [!code-csharp[XslTransform.Load5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Load5/CS/trans_noev.cs#1)]
 [!code-vb[XslTransform.Load5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Load5/VB/trans_noev.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Xsl.XsltCompileException"><span data-ttu-id="c922f-476">当前节点不符合有效样式表的要求。</span><span class="sxs-lookup"><span data-stu-id="c922f-476">The current node does not conform to a valid style sheet.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c922f-477">引用的样式表需要的功能是所提供的证据不允许的。</span><span class="sxs-lookup"><span data-stu-id="c922f-477">The referenced style sheet requires functionality that is not allowed by the evidence provided.</span></span>  
  
<span data-ttu-id="c922f-478">调用方尝试提供证据但没有 <see langword="ControlEvidence" /> 权限。</span><span class="sxs-lookup"><span data-stu-id="c922f-478">The caller tries to supply evidence and does not have <see langword="ControlEvidence" /> permission.</span></span></exception>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Security.SecurityZone" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c922f-479">使用加载的 XSLT 样式表转换 XML 数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-479">Transforms the XML data using the loaded XSLT style sheet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-480"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-480">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-481"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-481">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-482">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-482">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="c922f-483">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-483">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="c922f-484">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-484">The URL of the output file.</span></span></param>
        <summary><span data-ttu-id="c922f-485">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="c922f-485">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-486"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-486">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-487"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-487">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-488">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-488">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-489"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-489"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-490">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-490">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-491">此方法在 .NET Framework 版本1.1 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-491">This method is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="c922f-492"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-492">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-493">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-493">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-494">下面的示例使用 `output.xsl` 样式表转换 `books.xml` 文件，并将结果输出到 `books.html` 文件中。</span><span class="sxs-lookup"><span data-stu-id="c922f-494">The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.</span></span>  
  
 [!code-cpp[XslTransform.Transform3#1](~/samples/snippets/cpp/VS_Snippets_Data/xsltransform.transform3/CPP/trans_snip2.cpp#1)]
 [!code-csharp[XslTransform.Transform3#1](~/samples/snippets/csharp/VS_Snippets_Data/xsltransform.transform3/CS/trans_snip2.cs#1)]
 [!code-vb[XslTransform.Transform3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xsltransform.transform3/VB/trans_snip2.vb#1)]  
  
 <span data-ttu-id="c922f-495">该示例使用以下两个输入文件：</span><span class="sxs-lookup"><span data-stu-id="c922f-495">The sample uses the following two input files:</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-496">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-496">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-497">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-497">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-498">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-498">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-499">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-499">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-500"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-500">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="c922f-501">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-501">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c922f-502">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-502">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-503"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-503">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-504"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-504">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-505">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-505">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-506"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-506"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-507">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-507">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-508">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-508">This method is now obsolete.</span></span> <span data-ttu-id="c922f-509"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-509">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-510">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-510">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c922f-511">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-511">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-512">当输出到 <xref:System.Xml.XmlReader> （忽略 `xsl:output` 元素）时，不支持 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-512">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="c922f-513">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-513">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c922f-514">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-514">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="c922f-515">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-515">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-516">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-516">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-517">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-517">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-518">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-518">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c922f-519">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-519">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-520">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-520">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-521">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-521">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-522"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-522">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-523"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-523">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <summary><span data-ttu-id="c922f-524">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-524">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c922f-525">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-525">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-526"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-526">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-527"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-527">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-528">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-528">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-529"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-529"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-530">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-530">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-531">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-531">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-532">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-532">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-533">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-533">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-534">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-534">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-535">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-535">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-536">由于 <xref:System.Xml.XmlReader> 提供只读输出，因此忽略 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-536">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="c922f-537">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-537">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c922f-538">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-538">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-539">此方法已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-539">This method is obsolete.</span></span> <span data-ttu-id="c922f-540"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定如何解析 XSLT document （）函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-540">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT document() function is resolved.</span></span> <span data-ttu-id="c922f-541">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-541">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-542">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-542">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-543">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-543">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-544">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-544">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-545">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-545">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(string inputfile, string outputfile, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (inputfile As String, outputfile As String, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::String ^ inputfile, System::String ^ outputfile, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : string * string * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (inputfile, outputfile, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputfile" Type="System.String" />
        <Parameter Name="outputfile" Type="System.String" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="inputfile"><span data-ttu-id="c922f-546">要转换的源文档的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-546">The URL of the source document to be transformed.</span></span></param>
        <param name="outputfile"><span data-ttu-id="c922f-547">输出文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="c922f-547">The URL of the output file.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-548">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-548">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-549">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-549">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-550">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-550">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-551">转换输入文件中的 XML 数据并将结果输出到输出文件。</span><span class="sxs-lookup"><span data-stu-id="c922f-551">Transforms the XML data in the input file and outputs the result to an output file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-552"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-552">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-553"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-553">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-554">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-554">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-555"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-555"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-556">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-556">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-557">下面的示例执行 XSLT 转换并输出到文件。</span><span class="sxs-lookup"><span data-stu-id="c922f-557">The following example performs an XSLT transformation and outputs to a file.</span></span> <span data-ttu-id="c922f-558">使用具有默认凭据的 <xref:System.Xml.XmlUrlResolver> 解析外部资源。</span><span class="sxs-lookup"><span data-stu-id="c922f-558">An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources.</span></span> <span data-ttu-id="c922f-559">有关详细信息，请参阅<xref:System.Net.CredentialCache.DefaultCredentials%2A>。</span><span class="sxs-lookup"><span data-stu-id="c922f-559">See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.</span></span>  
  
 [!code-cpp[XslTransform.Transform7#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTRansform.Transform7/CPP/trans_snip4.cpp#1)]
 [!code-csharp[XslTransform.Transform7#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTRansform.Transform7/CS/trans_snip4.cs#1)]
 [!code-vb[XslTransform.Transform7#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTRansform.Transform7/VB/trans_snip4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-560">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-560">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-561">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-561">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-562"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-562">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-563">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="c922f-563">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c922f-564">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-564">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-565"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-565">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-566"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-566">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-567">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-567">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-568"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-568"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-569">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-569">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-570">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-570">This method is now obsolete.</span></span> <span data-ttu-id="c922f-571"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-571">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-572">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-572">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c922f-573">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-573">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c922f-574">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-574">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-575">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-575">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-576">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-576">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-577">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-577">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c922f-578">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-578">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-579">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-579">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-580">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-580">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-581">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-581">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-582">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-582">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-583">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-583">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-584">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-584">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-585">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-585">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-586"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-586">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-587">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-587">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c922f-588">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-588">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-589"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-589">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-590"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-590">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-591">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-591">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-592"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-592"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-593">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-593">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-594">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-594">This method is now obsolete.</span></span> <span data-ttu-id="c922f-595"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-595">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-596">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-596">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c922f-597">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-597">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c922f-598">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="c922f-598">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c922f-599">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-599">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="c922f-600">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-600">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-601">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-601">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-602">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-602">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-603">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-603">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c922f-604">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-604">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-605">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-605">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-606">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-606">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-607">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-607">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-608">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-608">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-609">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-609">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As IXPathNavigable, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-610">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-610">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-611">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-611">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-612"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-612">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-613">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-613">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-614">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-614">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-615">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-615">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-616">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-616">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c922f-617">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-617">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-618"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-618">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-619"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-619">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-620">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-620">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-621"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-621"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-622">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-622">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-623">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-623">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-624">当输出到 <xref:System.Xml.XmlReader> （忽略 `xsl:output` 元素）时，不支持 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-624">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlReader> (the `xsl:output` element is ignored).</span></span> <span data-ttu-id="c922f-625">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-625">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c922f-626">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-626">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 <span data-ttu-id="c922f-627">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-627">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-628">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-628">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-629">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-629">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment, and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-630">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-630">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c922f-631">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-631">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c922f-632">下面的示例将转换 XML 文档，并将结果输出到 `XmlReader`。</span><span class="sxs-lookup"><span data-stu-id="c922f-632">The following example transforms an XML document and outputs the results to an `XmlReader`.</span></span> <span data-ttu-id="c922f-633">具有必要凭据的 <xref:System.Xml.XmlUrlResolver> 用于处理任何 XSLT `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-633">An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.</span></span>  
  
 [!code-cpp[XslTransform.Transform4#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform4/CPP/trans_snip3.cpp#1)]
 [!code-csharp[XslTransform.Transform4#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform4/CS/trans_snip3.cs#1)]
 [!code-vb[XslTransform.Transform4#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform4/VB/trans_snip3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-634">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-634">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-635">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-635">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-636">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-636">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-637">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-637">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-638"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-638">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-639">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-639">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c922f-640">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-640">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-641"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-641">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-642"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-642">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-643">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-643">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-644"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-644"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-645">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-645">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-646">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-646">This method is now obsolete.</span></span> <span data-ttu-id="c922f-647"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-647">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-648">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-648">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 <span data-ttu-id="c922f-649">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-649">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-650">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="c922f-650">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c922f-651">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-651">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c922f-652">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-652">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-653">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-653">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-654">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-654">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-655">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-655">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out);  
```  
  
 <span data-ttu-id="c922f-656">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-656">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-657">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-657">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-658">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-658">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-659">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-659">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-660">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-660">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-661">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-661">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-662"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-662">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-663"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-663">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-664">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="c922f-664">The stream to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c922f-665">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-665">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-666"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-666">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-667"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-667">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-668">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-668">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-669"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-669"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-670">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-670">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-671">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-671">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-672">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-672">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-673">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-673">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-674">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-674">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-675">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-675">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-676">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-676">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-677">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-677">This method is now obsolete.</span></span> <span data-ttu-id="c922f-678"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-678">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-679">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-679">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-680">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-680">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-681">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-681">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-682">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-682">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-683">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-683">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-684"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-684">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-685"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-685">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-686">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-686">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c922f-687">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-687">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-688"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-688">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-689"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-689">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-690">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-690">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-691"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-691"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-692">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-692">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-693">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-693">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-694">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-694">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-695">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-695">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-696">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-696">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-697">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-697">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-698">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="c922f-698">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c922f-699">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-699">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-700">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-700">This method is now obsolete.</span></span> <span data-ttu-id="c922f-701"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-701">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-702">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-702">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-703">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-703">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-704">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-704">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-705">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-705">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-706">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-706">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlReader Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Function Transform (input As XPathNavigator, args As XsltArgumentList, resolver As XmlResolver) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlReader ^ Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlResolver -&gt; System.Xml.XmlReader" Usage="xslTransform.Transform (input, args, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-707"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-707">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-708"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-708">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-709">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-709">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-710">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-710">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-711">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-711">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-712">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-712">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlReader" />.</span></span></summary>
        <returns><span data-ttu-id="c922f-713">包含转换结果的 <see cref="T:System.Xml.XmlReader" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-713">An <see cref="T:System.Xml.XmlReader" /> containing the results of the transformation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-714"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-714">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-715"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-715">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-716">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-716">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-717"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-717"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-718">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-718">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-719">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-719">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-720">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-720">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-721">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-721">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-722">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-722">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-723">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-723">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-724">由于 <xref:System.Xml.XmlReader> 提供只读输出，因此忽略 `xsl:output` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-724">Because <xref:System.Xml.XmlReader> provides read-only output, the `xsl:output` element is ignored.</span></span> <span data-ttu-id="c922f-725">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-725">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c922f-726">此方法使您可以执行源文档的异步转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-726">This method enables you to do an asynchronous transformation of the source document.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-727">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-727">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-728">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-728">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-729">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-729">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-730">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-730">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter -&gt; unit" Usage="xslTransform.Transform (input, args, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-731"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-731">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-732"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-732">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-733">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-733">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <summary><span data-ttu-id="c922f-734">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-734">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-735"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-735">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-736"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-736">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-737">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-737">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-738"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-738"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-739">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-739">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-740">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-740">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-741">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-741">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-742">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-742">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-743">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-743">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-744">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，当前节点将保留在转换过程之前的节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-744">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-745">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="c922f-745">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c922f-746">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-746">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-747">此方法现已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-747">This method is now obsolete.</span></span> <span data-ttu-id="c922f-748"><xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> 属性的设置确定 XSLT `document()` 函数的解析方式。</span><span class="sxs-lookup"><span data-stu-id="c922f-748">The setting of the <xref:System.Xml.Xsl.XslTransform.XmlResolver%2A> property determines how the XSLT `document()` function is resolved.</span></span> <span data-ttu-id="c922f-749">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法，该方法采用 <xref:System.Xml.XmlResolver> 对象作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-749">The recommended practice is to use the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method which takes an <xref:System.Xml.XmlResolver> object as one of its arguments.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-750">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-750">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-751">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-751">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-752">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-752">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-753">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-753">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-754">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-754">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-755">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-755">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-756"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-756">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-757">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="c922f-757">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-758">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-758">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-759">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-759">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-760">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-760">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-761">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-761">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-762"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-762">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-763"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-763">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-764">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-764">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-765"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-765"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-766">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-766">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-767">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-767">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c922f-768">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-768">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-769">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-769">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-770">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-770">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-771">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-771">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c922f-772">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-772">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c922f-773">下面的示例在 ASP.NET 页中执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-773">The following example performs a transformation within an ASP.NET page.</span></span>  
  
 [!code-aspx-csharp[XslTransform.Transform5#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform5/CS/transcs.aspx#1)]
 [!code-aspx-vb[XslTransform.Transform5#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform5/VB/transvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-774">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-774">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-775">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-775">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-776">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-776">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-777">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-777">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-778">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-778">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-779">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-779">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-780">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-780">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-781"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-781">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-782">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-782">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-783">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-783">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-784">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-784">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-785">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-785">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-786">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-786">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-787"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-787">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-788"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-788">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-789">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-789">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-790"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-790"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-791">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-791">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-792">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-792">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span>  
  
 <span data-ttu-id="c922f-793">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="c922f-793">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c922f-794">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-794">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 <span data-ttu-id="c922f-795">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-795">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-796">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-796">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-797">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-797">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-798">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-798">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c922f-799">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-799">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />   
  <template match="/">  
     Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c922f-800">下面的示例转换 XML 文件并输出 HTML 字符串。</span><span class="sxs-lookup"><span data-stu-id="c922f-800">The following example transforms an XML file and outputs an HTML string.</span></span> <span data-ttu-id="c922f-801"><xref:System.IO.StringReader> 和 <xref:System.IO.StringWriter> 类用于读取和写入字符串。</span><span class="sxs-lookup"><span data-stu-id="c922f-801">The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.</span></span>  
  
 [!code-csharp[XslTransform.Transform6#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform6/CS/transstring.cs#1)]
 [!code-vb[XslTransform.Transform6#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform6/VB/transstring.vb#1)]  
  
 <span data-ttu-id="c922f-802">示例使用 `books.xml` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c922f-802">The example uses the `books.xml` file as input.</span></span>  
  
 [!code-xml[XslTransform.Transform6#2](~/samples/snippets/xml/VS_Snippets_Data/XslTransform.Transform6/XML/books.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-803">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-803">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-804">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-804">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-805">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-805">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-806">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-806">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-807">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-807">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.IXPathNavigable input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As IXPathNavigable, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::IXPathNavigable ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.IXPathNavigable * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.IXPathNavigable" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-808">一个实现 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 接口的对象。</span><span class="sxs-lookup"><span data-stu-id="c922f-808">An object implementing the <see cref="T:System.Xml.XPath.IXPathNavigable" /> interface.</span></span> <span data-ttu-id="c922f-809">在 .NET Framework 中，这可以是 <see cref="T:System.Xml.XmlNode" />（一般为 <see cref="T:System.Xml.XmlDocument" />），或者是包含要转换的数据的 <see cref="T:System.Xml.XPath.XPathDocument" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-809">In the .NET Framework, this can be either an <see cref="T:System.Xml.XmlNode" /> (typically an <see cref="T:System.Xml.XmlDocument" />), or an <see cref="T:System.Xml.XPath.XPathDocument" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-810"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-810">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-811">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-811">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-812">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-812">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-813">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-813">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-814">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-814">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-815">使用指定的 <see cref="T:System.Xml.XPath.IXPathNavigable" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-815">Transforms the XML data in the <see cref="T:System.Xml.XPath.IXPathNavigable" /> using the specified <paramref name="args" /> and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-816"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-816">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-817"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-817">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-818">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-818">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-819"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-819"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-820">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-820">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-821">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-821">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-822">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="c922f-822">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c922f-823">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-823">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
 <span data-ttu-id="c922f-824">转换将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-824">Transformations apply to the document as a whole.</span></span> <span data-ttu-id="c922f-825">换句话说，如果你传入文档根节点以外的一个节点，并不能防止转换进程访问已加载文档的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-825">In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-826">若要转换节点片段，必须创建一个仅包含节点片段的 <xref:System.Xml.XmlDocument>，并将该 <xref:System.Xml.XmlDocument> 传递到 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c922f-826">To transform a node fragment, you must create an <xref:System.Xml.XmlDocument> containing just the node fragment and pass that <xref:System.Xml.XmlDocument> to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.</span></span>  
  
 <span data-ttu-id="c922f-827">下面的示例对节点片段执行转换。</span><span class="sxs-lookup"><span data-stu-id="c922f-827">The following example performs a transformation on a node fragment.</span></span>  
  
```csharp  
XslTransform xslt = new XslTransform();       
xslt.Load("print_root.xsl");  
XmlDocument doc = new XmlDocument();  
doc.Load("library.xml");  
// Create a new document containing just the node fragment.  
XmlNode testNode = doc.DocumentElement.FirstChild;   
XmlDocument tmpDoc = new XmlDocument();   
tmpDoc.LoadXml(testNode.OuterXml);  
// Pass the document containing the node fragment   
// to the Transform method.  
Console.WriteLine("Passing " + tmpDoc.OuterXml + " to print_root.xsl");  
xslt.Transform(tmpDoc, null, Console.Out, null);  
```  
  
 <span data-ttu-id="c922f-828">该示例使用 `library.xml` 和 `print_root.xsl` 文件作为输入，并将以下结果输出到控制台。</span><span class="sxs-lookup"><span data-stu-id="c922f-828">The example uses the `library.xml` and `print_root.xsl` files as input and outputs the following to the console.</span></span>  
  
```  
Passing <book genre="novel" ISBN="1-861001-57-5"><title>Pride And Prejudice</title></book> to print_root.xsl   
Root node is book.  
```  
  
 `library.xml`  
  
```xml  
<library>  
  <book genre='novel' ISBN='1-861001-57-5'>  
     <title>Pride And Prejudice</title>  
  </book>  
  <book genre='novel' ISBN='1-81920-21-2'>  
     <title>Hook</title>  
  </book>  
</library>  
```  
  
 `print_root.xsl`  
  
```xml  
<stylesheet version="1.0" xmlns="http://www.w3.org/1999/XSL/Transform" >  
  <output method="text" />  
  <template match="/">  
  Root node is  <value-of select="local-name(//*[position() = 1])" />   
  </template>  
</stylesheet>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c922f-829">下面的示例将 XML 文档转换为 HTML 文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-829">The following example transforms an XML document into an HTML document.</span></span> <span data-ttu-id="c922f-830">它显示表中每本书的 ISBN、标题和价格。</span><span class="sxs-lookup"><span data-stu-id="c922f-830">It displays the ISBN, title, and price for each book in a table.</span></span>  
  
 [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="c922f-831">示例使用下列两个输入文件。</span><span class="sxs-lookup"><span data-stu-id="c922f-831">The sample uses the following two input files.</span></span>  
  
 `books.xml`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/books.xml#2)]  
  
 `output.xsl`  
  
 [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XslTransform.Transform7 Example/XML/output.xsl#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-832">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-832">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-833">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-833">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-834">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-834">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-835">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-835">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/8e149d32-4b2f-493f-9e4b-d0d93475acde"><span data-ttu-id="c922f-836">XslTransform 的输出</span><span class="sxs-lookup"><span data-stu-id="c922f-836">Outputs from an XslTransform</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.Stream output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As Stream, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::Stream ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.Stream * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.Stream" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-837"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-837">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-838"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-838">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-839">要输出到的流。</span><span class="sxs-lookup"><span data-stu-id="c922f-839">The stream to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-840">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-840">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-841">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-841">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-842">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-842">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-843">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-843">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-844"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-844">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-845"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-845">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-846">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-846">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-847"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-847"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-848">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-848">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-849">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-849">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-850">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-850">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-851">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-851">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-852">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-852">After the transformation has been performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-853">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-853">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-854">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-854">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-855">下面的示例将 customer 表加载到 <xref:System.Xml.XmlDataDocument> 中，并执行 XSLT 转换以将客户数据提取到 HTML 表中。</span><span class="sxs-lookup"><span data-stu-id="c922f-855">The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table.</span></span> <span data-ttu-id="c922f-856">该示例使用 Microsoft SQL Server 2000 Northwind 数据库。</span><span class="sxs-lookup"><span data-stu-id="c922f-856">The example uses the Microsoft SQL Server 2000 Northwind database.</span></span>  
  
 [!code-csharp[XmlDataDocument.CreateNavigator#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.CreateNavigator/CS/dataset_trans.cs#1)]
 [!code-vb[XmlDataDocument.CreateNavigator#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.CreateNavigator/VB/dataset_trans.vb#1)]  
  
 <span data-ttu-id="c922f-857">示例使用 `customers.xsl` 文件作为输入。</span><span class="sxs-lookup"><span data-stu-id="c922f-857">The example uses the `customers.xsl` file as input.</span></span>  
  
 [!code-xml[XmlDataDocument.CreateNavigator#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.CreateNavigator/XML/customers.xsl#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-858">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-858">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-859">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-859">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-860">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-860">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-861">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-861">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.IO.TextWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As TextWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::IO::TextWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.IO.TextWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-862"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-862">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-863"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-863">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-864">要输出到的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-864">The <see cref="T:System.IO.TextWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-865">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-865">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-866">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-866">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-867">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-867">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-868">使用指定的 <see cref="T:System.Xml.XPath.XPathNavigator" /> 转换 <paramref name="args" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-868">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified <paramref name="args" /> and outputs the result to a <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-869"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-869">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-870"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-870">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-871">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-871">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-872"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-872"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-873">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-873">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-874">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-874">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-875">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-875">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-876">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-876">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-877">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-877">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-878">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，节点（在转换进程之前是当前节点）将保留当前节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-878">This means that the node, which is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-879">当输出到 <xref:System.IO.TextWriter>时，不支持 `xsl:output` 元素上的编码属性。</span><span class="sxs-lookup"><span data-stu-id="c922f-879">The encoding attribute on an `xsl:output` element is not supported when outputting to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="c922f-880">有关支持 `xsl:output` 属性的详细信息，请参阅[来自 XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-880">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for specifics on which `xsl:output` attributes are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-881">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-881">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-882">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-882">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-883">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-883">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-884">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-884">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Xml.XPath.XPathNavigator input, class System.Xml.Xsl.XsltArgumentList args, class System.Xml.XmlWriter output, class System.Xml.XmlResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (input As XPathNavigator, args As XsltArgumentList, output As XmlWriter, resolver As XmlResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Xml::XPath::XPathNavigator ^ input, System::Xml::Xsl::XsltArgumentList ^ args, System::Xml::XmlWriter ^ output, System::Xml::XmlResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Xml.XPath.XPathNavigator * System.Xml.Xsl.XsltArgumentList * System.Xml.XmlWriter * System.Xml.XmlResolver -&gt; unit" Usage="xslTransform.Transform (input, args, output, resolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Xml.XPath.XPathNavigator" />
        <Parameter Name="args" Type="System.Xml.Xsl.XsltArgumentList" />
        <Parameter Name="output" Type="System.Xml.XmlWriter" />
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="c922f-885"><see cref="T:System.Xml.XPath.XPathNavigator" />，包含要转换的数据。</span><span class="sxs-lookup"><span data-stu-id="c922f-885">An <see cref="T:System.Xml.XPath.XPathNavigator" /> containing the data to be transformed.</span></span></param>
        <param name="args"><span data-ttu-id="c922f-886"><see cref="T:System.Xml.Xsl.XsltArgumentList" />，包含用作转换输入的命名空间限定的参数。</span><span class="sxs-lookup"><span data-stu-id="c922f-886">An <see cref="T:System.Xml.Xsl.XsltArgumentList" /> containing the namespace-qualified arguments used as input to the transformation.</span></span></param>
        <param name="output"><span data-ttu-id="c922f-887">要输出到的 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-887">The <see cref="T:System.Xml.XmlWriter" /> to which you want to output.</span></span></param>
        <param name="resolver"><span data-ttu-id="c922f-888">用于解析 XSLT <see cref="T:System.Xml.XmlResolver" />document()<c>函数的</c>。</span><span class="sxs-lookup"><span data-stu-id="c922f-888">The <see cref="T:System.Xml.XmlResolver" /> used to resolve the XSLT <c>document()</c> function.</span></span> <span data-ttu-id="c922f-889">如果为 <see langword="null" />，则不解析 <c>document()</c> 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-889">If this is <see langword="null" />, the <c>document()</c> function is not resolved.</span></span>  
  
<span data-ttu-id="c922f-890">完成 <see cref="T:System.Xml.XmlResolver" /> 方法后不缓存 <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-890">The <see cref="T:System.Xml.XmlResolver" /> is not cached after the <see cref="M:System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)" /> method completes.</span></span></param>
        <summary><span data-ttu-id="c922f-891">使用指定的参数转换 <see cref="T:System.Xml.XPath.XPathNavigator" /> 中的 XML 数据，并将结果输出到 <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-891">Transforms the XML data in the <see cref="T:System.Xml.XPath.XPathNavigator" /> using the specified args and outputs the result to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-892"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-892">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-893"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-893">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-894">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-894">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-895"><xref:System.Xml.Xsl.XslTransform> 支持 XSLT 1.0 语法。</span><span class="sxs-lookup"><span data-stu-id="c922f-895"><xref:System.Xml.Xsl.XslTransform> supports the XSLT 1.0 syntax.</span></span> <span data-ttu-id="c922f-896">XSLT 样式表必须包括命名空间声明 `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`。</span><span class="sxs-lookup"><span data-stu-id="c922f-896">The XSLT style sheet must include the namespace declaration `xmlns:xsl= http://www.w3.org/1999/XSL/Transform`.</span></span>  
  
 <span data-ttu-id="c922f-897">`args` 与样式表中定义的 `xsl:param` 元素匹配。</span><span class="sxs-lookup"><span data-stu-id="c922f-897">The `args` are matched with the `xsl:param` elements defined in the style sheet.</span></span> <span data-ttu-id="c922f-898">转换选项将应用于整个文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-898">The transformation selections apply to the document as a whole.</span></span> <span data-ttu-id="c922f-899">换言之，如果当前节点是在文档根节点以外的节点树上设置的，则不会阻止转换进程访问已加载文档中的所有节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-899">In other words, if the current node is set on a node tree other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</span></span> <span data-ttu-id="c922f-900">执行转换后，<xref:System.Xml.XPath.XPathNavigator> 仍处于其原始状态。</span><span class="sxs-lookup"><span data-stu-id="c922f-900">After the transformation is performed, the <xref:System.Xml.XPath.XPathNavigator> remains in its original state.</span></span> <span data-ttu-id="c922f-901">这意味着，在调用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法之后，当前节点将保留在转换过程之前的节点。</span><span class="sxs-lookup"><span data-stu-id="c922f-901">This means that the node, that is current before the transformation process, remains the current node after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method has been called.</span></span>  
  
 <span data-ttu-id="c922f-902">当输出到 <xref:System.Xml.XmlWriter> 时，不支持 `xsl:output` 元素（`xsl:output` 被忽略）。</span><span class="sxs-lookup"><span data-stu-id="c922f-902">The `xsl:output` element is not supported when outputting to an <xref:System.Xml.XmlWriter> (`xsl:output` is ignored).</span></span> <span data-ttu-id="c922f-903">有关详细信息，请参阅[XslTransform 的输出](~/docs/standard/data/xml/outputs-from-an-xsltransform.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-903">See [Outputs from an XslTransform](~/docs/standard/data/xml/outputs-from-an-xsltransform.md) for more information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c922f-904">下面的示例在执行 XSLT 转换之前加载并编辑 XML 文档。</span><span class="sxs-lookup"><span data-stu-id="c922f-904">The following example loads and edits an XML document before performing an XSLT transform.</span></span>  
  
 [!code-cpp[XslTransform.Transform2#1](~/samples/snippets/cpp/VS_Snippets_Data/XslTransform.Transform2/CPP/trans_snip.cpp#1)]
 [!code-csharp[XslTransform.Transform2#1](~/samples/snippets/csharp/VS_Snippets_Data/XslTransform.Transform2/CS/trans_snip.cs#1)]
 [!code-vb[XslTransform.Transform2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XslTransform.Transform2/VB/trans_snip.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c922f-905">处理 XSLT 转换时出错。</span><span class="sxs-lookup"><span data-stu-id="c922f-905">There was an error processing the XSLT transformation.</span></span>  
  
<span data-ttu-id="c922f-906">注意：这是对早期版本行为的更改。</span><span class="sxs-lookup"><span data-stu-id="c922f-906">Note: This is a change in behavior from earlier versions.</span></span> <span data-ttu-id="c922f-907">如果使用的是 Microsoft .NET Framework 1.1 版或更早版本，则会引发 <see cref="T:System.Xml.Xsl.XsltException" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-907">An <see cref="T:System.Xml.Xsl.XsltException" /> is thrown if you are using Microsoft .NET Framework version 1.1 or earlier.</span></span></exception>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
        <altmember cref="T:System.Xml.XmlSecureResolver" />
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <related type="Article" href="https://msdn.microsoft.com/library/d2758ea1-03f6-47bd-88d2-0fb7ccdb2fab"><span data-ttu-id="c922f-908">XslTransform 类中任意行为的实现</span><span class="sxs-lookup"><span data-stu-id="c922f-908">Implementation of Discretionary Behaviors in the XslTransform Class</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlResolver : System.Xml.XmlResolver" Usage="System.Xml.Xsl.XslTransform.XmlResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("You should pass XmlResolver to Transform() method")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c922f-909">设置调用 <see cref="T:System.Xml.XmlResolver" /> 方法时用于解析外部资源的 <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-909">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve external resources when the <see cref="Overload:System.Xml.Xsl.XslTransform.Transform" /> method is called.</span></span></summary>
        <value><span data-ttu-id="c922f-910">要在转换期间使用的 <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="c922f-910">The <see cref="T:System.Xml.XmlResolver" /> to use during transformation.</span></span> <span data-ttu-id="c922f-911">如果设置为 <see langword="null" />，则不解析 XSLT <c>document （）</c>函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-911">If set to <see langword="null" />, the XSLT <c>document()</c> function is not resolved.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c922f-912"><xref:System.Xml.Xsl.XslTransform> 类在 .NET Framework 版本2.0 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-912">The <xref:System.Xml.Xsl.XslTransform> class is obsolete in the .NET Framework version 2.0.</span></span> <span data-ttu-id="c922f-913"><xref:System.Xml.Xsl.XslCompiledTransform> 类是新的 XSLT 处理器。</span><span class="sxs-lookup"><span data-stu-id="c922f-913">The <xref:System.Xml.Xsl.XslCompiledTransform> class is the new XSLT processor.</span></span> <span data-ttu-id="c922f-914">有关详细信息，请参阅[使用 XslCompiledTransform 类](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)和[从 XslTransform 类迁移](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)。</span><span class="sxs-lookup"><span data-stu-id="c922f-914">For more information, see [Using the XslCompiledTransform Class](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md) and [Migrating From the XslTransform Class](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md).</span></span>  
  
 <span data-ttu-id="c922f-915">在 .NET Framework 版本1.1 中，应用程序的信任级别确定了默认行为：</span><span class="sxs-lookup"><span data-stu-id="c922f-915">In version 1.1 of the .NET Framework, the trust level of the application determines the default behavior:</span></span>  
  
 <span data-ttu-id="c922f-916">`Fully trusted code:` 没有用户凭据的默认 <xref:System.Xml.XmlUrlResolver> 用于解析 `document()` 函数。</span><span class="sxs-lookup"><span data-stu-id="c922f-916">`Fully trusted code:` A default <xref:System.Xml.XmlUrlResolver> with no user credentials is used to resolve the `document()` function.</span></span> <span data-ttu-id="c922f-917">如果访问外部资源需要身份验证，请使用此属性指定具有所需凭据的 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="c922f-917">If authentication is required to access the external resource, use this property to specify an <xref:System.Xml.XmlResolver> with the necessary credentials.</span></span>  
  
 <span data-ttu-id="c922f-918">`Semi-trusted code:` 属性设置为 `null`，这意味着 `document()` 函数未解析。</span><span class="sxs-lookup"><span data-stu-id="c922f-918">`Semi-trusted code:` The property is set to `null`, which means the `document()` function is not resolved.</span></span> <span data-ttu-id="c922f-919">由于指定 <xref:System.Xml.XmlResolver>需要完全信任，因此也不能设置此属性。</span><span class="sxs-lookup"><span data-stu-id="c922f-919">Because full trust is required to specify an <xref:System.Xml.XmlResolver>, this property also cannot be set.</span></span>  
  
 <span data-ttu-id="c922f-920">调用 XSLT `document()` 函数时，将使用此解析程序。</span><span class="sxs-lookup"><span data-stu-id="c922f-920">This resolver is used when the XSLT `document()` function is invoked.</span></span> <span data-ttu-id="c922f-921">它不用于解析样式表中引用 `xsl:import` 和 `xsl:include` 元素。</span><span class="sxs-lookup"><span data-stu-id="c922f-921">It is not used to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet.</span></span> <span data-ttu-id="c922f-922">若要指定用于解析样式表中引用的 `xsl:import` 和 `xsl:include` 元素的 <xref:System.Xml.XmlResolver>，请使用 <xref:System.Xml.Xsl.XslTransform.Load%2A> 重载，该重载采用 <xref:System.Xml.XmlResolver> 作为其参数之一。</span><span class="sxs-lookup"><span data-stu-id="c922f-922">To specify an <xref:System.Xml.XmlResolver> to use to resolve `xsl:import` and `xsl:include` elements referenced in the style sheet, use the <xref:System.Xml.Xsl.XslTransform.Load%2A> overload, which takes an <xref:System.Xml.XmlResolver> as one of its arguments.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c922f-923">此属性在 .NET Framework 版本1.1 中已过时。</span><span class="sxs-lookup"><span data-stu-id="c922f-923">This property is obsolete in version 1.1 of the .NET Framework.</span></span> <span data-ttu-id="c922f-924">建议的做法是使用 <xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法指定 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="c922f-924">Specifying an <xref:System.Xml.XmlResolver> using the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method is the recommended practice.</span></span> <span data-ttu-id="c922f-925">在这种情况下，<xref:System.Xml.Xsl.XslTransform.Transform%2A> 方法完成后，不会缓存 <xref:System.Xml.XmlResolver>。</span><span class="sxs-lookup"><span data-stu-id="c922f-925">In this case, the <xref:System.Xml.XmlResolver> is not cached after the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method completes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlResolver.Credentials" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
  </Members>
</Type>
