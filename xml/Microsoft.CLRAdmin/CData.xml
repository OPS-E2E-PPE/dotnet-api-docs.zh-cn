<Type Name="CData" FullName="Microsoft.CLRAdmin.CData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eeefce2eac9c69b54c8a3b8fba6c6e840274a63f" /><Meta Name="ms.sourcegitcommit" Value="f11e0152a1dd5d85dbd684f07123f1829eed3f3a" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/17/2020" /><Meta Name="ms.locfileid" Value="76165319" /></Metadata><TypeSignature Language="C#" Value="public class CData : Microsoft.CLRAdmin.IComponentData, Microsoft.CLRAdmin.IExtendContextMenu, Microsoft.CLRAdmin.IExtendPropertySheet2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CData extends System.Object implements class Microsoft.CLRAdmin.IComponentData, class Microsoft.CLRAdmin.IExtendContextMenu, class Microsoft.CLRAdmin.IExtendPropertySheet2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CLRAdmin.CData" />
  <TypeSignature Language="VB.NET" Value="Public Class CData&#xA;Implements IComponentData, IExtendContextMenu, IExtendPropertySheet2" />
  <TypeSignature Language="C++ CLI" Value="public ref class CData : Microsoft::CLRAdmin::IComponentData, Microsoft::CLRAdmin::IExtendContextMenu, Microsoft::CLRAdmin::IExtendPropertySheet2" />
  <TypeSignature Language="F#" Value="type CData = class&#xA;    interface IComponentData&#xA;    interface IExtendPropertySheet2&#xA;    interface IExtendContextMenu" />
  <AssemblyInfo>
    <AssemblyName>mscorcfg</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CLRAdmin.IComponentData</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.CLRAdmin.IExtendContextMenu</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.CLRAdmin.IExtendPropertySheet2</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1270e004-f895-42be-8070-df90d60cbb75")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMenuItems">
      <MemberSignature Language="C#" Value="public void AddMenuItems (Microsoft.CLRAdmin.IDataObject piDataObject, Microsoft.CLRAdmin.IContextMenuCallback piCallback, ref int pInsertionAllowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddMenuItems(class Microsoft.CLRAdmin.IDataObject piDataObject, class Microsoft.CLRAdmin.IContextMenuCallback piCallback, int32&amp; pInsertionAllowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.AddMenuItems(Microsoft.CLRAdmin.IDataObject,Microsoft.CLRAdmin.IContextMenuCallback,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMenuItems (piDataObject As IDataObject, piCallback As IContextMenuCallback, ByRef pInsertionAllowed As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddMenuItems(Microsoft::CLRAdmin::IDataObject ^ piDataObject, Microsoft::CLRAdmin::IContextMenuCallback ^ piCallback, int % pInsertionAllowed);" />
      <MemberSignature Language="F#" Value="abstract member AddMenuItems : Microsoft.CLRAdmin.IDataObject * Microsoft.CLRAdmin.IContextMenuCallback * int -&gt; unit&#xA;override this.AddMenuItems : Microsoft.CLRAdmin.IDataObject * Microsoft.CLRAdmin.IContextMenuCallback * int -&gt; unit" Usage="cData.AddMenuItems (piDataObject, piCallback, pInsertionAllowed)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IExtendContextMenu.AddMenuItems(Microsoft.CLRAdmin.IDataObject,Microsoft.CLRAdmin.IContextMenuCallback,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="piDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
        <Parameter Name="piCallback" Type="Microsoft.CLRAdmin.IContextMenuCallback" />
        <Parameter Name="pInsertionAllowed" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="piDataObject">指向菜单数据对象上的 <see cref="T:Microsoft.CLRAdmin.IDataObject" /> 的指针，AddMenuItems 向该菜单的快捷菜单添加项。</param>
        <param name="piCallback">一个指针，指向可以向快捷菜单添加项的 <see cref="T:Microsoft.CLRAdmin.IContextMenuCallback" />。</param>
        <param name="pInsertionAllowed">可以使用的菜单项插入点，该插入点由 MMC 定义。</param>
        <summary>向现有快捷菜单添加项。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public void Command (int lCommandID, Microsoft.CLRAdmin.IDataObject piDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Command(int32 lCommandID, class Microsoft.CLRAdmin.IDataObject piDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.Command(System.Int32,Microsoft.CLRAdmin.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Command (lCommandID As Integer, piDataObject As IDataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Command(int lCommandID, Microsoft::CLRAdmin::IDataObject ^ piDataObject);" />
      <MemberSignature Language="F#" Value="abstract member Command : int * Microsoft.CLRAdmin.IDataObject -&gt; unit&#xA;override this.Command : int * Microsoft.CLRAdmin.IDataObject -&gt; unit" Usage="cData.Command (lCommandID, piDataObject)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IExtendContextMenu.Command(System.Int32,Microsoft.CLRAdmin.IDataObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lCommandID" Type="System.Int32" />
        <Parameter Name="piDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
      </Parameters>
      <Docs>
        <param name="lCommandID">菜单项的命令标识符。</param>
        <param name="piDataObject">一个指针，指向显示快捷菜单的对象上的 <see cref="T:Microsoft.CLRAdmin.IDataObject" />。</param>
        <summary>如果添加的一个快捷菜单项被选定，则调用 Command 方法。</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CompareObjects">
      <MemberSignature Language="C#" Value="public int CompareObjects (Microsoft.CLRAdmin.IDataObject lpDataObjectA, Microsoft.CLRAdmin.IDataObject lpDataObjectB);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareObjects(class Microsoft.CLRAdmin.IDataObject lpDataObjectA, class Microsoft.CLRAdmin.IDataObject lpDataObjectB) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.CompareObjects(Microsoft.CLRAdmin.IDataObject,Microsoft.CLRAdmin.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareObjects (lpDataObjectA As IDataObject, lpDataObjectB As IDataObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareObjects(Microsoft::CLRAdmin::IDataObject ^ lpDataObjectA, Microsoft::CLRAdmin::IDataObject ^ lpDataObjectB);" />
      <MemberSignature Language="F#" Value="abstract member CompareObjects : Microsoft.CLRAdmin.IDataObject * Microsoft.CLRAdmin.IDataObject -&gt; int&#xA;override this.CompareObjects : Microsoft.CLRAdmin.IDataObject * Microsoft.CLRAdmin.IDataObject -&gt; int" Usage="cData.CompareObjects (lpDataObjectA, lpDataObjectB)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IComponentData.CompareObjects(Microsoft.CLRAdmin.IDataObject,Microsoft.CLRAdmin.IDataObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpDataObjectA" Type="Microsoft.CLRAdmin.IDataObject" />
        <Parameter Name="lpDataObjectB" Type="Microsoft.CLRAdmin.IDataObject" />
      </Parameters>
      <Docs>
        <param name="lpDataObjectA">To be added.</param>
        <param name="lpDataObjectB">To be added.</param>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateComponent">
      <MemberSignature Language="C#" Value="public void CreateComponent (out Microsoft.CLRAdmin.IComponent ppComponent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateComponent([out] class Microsoft.CLRAdmin.IComponent&amp; ppComponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.CreateComponent(Microsoft.CLRAdmin.IComponent@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateComponent (ByRef ppComponent As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateComponent([Runtime::InteropServices::Out] Microsoft::CLRAdmin::IComponent ^ % ppComponent);" />
      <MemberSignature Language="F#" Value="abstract member CreateComponent : IComponent -&gt; unit&#xA;override this.CreateComponent : IComponent -&gt; unit" Usage="cData.CreateComponent ppComponent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IComponentData.CreateComponent(Microsoft.CLRAdmin.IComponent@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppComponent" Type="Microsoft.CLRAdmin.IComponent" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppComponent">To be added.</param>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePropertyPages">
      <MemberSignature Language="C#" Value="public int CreatePropertyPages (Microsoft.CLRAdmin.IPropertySheetCallback lpProvider, IntPtr handle, Microsoft.CLRAdmin.IDataObject lpIDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CreatePropertyPages(class Microsoft.CLRAdmin.IPropertySheetCallback lpProvider, native int handle, class Microsoft.CLRAdmin.IDataObject lpIDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.CreatePropertyPages(Microsoft.CLRAdmin.IPropertySheetCallback,System.IntPtr,Microsoft.CLRAdmin.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreatePropertyPages (lpProvider As IPropertySheetCallback, handle As IntPtr, lpIDataObject As IDataObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CreatePropertyPages(Microsoft::CLRAdmin::IPropertySheetCallback ^ lpProvider, IntPtr handle, Microsoft::CLRAdmin::IDataObject ^ lpIDataObject);" />
      <MemberSignature Language="F#" Value="abstract member CreatePropertyPages : Microsoft.CLRAdmin.IPropertySheetCallback * nativeint * Microsoft.CLRAdmin.IDataObject -&gt; int&#xA;override this.CreatePropertyPages : Microsoft.CLRAdmin.IPropertySheetCallback * nativeint * Microsoft.CLRAdmin.IDataObject -&gt; int" Usage="cData.CreatePropertyPages (lpProvider, handle, lpIDataObject)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IExtendPropertySheet2.CreatePropertyPages(Microsoft.CLRAdmin.IPropertySheetCallback,System.IntPtr,Microsoft.CLRAdmin.IDataObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpProvider" Type="Microsoft.CLRAdmin.IPropertySheetCallback" />
        <Parameter Name="handle" Type="System.IntPtr" />
        <Parameter Name="lpIDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
      </Parameters>
      <Docs>
        <param name="lpProvider">指向 <see cref="T:Microsoft.CLRAdmin.IPropertySheetCallback" /> 的指针。</param>
        <param name="handle">用于将通知消息路由到适当的 <see cref="T:Microsoft.CLRAdmin.IComponent" /> 或 <see cref="T:Microsoft.CLRAdmin.IComponentData" /> 的句柄。</param>
        <param name="lpIDataObject">一个指针，它指向包含关于范围项或结果项的上下文信息的对象上的 <see cref="T:Microsoft.CLRAdmin.IDataObject" />。</param>
        <summary>向属性表添加页。</summary>
        <returns>| 返回值 | 说明 | | --- | --- | | S\_OK | <see cref="M:Microsoft.CLRAdmin.CData.CreatePropertyPages(Microsoft.CLRAdmin.IPropertySheetCallback,System.IntPtr,Microsoft.CLRAdmin.IDataObject)" /> 方法已成功添加属性表页。 | | S\_FALSE | <see cref="M:Microsoft.CLRAdmin.CData.CreatePropertyPages(Microsoft.CLRAdmin.IPropertySheetCallback,System.IntPtr,Microsoft.CLRAdmin.IDataObject)" /> 方法未添加任何属性表页。 | | E\_UNEXPECTED | 发生意外错误。 | | E\_INVALIDARG | 一个或多个参数无效。 |</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Destroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.Destroy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Destroy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Destroy();" />
      <MemberSignature Language="F#" Value="abstract member Destroy : unit -&gt; unit&#xA;override this.Destroy : unit -&gt; unit" Usage="cData.Destroy " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IComponentData.Destroy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayInfo">
      <MemberSignature Language="C#" Value="public void GetDisplayInfo (ref Microsoft.CLRAdmin.SCOPEDATAITEM sdi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDisplayInfo(valuetype Microsoft.CLRAdmin.SCOPEDATAITEM&amp; sdi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.GetDisplayInfo(Microsoft.CLRAdmin.SCOPEDATAITEM@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDisplayInfo (ByRef sdi As SCOPEDATAITEM)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetDisplayInfo(Microsoft::CLRAdmin::SCOPEDATAITEM % sdi);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayInfo : SCOPEDATAITEM -&gt; unit&#xA;override this.GetDisplayInfo : SCOPEDATAITEM -&gt; unit" Usage="cData.GetDisplayInfo sdi" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IComponentData.GetDisplayInfo(Microsoft.CLRAdmin.SCOPEDATAITEM@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sdi" Type="Microsoft.CLRAdmin.SCOPEDATAITEM" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="sdi">To be added.</param>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWatermarks">
      <MemberSignature Language="C#" Value="public int GetWatermarks (Microsoft.CLRAdmin.IDataObject lpIDataObject, out IntPtr lphWatermark, out IntPtr lphHeader, out IntPtr lphPalette, out int bStretch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetWatermarks(class Microsoft.CLRAdmin.IDataObject lpIDataObject, [out] native int&amp; lphWatermark, [out] native int&amp; lphHeader, [out] native int&amp; lphPalette, [out] int32&amp; bStretch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.GetWatermarks(Microsoft.CLRAdmin.IDataObject,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWatermarks (lpIDataObject As IDataObject, ByRef lphWatermark As IntPtr, ByRef lphHeader As IntPtr, ByRef lphPalette As IntPtr, ByRef bStretch As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetWatermarks(Microsoft::CLRAdmin::IDataObject ^ lpIDataObject, [Runtime::InteropServices::Out] IntPtr % lphWatermark, [Runtime::InteropServices::Out] IntPtr % lphHeader, [Runtime::InteropServices::Out] IntPtr % lphPalette, [Runtime::InteropServices::Out] int % bStretch);" />
      <MemberSignature Language="F#" Value="abstract member GetWatermarks : Microsoft.CLRAdmin.IDataObject * nativeint * nativeint * nativeint * int -&gt; int&#xA;override this.GetWatermarks : Microsoft.CLRAdmin.IDataObject * nativeint * nativeint * nativeint * int -&gt; int" Usage="cData.GetWatermarks (lpIDataObject, lphWatermark, lphHeader, lphPalette, bStretch)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IExtendPropertySheet2.GetWatermarks(Microsoft.CLRAdmin.IDataObject,System.IntPtr@,System.IntPtr@,System.IntPtr@,System.Int32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpIDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
        <Parameter Name="lphWatermark" Type="System.IntPtr" RefType="out" />
        <Parameter Name="lphHeader" Type="System.IntPtr" RefType="out" />
        <Parameter Name="lphPalette" Type="System.IntPtr" RefType="out" />
        <Parameter Name="bStretch" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="lpIDataObject">包含关于范围项或结果项的上下文信息的对象上的 <see cref="T:Microsoft.CLRAdmin.IDataObject" />。</param>
        <param name="lphWatermark">当此方法返回时，是充当 Wizard 97 页水印的位图的句柄。</param>
        <param name="lphHeader">当此方法返回时，是充当 Wizard 97 页页眉的位图的句柄。</param>
        <param name="lphPalette">当此方法返回时，是用于 <paramref name="lphWatermark" /> 和 <paramref name="lphHeader" /> 指定的位图的调色板的句柄。</param>
        <param name="bStretch">当此方法返回时，如果应拉伸而不是平铺水印和标头位图，则为 <see langword="true" />；否则为 <see langword="false" />。</param>
        <summary>检索以 Wizard 97 样式向导形式实现的向导表的水印和标头位图。</summary>
        <returns>| 返回值 | 说明 | | --- | --- | | etch | 如果应拉伸而不是平铺水印和标头位图，则为 <see langword="true" />；否则为 <see langword="false" />。 |</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (object pUnknown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object pUnknown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (pUnknown As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::Object ^ pUnknown);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit&#xA;override this.Initialize : obj -&gt; unit" Usage="cData.Initialize pUnknown" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IComponentData.Initialize(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pUnknown" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pUnknown">To be added.</param>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public int Notify (Microsoft.CLRAdmin.IDataObject lpDataObject, uint aevent, IntPtr arg, IntPtr param);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Notify(class Microsoft.CLRAdmin.IDataObject lpDataObject, unsigned int32 aevent, native int arg, native int param) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.Notify(Microsoft.CLRAdmin.IDataObject,System.UInt32,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Function Notify (lpDataObject As IDataObject, aevent As UInteger, arg As IntPtr, param As IntPtr) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Notify(Microsoft::CLRAdmin::IDataObject ^ lpDataObject, System::UInt32 aevent, IntPtr arg, IntPtr param);" />
      <MemberSignature Language="F#" Value="abstract member Notify : Microsoft.CLRAdmin.IDataObject * uint32 * nativeint * nativeint -&gt; int&#xA;override this.Notify : Microsoft.CLRAdmin.IDataObject * uint32 * nativeint * nativeint -&gt; int" Usage="cData.Notify (lpDataObject, aevent, arg, param)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IComponentData.Notify(Microsoft.CLRAdmin.IDataObject,System.UInt32,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
        <Parameter Name="aevent" Type="System.UInt32" />
        <Parameter Name="arg" Type="System.IntPtr" />
        <Parameter Name="param" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="lpDataObject">To be added.</param>
        <param name="aevent">To be added.</param>
        <param name="arg">To be added.</param>
        <param name="param">To be added.</param>
        <summary>此 API 支持 .NET Framework 基础结构，但不应在代码中直接使用。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryDataObject">
      <MemberSignature Language="C#" Value="public void QueryDataObject (int cookie, uint type, out Microsoft.CLRAdmin.IDataObject ppDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueryDataObject(int32 cookie, unsigned int32 type, [out] class Microsoft.CLRAdmin.IDataObject&amp; ppDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.QueryDataObject(System.Int32,System.UInt32,Microsoft.CLRAdmin.IDataObject@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueryDataObject (cookie As Integer, type As UInteger, ByRef ppDataObject As IDataObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void QueryDataObject(int cookie, System::UInt32 type, [Runtime::InteropServices::Out] Microsoft::CLRAdmin::IDataObject ^ % ppDataObject);" />
      <MemberSignature Language="F#" Value="abstract member QueryDataObject : int * uint32 * IDataObject -&gt; unit&#xA;override this.QueryDataObject : int * uint32 * IDataObject -&gt; unit" Usage="cData.QueryDataObject (cookie, type, ppDataObject)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IComponentData.QueryDataObject(System.Int32,System.UInt32,Microsoft.CLRAdmin.IDataObject@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Int32" />
        <Parameter Name="type" Type="System.UInt32" />
        <Parameter Name="ppDataObject" Type="Microsoft.CLRAdmin.IDataObject" RefType="out" />
      </Parameters>
      <Docs>
        <param name="cookie">To be added.</param>
        <param name="type">To be added.</param>
        <param name="ppDataObject">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPagesFor">
      <MemberSignature Language="C#" Value="public int QueryPagesFor (Microsoft.CLRAdmin.IDataObject lpDataObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 QueryPagesFor(class Microsoft.CLRAdmin.IDataObject lpDataObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CLRAdmin.CData.QueryPagesFor(Microsoft.CLRAdmin.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryPagesFor (lpDataObject As IDataObject) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int QueryPagesFor(Microsoft::CLRAdmin::IDataObject ^ lpDataObject);" />
      <MemberSignature Language="F#" Value="abstract member QueryPagesFor : Microsoft.CLRAdmin.IDataObject -&gt; int&#xA;override this.QueryPagesFor : Microsoft.CLRAdmin.IDataObject -&gt; int" Usage="cData.QueryPagesFor lpDataObject" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.CLRAdmin.IExtendPropertySheet2.QueryPagesFor(Microsoft.CLRAdmin.IDataObject)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorcfg</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lpDataObject" Type="Microsoft.CLRAdmin.IDataObject" />
      </Parameters>
      <Docs>
        <param name="lpDataObject">一个指针，它指向包含关于范围项或结果项的上下文信息的对象上的 <see cref="T:Microsoft.CLRAdmin.IDataObject" />。</param>
        <summary>确定对象是否需要页。</summary>
        <returns>| 返回值 | 说明 | |--- |--- | | S\_OK | 此数据对象的属性存在。 | | E\_UNEXPECTED | 发生意外错误。 | | E\_INVALID | 参数无效。 | | 任何其他错误代码 | 没有为数据对象提供任何页面。 |</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
