<Type Name="SEHException" FullName="System.Runtime.InteropServices.SEHException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e0ca7072945b4f360abde8e5347e55b341c8b52" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75165155" /></Metadata><TypeSignature Language="C#" Value="public class SEHException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SEHException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.SEHException" />
  <TypeSignature Language="VB.NET" Value="Public Class SEHException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class SEHException : System::Runtime::InteropServices::ExternalException" />
  <TypeSignature Language="F#" Value="type SEHException = class&#xA;    inherit ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="355cd-101">表示结构化异常处理 (SEH) 错误。</span><span class="sxs-lookup"><span data-stu-id="355cd-101">Represents structured exception handling (SEH) errors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="355cd-102"><xref:System.Runtime.InteropServices.SEHException> 类处理从非托管代码引发的 SEH 错误，但尚未映射到另一个 .NET Framework 异常。</span><span class="sxs-lookup"><span data-stu-id="355cd-102">The <xref:System.Runtime.InteropServices.SEHException> class handles SEH errors that are thrown from unmanaged code, but that have not been mapped to another .NET Framework exception.</span></span> <span data-ttu-id="355cd-103"><xref:System.Runtime.InteropServices.SEHException> 类还对应于 `HRESULT` `E_FAIL` （0x80004005）。</span><span class="sxs-lookup"><span data-stu-id="355cd-103">The <xref:System.Runtime.InteropServices.SEHException> class also corresponds to the `HRESULT` `E_FAIL` (0x80004005).</span></span>  
  
 <span data-ttu-id="355cd-104">.NET Framework 通常会遇到自动映射到托管等效项的非托管 SEH 异常。</span><span class="sxs-lookup"><span data-stu-id="355cd-104">The .NET Framework often encounters unmanaged SEH exceptions that are automatically mapped to managed equivalents.</span></span> <span data-ttu-id="355cd-105">存在两个常见的非托管 SEH 异常：</span><span class="sxs-lookup"><span data-stu-id="355cd-105">There are two common unmanaged SEH exceptions:</span></span>  
  
-   <span data-ttu-id="355cd-106">`STATUS_NO_MEMORY` 异常会自动映射到 <xref:System.OutOfMemoryException> 类。</span><span class="sxs-lookup"><span data-stu-id="355cd-106">`STATUS_NO_MEMORY` exceptions are automatically mapped to the <xref:System.OutOfMemoryException> class.</span></span>  
  
-   <span data-ttu-id="355cd-107">将自动映射 `STATUS_ACCESS_VIOLATION` 异常，如下所示：</span><span class="sxs-lookup"><span data-stu-id="355cd-107">`STATUS_ACCESS_VIOLATION` exceptions are automatically mapped as follows:</span></span>  
  
    -   <span data-ttu-id="355cd-108">如果应用 `legacyNullReferencePolicy`，则所有访问冲突都将映射到 <xref:System.NullReferenceException> 类。</span><span class="sxs-lookup"><span data-stu-id="355cd-108">If `legacyNullReferencePolicy` is applied, all access violations are mapped to the <xref:System.NullReferenceException> class.</span></span>  
  
    -   <span data-ttu-id="355cd-109">如果尝试读取/写入的地址不在 JIT 编译的代码中，则会将异常映射到 <xref:System.AccessViolationException> 类。</span><span class="sxs-lookup"><span data-stu-id="355cd-109">If the address at which the read/write was attempted is not in JIT-compiled code, the exception is mapped to the <xref:System.AccessViolationException> class.</span></span>  
  
    -   <span data-ttu-id="355cd-110">如果尝试读取/写入的地址在 JIT 编译的代码中，但它不在 OS Null 分区区中，则将异常映射到 <xref:System.AccessViolationException> 类。</span><span class="sxs-lookup"><span data-stu-id="355cd-110">If the address at which the read/write was attempted is in JIT-compiled code, but it is not in the OS Null partition area, the exception is mapped to the <xref:System.AccessViolationException> class.</span></span>  
  
    -   <span data-ttu-id="355cd-111">如果没有 `legacyNullReferencePolicy`，并且尝试读取/写入的地址位于 JIT 编译的代码中，而在 OS Null 分区区中，则异常映射到 <xref:System.NullReferenceException> 类。</span><span class="sxs-lookup"><span data-stu-id="355cd-111">If there is no `legacyNullReferencePolicy`, and the address at which the read/write was attempted is in JIT-compiled code and in the OS Null partition area, the exception is mapped to the <xref:System.NullReferenceException> class.</span></span>  
  
 <span data-ttu-id="355cd-112">默认情况下，不会自动映射到特定异常的任何 SEH 异常都将映射到 <xref:System.Runtime.InteropServices.SEHException> 类。</span><span class="sxs-lookup"><span data-stu-id="355cd-112">Any SEH exception that is not automatically mapped to a specific exception is mapped to the <xref:System.Runtime.InteropServices.SEHException> class by default.</span></span>  
  
 <span data-ttu-id="355cd-113">请注意，<xref:System.Runtime.InteropServices.SEHException> 类不会导致调用C++非托管异常析构函数。</span><span class="sxs-lookup"><span data-stu-id="355cd-113">Note that the <xref:System.Runtime.InteropServices.SEHException> class does not cause unmanaged C++ exception destructors to be called.</span></span> <span data-ttu-id="355cd-114">若要确保调用C++非托管异常析构函数，请在 `catch` 块中使用以下语法。</span><span class="sxs-lookup"><span data-stu-id="355cd-114">To ensure that unmanaged C++ exception destructors are called, use the following syntax in the `catch` block.</span></span>  
  
```vb  
Catch   
     ' Handle catch here.  
End Try  
```  
  
```csharp  
catch  
{  
     // Handle catch here.  
}  
```  
  
```cpp  
catch(…)  
{  
     // Handle catch here.  
}   
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="355cd-115">在 .NET 中处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="355cd-115">Handling and throwing exceptions in .NET</span></span></related>
    <related type="Article" href="~/docs/framework/interop/how-to-map-hresults-and-exceptions.md"><span data-ttu-id="355cd-116">如何：映射 HRESULT 和异常</span><span class="sxs-lookup"><span data-stu-id="355cd-116">How to: Map HRESULTs and Exceptions</span></span></related>
    <related type="Article" href="/cpp/cpp/structured-exception-handling-c-cpp"><span data-ttu-id="355cd-117">Structured Exception Handling (C/C++)</span><span class="sxs-lookup"><span data-stu-id="355cd-117">Structured Exception Handling (C/C++)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="355cd-118">初始化 <see cref="T:System.Runtime.InteropServices.SEHException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="355cd-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="355cd-119">初始化 <see cref="T:System.Runtime.InteropServices.SEHException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="355cd-119">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="355cd-120"><xref:System.Runtime.InteropServices.SEHException> 类从 <xref:System.Runtime.InteropServices.ExternalException> 类继承。</span><span class="sxs-lookup"><span data-stu-id="355cd-120">The <xref:System.Runtime.InteropServices.SEHException> class inherits from the <xref:System.Runtime.InteropServices.ExternalException> class.</span></span> <span data-ttu-id="355cd-121">此构造函数将 <xref:System.Exception> 对象的属性设置为下表中的值。</span><span class="sxs-lookup"><span data-stu-id="355cd-121">This constructor sets the properties of the <xref:System.Exception> object to the values in the following table.</span></span>  
  
|<span data-ttu-id="355cd-122">属性</span><span class="sxs-lookup"><span data-stu-id="355cd-122">Property</span></span>|<span data-ttu-id="355cd-123">值</span><span class="sxs-lookup"><span data-stu-id="355cd-123">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="355cd-124">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="355cd-124">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="355cd-125">已本地化的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="355cd-125">A localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : string -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="355cd-126">指示异常原因的消息。</span><span class="sxs-lookup"><span data-stu-id="355cd-126">The message that indicates the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="355cd-127">用指定的消息初始化 <see cref="T:System.Runtime.InteropServices.SEHException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="355cd-127">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class with a specified message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="355cd-128"><xref:System.Runtime.InteropServices.SEHException> 继承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="355cd-128"><xref:System.Runtime.InteropServices.SEHException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span> <span data-ttu-id="355cd-129">此构造函数将设置 <xref:System.Exception> 对象的属性，如下表所示。</span><span class="sxs-lookup"><span data-stu-id="355cd-129">This constructor sets the properties of the <xref:System.Exception> object as shown in the following table.</span></span>  
  
|<span data-ttu-id="355cd-130">属性</span><span class="sxs-lookup"><span data-stu-id="355cd-130">Property</span></span>|<span data-ttu-id="355cd-131">值</span><span class="sxs-lookup"><span data-stu-id="355cd-131">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="355cd-132">空引用（在 Visual Basic 中为 `Nothing`）。</span><span class="sxs-lookup"><span data-stu-id="355cd-132">A null reference (`Nothing` in Visual Basic).</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="355cd-133">`message`</span><span class="sxs-lookup"><span data-stu-id="355cd-133">`message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SEHException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SEHException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="355cd-134">包含序列化对象数据的对象。</span><span class="sxs-lookup"><span data-stu-id="355cd-134">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="355cd-135">与源或目标有关的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="355cd-135">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="355cd-136">从序列化数据初始化 <see cref="T:System.Runtime.InteropServices.SEHException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="355cd-136">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class from serialization data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="355cd-137">在反序列化期间调用此构造函数以重新构造在流上传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="355cd-137">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="355cd-138">有关更多信息，请参见 <xref:System.Runtime.Serialization> 命名空间。</span><span class="sxs-lookup"><span data-stu-id="355cd-138">For more information, see the <xref:System.Runtime.Serialization> namespace.</span></span>  
  
 <span data-ttu-id="355cd-139"><xref:System.Runtime.InteropServices.SEHException> 继承自 <xref:System.Runtime.InteropServices.ExternalException>。</span><span class="sxs-lookup"><span data-stu-id="355cd-139"><xref:System.Runtime.InteropServices.SEHException> inherits from <xref:System.Runtime.InteropServices.ExternalException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="355cd-140"><paramref name="info" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="355cd-140"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SEHException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SEHException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.SEHException : string * Exception -&gt; System.Runtime.InteropServices.SEHException" Usage="new System.Runtime.InteropServices.SEHException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="355cd-141">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="355cd-141">The error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="355cd-142">引起当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="355cd-142">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="355cd-143">如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="355cd-143">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="355cd-144">使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.Runtime.InteropServices.SEHException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="355cd-144">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.SEHException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="355cd-145">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="355cd-145">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="355cd-146"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="355cd-146">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="355cd-147">下表显示 <xref:System.Runtime.InteropServices.SEHException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="355cd-147">The following table shows the initial property values for an instance of <xref:System.Runtime.InteropServices.SEHException>.</span></span>  
  
|<span data-ttu-id="355cd-148">属性</span><span class="sxs-lookup"><span data-stu-id="355cd-148">Property</span></span>|<span data-ttu-id="355cd-149">值</span><span class="sxs-lookup"><span data-stu-id="355cd-149">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="355cd-150">内部异常引用。</span><span class="sxs-lookup"><span data-stu-id="355cd-150">The inner exception reference.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="355cd-151">错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="355cd-151">The error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="355cd-152">在 .NET 中处理和引发异常</span><span class="sxs-lookup"><span data-stu-id="355cd-152">Handling and throwing exceptions in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanResume">
      <MemberSignature Language="C#" Value="public virtual bool CanResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.SEHException.CanResume" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanResume () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanResume();" />
      <MemberSignature Language="F#" Value="abstract member CanResume : unit -&gt; bool&#xA;override this.CanResume : unit -&gt; bool" Usage="sEHException.CanResume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="355cd-153">指示是否可以从异常中恢复，以及代码是否可以从引发异常的地方继续。</span><span class="sxs-lookup"><span data-stu-id="355cd-153">Indicates whether the exception can be recovered from, and whether the code can continue from the point at which the exception was thrown.</span></span></summary>
        <returns><span data-ttu-id="355cd-154">始终为 <see langword="false" />，因为未实现可恢复的异常。</span><span class="sxs-lookup"><span data-stu-id="355cd-154">Always <see langword="false" />, because resumable exceptions are not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="355cd-155">如果 <xref:System.Runtime.InteropServices.SEHException.CanResume%2A> 返回 `true`，则筛选的异常处理程序可以更正导致该异常的问题，而代码将从引发异常的点继续。</span><span class="sxs-lookup"><span data-stu-id="355cd-155">If <xref:System.Runtime.InteropServices.SEHException.CanResume%2A> returns `true`, then a filtered exception handler can correct the problem that caused the exception, and the code will continue from the point at which the exception was thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
