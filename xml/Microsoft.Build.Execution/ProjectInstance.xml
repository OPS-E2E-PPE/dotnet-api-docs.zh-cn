<Type Name="ProjectInstance" FullName="Microsoft.Build.Execution.ProjectInstance">
  <Metadata><Meta Name="ms.openlocfilehash" Value="14d36e603aa866b266547cb376349c93b0180f2b" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76957563" /></Metadata><TypeSignature Language="C#" Value="public class ProjectInstance" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectInstance extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Execution.ProjectInstance" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectInstance" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectInstance" />
  <TypeSignature Language="F#" Value="type ProjectInstance = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="59a88-101">表示一个项目实例。</span><span class="sxs-lookup"><span data-stu-id="59a88-101">Represents a project instance.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-102">当克隆一个项目时，此类的实例。</span><span class="sxs-lookup"><span data-stu-id="59a88-102">Instances of this class result when a project is cloned.</span></span> <span data-ttu-id="59a88-103">构造函数是内部的，目的是要求用户从现有项目创建项目实例。</span><span class="sxs-lookup"><span data-stu-id="59a88-103">Constructors are internal in order to require users to create project instances from existing projects.</span></span>  
  
 <span data-ttu-id="59a88-104">新项目实例是不可变的，但实例项可添加到这些实例，并在其上设置实例属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-104">New project instances are immutable, except that instance items can be added to them and instance properties set on them.</span></span> <span data-ttu-id="59a88-105">项目实例非常有用，因为它们可以在不影响原始项目的情况下进行修改和生成。</span><span class="sxs-lookup"><span data-stu-id="59a88-105">Project instances are useful because they can be modified and built several times without disturbing the original project.</span></span>  
  
 <span data-ttu-id="59a88-106">此类及其任何组成部分均不允许引用 <xref:Microsoft.Build.Construction> 或 <xref:Microsoft.Build.Evaluation> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-106">Neither this class nor any of its constituents is allowed to have references to <xref:Microsoft.Build.Construction> or <xref:Microsoft.Build.Evaluation> objects.</span></span>  
  
 <span data-ttu-id="59a88-107">不公开项目实例目标、主机服务和任务注册表。</span><span class="sxs-lookup"><span data-stu-id="59a88-107">Project instance targets, host services, and the task registry are not exposed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59a88-108">创建一个新项目实例。</span><span class="sxs-lookup"><span data-stu-id="59a88-108">Creates a new project instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="59a88-109">项目根元素。</span><span class="sxs-lookup"><span data-stu-id="59a88-109">The project root element.</span></span></param>
        <summary><span data-ttu-id="59a88-110">使用默认的项目集合，从给定的项目根创建一个新项目实例，并对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="59a88-110">Creates a new project instance and initializes it from the given project root, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-111">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-111">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="59a88-112">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-112">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="59a88-113">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-113">The name of the project file.</span></span></param>
        <summary><span data-ttu-id="59a88-114">使用默认的项目集合，从给定的项目文件创建一个新项目实例，并对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="59a88-114">Creates a new project instance and initializes it from the given project file, using the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-115">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-115">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="59a88-116">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-116">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="59a88-117">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-117">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="59a88-118">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-118">The global properties to use.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="59a88-119">工具版本。</span><span class="sxs-lookup"><span data-stu-id="59a88-119">The tools version.</span></span></param>
        <summary><span data-ttu-id="59a88-120">使用给定的全局属性、工具版本和默认项目集合，从给定的项目文件创建一个新项目实例，并对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="59a88-120">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-121">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-121">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="59a88-122">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-122">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="59a88-123">项目根元素</span><span class="sxs-lookup"><span data-stu-id="59a88-123">The project root element</span></span></param>
        <param name="globalProperties"><span data-ttu-id="59a88-124">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-124">The global properties to use.</span></span> <span data-ttu-id="59a88-125">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-125">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="59a88-126">工具版本。</span><span class="sxs-lookup"><span data-stu-id="59a88-126">The tools version.</span></span> <span data-ttu-id="59a88-127">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-127">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="59a88-128">项目集合</span><span class="sxs-lookup"><span data-stu-id="59a88-128">Project collection</span></span></param>
        <summary><span data-ttu-id="59a88-129">使用给定的全局属性、工具版本和项目集合，从给定的项目根创建一个新项目实例，并对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="59a88-129">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-130">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-130">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="59a88-131">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-131">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="59a88-132">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-132">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="59a88-133">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-133">The global properties to use.</span></span> <span data-ttu-id="59a88-134">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-134">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="59a88-135">工具版本。</span><span class="sxs-lookup"><span data-stu-id="59a88-135">The tools version.</span></span> <span data-ttu-id="59a88-136">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-136">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="59a88-137">项目集合</span><span class="sxs-lookup"><span data-stu-id="59a88-137">Project collection</span></span></param>
        <summary><span data-ttu-id="59a88-138">使用给定的全局属性、工具版本和项目集合，从给定的项目文件创建一个新项目实例，并对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="59a88-138">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-139">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-139">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="59a88-140">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-140">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="59a88-141">项目根元素。</span><span class="sxs-lookup"><span data-stu-id="59a88-141">The project root element.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="59a88-142">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-142">The global properties to use.</span></span> <span data-ttu-id="59a88-143">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-143">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="59a88-144">工具版本。</span><span class="sxs-lookup"><span data-stu-id="59a88-144">The tools version.</span></span> <span data-ttu-id="59a88-145">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-145">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="59a88-146">子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="59a88-146">The sub toolset version.</span></span> <span data-ttu-id="59a88-147">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-147">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="59a88-148">项目集合。</span><span class="sxs-lookup"><span data-stu-id="59a88-148">Project collection.</span></span></param>
        <summary><span data-ttu-id="59a88-149">使用给定的全局属性、工具版本和项目集合，从给定的项目根创建一个新项目实例，并对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="59a88-149">Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-150">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-150">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="59a88-151">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-151">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProjectInstance(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Execution.ProjectInstance : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="new Microsoft.Build.Execution.ProjectInstance (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="59a88-152">项目文件的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-152">The name of the project file.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="59a88-153">要使用的全局属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-153">The global properties to use.</span></span> <span data-ttu-id="59a88-154">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-154">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="59a88-155">工具版本。</span><span class="sxs-lookup"><span data-stu-id="59a88-155">The tools version.</span></span> <span data-ttu-id="59a88-156">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-156">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="59a88-157">子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="59a88-157">The sub toolset version.</span></span> <span data-ttu-id="59a88-158">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-158">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="59a88-159">项目集合。</span><span class="sxs-lookup"><span data-stu-id="59a88-159">Project collection.</span></span></param>
        <summary><span data-ttu-id="59a88-160">使用给定的全局属性、工具版本、子工具集版本和项目集合，从给定的项目文件创建一个新项目实例，并对其进行初始化。</span><span class="sxs-lookup"><span data-stu-id="59a88-160">Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, sub toolset version, and project collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-161">不创建任何中间 <xref:Microsoft.Build.Evaluation.Project> 对象。</span><span class="sxs-lookup"><span data-stu-id="59a88-161">No intermediate <xref:Microsoft.Build.Evaluation.Project> object is created.</span></span> <span data-ttu-id="59a88-162">如果要生成但不能显示或编辑项目，此方法非常有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-162">This is useful if a project is going to be built, but not displayed or edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59a88-163">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="59a88-163">Adds an item with no metadata to the project.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="59a88-164">要添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="59a88-164">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="59a88-165">该项的计算的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="59a88-165">The evaluated Include attribute of the item.</span></span></param>
        <summary><span data-ttu-id="59a88-166">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="59a88-166">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="59a88-167">新项目。</span><span class="sxs-lookup"><span data-stu-id="59a88-167">The new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-168">我们不会使用 ProjectItemInstance 来确保没有其他 ProjectInstance 正在使用的帐户。</span><span class="sxs-lookup"><span data-stu-id="59a88-168">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectItemInstance AddItem(string itemType, string evaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, evaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As ProjectItemInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectItemInstance ^ AddItem(System::String ^ itemType, System::String ^ evaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.Build.Execution.ProjectItemInstance" Usage="projectInstance.AddItem (itemType, evaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectItemInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="evaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="59a88-169">要添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="59a88-169">The item type of the item to be added.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="59a88-170">该项的计算的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="59a88-170">The evaluated Include attribute of the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="59a88-171">该项的元数据。</span><span class="sxs-lookup"><span data-stu-id="59a88-171">The metadata of the item.</span></span></param>
        <summary><span data-ttu-id="59a88-172">向项目中添加包含给定元数据的项。</span><span class="sxs-lookup"><span data-stu-id="59a88-172">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="59a88-173">返回新项。</span><span class="sxs-lookup"><span data-stu-id="59a88-173">Return the new item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-174">我们不会使用 ProjectItemInstance 来确保没有其他 ProjectInstance 正在使用的帐户。</span><span class="sxs-lookup"><span data-stu-id="59a88-174">We don't take a ProjectItemInstance to make sure we don't have one that's already in use by another ProjectInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59a88-175">使用项目集合的记录器生成项目的默认目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-175">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="projectInstance.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59a88-176">使用项目集合的记录器生成项目的默认目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-176">Builds the default targets of the project with loggers of the project collection.</span></span></summary>
        <returns><span data-ttu-id="59a88-177">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-177"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="59a88-178">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-178">The loggers to use for the build.</span></span> <span data-ttu-id="59a88-179">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-179">May be null.</span></span></param>
        <summary><span data-ttu-id="59a88-180">使用给定的记录器生成项目的默认目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-180">Builds the default targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="59a88-181">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-181"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-182">如果提供的任何记录器已附加到日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-182">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="59a88-183">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-183">The loggers to use for the build.</span></span> <span data-ttu-id="59a88-184">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-184">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="59a88-185">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-185">The remote loggers to use for the build.</span></span> <span data-ttu-id="59a88-186">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-186">May be null.</span></span></param>
        <summary><span data-ttu-id="59a88-187">使用给定的记录器和远程记录器生成项目的默认目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-187">Builds the default targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="59a88-188">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-188"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-189">如果提供的任何记录器已附加到日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-189">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="59a88-190">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-190">The target to build.</span></span> <span data-ttu-id="59a88-191">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-191">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="59a88-192">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-192">The loggers to use for the build.</span></span> <span data-ttu-id="59a88-193">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-193">May be null.</span></span></param>
        <summary><span data-ttu-id="59a88-194">使用给定的记录器生成项目的给定目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-194">Builds the given target of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="59a88-195">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-195"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-196">如果提供的任何记录器已附加到日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-196">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="59a88-197">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-197">The targets to build.</span></span> <span data-ttu-id="59a88-198">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-198">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="59a88-199">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-199">The loggers to use for the build.</span></span> <span data-ttu-id="59a88-200">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-200">May be null.</span></span></param>
        <summary><span data-ttu-id="59a88-201">使用给定的记录器生成项目的给定目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-201">Builds the given targets of the project with the given loggers.</span></span></summary>
        <returns><span data-ttu-id="59a88-202">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-202"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-203">如果提供的任何记录器已附加到日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-203">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="59a88-204">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-204">The target to build.</span></span> <span data-ttu-id="59a88-205">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-205">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="59a88-206">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-206">The loggers to use for the build.</span></span> <span data-ttu-id="59a88-207">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-207">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="59a88-208">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-208">The remote loggers to use for the build.</span></span> <span data-ttu-id="59a88-209">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-209">May be null.</span></span></param>
        <summary><span data-ttu-id="59a88-210">使用给定的记录器和远程记录器生成项目的给定目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-210">Builds the given target of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="59a88-211">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-211"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-212">如果提供的任何记录器已附加到日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-212">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="59a88-213">要生成的目标的列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-213">List of targets to build.</span></span> <span data-ttu-id="59a88-214">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-214">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="59a88-215">要用于生成目标的记录器的枚举列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-215">Enumerated list of loggers to use for building targets.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="59a88-216">目标生成的输出。</span><span class="sxs-lookup"><span data-stu-id="59a88-216">Outputs of target builds.</span></span></param>
        <summary><span data-ttu-id="59a88-217">使用指定的记录器生成一个目标列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-217">Build a list of targets with specified loggers.</span></span> <span data-ttu-id="59a88-218">目标和</span><span class="sxs-lookup"><span data-stu-id="59a88-218">Targets may be null.</span></span> <span data-ttu-id="59a88-219">记录器均可能为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-219">Loggers may be null.</span></span></summary>
        <returns><span data-ttu-id="59a88-220">如果成功，则为 <see langword="true" />；如果失败，则为 false。</span><span class="sxs-lookup"><span data-stu-id="59a88-220"><see langword="true" /> on success, false on failure.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-221">如果提供的任何记录器已附加到我们传递的日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-221">If any of the loggers supplied are already attached to the logging service we were passed, throws InvalidOperationException.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="59a88-222">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-222">The targets to build.</span></span> <span data-ttu-id="59a88-223">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-223">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="59a88-224">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-224">The loggers to use for the build.</span></span> <span data-ttu-id="59a88-225">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-225">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="59a88-226">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-226">The remote loggers to use for the build.</span></span> <span data-ttu-id="59a88-227">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-227">May be null.</span></span></param>
        <summary><span data-ttu-id="59a88-228">使用给定的记录器和远程记录器生成项目的给定目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-228">Builds the given targets of the project with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="59a88-229">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-229"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-230">如果提供的任何记录器已附加到日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-230">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, out System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.TargetResult&gt; targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers, [out] class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.TargetResult&gt;&amp; targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord), ByRef targetOutputs As IDictionary(Of String, TargetResult)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::TargetResult ^&gt; ^ % targetOutputs);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; * IDictionary -&gt; bool" Usage="projectInstance.Build (targets, loggers, remoteLoggers, targetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
        <Parameter Name="targetOutputs" Type="System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.TargetResult&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="59a88-231">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-231">The targets to build.</span></span> <span data-ttu-id="59a88-232">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-232">May be null.</span></span></param>
        <param name="loggers"><span data-ttu-id="59a88-233">要用于生成的记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-233">The loggers to use for the build.</span></span> <span data-ttu-id="59a88-234">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-234">May be null.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="59a88-235">要用于生成的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="59a88-235">The remote loggers to use for the build.</span></span> <span data-ttu-id="59a88-236">可为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-236">May be null.</span></span></param>
        <param name="targetOutputs"><span data-ttu-id="59a88-237">目标输出。</span><span class="sxs-lookup"><span data-stu-id="59a88-237">The target outputs.</span></span></param>
        <summary><span data-ttu-id="59a88-238">使用给定的目标输出以及给定的记录器和远程记录器生成给定目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-238">Builds the given targets with the given target outputs and with the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="59a88-239">如果生成成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-239"><see langword="true" /> if the build succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-240">如果提供的任何记录器已附加到日志记录服务，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="59a88-240">Throws InvalidOperationException if any of the loggers supplied are already attached to the logging service.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeepCopy">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59a88-241">创建此项目的独立的深层克隆以及其中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="59a88-241">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="59a88-242">这对于编译单个文件或在各生成之间保留生成结果很有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-242">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy();" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59a88-243">创建此项目的独立的深层克隆以及其中的所有内容。</span><span class="sxs-lookup"><span data-stu-id="59a88-243">Creates an independent, deep clone of this project and everything in it.</span></span> <span data-ttu-id="59a88-244">复本与原始的可变性相同。</span><span class="sxs-lookup"><span data-stu-id="59a88-244">Clone has the same mutability as the original.</span></span> <span data-ttu-id="59a88-245">这对于编译单个文件或在各生成之间保留生成结果很有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-245">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="59a88-246">创建此项目的独立的深层克隆。</span><span class="sxs-lookup"><span data-stu-id="59a88-246">Creates an independent, deep clone of this project.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepCopy">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance DeepCopy(bool isImmutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeepCopy (isImmutable As Boolean) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ DeepCopy(bool isImmutable);" />
      <MemberSignature Language="F#" Value="member this.DeepCopy : bool -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="projectInstance.DeepCopy isImmutable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isImmutable" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="isImmutable"><span data-ttu-id="59a88-247">标志指示克隆可变性。</span><span class="sxs-lookup"><span data-stu-id="59a88-247">Flag indicating clone mutability.</span></span></param>
        <summary><span data-ttu-id="59a88-248">创建此项目的独立的深层克隆以及其中的所有内容，带有指定可变性。</span><span class="sxs-lookup"><span data-stu-id="59a88-248">Creates an independent, deep clone of this project and everything in it, with specified mutability.</span></span> <span data-ttu-id="59a88-249">这对于编译单个文件或在各生成之间保留生成结果很有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-249">Useful for compiling a single file or for keeping build results between builds.</span></span></summary>
        <returns><span data-ttu-id="59a88-250">此项目的独立的深层克隆，带有指定可变性。</span><span class="sxs-lookup"><span data-stu-id="59a88-250">An independent, deep clone of this project, with specified mutability.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; DefaultTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ DefaultTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.DefaultTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-251">获取或设置此项目的默认目标的列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-251">Gets or sets the list of default targets for this project.</span></span></summary>
        <value><span data-ttu-id="59a88-252">此项目的默认目标的列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-252">The list of default targets for this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-253">如果未显式指定任何目标，则生成默认目标。</span><span class="sxs-lookup"><span data-stu-id="59a88-253">Default targets are built if no targets are explicitly specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Directory">
      <MemberSignature Language="C#" Value="public string Directory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Directory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Directory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Directory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Directory : string" Usage="Microsoft.Build.Execution.ProjectInstance.Directory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-254">获取项目根目录。</span><span class="sxs-lookup"><span data-stu-id="59a88-254">Gets the project root directory.</span></span> <span data-ttu-id="59a88-255">用于计算相对路径以及在生成期间设置当前目录。</span><span class="sxs-lookup"><span data-stu-id="59a88-255">Used for evaluation of relative paths and setting the current directory during build.</span></span> <span data-ttu-id="59a88-256">决不会为 null：如果未从磁盘加载项目，则使用开始生成时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="59a88-256">Is never null: projects not loaded from disk use the current directory from the time the build started.</span></span></summary>
        <value><span data-ttu-id="59a88-257">项目根目录，它绝不会为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-257">The project root directory, which is never null.</span></span> <span data-ttu-id="59a88-258">如果未从磁盘加载项目，则返回开始生成时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="59a88-258">Projects not loaded from disk return the current directory at the time the build was started.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateCondition">
      <MemberSignature Language="C#" Value="public bool EvaluateCondition (string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EvaluateCondition(string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EvaluateCondition (condition As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EvaluateCondition(System::String ^ condition);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateCondition : string -&gt; bool&#xA;override this.EvaluateCondition : string -&gt; bool" Usage="projectInstance.EvaluateCondition condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="condition"><span data-ttu-id="59a88-259">要扩展的字符串。</span><span class="sxs-lookup"><span data-stu-id="59a88-259">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="59a88-260">通过以下方法将提供的字符串作为条件进行计算：扩展项和属性，使用可用的当前项和属性，然后执行逻辑计算。</span><span class="sxs-lookup"><span data-stu-id="59a88-260">Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</span></span></summary>
        <returns><span data-ttu-id="59a88-261">如果字符串的计算结果为 true，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-261"><see langword="true" /> if the string evaluates to true; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-262">这适用于 "即时" 窗口。</span><span class="sxs-lookup"><span data-stu-id="59a88-262">This is useful for the immediate window.</span></span>  
  
 <span data-ttu-id="59a88-263">不扩展空的元数据表达式。</span><span class="sxs-lookup"><span data-stu-id="59a88-263">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="abstract member ExpandString : string -&gt; string&#xA;override this.ExpandString : string -&gt; string" Usage="projectInstance.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="59a88-264">要扩展的字符串。</span><span class="sxs-lookup"><span data-stu-id="59a88-264">The string to be expanded.</span></span></param>
        <summary><span data-ttu-id="59a88-265">通过以下方法计算提供的字符串：扩展项和属性，使用可用的当前项和属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-265">Evaluates the provided string by expanding items and properties, using the current items and properties available.</span></span></summary>
        <returns><span data-ttu-id="59a88-266">扩展的字符串值。</span><span class="sxs-lookup"><span data-stu-id="59a88-266">The expanded string value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-267">这对于某些主机或调试器 "即时" 窗口很有用。</span><span class="sxs-lookup"><span data-stu-id="59a88-267">This is useful for some hosts, or for the debugger immediate window.</span></span>  
  
 <span data-ttu-id="59a88-268">不扩展空的元数据表达式。</span><span class="sxs-lookup"><span data-stu-id="59a88-268">Does not expand bare metadata expressions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string" Usage="Microsoft.Build.Execution.ProjectInstance.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-269">获取项目文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="59a88-269">Gets the full path to the project file.</span></span> <span data-ttu-id="59a88-270">用于日志记录。</span><span class="sxs-lookup"><span data-stu-id="59a88-270">Used for logging.</span></span></summary>
        <value><span data-ttu-id="59a88-271">项目文件的完整路径，如果该项目从不命名，则 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-271">The full path to the project file, or <see langword="null" /> if the project was never named.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59a88-272">获取所提供的项定义的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="59a88-272">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinitionInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="59a88-273">要计算和转义的项定义。</span><span class="sxs-lookup"><span data-stu-id="59a88-273">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="59a88-274">获取所提供的项定义的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="59a88-274">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="59a88-275">所提供的项定义的 Include 属性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="59a88-275">The evaluated, escaped value of the Include attribute of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Execution.ProjectItemInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="59a88-276">要计算和转义的项。</span><span class="sxs-lookup"><span data-stu-id="59a88-276">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="59a88-277">获取所提供的项的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="59a88-277">Gets the evaluated, escaped value of the Include attribute of the provided item.</span></span></summary>
        <returns><span data-ttu-id="59a88-278">所提供的项的 Include 属性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="59a88-278">The evaluated, escaped value of the Include attribute of the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="59a88-279">要检索的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="59a88-279">The item type of the items to be retrieved.</span></span></param>
        <summary><span data-ttu-id="59a88-280">获取此项目中的指定类型的所有项。</span><span class="sxs-lookup"><span data-stu-id="59a88-280">Gets all the items in this project of the specified type.</span></span> <span data-ttu-id="59a88-281">这是一个只读列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-281">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="59a88-282">此项目中的指定类型的所有项。</span><span class="sxs-lookup"><span data-stu-id="59a88-282">All the items in this project of the specified type.</span></span> <span data-ttu-id="59a88-283">如果不存在任何指定类型的项，则返回一个空列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-283">Returns an empty list if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByItemTypeAndEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; GetItemsByItemTypeAndEvaluatedInclude(string itemType, string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByItemTypeAndEvaluatedInclude (itemType As String, evaluatedInclude As String) As IEnumerable(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ GetItemsByItemTypeAndEvaluatedInclude(System::String ^ itemType, System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByItemTypeAndEvaluatedInclude : string * string -&gt; seq&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="projectInstance.GetItemsByItemTypeAndEvaluatedInclude (itemType, evaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="evaluatedInclude" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="59a88-284">要检索的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="59a88-284">The item type of the items to be retrieved.</span></span></param>
        <param name="evaluatedInclude"><span data-ttu-id="59a88-285">包含要检索的项的值的估计。</span><span class="sxs-lookup"><span data-stu-id="59a88-285">The evaluated include value of the items to be retrieved</span></span></param>
        <summary><span data-ttu-id="59a88-286">获取指定类型的此项目的所有项并评估包含值。</span><span class="sxs-lookup"><span data-stu-id="59a88-286">Gets all the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="59a88-287">这是一个只读列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-287">This is a read-only list.</span></span></summary>
        <returns><span data-ttu-id="59a88-288">此项目中的指定类型的所有项和已计算的 include 值。</span><span class="sxs-lookup"><span data-stu-id="59a88-288">All the items in this project of the specified type and evaluated include value.</span></span> <span data-ttu-id="59a88-289">如果不存在任何指定类型的项，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="59a88-289">Returns an empty collection if there are none.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="59a88-290">获取所提供的项定义中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-290">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectMetadataInstance metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadataInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectMetadataInstance ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectMetadataInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Execution.ProjectMetadataInstance" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="59a88-291">要转义的元数据。</span><span class="sxs-lookup"><span data-stu-id="59a88-291">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="59a88-292">获取所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-292">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="59a88-293">所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-293">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinitionInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemDefinitionInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemDefinitionInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemDefinitionInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="59a88-294">要提供元数据值的项定义。</span><span class="sxs-lookup"><span data-stu-id="59a88-294">The item definition to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="59a88-295">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-295">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="59a88-296">获取所提供的项定义中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-296">Gets the escaped value of the metadatum with the provided name of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="59a88-297">所提供的项定义中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-297">The escaped value of the metadatum with the provided name of the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Execution.ProjectItemInstance item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemInstance, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Execution::ProjectItemInstance ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Execution.ProjectItemInstance * string -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="59a88-298">要提供元数据值的项。</span><span class="sxs-lookup"><span data-stu-id="59a88-298">The item to provide the metadatum value.</span></span></param>
        <param name="name"><span data-ttu-id="59a88-299">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-299">The name of the metadatum.</span></span></param>
        <summary><span data-ttu-id="59a88-300">获取所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-300">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="59a88-301">所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-301">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Build.Execution.ProjectPropertyInstance GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::Build::Execution::ProjectPropertyInstance ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance&#xA;override this.GetProperty : string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="59a88-302">要检索的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-302">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="59a88-303">获取具有给定名称的属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-303">Gets the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="59a88-304">具有给定名称的属性，或如果不存在具有该名称的属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-304">The property with the given name, or <see langword="null" /> if no property exists with that name.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="projectInstance.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="59a88-305">要检索其值的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-305">The name of the property whose value is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="59a88-306">获取具有给定名称的属性的值。</span><span class="sxs-lookup"><span data-stu-id="59a88-306">Gets the value of the property with the given name.</span></span></summary>
        <returns><span data-ttu-id="59a88-307">具有给定名称的属性的值，或如果不存在具有该名称的属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="59a88-307">The value of the property with the given name, or an empty string if no property exists with that name.</span></span> <span data-ttu-id="59a88-308">返回的值没有转义的字符序列。</span><span class="sxs-lookup"><span data-stu-id="59a88-308">The value returned has no escaped character sequences.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-309">此方法不区分值为空字符串的属性和具有给定名称的属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-309">This method does not distinguish between a property with a value of empty string and no property with the given name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Execution.ProjectPropertyInstance property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectPropertyInstance) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Execution::ProjectPropertyInstance ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Execution.ProjectPropertyInstance -&gt; string" Usage="Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Execution.ProjectPropertyInstance" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="59a88-310">要转义的属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-310">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="59a88-311">获取所提供的属性的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-311">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="59a88-312">所提供的属性的转义值。</span><span class="sxs-lookup"><span data-stu-id="59a88-312">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-313">获取计算此项目所使用的全局属性的字典（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="59a88-313">Gets the dictionary of global properties this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="59a88-314">计算此项目所用的全局属性的字典。</span><span class="sxs-lookup"><span data-stu-id="59a88-314">The dictionary of global properties this project was evaluated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-315">只读集合。</span><span class="sxs-lookup"><span data-stu-id="59a88-315">Read only collection.</span></span>  
  
 <span data-ttu-id="59a88-316">遍历项目引用。</span><span class="sxs-lookup"><span data-stu-id="59a88-316">Traverses project references.</span></span>  
  
 <span data-ttu-id="59a88-317">这是公开的 getter，转换为只读停滞 IDictionary\<string，string >。</span><span class="sxs-lookup"><span data-stu-id="59a88-317">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; InitialTargets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialTargets As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ InitialTargets { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : System.Collections.Generic.List&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.InitialTargets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-318">获取项目的初始目标及其所有导入（深度优先）的列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-318">Gets the list of initial targets for the project and all its imports, depth-first.</span></span> <span data-ttu-id="59a88-319">这些目标将在任何其他目标之前生成。</span><span class="sxs-lookup"><span data-stu-id="59a88-319">These targets are built before any other targets.</span></span></summary>
        <value><span data-ttu-id="59a88-320">项目的初始目标及其所有导入（深度优先）的列表。</span><span class="sxs-lookup"><span data-stu-id="59a88-320">The list of initial targets for the project and all its imports, depth-first.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImmutable">
      <MemberSignature Language="C#" Value="public bool IsImmutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImmutable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImmutable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImmutable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImmutable : bool" Usage="Microsoft.Build.Execution.ProjectInstance.IsImmutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-321">获取一个值，此值指示项目实例是否不可变。</span><span class="sxs-lookup"><span data-stu-id="59a88-321">Gets a value that indicates whether the project instance is immutable.</span></span> <span data-ttu-id="59a88-322">当创建实例时，此标志永久设置。</span><span class="sxs-lookup"><span data-stu-id="59a88-322">This flag is set permanently when the instance is created.</span></span></summary>
        <value><span data-ttu-id="59a88-323">如果项目实例是不可变的，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-323"><see langword="true" /> if the project instance is immutable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinitionInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectItemDefinitionInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-324">获取项目中的项定义的只读字典（按项类型组织条目）。</span><span class="sxs-lookup"><span data-stu-id="59a88-324">Gets a read-only dictionary of the item definitions in the project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="59a88-325">项目中项定义的只读字典，按项类型进行键控。</span><span class="sxs-lookup"><span data-stu-id="59a88-325">A read-only dictionary of the item definitions in the project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectItemInstance&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItemInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectItemInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectItemInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-326">获取此项目中的所有项。</span><span class="sxs-lookup"><span data-stu-id="59a88-326">Gets all items in this project.</span></span></summary>
        <value><span data-ttu-id="59a88-327">此项目中的所有项。</span><span class="sxs-lookup"><span data-stu-id="59a88-327">All items in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-328">获取此项目中的所有项类型。</span><span class="sxs-lookup"><span data-stu-id="59a88-328">Gets all item types in this project.</span></span></summary>
        <value><span data-ttu-id="59a88-329">此项目中的所有项类型。</span><span class="sxs-lookup"><span data-stu-id="59a88-329">All item types in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-330">获取发起文件本身的位置。</span><span class="sxs-lookup"><span data-stu-id="59a88-330">Gets the location of the originating file itself.</span></span> <span data-ttu-id="59a88-331">决不会为 null。</span><span class="sxs-lookup"><span data-stu-id="59a88-331">Never null.</span></span></summary>
        <value><span data-ttu-id="59a88-332">原始文件的位置。</span><span class="sxs-lookup"><span data-stu-id="59a88-332">The location of the originating file.</span></span> <span data-ttu-id="59a88-333">绝不会返回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-333">Never returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Execution.ProjectPropertyInstance&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectPropertyInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Execution::ProjectPropertyInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Execution.ProjectPropertyInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-334">获取此项目中的所有属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-334">Gets all properties in this project.</span></span></summary>
        <value><span data-ttu-id="59a88-335">此项目中的所有属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-335">All properties in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Execution.ProjectItemInstance item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItemInstance) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Execution::ProjectItemInstance ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Execution.ProjectItemInstance -&gt; bool" Usage="projectInstance.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Execution.ProjectItemInstance" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="59a88-336">要删除的项。</span><span class="sxs-lookup"><span data-stu-id="59a88-336">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="59a88-337">从项目中移除一个项（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="59a88-337">Removes an item from the project, if present.</span></span> <span data-ttu-id="59a88-338">如果存在该项，则返回 true；否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="59a88-338">Returns true if it was present, false otherwise.</span></span></summary>
        <returns><span data-ttu-id="59a88-339">如果在移除之前存在该项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-339"><see langword="true" /> if the item was present before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : string -&gt; bool" Usage="projectInstance.RemoveProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="59a88-340">要删除的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-340">The name of the property to be removed.</span></span></param>
        <summary><span data-ttu-id="59a88-341">移除具有给定名称的属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-341">Removes a property with the given name.</span></span> <span data-ttu-id="59a88-342">如果该属性具有值（可能为空字符串），则返回 true；否则返回 false。</span><span class="sxs-lookup"><span data-stu-id="59a88-342">Returns true if the property had a value (possibly empty string), otherwise false.</span></span></summary>
        <returns><span data-ttu-id="59a88-343">如果该属性在移除之前具有值（可能为空字符串），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-343"><see langword="true" /> if the property had a value (possibly an empty string) before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectPropertyInstance SetProperty(string name, string evaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, evaluatedValue As String) As ProjectPropertyInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectPropertyInstance ^ SetProperty(System::String ^ name, System::String ^ evaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Execution.ProjectPropertyInstance" Usage="projectInstance.SetProperty (name, evaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectPropertyInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="evaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="59a88-344">要添加的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="59a88-344">The name of the property to add.</span></span></param>
        <param name="evaluatedValue"><span data-ttu-id="59a88-345">要添加的属性的计算值。</span><span class="sxs-lookup"><span data-stu-id="59a88-345">The evaluated value of the property to add.</span></span></param>
        <summary><span data-ttu-id="59a88-346">在项目中添加一个具有指定名称和值的属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-346">Add a property with the specified name and value to the project.</span></span> <span data-ttu-id="59a88-347">覆盖属性集合中已有的任何同名属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-347">Overwrites any property with the same name already in the property collection.</span></span></summary>
        <returns><span data-ttu-id="59a88-348">新的属性。</span><span class="sxs-lookup"><span data-stu-id="59a88-348">The new property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-349">我们不会使用 ProjectPropertyInstance 来确保没有其他 ProjectPropertyInstance 正在使用的帐户。</span><span class="sxs-lookup"><span data-stu-id="59a88-349">We don't take a ProjectPropertyInstance to make sure we don't have one that's already in use by another ProjectPropertyInstance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Execution.ProjectInstance.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-350">获取此项目中的所有目标的枚举器。</span><span class="sxs-lookup"><span data-stu-id="59a88-350">Gets an enumerator over all targets in this project.</span></span> <span data-ttu-id="59a88-351">此集合为只读。</span><span class="sxs-lookup"><span data-stu-id="59a88-351">This collection is read-only.</span></span></summary>
        <value><span data-ttu-id="59a88-352">此项目中的所有目标的枚举器。</span><span class="sxs-lookup"><span data-stu-id="59a88-352">An enumerator over all targets in this project.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Execution.ProjectInstance.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="59a88-353">获取计算此项目所使用的工具版本（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="59a88-353">Gets the tools version this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="59a88-354">计算此项目的工具版本（如果有）。</span><span class="sxs-lookup"><span data-stu-id="59a88-354">The tools version this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="59a88-355">结果不一定与项目标记上的工具版本相同（如果有）;它可能已在外部指定，例如使用/tv 开关。</span><span class="sxs-lookup"><span data-stu-id="59a88-355">The result is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToProjectRootElement">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement" />
      <MemberSignature Language="VB.NET" Value="Public Function ToProjectRootElement () As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Construction::ProjectRootElement ^ ToProjectRootElement();" />
      <MemberSignature Language="F#" Value="member this.ToProjectRootElement : unit -&gt; Microsoft.Build.Construction.ProjectRootElement" Usage="projectInstance.ToProjectRootElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="59a88-356">根据此 ProjectInstance 的内容创建一个 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="59a88-356">Creates a ProjectRootElement from the contents of this ProjectInstance.</span></span></summary>
        <returns><span data-ttu-id="59a88-357">表示此实例的一个 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="59a88-357">A ProjectRootElement which represents this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateStateFrom">
      <MemberSignature Language="C#" Value="public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateStateFrom(class Microsoft.Build.Execution.ProjectInstance projectState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateStateFrom (projectState As ProjectInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateStateFrom(Microsoft::Build::Execution::ProjectInstance ^ projectState);" />
      <MemberSignature Language="F#" Value="member this.UpdateStateFrom : Microsoft.Build.Execution.ProjectInstance -&gt; unit" Usage="projectInstance.UpdateStateFrom projectState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectState" Type="Microsoft.Build.Execution.ProjectInstance" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectState"><span data-ttu-id="59a88-358">要从其进行更新的 <see langword="ProjectInstance" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-358">The <see langword="ProjectInstance" /> to update from.</span></span></param>
        <summary><span data-ttu-id="59a88-359">替换项目状态 <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />、 <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> 和 <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" />，使用那些指定的 <see cref="T:Microsoft.Build.Execution.ProjectInstance" />。</span><span class="sxs-lookup"><span data-stu-id="59a88-359">Replaces the project state <see cref="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties" />, <see cref="P:Microsoft.Build.Execution.ProjectInstance.Properties" /> and <see cref="P:Microsoft.Build.Execution.ProjectInstance.Items" /> with those from the specified <see cref="T:Microsoft.Build.Execution.ProjectInstance" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
