<Type Name="HttpCapabilitiesBase" FullName="System.Web.Configuration.HttpCapabilitiesBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="711d9c5fc2c4e9cbc6d0b0f307cc66316ae22cc2" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78777952" /></Metadata><TypeSignature Language="C#" Value="public class HttpCapabilitiesBase" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Web.Configuration.HttpCapabilitiesBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type HttpCapabilitiesBase = class" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class HttpCapabilitiesBase : System.Web.UI.IFilterResolutionService" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpCapabilitiesBase extends System.Object implements class System.Web.UI.IFilterResolutionService" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpCapabilitiesBase&#xA;Implements IFilterResolutionService" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCapabilitiesBase : System::Web::UI::IFilterResolutionService" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type HttpCapabilitiesBase = class&#xA;    interface IFilterResolutionService" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IFilterResolutionService</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="fbda2-101">提供对客户端浏览器功能的详细信息的访问。</span><span class="sxs-lookup"><span data-stu-id="fbda2-101">Provides access to detailed information about the capabilities of the client's browser.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> 是 <xref:System.Web.HttpBrowserCapabilities> 类派生自的基类。</span><span class="sxs-lookup"><span data-stu-id="fbda2-102"><xref:System.Web.Configuration.HttpCapabilitiesBase> is the base class from which the <xref:System.Web.HttpBrowserCapabilities> class is derived.</span></span> <span data-ttu-id="fbda2-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> 提供了大量的只读属性，这些属性提供对浏览器功能字典的类型安全访问。</span><span class="sxs-lookup"><span data-stu-id="fbda2-103"><xref:System.Web.Configuration.HttpCapabilitiesBase> offers a large number of read-only properties that provide type-safe access to a browser's capabilities dictionary.</span></span> <span data-ttu-id="fbda2-104">可以通过 ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> 属性公开的 <xref:System.Web.HttpRequest.Browser%2A> 属性访问 <xref:System.Web.HttpBrowserCapabilities> 类。</span><span class="sxs-lookup"><span data-stu-id="fbda2-104">You can access the <xref:System.Web.HttpBrowserCapabilities> class through the <xref:System.Web.HttpRequest.Browser%2A> property that is exposed by the ASP.NET <xref:System.Web.HttpRequest.Browser%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-105">下面的示例演示如何访问有关浏览器的信息。</span><span class="sxs-lookup"><span data-stu-id="fbda2-105">The following example shows how to access information about the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase/VB/sample_vb.aspx#1)]
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCapabilitiesBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCapabilitiesBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbda2-106">创建 <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="fbda2-106">Creates a new instance of the <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveXControls">
      <MemberSignature Language="C#" Value="public bool ActiveXControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ActiveXControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveXControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ActiveXControls { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveXControls : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.ActiveXControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-107">获取一个值，该值指示浏览器是否支持 ActiveX 控件。</span><span class="sxs-lookup"><span data-stu-id="fbda2-107">Gets a value indicating whether the browser supports ActiveX controls.</span></span></summary>
        <value><span data-ttu-id="fbda2-108">如果浏览器支持 ActiveX 控件，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-108"><see langword="true" /> if the browser supports ActiveX controls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-109">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-109">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-110">下面的代码示例演示如何确定浏览器是否支持 ActiveX 控件。</span><span class="sxs-lookup"><span data-stu-id="fbda2-110">The following code example shows how to determine whether the browser supports ActiveX controls.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.ActiveXControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.ActiveXControls/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Adapters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Adapters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Adapters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adapters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Adapters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Adapters : System.Collections.IDictionary" Usage="System.Web.Configuration.HttpCapabilitiesBase.Adapters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-111">返回可用控件适配器的集合。</span><span class="sxs-lookup"><span data-stu-id="fbda2-111">Returns the collection of available control adapters.</span></span></summary>
        <value><span data-ttu-id="fbda2-112">已注册的控件适配器的集合。</span><span class="sxs-lookup"><span data-stu-id="fbda2-112">The collection of registered control adapters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBrowser">
      <MemberSignature Language="C#" Value="public void AddBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.AddBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBrowser (browserName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.AddBrowser : string -&gt; unit" Usage="httpCapabilitiesBase.AddBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="fbda2-113">要添加的浏览器的名称。</span><span class="sxs-lookup"><span data-stu-id="fbda2-113">The name of the browser to add.</span></span></param>
        <summary><span data-ttu-id="fbda2-114">在内部用于向浏览器的内部集合添加项，这些浏览器的功能已识别。</span><span class="sxs-lookup"><span data-stu-id="fbda2-114">Used internally to add an entry to the internal collection of browsers for which capabilities are recognized.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AOL">
      <MemberSignature Language="C#" Value="public bool AOL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AOL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AOL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AOL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AOL : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.AOL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-115">获取一个值，该值指示客户端是否是 America Online (AOL) 浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-115">Gets a value indicating whether the client is an America Online (AOL) browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-116">如果该浏览器是 AOL 浏览器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-116"><see langword="true" /> if the browser is an AOL browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-117">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-117">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-118">下面的代码示例演示如何确定浏览器是否为 AOL 浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-118">The following code example shows how to determine whether the browser is an AOL browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.AOL#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.AOL#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.AOL/VB/sample_vb.aspx#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundSounds">
      <MemberSignature Language="C#" Value="public bool BackgroundSounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BackgroundSounds" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BackgroundSounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BackgroundSounds { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundSounds : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.BackgroundSounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-119">获取一个值，该值指示浏览器是否支持使用 <see langword="&lt;bgsounds&gt;" /> HTML 元素播放背景声音。</span><span class="sxs-lookup"><span data-stu-id="fbda2-119">Gets a value indicating whether the browser supports playing background sounds using the <see langword="&lt;bgsounds&gt;" /> HTML element.</span></span></summary>
        <value><span data-ttu-id="fbda2-120">如果浏览器支持播放背景音乐，该值为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-120"><see langword="true" /> if the browser supports playing background sounds; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-121">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-121">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-122">下面的代码示例演示如何确定浏览器是否支持播放背景声音。</span><span class="sxs-lookup"><span data-stu-id="fbda2-122">The following code example shows how to determine whether the browser supports playing background sounds.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.BackgroundSounds#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.BackgroundSounds/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Beta">
      <MemberSignature Language="C#" Value="public bool Beta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Beta" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Beta As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Beta { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Beta : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Beta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-123">获取一个值，该值指示浏览器是否为 beta 版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-123">Gets a value indicating whether the browser is a beta version.</span></span></summary>
        <value><span data-ttu-id="fbda2-124">如果浏览器为 beta 版本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-124"><see langword="true" /> if the browser is a beta version; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-125">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-125">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-126">Beta 版本浏览器可能会表现出不可预测的行为。</span><span class="sxs-lookup"><span data-stu-id="fbda2-126">Beta version browsers can exhibit unpredictable behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-127">下面的代码示例演示如何确定浏览器是否为 beta 版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-127">The following code example shows how to determine whether the browser is a beta version.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Beta#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Beta#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Beta/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public string Browser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Browser { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browser : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-128">获取在 <see langword="User-Agent" /> 请求头中由浏览器发送的浏览器字符串（如果有）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-128">Gets the browser string (if any) that was sent by the browser in the <see langword="User-Agent" /> request header.</span></span></summary>
        <value><span data-ttu-id="fbda2-129">由浏览器发送的 <see langword="User-Agent" /> 请求标头的内容。</span><span class="sxs-lookup"><span data-stu-id="fbda2-129">The contents of the <see langword="User-Agent" /> request header sent by the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-130">下面的代码示例演示如何确定浏览器发送的 `User-Agent` 请求标头。</span><span class="sxs-lookup"><span data-stu-id="fbda2-130">The following code example shows how to determine the `User-Agent` request header sent by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Browser#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Browser#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Browser/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowserCapabilitiesProvider">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Configuration.HttpCapabilitiesProvider BrowserCapabilitiesProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property BrowserCapabilitiesProvider As HttpCapabilitiesProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::HttpCapabilitiesProvider ^ BrowserCapabilitiesProvider { System::Web::Configuration::HttpCapabilitiesProvider ^ get(); void set(System::Web::Configuration::HttpCapabilitiesProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowserCapabilitiesProvider : System.Web.Configuration.HttpCapabilitiesProvider with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.BrowserCapabilitiesProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-131">获取或设置当前浏览器的 <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="fbda2-131">Gets or sets the <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-132">当前浏览器的 <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="fbda2-132">The <see cref="T:System.Web.Configuration.HttpCapabilitiesProvider" /> object for the current browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Browsers">
      <MemberSignature Language="C#" Value="public System.Collections.ArrayList Browsers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList Browsers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Browsers As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ArrayList ^ Browsers { System::Collections::ArrayList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Browsers : System.Collections.ArrayList" Usage="System.Web.Configuration.HttpCapabilitiesBase.Browsers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-133">获取 <see cref="T:System.Collections.ArrayList" /> 字典中浏览器的 <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-133">Gets an <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="fbda2-134"><see cref="T:System.Collections.ArrayList" /> 字典中浏览器的 <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-134">An <see cref="T:System.Collections.ArrayList" /> of the browsers in the <see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCombineFormsInDeck">
      <MemberSignature Language="C#" Value="public virtual bool CanCombineFormsInDeck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCombineFormsInDeck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanCombineFormsInDeck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanCombineFormsInDeck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanCombineFormsInDeck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-135">获取一个值，该值指示浏览器是否支持包含多个窗体（如多个单独的卡片）的卡片组。</span><span class="sxs-lookup"><span data-stu-id="fbda2-135">Gets a value indicating whether the browser supports decks that contain multiple forms, such as separate cards.</span></span></summary>
        <value><span data-ttu-id="fbda2-136">如果浏览器支持包含多个窗体的卡片组，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-136"><see langword="true" /> if the browser supports decks that contain multiple forms; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-137">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-137">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-138"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-138">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanCombineFormsInDeck%2A> property applies only to WML-compatible mobile devices.</span></span> <span data-ttu-id="fbda2-139">如果为 true，则适配器可以从同一页中输出多个窗体（如有可能）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-139">If true, the adapter can output multiple forms from the same page as cards of a single deck, where possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-140">下面的代码示例演示如何确定浏览器是否支持包含多个窗体（如单独的卡片）的卡片。</span><span class="sxs-lookup"><span data-stu-id="fbda2-140">The following code example shows how to determine whether the browser supports decks that contain multiple forms, such as separate cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanCombineFormsInDeck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanCombineFormsInDeck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInitiateVoiceCall">
      <MemberSignature Language="C#" Value="public virtual bool CanInitiateVoiceCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInitiateVoiceCall" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInitiateVoiceCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInitiateVoiceCall { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInitiateVoiceCall : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-141">获取一个值，该值指示浏览器设备是否能够启动语音呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbda2-141">Gets a value indicating whether the browser device is capable of initiating a voice call.</span></span></summary>
        <value><span data-ttu-id="fbda2-142">如果浏览器设备能够启动语音呼叫，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-142"><see langword="true" /> if the browser device is capable of initiating a voice call; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-143">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-144"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-144">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-145">下面的代码示例演示如何确定浏览器设备是否能够启动语音呼叫。</span><span class="sxs-lookup"><span data-stu-id="fbda2-145">The following code example shows how to determine whether the browser device is capable of initiating a voice call.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanInitiateVoiceCall#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanInitiateVoiceCall/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderAfterInputOrSelectElement">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderAfterInputOrSelectElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderAfterInputOrSelectElement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderAfterInputOrSelectElement { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderAfterInputOrSelectElement : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-146">获取一个值，该值指示浏览器是否支持 WML <see langword="&lt;select&gt;" /> 或 <see langword="&lt;input&gt;" /> 元素后面的页内容。</span><span class="sxs-lookup"><span data-stu-id="fbda2-146">Gets a value indicating whether the browser supports page content following WML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-147">如果浏览器支持 HTML <see langword="&lt;select&gt;" /> 或 <see langword="&lt;input&gt;" /> 元素后的页面内容，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-147"><see langword="true" /> if the browser supports page content following HTML <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-148">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-148">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-149"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-149">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-150">下面的代码示例演示如何确定浏览器是否支持 HTML `<select>` 或 `<input>` 元素后面的页内容。</span><span class="sxs-lookup"><span data-stu-id="fbda2-150">The following code example shows how to determine whether the browser supports page content following HTML `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderAfterInputOrSelectElement/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderEmptySelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderEmptySelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderEmptySelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderEmptySelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderEmptySelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderEmptySelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderEmptySelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-151">获取一个值，该值指示浏览器是否支持空 HTML <see langword="&lt;select&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-151">Gets a value indicating whether the browser supports empty HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-152">如果浏览器支持空的 HTML <see langword="true" /> 元素，则为 <see langword="&lt;select&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-152"><see langword="true" /> if the browser supports empty HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-153">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-153">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-154">下面的代码示例演示如何确定浏览器是否支持空 HTML `<select>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-154">The following code example shows how to determine whether the browser supports empty HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderEmptySelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderEmptySelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderInputAndSelectElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderInputAndSelectElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderInputAndSelectElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderInputAndSelectElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderInputAndSelectElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-155">获取一个值，该值指示浏览器是否支持在同一卡片上同时存在 WML <see langword="INPUT" /> 和 <see langword="SELECT" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-155">Gets a value indicating whether the browser supports WML <see langword="INPUT" /> and <see langword="SELECT" /> elements together on the same card.</span></span></summary>
        <value><span data-ttu-id="fbda2-156">如果浏览器支持同时使用 WML <see langword="true" /> 和 <see langword="&lt;input&gt;" /> 元素，则为 <see langword="&lt;select&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-156"><see langword="true" /> if the browser supports WML <see langword="&lt;input&gt;" /> and <see langword="&lt;select&gt;" /> elements together; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-157">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-157">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-158"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-158">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-159">下面的代码示例演示如何确定浏览器是否支持 HTML `<input>` 和 `<select>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-159">The following code example shows how to determine whether the browser supports HTML `<input>` and `<select>` elements together.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderInputAndSelectElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderMixedSelects">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderMixedSelects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderMixedSelects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderMixedSelects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderMixedSelects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderMixedSelects : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-160">获取一个值，该值指示浏览器是否支持同时指定 <see langword="&lt;option&gt;" /> 和 <see langword="onpick" /> 特性的 WML <see langword="value" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-160">Gets a value indicating whether the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes.</span></span></summary>
        <value><span data-ttu-id="fbda2-161">如果浏览器支持同时指定 <see langword="true" /> 和 <see langword="&lt;option&gt;" /> 属性的 WML <see langword="onpick" /> 元素，则为 <see langword="value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-161"><see langword="true" /> if the browser supports WML <see langword="&lt;option&gt;" /> elements that specify both <see langword="onpick" /> and <see langword="value" /> attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-162">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-162">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-163"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-163">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderMixedSelects%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-164">如果 `false`，`onpick` 值将显示为超链接，`value` 特性要求使用 `<do>` 元素进行回发。</span><span class="sxs-lookup"><span data-stu-id="fbda2-164">If `false`, `onpick` values are displayed as hyperlinks and `value` attributes require a `<do>` element for postback.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-165">下面的代码示例演示如何确定浏览器是否支持 HTML `<option>` 指定 `onpick` 和 `value` 特性的元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-165">The following code example shows how to determine whether the browser supports HTML `<option>` elements that specify both `onpick` and `value` attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderMixedSelects#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderMixedSelects/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderOneventAndPrevElementsTogether">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderOneventAndPrevElementsTogether { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderOneventAndPrevElementsTogether As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderOneventAndPrevElementsTogether { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderOneventAndPrevElementsTogether : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-166">获取一个值，该值指示浏览器是否支持共存于同一 WML 卡片中的 WML <see langword="&lt;onevent&gt;" /> 和 <see langword="&lt;prev&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-166">Gets a value indicating whether the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card.</span></span></summary>
        <value><span data-ttu-id="fbda2-167">如果浏览器支持共存于同一 WML 卡片中的 WML <see langword="true" /> 和 <see langword="&lt;onevent&gt;" /> 元素，则为 <see langword="&lt;prev&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-167"><see langword="true" /> if the browser supports WML <see langword="&lt;onevent&gt;" /> and <see langword="&lt;prev&gt;" /> elements that coexist within the same WML card; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-168">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-168">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-169"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-169">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-170">如果 `false`，则在同一 WML 卡中共存 `<onevent>` 和 `<prev>` 元素将不会正确呈现。</span><span class="sxs-lookup"><span data-stu-id="fbda2-170">If `false`, WML `<onevent>` and `<prev>` elements that coexist within the same WML card will not be properly rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-171">下面的代码示例演示如何确定浏览器是否支持 WML `<onevent>` 和在同一 WML 卡片中共存的 `<prev>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-171">The following code example shows how to determine whether the browser supports WML `<onevent>` and `<prev>` elements that coexist within the same WML card.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderOneventAndPrevElementsTogether/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderPostBackCards">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderPostBackCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderPostBackCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderPostBackCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderPostBackCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderPostBackCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-172">获取一个值，该值指示浏览器是否支持 WML 卡片用于回发。</span><span class="sxs-lookup"><span data-stu-id="fbda2-172">Gets a value indicating whether the browser supports WML cards for postback.</span></span></summary>
        <value><span data-ttu-id="fbda2-173">如果浏览器支持使用 WML 卡进行回发，则为 <see langword="true" />，否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-173"><see langword="true" /> if the browser supports WML cards for postback; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-174">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-174">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-175"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> 属性仅适用于 WML 兼容的移动设备浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-175">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderPostBackCards%2A> property applies only to WML-compatible mobile-device browsers.</span></span>  
  
 <span data-ttu-id="fbda2-176">如果 `false`，则浏览器将不会正确呈现回发卡。</span><span class="sxs-lookup"><span data-stu-id="fbda2-176">If `false`, postback cards will not be properly rendered by the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-177">下面的代码示例演示如何确定浏览器是否支持 WML 卡片用于回发。</span><span class="sxs-lookup"><span data-stu-id="fbda2-177">The following code example shows how to determine whether the browser supports WML cards for postback.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderPostBackCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderPostBackCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRenderSetvarZeroWithMultiSelectionList">
      <MemberSignature Language="C#" Value="public virtual bool CanRenderSetvarZeroWithMultiSelectionList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRenderSetvarZeroWithMultiSelectionList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRenderSetvarZeroWithMultiSelectionList { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRenderSetvarZeroWithMultiSelectionList : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-178">获取一个值，该值指示浏览器是否支持 <see langword="&lt;setvar&gt;" /> 特性为 0 的 WML <see langword="value" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-178">Gets a value indicating whether the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of 0.</span></span></summary>
        <value><span data-ttu-id="fbda2-179">如果浏览器支持 <see langword="true" /> 特性为 <see langword="&lt;setvar&gt;" /> 的 WML <see langword="value" /> 元素，则为 <see langword="0" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-179"><see langword="true" /> if the browser supports WML <see langword="&lt;setvar&gt;" /> elements with a <see langword="value" /> attribute of <see langword="0" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-180">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-180">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-181"><xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-181">The <xref:System.Web.Configuration.HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-182">如果 `false`，则不会正确显示具有 `value` 特性 `0` 的 HTML `<setvar>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-182">If `false`, HTML `<setvar>` elements with a `value` attribute of `0` will not display correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-183">下面的代码示例演示如何确定浏览器是否支持使用 `value` 属性为0的 WML `<setvar>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-183">The following code example shows how to determine whether the browser supports WML `<setvar>` elements with a `value` attribute of 0.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanRenderSetvarZeroWithMultiSelectionList/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSendMail">
      <MemberSignature Language="C#" Value="public virtual bool CanSendMail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSendMail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSendMail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSendMail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSendMail : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CanSendMail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-184">获取一个值，该值指示浏览器是否支持使用适用于显示电子地址的 HTML <see langword="&lt;mailto&gt;" /> 元素发送电子邮件。</span><span class="sxs-lookup"><span data-stu-id="fbda2-184">Gets a value indicating whether the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses.</span></span></summary>
        <value><span data-ttu-id="fbda2-185">如果浏览器支持使用 HTML <see langword="&lt;mailto&gt;" /> 元素显示电子地址来发送电子邮件，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-185"><see langword="true" /> if the browser supports sending email by using the HTML <see langword="&lt;mailto&gt;" /> element for displaying electronic addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-186">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-186">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-187">下面的代码示例演示如何通过使用 HTML `<mailto>` 元素显示电子地址来确定浏览器是否支持发送电子邮件。</span><span class="sxs-lookup"><span data-stu-id="fbda2-187">The following code example shows how to determine whether the browser supports sending email by using the HTML `<mailto>` element for displaying electronic addresses.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CanSendMail#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CanSendMail/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capabilities">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Capabilities { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Capabilities" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberSignature Language="VB.NET" Value="Public Property Capabilities As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Capabilities { System::Collections::IDictionary ^ get(); void set(System::Collections::IDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Capabilities : System.Collections.IDictionary with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.Capabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-188">在内部用于获得浏览器的已定义功能。</span><span class="sxs-lookup"><span data-stu-id="fbda2-188">Used internally to get the defined capabilities of the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-189">浏览器的已定义功能。</span><span class="sxs-lookup"><span data-stu-id="fbda2-189">The defined capabilities of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CDF">
      <MemberSignature Language="C#" Value="public bool CDF { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDF" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDF As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDF { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDF : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.CDF" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-190">获取一个值，该值指示浏览器是否支持网络传播的频道定义格式 (CDF)。</span><span class="sxs-lookup"><span data-stu-id="fbda2-190">Gets a value indicating whether the browser supports Channel Definition Format (CDF) for webcasting.</span></span></summary>
        <value><span data-ttu-id="fbda2-191">如果浏览器支持 CDF，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-191"><see langword="true" /> if the browser supports CDF; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-192">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-192">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-193">下面的代码示例演示如何确定浏览器是否支持 CDF。</span><span class="sxs-lookup"><span data-stu-id="fbda2-193">The following code example shows how to determine whether the browser supports CDF.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.CDF#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.CDF#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.CDF/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClrVersion">
      <MemberSignature Language="C#" Value="public Version ClrVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ClrVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClrVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ClrVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClrVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.ClrVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-194">获取客户端上安装的 .NET Framework 的版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-194">Gets the version of the .NET Framework that is installed on the client.</span></span></summary>
        <value><span data-ttu-id="fbda2-195">公共语言运行时 <see cref="T:System.Version" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-195">The common language runtime <see cref="T:System.Version" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-196">仅当浏览器是 Internet Explorer 版本5.0 及更高版本时，才支持 <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-196">The <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property is supported only when the browser is Internet Explorer version 5.0 and later.</span></span>  
  
 <span data-ttu-id="fbda2-197">如果未在客户端上安装 .NET Framework，则返回的版本元素的值是 `0, 0,-1,-1`。</span><span class="sxs-lookup"><span data-stu-id="fbda2-197">If the .NET Framework is not installed on the client, the value of the version elements returned is `0, 0,-1,-1`.</span></span>  
  
 <span data-ttu-id="fbda2-198">如果在客户端上安装了多个版本的 .NET Framework，则 <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> 属性将返回最新版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-198">If more than one version of the .NET Framework is installed on the client, the <xref:System.Web.Configuration.HttpCapabilitiesBase.ClrVersion%2A> property returns the latest version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public bool Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cookies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-199">获取一个值，该值指示浏览器是否支持 Cookie。</span><span class="sxs-lookup"><span data-stu-id="fbda2-199">Gets a value indicating whether the browser supports cookies.</span></span></summary>
        <value><span data-ttu-id="fbda2-200">如果浏览器支持 Cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-200"><see langword="true" /> if the browser supports cookies; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-201">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-201">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-202"><xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> 属性指示浏览器应用程序是否支持 cookie。</span><span class="sxs-lookup"><span data-stu-id="fbda2-202">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property indicates whether the browser application supports cookies.</span></span> <span data-ttu-id="fbda2-203">如果用户在其应用程序中禁用了 cookie，则 <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> 属性将不会受到影响。</span><span class="sxs-lookup"><span data-stu-id="fbda2-203">If the user has disabled cookies in their application, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Cookies%2A> property will not be affected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-204">下面的代码示例演示如何确定浏览器是否支持 cookie。</span><span class="sxs-lookup"><span data-stu-id="fbda2-204">The following code example shows how to determine whether the browser supports cookies.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Cookies#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Cookies/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crawler">
      <MemberSignature Language="C#" Value="public bool Crawler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Crawler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crawler As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Crawler { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Crawler : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Crawler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-205">获取一个值，该值指示浏览器是否为搜索引擎 Web 爬网程序。</span><span class="sxs-lookup"><span data-stu-id="fbda2-205">Gets a value indicating whether the browser is a search engine Web crawler.</span></span></summary>
        <value><span data-ttu-id="fbda2-206">如果浏览器为搜索引擎，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-206"><see langword="true" /> if the browser is a search engine; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-207">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-207">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-208">下面的代码示例演示如何确定客户端是否为搜索引擎 Web 爬网程序。</span><span class="sxs-lookup"><span data-stu-id="fbda2-208">The following code example shows how to determine whether the client is a search engine Web crawler.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Crawler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Crawler/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHtmlTextWriter (w As TextWriter) As HtmlTextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="member this.CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="httpCapabilitiesBase.CreateHtmlTextWriter w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="fbda2-209">要创建的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-209"><see cref="T:System.IO.TextWriter" /> to be created.</span></span></param>
        <summary><span data-ttu-id="fbda2-210">新建要使用的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 的实例。</span><span class="sxs-lookup"><span data-stu-id="fbda2-210">Creates a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></summary>
        <returns><span data-ttu-id="fbda2-211">要使用的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="fbda2-211">A new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to be used.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="fbda2-212">无法创建 <see cref="T:System.Web.UI.HtmlTextWriter" /> 的实例的方法。</span><span class="sxs-lookup"><span data-stu-id="fbda2-212">The method failed to create an instance of <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultSubmitButtonLimit">
      <MemberSignature Language="C#" Value="public virtual int DefaultSubmitButtonLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultSubmitButtonLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultSubmitButtonLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DefaultSubmitButtonLimit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSubmitButtonLimit : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-213">返回一个窗体所允许的“提交”按钮的最大个数。</span><span class="sxs-lookup"><span data-stu-id="fbda2-213">Returns the maximum number of Submit buttons that are allowed for a form.</span></span></summary>
        <value><span data-ttu-id="fbda2-214">一个窗体所允许的“提交”按钮的最大个数。</span><span class="sxs-lookup"><span data-stu-id="fbda2-214">The maximum number of Submit buttons that are allowed for a form.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-215"><xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> 属性主要表示 WML 兼容移动设备上可用的软键的数目。</span><span class="sxs-lookup"><span data-stu-id="fbda2-215">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> property primarily represents the number of soft keys that are available on a WML-compatible mobile device.</span></span>  
  
 <span data-ttu-id="fbda2-216">移动设备的 Web 窗体页可以包含一个 <xref:System.Web.UI.MobileControls.SelectionList> 对象和多个 <xref:System.Web.UI.MobileControls.Command> 控件。</span><span class="sxs-lookup"><span data-stu-id="fbda2-216">Web Forms pages for mobile devices can contain a <xref:System.Web.UI.MobileControls.SelectionList> object and more than one <xref:System.Web.UI.MobileControls.Command> control.</span></span> <span data-ttu-id="fbda2-217"><xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> 允许你选择应将哪个 <xref:System.Web.UI.MobileControls.Command> 控件分配到具有多个软键的设备上的软键。</span><span class="sxs-lookup"><span data-stu-id="fbda2-217">The <xref:System.Web.Configuration.HttpCapabilitiesBase.DefaultSubmitButtonLimit%2A> allows you to choose which of the <xref:System.Web.UI.MobileControls.Command> controls should be assigned to a soft key on devices that have multiple soft keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public void DisableOptimizedCacheKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableOptimizedCacheKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.DisableOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisableOptimizedCacheKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableOptimizedCacheKey();" />
      <MemberSignature Language="F#" Value="member this.DisableOptimizedCacheKey : unit -&gt; unit" Usage="httpCapabilitiesBase.DisableOptimizedCacheKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbda2-218">内部使用以禁用优化的缓存键。</span><span class="sxs-lookup"><span data-stu-id="fbda2-218">Used internally to disable use of an optimized cache key.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EcmaScriptVersion">
      <MemberSignature Language="C#" Value="public Version EcmaScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version EcmaScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EcmaScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ EcmaScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EcmaScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.EcmaScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-219">获取浏览器支持的 ECMAScript 的版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-219">Gets the version number of ECMAScript that the browser supports.</span></span></summary>
        <value><span data-ttu-id="fbda2-220">浏览器支持的 ECMAScript 的版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-220">The version number of ECMAScript that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-221">下面的代码示例演示如何确定浏览器是否支持一个大于1的 ECMAScript 主版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-221">The following code example shows how to determine whether the browser supports an ECMAScript major version number greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.EcmaScriptVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.EcmaScriptVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=42245"><span data-ttu-id="fbda2-222">ECMA 官方网站</span><span class="sxs-lookup"><span data-stu-id="fbda2-222">ECMA official Web site</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Frames">
      <MemberSignature Language="C#" Value="public bool Frames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Frames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Frames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Frames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Frames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Frames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-223">获取一个值，该值指示浏览器是否支持 HTML 框架。</span><span class="sxs-lookup"><span data-stu-id="fbda2-223">Gets a value indicating whether the browser supports HTML frames.</span></span></summary>
        <value><span data-ttu-id="fbda2-224">如果浏览器支持框架，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-224"><see langword="true" /> if the browser supports frames; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-225">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-225">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-226">下面的代码示例演示如何确定浏览器是否支持 HTML 框架。</span><span class="sxs-lookup"><span data-stu-id="fbda2-226">The following code example shows how to determine whether the browser supports HTML frames.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Frames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Frames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Frames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatewayMajorVersion">
      <MemberSignature Language="C#" Value="public virtual int GatewayMajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GatewayMajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int GatewayMajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-227">获取用于访问服务器的无线网关的主版本号（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-227">Gets the major version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="fbda2-228">用于访问服务器的无线网关的主版本号（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-228">The major version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="fbda2-229">默认值为 <see langword="0" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-229">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="fbda2-230">无法分析无线网关的主版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-230">The major version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayMinorVersion">
      <MemberSignature Language="C#" Value="public virtual double GatewayMinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GatewayMinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayMinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property double GatewayMinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayMinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayMinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-231">获取用于访问服务器的无线网关的次版本号（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-231">Gets the minor version number of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="fbda2-232">用于访问服务器的无线网关的次版本号（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-232">The minor version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="fbda2-233">默认值为 <see langword="0" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-233">The default is <see langword="0" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="fbda2-234">无法分析无线网关的次版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-234">The minor version number of the wireless gateway cannot be parsed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GatewayVersion">
      <MemberSignature Language="C#" Value="public virtual string GatewayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GatewayVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GatewayVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ GatewayVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GatewayVersion : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.GatewayVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-235">获取用于访问服务器的无线网关的版本（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-235">Gets the version of the wireless gateway used to access the server, if known.</span></span></summary>
        <value><span data-ttu-id="fbda2-236">用于访问服务器的无线网关的版本号（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-236">The version number of the wireless gateway used to access the server, if known.</span></span> <span data-ttu-id="fbda2-237">默认值为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-237">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-238">下面的代码示例演示如何确定网关是否为 `UP` 网关。</span><span class="sxs-lookup"><span data-stu-id="fbda2-238">The following code example shows how to determine whether the gateway is an `UP` gateway.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.GatewayVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.GatewayVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClrVersions">
      <MemberSignature Language="C#" Value="public Version[] GetClrVersions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Version[] GetClrVersions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClrVersions () As Version()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Version ^&gt; ^ GetClrVersions();" />
      <MemberSignature Language="F#" Value="member this.GetClrVersions : unit -&gt; Version[]" Usage="httpCapabilitiesBase.GetClrVersions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbda2-239">返回客户端上安装的 .NET Framework 公共语言运行时的所有版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-239">Returns all versions of the .NET Framework common language runtime that are installed on the client.</span></span></summary>
        <returns><span data-ttu-id="fbda2-240">一个 <see cref="T:System.Version" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="fbda2-240">An array of <see cref="T:System.Version" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-241">仅当浏览器是 Internet Explorer 版本5.0 或更高版本时，才支持 <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="fbda2-241">The <xref:System.Web.Configuration.HttpCapabilitiesBase.GetClrVersions%2A> method is supported only when the browser is Internet Explorer version 5.0 or later.</span></span> <span data-ttu-id="fbda2-242">如果客户端上未安装公共语言运行时，则该属性返回一个数组，该数组包含一个值为0、0、-1、-1 的 <xref:System.Version> 对象。</span><span class="sxs-lookup"><span data-stu-id="fbda2-242">If the common language runtime is not installed on the client, the property returns an array containing a single <xref:System.Version> object with the values 0, 0,-1,-1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigCapabilities">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities (string configKey, System.Web.HttpRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Configuration.HttpCapabilitiesBase GetConfigCapabilities(string configKey, class System.Web.HttpRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities(System.String,System.Web.HttpRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConfigCapabilities (configKey As String, request As HttpRequest) As HttpCapabilitiesBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Configuration::HttpCapabilitiesBase ^ GetConfigCapabilities(System::String ^ configKey, System::Web::HttpRequest ^ request);" />
      <MemberSignature Language="F#" Value="static member GetConfigCapabilities : string * System.Web.HttpRequest -&gt; System.Web.Configuration.HttpCapabilitiesBase" Usage="System.Web.Configuration.HttpCapabilitiesBase.GetConfigCapabilities (configKey, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.HttpCapabilitiesBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configKey" Type="System.String" />
        <Parameter Name="request" Type="System.Web.HttpRequest" />
      </Parameters>
      <Docs>
        <param name="configKey"><span data-ttu-id="fbda2-243">配置浏览器功能的配置节的名称。</span><span class="sxs-lookup"><span data-stu-id="fbda2-243">The name of the configuration section that configures browser capabilities.</span></span></param>
        <param name="request"><span data-ttu-id="fbda2-244">为其返回功能的 <see cref="T:System.Web.HttpRequest" />，由浏览器生成，通常为当前的 <see cref="T:System.Web.HttpRequest" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-244">The <see cref="T:System.Web.HttpRequest" /> generated by the browser for which to return capabilities and which is usually the current <see cref="T:System.Web.HttpRequest" />.</span></span></param>
        <summary><span data-ttu-id="fbda2-245">在内部用于返回 <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> 的一个实例，该实例表示已生成指定的 <see cref="T:System.Web.HttpRequest" /> 的浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-245">Used internally to return an instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></summary>
        <returns><span data-ttu-id="fbda2-246"><see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> 的一个实例，表示已生成指定的 <see cref="T:System.Web.HttpRequest" /> 的浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-246">An instance of <see cref="T:System.Web.Configuration.HttpCapabilitiesBase" /> representing the browser that generated the specified <see cref="T:System.Web.HttpRequest" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBackButton">
      <MemberSignature Language="C#" Value="public virtual bool HasBackButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBackButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasBackButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasBackButton { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasBackButton : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HasBackButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-247">获取一个值，该值指示浏览器是否具有专用的“后退”按钮。</span><span class="sxs-lookup"><span data-stu-id="fbda2-247">Gets a value indicating whether the browser has a dedicated **Back** button.</span></span></summary>
        <value><span data-ttu-id="fbda2-248">如果浏览器具有专用的 "**后退**" 按钮，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-248"><see langword="true" /> if the browser has a dedicated **Back** button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-249">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-249">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-250">如果 `false`，当 "**后退**" 按钮不可用时，可能需要链接控件。</span><span class="sxs-lookup"><span data-stu-id="fbda2-250">If `false`, a link control might be necessary when a **Back** button is not available.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-251">下面的代码示例演示如何确定浏览器是否具有专用的 "**后退**" 按钮。</span><span class="sxs-lookup"><span data-stu-id="fbda2-251">The following code example shows how to determine whether the browser has a dedicated **Back** button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HasBackButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HasBackButton/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HidesRightAlignedMultiselectScrollbars">
      <MemberSignature Language="C#" Value="public virtual bool HidesRightAlignedMultiselectScrollbars { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HidesRightAlignedMultiselectScrollbars As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HidesRightAlignedMultiselectScrollbars { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HidesRightAlignedMultiselectScrollbars : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-252">获取一个值，该值指示在呈现时是否遮蔽 <see langword="&lt;select multiple&gt;" /> 特性值为 <see langword="align" /> 的 HTML <see langword="right" /> 元素的滚动条。</span><span class="sxs-lookup"><span data-stu-id="fbda2-252">Gets a value indicating whether the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering.</span></span></summary>
        <value><span data-ttu-id="fbda2-253">如果在呈现时遮蔽 <see langword="true" /> 特性值为 <see langword="&lt;select multiple&gt;" /> 的 HTML <see langword="align" /> 元素的滚动条，则为 <see langword="right" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-253"><see langword="true" /> if the scrollbar of an HTML <see langword="&lt;select multiple&gt;" /> element with an <see langword="align" /> attribute value of <see langword="right" /> is obscured upon rendering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-254">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-254">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-255">下面的代码示例演示如何确定浏览器是否遮盖右对齐的多选元素的滚动条。</span><span class="sxs-lookup"><span data-stu-id="fbda2-255">The following code example shows how to determine whether the browser obscures the scrollbar for right-aligned multi-select elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.HidesRightAlignedMultiselectScrollbars/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlTextWriter">
      <MemberSignature Language="C#" Value="public string HtmlTextWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HtmlTextWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlTextWriter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HtmlTextWriter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlTextWriter : string with get, set" Usage="System.Web.Configuration.HttpCapabilitiesBase.HtmlTextWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-256">获取或设置要使用的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 的完全限定类名。</span><span class="sxs-lookup"><span data-stu-id="fbda2-256">Gets or sets the fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></summary>
        <value><span data-ttu-id="fbda2-257">要使用的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 的完全限定类名。</span><span class="sxs-lookup"><span data-stu-id="fbda2-257">The fully qualified class name of the <see cref="T:System.Web.UI.HtmlTextWriter" /> to use.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-258">获取在浏览器定义文件中指定的浏览器的内部标识符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-258">Gets the internal identifier of the browser as specified in the browser definition file.</span></span></summary>
        <value><span data-ttu-id="fbda2-259">在浏览器定义文件中指定的浏览器内部标识符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-259">Internal identifier of the browser as specified in the browser definition file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="protected virtual void Init ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Init() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.Init" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Init ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Init();" />
      <MemberSignature Language="F#" Value="abstract member Init : unit -&gt; unit&#xA;override this.Init : unit -&gt; unit" Usage="httpCapabilitiesBase.Init " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fbda2-260">在内部用于初始化一组内部值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-260">Used internally to initialize an internal set of values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputType">
      <MemberSignature Language="C#" Value="public virtual string InputType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InputType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.InputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-261">返回浏览器支持的输入类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-261">Returns the type of input supported by browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-262">浏览器支持的输入类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-262">The type of input supported by browser.</span></span> <span data-ttu-id="fbda2-263">默认值为<c>telephoneKeypad</c>。</span><span class="sxs-lookup"><span data-stu-id="fbda2-263">The default is <c>telephoneKeypad</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-264">可能的返回值包括：</span><span class="sxs-lookup"><span data-stu-id="fbda2-264">Possible return values include:</span></span>  
  
-   `virtualKeyboard`  
  
-   `telephoneKeypad`  
  
-   `keyboard`  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-265">下面的代码示例演示如何确定输入支持的类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-265">The following code example shows how to determine the type of input support.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.InputType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.InputType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.InputType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBrowser">
      <MemberSignature Language="C#" Value="public bool IsBrowser (string browserName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBrowser(string browserName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsBrowser (browserName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBrowser(System::String ^ browserName);" />
      <MemberSignature Language="F#" Value="member this.IsBrowser : string -&gt; bool" Usage="httpCapabilitiesBase.IsBrowser browserName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="browserName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="browserName"><span data-ttu-id="fbda2-266">指定的浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-266">The specified browser.</span></span></param>
        <summary><span data-ttu-id="fbda2-267">获取一个值，该值指示客户端浏览器是否与指定的浏览器相同。</span><span class="sxs-lookup"><span data-stu-id="fbda2-267">Gets a value indicating whether the client browser is the same as the specified browser.</span></span></summary>
        <returns><span data-ttu-id="fbda2-268">如果客户端浏览器与指定的浏览器相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-268"><see langword="true" /> if the client browser is the same as the specified browser; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-269">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-269">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-270">如果客户端浏览器定义从指定的浏览器继承，则 <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> 方法也会返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="fbda2-270">The <xref:System.Web.Configuration.HttpCapabilitiesBase.IsBrowser%2A> method also returns `true` if the client browser definition inherits from the specified browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColor">
      <MemberSignature Language="C#" Value="public virtual bool IsColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-271">获取一个值，该值指示浏览器是否具有颜色显示。</span><span class="sxs-lookup"><span data-stu-id="fbda2-271">Gets a value indicating whether the browser has a color display.</span></span></summary>
        <value><span data-ttu-id="fbda2-272">如果浏览器具有颜色显示，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-272"><see langword="true" /> if the browser has a color display; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-273">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-273">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-274">下面的代码示例演示客户端的浏览器是否支持颜色。</span><span class="sxs-lookup"><span data-stu-id="fbda2-274">The following code example shows whether the client's browser supports color.</span></span> <span data-ttu-id="fbda2-275">返回的值可用于确定要发送到浏览器的相应图像。</span><span class="sxs-lookup"><span data-stu-id="fbda2-275">The returned value could be used to determine the appropriate image to send to the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMobileDevice">
      <MemberSignature Language="C#" Value="public virtual bool IsMobileDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMobileDevice" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMobileDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMobileDevice { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMobileDevice : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.IsMobileDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-276">获取一个值，该值指示浏览器是否为已识别的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-276">Gets a value indicating whether the browser is a recognized mobile device.</span></span></summary>
        <value><span data-ttu-id="fbda2-277">如果浏览器是已识别的移动设备，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-277"><see langword="true" /> if the browser is a recognized mobile device; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-278">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-278">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-279">下面的代码示例演示如何确定浏览器是否为移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-279">The following code example shows how to determine whether the browser is a mobile device.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.IsMobileDevice#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.IsMobileDevice/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fbda2-280">要检索的浏览器功能的名称。</span><span class="sxs-lookup"><span data-stu-id="fbda2-280">The name of the browser capability to retrieve.</span></span></param>
        <summary><span data-ttu-id="fbda2-281">获取指定浏览器功能的值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-281">Gets the value of the specified browser capability.</span></span> <span data-ttu-id="fbda2-282">在 C# 中，此属性是类的索引器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-282">In C#, this property is the indexer for the class.</span></span></summary>
        <value><span data-ttu-id="fbda2-283">具有指定键名称的浏览器功能。</span><span class="sxs-lookup"><span data-stu-id="fbda2-283">The browser capability with the specified key name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-284">在 JScript 中，您可以使用某个类型定义的默认索引属性，但不能显式定义自己的属性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-284">In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</span></span> <span data-ttu-id="fbda2-285">但是，在类上指定 `expando` 特性会自动提供一个类型为 `Object` 的默认索引属性和一个 `String`的索引类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-285">However, specifying the `expando` attribute on a class automatically provides a default indexed property with a type of `Object` and an index type of `String`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaApplets">
      <MemberSignature Language="C#" Value="public bool JavaApplets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaApplets" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaApplets As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaApplets { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaApplets : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaApplets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-286">获取一个值，该值指示浏览器是否支持 Java。</span><span class="sxs-lookup"><span data-stu-id="fbda2-286">Gets a value indicating whether the browser supports Java.</span></span></summary>
        <value><span data-ttu-id="fbda2-287">如果浏览器支持 Java，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-287"><see langword="true" /> if the browser supports Java; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-288">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-288">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-289">下面的代码示例演示如何确定浏览器是否支持 Java。</span><span class="sxs-lookup"><span data-stu-id="fbda2-289">The following code example shows how to determine whether the browser supports Java.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaApplets#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaApplets/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JavaScript">
      <MemberSignature Language="C#" Value="public bool JavaScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JavaScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool JavaScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.JavaScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.JavaScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is the EcmaScriptVersion property. A Major version value greater than or equal to 1 implies JavaScript support. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-290">获取一个值，该值指示浏览器是否支持 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="fbda2-290">Gets a value indicating whether the browser supports JavaScript.</span></span></summary>
        <value><span data-ttu-id="fbda2-291">如果浏览器支持 JavaScript，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-291"><see langword="true" /> if the browser supports JavaScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-292">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-292">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-293">如果浏览器支持 JavaScript，但通过安全设置禁用了脚本，则 <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> 属性将返回 `true`，但不会在浏览器上执行脚本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-293">If the browser supports JavaScript but scripting is disabled through a security setting, the <xref:System.Web.Configuration.HttpCapabilitiesBase.JavaScript%2A> property will return `true` but script will not execute on the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-294">下面的代码示例演示如何确定浏览器是否支持 JavaScript。</span><span class="sxs-lookup"><span data-stu-id="fbda2-294">The following code example shows how to determine whether the browser supports JavaScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.JavaScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.JavaScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JScriptVersion">
      <MemberSignature Language="C#" Value="public Version JScriptVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version JScriptVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JScriptVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ JScriptVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JScriptVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.JScriptVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-295">获取浏览器支持的 JScript 版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-295">Gets the JScript version that the browser supports.</span></span></summary>
        <value><span data-ttu-id="fbda2-296">浏览器支持的 JScript 的 <see cref="T:System.Version" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-296">The <see cref="T:System.Version" /> of JScript that the browser supports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MajorVersion">
      <MemberSignature Language="C#" Value="public int MajorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MajorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MajorVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MajorVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MajorVersion : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-297">获取浏览器的主（整数）版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-297">Gets the major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-298">浏览器的主版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-298">The major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-299">下面的代码示例添加浏览器版本号的主要和次要（整数和小数）值，并将结果发送到浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-299">The following code example adds the major and minor (integer and decimal) values of the browser version number and sends the result to browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MajorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MajorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="fbda2-300">主版本值不是整数。</span><span class="sxs-lookup"><span data-stu-id="fbda2-300">The major version value is not an integer.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MaximumHrefLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumHrefLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumHrefLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumHrefLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumHrefLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumHrefLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumHrefLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-301">获取 HTML <see langword="href" />（定位点）元素的 <see langword="&lt;a&gt;" /> 特性的最大长度（以字符为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-301">Gets the maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="fbda2-302">HTML <see langword="href" /> (anchor) 元素的 <see langword="&lt;a&gt;" /> 属性的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="fbda2-302">The maximum length in characters for the <see langword="href" /> attribute of an HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumRenderedPageSize">
      <MemberSignature Language="C#" Value="public virtual int MaximumRenderedPageSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumRenderedPageSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumRenderedPageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumRenderedPageSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRenderedPageSize : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-303">获取浏览器可显示的页的最大长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-303">Gets the maximum length of the page, in bytes, which the browser can display.</span></span></summary>
        <value><span data-ttu-id="fbda2-304">浏览器可显示的页的最大长度（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-304">The maximum length of the page, in bytes, which the browser can display.</span></span> <span data-ttu-id="fbda2-305">默认值为<c>2000</c>。</span><span class="sxs-lookup"><span data-stu-id="fbda2-305">The default is <c>2000</c>.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-306">通过中间网关进行处理可以更改到达浏览器的字节数。</span><span class="sxs-lookup"><span data-stu-id="fbda2-306">Processing by an intermediate gateway can change the number of bytes that reach the browser.</span></span> <span data-ttu-id="fbda2-307">ASP.NET 不会对页面大小强制实施此限制。</span><span class="sxs-lookup"><span data-stu-id="fbda2-307">ASP.NET does not enforce this limit on page size.</span></span>  
  
 <span data-ttu-id="fbda2-308">使用移动客户端浏览器时，<xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> 主要很有用。</span><span class="sxs-lookup"><span data-stu-id="fbda2-308"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumRenderedPageSize%2A> is primarily useful when working with mobile-client browsers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSoftkeyLabelLength">
      <MemberSignature Language="C#" Value="public virtual int MaximumSoftkeyLabelLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumSoftkeyLabelLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MaximumSoftkeyLabelLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaximumSoftkeyLabelLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSoftkeyLabelLength : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-309">返回软键标签可显示的文本的最大长度。</span><span class="sxs-lookup"><span data-stu-id="fbda2-309">Returns the maximum length of the text that a soft-key label can display.</span></span></summary>
        <value><span data-ttu-id="fbda2-310">软键标签可显示的文本的最大长度。</span><span class="sxs-lookup"><span data-stu-id="fbda2-310">The maximum length of the text that a soft-key label can display.</span></span> <span data-ttu-id="fbda2-311">默认值为 <see langword="5" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-311">The default is <see langword="5" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-312"><xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-312">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MaximumSoftkeyLabelLength%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-313">下面的代码示例演示如何确定浏览器的软键标签的最大长度。</span><span class="sxs-lookup"><span data-stu-id="fbda2-313">The following code example shows how to determine the maximum length of the soft-key label for the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MaximumSoftkeyLabelLength#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MaximumSoftkeyLabelLength/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinorVersion">
      <MemberSignature Language="C#" Value="public double MinorVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinorVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersion As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinorVersion { double get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersion : double" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-314">获取浏览器的次（即小数）版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-314">Gets the minor (that is, decimal) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-315">浏览器的次版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-315">The minor version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-316">下面的代码示例返回浏览器的次版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-316">The following code example returns the minor version of the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MinorVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MinorVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="fbda2-317">标头中的次版本号无效。</span><span class="sxs-lookup"><span data-stu-id="fbda2-317">The minor version number in the header is not valid.</span></span></exception>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
      </Docs>
    </Member>
    <Member MemberName="MinorVersionString">
      <MemberSignature Language="C#" Value="public string MinorVersionString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MinorVersionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinorVersionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MinorVersionString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MinorVersionString : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MinorVersionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-318">以字符串形式获取浏览器的次（小数）版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-318">Gets the minor (decimal) version number of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="fbda2-319">浏览器的次版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-319">The minor version number of the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceManufacturer">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceManufacturer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceManufacturer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceManufacturer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceManufacturer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceManufacturer : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceManufacturer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-320">返回移动设备制造商的名称（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-320">Returns the name of the manufacturer of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="fbda2-321">移动设备制造商的名称（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-321">The name of the manufacturer of a mobile device, if known.</span></span> <span data-ttu-id="fbda2-322">默认值为 <see langword="Unknown" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-322">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MobileDeviceModel">
      <MemberSignature Language="C#" Value="public virtual string MobileDeviceModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MobileDeviceModel" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MobileDeviceModel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MobileDeviceModel { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MobileDeviceModel : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.MobileDeviceModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-323">获取移动设备的型号名称（如已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-323">Gets the model name of a mobile device, if known.</span></span></summary>
        <value><span data-ttu-id="fbda2-324">移动设备的型号名称（如已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-324">The model name of a mobile device, if known.</span></span> <span data-ttu-id="fbda2-325">默认值为 <see langword="Unknown" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-325">The default is <see langword="Unknown" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MSDomVersion">
      <MemberSignature Language="C#" Value="public Version MSDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version MSDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MSDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ MSDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MSDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.MSDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-326">获取浏览器支持的 Microsoft HTML (MSHTML) 文档对象模型 (DOM) 的版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-326">Gets the version of Microsoft HTML (MSHTML) Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="fbda2-327">浏览器支持的 MSHTML DOM 的版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-327">The number of the MSHTML DOM version that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-328">下面的代码示例演示如何确定浏览器是否支持一个大于1的 MSHTML DOM 主版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-328">The following code example shows how to determine whether the browser supports an MSHTML DOM major version greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.MSDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.MSDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfSoftkeys">
      <MemberSignature Language="C#" Value="public virtual int NumberOfSoftkeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NumberOfSoftkeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NumberOfSoftkeys As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NumberOfSoftkeys { int get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberOfSoftkeys : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-329">返回移动设备上软键的数目。</span><span class="sxs-lookup"><span data-stu-id="fbda2-329">Returns the number of soft keys on a mobile device.</span></span></summary>
        <value><span data-ttu-id="fbda2-330">移动设备支持的软键的数目。</span><span class="sxs-lookup"><span data-stu-id="fbda2-330">The number of soft keys supported on a mobile device.</span></span> <span data-ttu-id="fbda2-331">默认值为 <see langword="0" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-331">The default is <see langword="0" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-332"><xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-332">The <xref:System.Web.Configuration.HttpCapabilitiesBase.NumberOfSoftkeys%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-333">软键是应用程序通常可以映射到自定义任务的特殊键。</span><span class="sxs-lookup"><span data-stu-id="fbda2-333">Soft keys are special keys that the application can usually map to custom tasks.</span></span> <span data-ttu-id="fbda2-334">软键文本显示在屏幕的左下角和右下角。</span><span class="sxs-lookup"><span data-stu-id="fbda2-334">Soft-key text is displayed on the screen in the lower-left and lower-right corners.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Platform">
      <MemberSignature Language="C#" Value="public string Platform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Platform" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Platform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Platform { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Platform : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Platform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-335">获取客户端使用的平台的名称（如果已知）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-335">Gets the name of the platform that the client uses, if it is known.</span></span></summary>
        <value><span data-ttu-id="fbda2-336">如果已知，则为客户端使用的操作系统；否则该值被设置为 <see langword="Unknown" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-336">The operating system that the client uses, if it is known, otherwise the value is set to <see langword="Unknown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-337"><xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> 属性的某些可能值如下：</span><span class="sxs-lookup"><span data-stu-id="fbda2-337">Some of the possible values for the <xref:System.Web.Configuration.HttpCapabilitiesBase.Platform%2A> property are as follows:</span></span>  
  
-   `Unknown`  
  
-   `Win95`  
  
-   `Win98`  
  
-   <span data-ttu-id="fbda2-338">`Windows NT 5.0` （Windows 2000）</span><span class="sxs-lookup"><span data-stu-id="fbda2-338">`Windows NT 5.0` (Windows 2000)</span></span>  
  
-   <span data-ttu-id="fbda2-339">`Windows NT 5.1` （Windows XP）</span><span class="sxs-lookup"><span data-stu-id="fbda2-339">`Windows NT 5.1` (Windows XP)</span></span>  
  
-   <span data-ttu-id="fbda2-340">`WinNT` （所有其他版本的 Windows NT）</span><span class="sxs-lookup"><span data-stu-id="fbda2-340">`WinNT` (all other versions of Windows NT)</span></span>  
  
-   `Win16`  
  
-   `WinCE`  
  
-   `Mac68K`  
  
-   `MacPPC`  
  
-   `UNIX`  
  
-   `WebTV`  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-341">下面的代码示例演示如何确定浏览器是否正在 Windows NT 平台上运行。</span><span class="sxs-lookup"><span data-stu-id="fbda2-341">The following code example shows how to determine whether the browser is running on the Windows NT platform.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Platform#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Platform#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Platform/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredImageMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredImageMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredImageMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredImageMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredImageMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredImageMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredImageMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-342">返回浏览器通常首选的图像内容类型的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-342">Returns the MIME type of the type of image content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-343">浏览器通常首选的图像内容类型的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-343">The MIME type of the type of image content typically preferred by the browser.</span></span> <span data-ttu-id="fbda2-344">默认值为 <see langword="image/gif" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-344">The default is <see langword="image/gif" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-345">下面的代码示例演示如何确定浏览器通常首选的图像类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-345">The following code example shows how to determine the type of image typically preferred by a browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredImageMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredImageMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingMime">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingMime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingMime" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingMime As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingMime { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingMime : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-346">返回浏览器通常首选的内容类型的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-346">Returns the MIME type of the type of content typically preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-347">浏览器通常首选的内容类型的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-347">The MIME type of the type of content typically preferred by the browser.</span></span> <span data-ttu-id="fbda2-348">默认值为 <see langword="text/html" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-348">The default is <see langword="text/html" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-349">下面的代码示例演示如何确定浏览器通常首选的 MIME 类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-349">The following code example shows how to determine the MIME type typically preferred by the browser.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingMime#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingMime/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRenderingType">
      <MemberSignature Language="C#" Value="public virtual string PreferredRenderingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRenderingType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRenderingType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRenderingType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRenderingType : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-350">获取浏览器首选的内容类型的一般名称。</span><span class="sxs-lookup"><span data-stu-id="fbda2-350">Gets the general name for the type of content that the browser prefers.</span></span></summary>
        <value><span data-ttu-id="fbda2-351"><see langword="html32" /> 或 <see langword="chtml10" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-351"><see langword="html32" /> or <see langword="chtml10" />.</span></span> <span data-ttu-id="fbda2-352">默认值为 <see langword="html32" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-352">The default is <see langword="html32" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-353">下面的代码示例演示如何确定浏览器首选的内容类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-353">The following code example shows how to determine the type of content that the browser prefers.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.PreferredRenderingType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.PreferredRenderingType/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredRequestEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredRequestEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredRequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredRequestEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredRequestEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredRequestEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredRequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-354">获取浏览器首选的请求编码。</span><span class="sxs-lookup"><span data-stu-id="fbda2-354">Gets the request encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-355">浏览器首选的请求编码。</span><span class="sxs-lookup"><span data-stu-id="fbda2-355">The request encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredResponseEncoding">
      <MemberSignature Language="C#" Value="public virtual string PreferredResponseEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredResponseEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PreferredResponseEncoding { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredResponseEncoding : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.PreferredResponseEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-356">获取浏览器首选的响应编码。</span><span class="sxs-lookup"><span data-stu-id="fbda2-356">Gets the response encoding preferred by the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-357">浏览器首选的响应编码。</span><span class="sxs-lookup"><span data-stu-id="fbda2-357">The response encoding preferred by the browser.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreakBeforeWmlSelectAndInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreakBeforeWmlSelectAndInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreakBeforeWmlSelectAndInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreakBeforeWmlSelectAndInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreakBeforeWmlSelectAndInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-358">获取一个值，该值指示浏览器是否在 <see langword="&lt;select&gt;" /> 或 <see langword="&lt;input&gt;" /> 元素之前呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-358">Gets a value indicating whether the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-359">如果浏览器在 <see langword="true" /> 或 <see langword="&lt;select&gt;" /> 元素之前显示换行符，则为 <see langword="&lt;input&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-359"><see langword="true" /> if the browser renders a line break before <see langword="&lt;select&gt;" /> or <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-360">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-360">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-361"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-361">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-362">如果 `true`，则 `<select>` 或 `<input>` 元素后面的内容将自动放置在新行上。</span><span class="sxs-lookup"><span data-stu-id="fbda2-362">If `true`, content following `<select>` or `<input>` elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-363">下面的代码示例演示如何确定浏览器是否在 `<select>` 或 `<input>` 元素之前呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-363">The following code example shows how to determine whether the browser renders a line break before `<select>` or `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreakBeforeWmlSelectAndInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterHtmlLists">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterHtmlLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterHtmlLists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterHtmlLists { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterHtmlLists : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterHtmlLists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-364">获取一个值，该值指示浏览器是否在列表项元素之后呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-364">Gets a value indicating whether the browser renders a line break after list-item elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-365">如果浏览器在 list-item 元素后面显示换行符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-365"><see langword="true" /> if the browser renders a line break after list-item elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-366">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-366">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-367">如果 `true`，则后面的列表项元素将自动放置在新行上。</span><span class="sxs-lookup"><span data-stu-id="fbda2-367">If `true`, content following list-item elements will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-368">下面的代码示例演示如何确定浏览器是否在列表项元素之后呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-368">The following code example shows how to determine whether the browser renders a line break after list-item elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterHtmlLists#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterHtmlLists/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlAnchor">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlAnchor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlAnchor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlAnchor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlAnchor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-369">获取一个值，该值指示浏览器是否在独立的 HTML <see langword="&lt;a&gt;" />（定位点）元素之后呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-369">Gets a value indicating whether the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element.</span></span></summary>
        <value><span data-ttu-id="fbda2-370">如果浏览器在独立的 HTML <see langword="true" />（定位点）元素之后呈现一个换行符，则为 <see langword="&lt;a&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-370"><see langword="true" /> if the browser renders a line break after a stand-alone HTML <see langword="&lt;a&gt;" /> (anchor) element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-371">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-371">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-372"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-372">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-373">如果 `true`，则独立的 HTML `<a>` （定位点）元素后面的内容将自动放置在新行上。</span><span class="sxs-lookup"><span data-stu-id="fbda2-373">If `true`, content following a stand-alone HTML `<a>` (anchor) element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-374">下面的代码示例演示如何确定浏览器是否在独立的 WML `<a>` （定位点）元素之后呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-374">The following code example shows how to determine whether the browser renders a line break after a stand-alone WML `<a>` (anchor) element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlAnchor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersBreaksAfterWmlInput">
      <MemberSignature Language="C#" Value="public virtual bool RendersBreaksAfterWmlInput { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersBreaksAfterWmlInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersBreaksAfterWmlInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersBreaksAfterWmlInput { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersBreaksAfterWmlInput : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-375">获取一个值，该值指示浏览器是否在 HTML <see langword="&lt;input&gt;" /> 元素之后呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-375">Gets a value indicating whether the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="fbda2-376"><see langword="true" /> 如果浏览器在 HTML <see langword="&lt;input&gt;" /> 元素之后呈现一个换行符，则为; 否则为。否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-376"><see langword="true" /> if the browser renders a line break after an HTML <see langword="&lt;input&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-377">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-377">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-378"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-378">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersBreaksAfterWmlInput%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-379">如果 `true`，HTML `<input>` 元素后面的内容将自动放置在新行上。</span><span class="sxs-lookup"><span data-stu-id="fbda2-379">If `true`, content following an HTML `<input>` element will automatically be placed on a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-380">下面的代码示例演示如何确定浏览器是否在 HTML `<input>` 元素之后呈现一个换行符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-380">The following code example shows how to determine whether the browser renders a line break after an HTML `<input>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersBreaksAfterWmlInput#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersBreaksAfterWmlInput/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlDoAcceptsInline">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlDoAcceptsInline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlDoAcceptsInline" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlDoAcceptsInline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlDoAcceptsInline { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlDoAcceptsInline : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-381">获取一个值，该值指示移动设备浏览器是否将基于 WML <see langword="do" /> 的窗体接受构造作为内联按钮而不是软键来呈现。</span><span class="sxs-lookup"><span data-stu-id="fbda2-381">Gets a value indicating whether the mobile-device browser renders a WML <see langword="do" />-based form accept construct as an inline button rather than as a soft key.</span></span></summary>
        <value><span data-ttu-id="fbda2-382">如果移动设备浏览器将基于 WML <see langword="true" /> 的窗体接受构造呈现为内联按钮，则为 <see langword="do" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-382"><see langword="true" /> if the mobile-device browser renders a WML <see langword="do" />-based form-accept construct as an inline button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-383">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-383">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-384"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-384">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlDoAcceptsInline%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-385">下面的代码示例演示如何确定浏览器是否将基于 WML `do`窗体接受构造呈现为内联按钮。</span><span class="sxs-lookup"><span data-stu-id="fbda2-385">The following code example shows how to determine whether the browser renders a WML `do`-based form-accept construct as an inline button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlDoAcceptsInline#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlDoAcceptsInline/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RendersWmlSelectsAsMenuCards">
      <MemberSignature Language="C#" Value="public virtual bool RendersWmlSelectsAsMenuCards { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RendersWmlSelectsAsMenuCards As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RendersWmlSelectsAsMenuCards { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RendersWmlSelectsAsMenuCards : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-386">获取一个值，该值指示浏览器是否将 WML <see langword="&lt;select&gt;" /> 元素作为菜单卡而不是组合框来呈现。</span><span class="sxs-lookup"><span data-stu-id="fbda2-386">Gets a value indicating whether the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards, rather than as a combo box.</span></span></summary>
        <value><span data-ttu-id="fbda2-387">如果浏览器将 WML <see langword="true" /> 元素呈现为菜单卡，则为 <see langword="&lt;select&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-387"><see langword="true" /> if the browser renders WML <see langword="&lt;select&gt;" /> elements as menu cards; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-388">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-388">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-389"><xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> 属性仅适用于 WML 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-389">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards%2A> property applies only to WML-compatible mobile devices.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-390">下面的代码示例演示如何确定浏览器是否将 WML `<select>` 元素呈现为菜单卡片。</span><span class="sxs-lookup"><span data-stu-id="fbda2-390">The following code example shows how to determine whether the browser renders WML `<select>` elements as menu cards.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RendersWmlSelectsAsMenuCards/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredMetaTagNameValue">
      <MemberSignature Language="C#" Value="public virtual string RequiredMetaTagNameValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredMetaTagNameValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiredMetaTagNameValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ RequiredMetaTagNameValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredMetaTagNameValue : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiredMetaTagNameValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-391">在内部用于生成某些浏览器所需的元标记。</span><span class="sxs-lookup"><span data-stu-id="fbda2-391">Used internally to produce a meta-tag required by some browsers.</span></span></summary>
        <value><span data-ttu-id="fbda2-392">某些浏览器所需的元标记。</span><span class="sxs-lookup"><span data-stu-id="fbda2-392">A meta-tag required by some browsers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-393">仅供内部使用。</span><span class="sxs-lookup"><span data-stu-id="fbda2-393">Intended for internal use only.</span></span> <span data-ttu-id="fbda2-394">某些浏览器需要一个类似于下面的元标记，以便浏览器正确呈现。</span><span class="sxs-lookup"><span data-stu-id="fbda2-394">Some browsers require a meta-tag similar to the following for the browser to render properly.</span></span>  
  
```  
<META NAME="NAME" CONTENT="VALUE">  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresAttributeColonSubstitution">
      <MemberSignature Language="C#" Value="public virtual bool RequiresAttributeColonSubstitution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresAttributeColonSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresAttributeColonSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresAttributeColonSubstitution { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresAttributeColonSubstitution : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresAttributeColonSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-395">获取一个值，该值指示浏览器是否要求用其他字符替换元素特性值中的冒号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-395">Gets a value indicating whether the browser requires colons in element attribute values to be substituted with a different character.</span></span></summary>
        <value><span data-ttu-id="fbda2-396">如果浏览器要求用其他字符替换元素特性值中的冒号，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-396"><see langword="true" /> if the browser requires colons in element attribute values to be substituted with a different character; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-397">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-397">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-398">某些浏览器不识别元素特性值中的冒号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-398">Some browsers do not recognize colons in element attribute values.</span></span> <span data-ttu-id="fbda2-399">如果 `true`，将在呈现时替换为回发数据中的不同字符。</span><span class="sxs-lookup"><span data-stu-id="fbda2-399">If `true`, a different character will be substituted on rendering and returned in postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-400">下面的代码示例演示如何确定浏览器是否要求使用不同的字符替换元素特性值中的冒号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-400">The following code example shows how to determine whether the browser requires colons in element attribute values to be substituted with a different character.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresAttributeColonSubstitution#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresAttributeColonSubstitution/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresContentTypeMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool RequiresContentTypeMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresContentTypeMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresContentTypeMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresContentTypeMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresContentTypeMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresContentTypeMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-401">获取一个值，该值指示浏览器是否需要一个已指定其 <see langword="&lt;meta&gt;" /> 特性的 HTML <see langword="content-type" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-401">Gets a value indicating whether the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified.</span></span></summary>
        <value><span data-ttu-id="fbda2-402">如果浏览器需要为其指定 <see langword="true" /> 特性的 HTML <see langword="&lt;meta&gt;" /> 元素，则为 <see langword="content-type" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-402"><see langword="true" /> if the browser requires an HTML <see langword="&lt;meta&gt;" /> element for which the <see langword="content-type" /> attribute is specified; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-403">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-403">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-404">如果 `true`，则服务器控件适配器将以下标记插入网页的 HTML `<head>` 元素：</span><span class="sxs-lookup"><span data-stu-id="fbda2-404">If `true`, server-control adapters insert the following tag into the HTML `<head>` element of a Web page:</span></span>  
  
```  
<META HTTP-EQUIV="CONTENT-TYPE" CONTENT=""; CHARSET="">  
```  
  
 <span data-ttu-id="fbda2-405">在此示例中，`CONTENT` 是 <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> 属性返回的值，`charset` 是使用的字符编码。</span><span class="sxs-lookup"><span data-stu-id="fbda2-405">In this example, `CONTENT` is the value returned by the <xref:System.Web.Configuration.HttpCapabilitiesBase.PreferredRenderingMime%2A> property, and `charset` is the character encoding used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-406">下面的代码示例演示如何确定浏览器是否需要为其指定 `content-type` 特性的 HTML `<meta>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-406">The following code example shows how to determine whether the browser requires an HTML `<meta>` element for which the `content-type` attribute is specified.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresContentTypeMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresContentTypeMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresControlStateInSession">
      <MemberSignature Language="C#" Value="public bool RequiresControlStateInSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresControlStateInSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiresControlStateInSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequiresControlStateInSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresControlStateInSession : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresControlStateInSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-407">获取一个值，该值指示浏览器是否要求在会话中维护控件状态。</span><span class="sxs-lookup"><span data-stu-id="fbda2-407">Gets a value indicating whether the browser requires control state to be maintained in sessions.</span></span></summary>
        <value><span data-ttu-id="fbda2-408">如果浏览器要求在会话中保持控件状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-408"><see langword="true" /> if the browser requires control state to be maintained in sessions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-409">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-409">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-410">下面的代码示例演示如何确定浏览器是否要求在会话中维护控件状态。</span><span class="sxs-lookup"><span data-stu-id="fbda2-410">The following code example shows how to determine whether the browser requires control state to be maintained in sessions.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/CS/browsercaps.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresControlStateInSession#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresControlStateInSession/VB/browsercaps_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresDBCSCharacter">
      <MemberSignature Language="C#" Value="public virtual bool RequiresDBCSCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDBCSCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresDBCSCharacter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresDBCSCharacter { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresDBCSCharacter : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresDBCSCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-411">获取一个值，该值指示浏览器是否需要双字节字符集。</span><span class="sxs-lookup"><span data-stu-id="fbda2-411">Gets a value indicating whether the browser requires a double-byte character set.</span></span></summary>
        <value><span data-ttu-id="fbda2-412">如果浏览器需要双字节字符集，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-412"><see langword="true" /> if the browser requires a double-byte character set; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-413">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-413">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-414">下面的代码示例演示如何确定浏览器是否需要双字节字符集。</span><span class="sxs-lookup"><span data-stu-id="fbda2-414">The following code example shows how to determine whether the browser requires a double-byte character set.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresDBCSCharacter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresDBCSCharacter/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresHtmlAdaptiveErrorReporting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresHtmlAdaptiveErrorReporting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresHtmlAdaptiveErrorReporting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresHtmlAdaptiveErrorReporting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresHtmlAdaptiveErrorReporting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-415">获取一个值，该值指示浏览器是否需要非标准错误消息。</span><span class="sxs-lookup"><span data-stu-id="fbda2-415">Gets a value indicating whether the browser requires nonstandard error messages.</span></span></summary>
        <value><span data-ttu-id="fbda2-416">如果浏览器需要非标准错误消息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-416"><see langword="true" /> if the browser requires nonstandard error messages; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-417">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-417">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-418">如果 `true`，则浏览器不会正确呈现 HTTP 错误消息。</span><span class="sxs-lookup"><span data-stu-id="fbda2-418">If `true`, the browser does not properly render HTTP error messages.</span></span> <span data-ttu-id="fbda2-419">若要更正此问题，服务器控件适配器将为浏览器生成自定义错误页。</span><span class="sxs-lookup"><span data-stu-id="fbda2-419">To correct this, server control adapters generate a custom error page for the browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-420">下面的代码示例演示如何确定浏览器是否需要非标准错误消息。</span><span class="sxs-lookup"><span data-stu-id="fbda2-420">The following code example shows how to determine whether the browser requires nonstandard error messages.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresHtmlAdaptiveErrorReporting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresLeadingPageBreak">
      <MemberSignature Language="C#" Value="public virtual bool RequiresLeadingPageBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresLeadingPageBreak" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresLeadingPageBreak As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresLeadingPageBreak { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresLeadingPageBreak : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresLeadingPageBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-421">获取一个值，该值指示浏览器是否要求网页正文的第一个元素为 HTML <see langword="&lt;br&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-421">Gets a value indicating whether the browser requires the first element in the body of a Web page to be an HTML <see langword="&lt;br&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="fbda2-422">如果浏览器要求网页正文的第一个元素是 HTML <see langword="true" /> 元素，则为 <see langword="BR" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-422"><see langword="true" /> if the browser requires the first element in the body of a Web page to be an HTML <see langword="BR" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-423">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-423">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-424">如果 `true`，则服务器控件适配器会立即在网页中的 `<body>` 标记后面插入附加 `<br>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-424">If `true`, server-control adapters insert an additional `<br>` element immediately following the `<body>` tag in a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-425">下面的代码示例演示如何确定浏览器是否要求网页正文中的第一个元素为 HTML `<br>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-425">The following code example shows how to determine whether the browser requires the first element in the body of a Web page to be an HTML `<br>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresLeadingPageBreak#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresLeadingPageBreak/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresNoBreakInFormatting">
      <MemberSignature Language="C#" Value="public virtual bool RequiresNoBreakInFormatting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresNoBreakInFormatting" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresNoBreakInFormatting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresNoBreakInFormatting { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresNoBreakInFormatting : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresNoBreakInFormatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-426">获取一个值，该值指示浏览器是否不支持 HTML <see langword="&lt;br&gt;" /> 元素进行分行格式设置。</span><span class="sxs-lookup"><span data-stu-id="fbda2-426">Gets a value indicating whether the browser does not support HTML <see langword="&lt;br&gt;" /> elements to format line breaks.</span></span></summary>
        <value><span data-ttu-id="fbda2-427">如果浏览器不支持 HTML <see langword="true" /> 元素，则为 <see langword="&lt;br&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-427"><see langword="true" /> if the browser does not support HTML <see langword="&lt;br&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-428">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-428">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-429">如果 `true`，则浏览器将不会正确呈现包含 HTML `<br>` 元素的页面。</span><span class="sxs-lookup"><span data-stu-id="fbda2-429">If `true`, the browser will not correctly render pages containing the HTML `<br>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-430">下面的代码示例演示如何确定浏览器是否不支持 HTML `<br>` 元素设置换行格式。</span><span class="sxs-lookup"><span data-stu-id="fbda2-430">The following code example shows how to determine whether the browser does not support HTML `<br>` elements to format line breaks.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresNoBreakInFormatting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresNoBreakInFormatting/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresOutputOptimization">
      <MemberSignature Language="C#" Value="public virtual bool RequiresOutputOptimization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresOutputOptimization" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresOutputOptimization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresOutputOptimization { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresOutputOptimization : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-431">获取一个值，该值指示浏览器是否要求页中包含一个经过大小优化的标记语言标记的窗体。</span><span class="sxs-lookup"><span data-stu-id="fbda2-431">Gets a value indicating whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span></summary>
        <value><span data-ttu-id="fbda2-432">如果浏览器要求页中包含一个经过大小优化的标记语言标记的窗体，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-432"><see langword="true" /> if the browser requires pages to contain a size-optimized form of markup language tags; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-433">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-433">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-434">如果 `true`，服务器控件适配器将生成最小输出，以减小生成的页的大小。</span><span class="sxs-lookup"><span data-stu-id="fbda2-434">If `true`, server control adapters generate minimal output to reduce the size of the resulting page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fbda2-435"><xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> 属性返回与 i 模式兼容的浏览器 `true`。</span><span class="sxs-lookup"><span data-stu-id="fbda2-435">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresOutputOptimization%2A> property returns `true` for i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-436">下面的代码示例演示如何确定浏览器是否要求页面包含一个经过大小优化的标记语言标记的窗体。</span><span class="sxs-lookup"><span data-stu-id="fbda2-436">The following code example shows how to determine whether the browser requires pages to contain a size-optimized form of markup language tags.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresOutputOptimization#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresOutputOptimization/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresPhoneNumbersAsPlainText">
      <MemberSignature Language="C#" Value="public virtual bool RequiresPhoneNumbersAsPlainText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresPhoneNumbersAsPlainText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresPhoneNumbersAsPlainText { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresPhoneNumbersAsPlainText : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-437">获取一个值，该值指示浏览器是否支持基于纯文本的电话拨号，或是否需要特殊标记。</span><span class="sxs-lookup"><span data-stu-id="fbda2-437">Gets a value indicating whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span></summary>
        <value><span data-ttu-id="fbda2-438">如果浏览器仅支持基于纯文本的电话拨号，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-438"><see langword="true" /> if the browser supports phone dialing based on plain text only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-439">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-439">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-440"><xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> 属性仅适用于 `true`了 <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> 属性的浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-440">The <xref:System.Web.Configuration.HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText%2A> property applies only to browsers for which the <xref:System.Web.Configuration.HttpCapabilitiesBase.CanInitiateVoiceCall%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-441">下面的代码示例演示如何确定浏览器是否支持基于纯文本的电话拨号，或者是否需要特殊标记。</span><span class="sxs-lookup"><span data-stu-id="fbda2-441">The following code example shows how to determine whether the browser supports phone dialing based on plain text, or whether it requires special markup.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresPhoneNumbersAsPlainText/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresSpecialViewStateEncoding">
      <MemberSignature Language="C#" Value="public virtual bool RequiresSpecialViewStateEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresSpecialViewStateEncoding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresSpecialViewStateEncoding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresSpecialViewStateEncoding : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresSpecialViewStateEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-442">获取一个值，该值指示浏览器是否要求专门对 <see langword="VIEWSTATE" /> 值进行编码。</span><span class="sxs-lookup"><span data-stu-id="fbda2-442">Gets a value indicating whether the browser requires <see langword="VIEWSTATE" /> values to be specially encoded.</span></span></summary>
        <value><span data-ttu-id="fbda2-443">如果浏览器要求专门对 <see langword="true" /> 值进行编码，则为 <see langword="VIEWSTATE" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-443"><see langword="true" /> if the browser requires <see langword="VIEWSTATE" /> values to be specially encoded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-444">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-444">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-445">HTTP 是无状态协议，`VIEWSTATE` 是用于跨多个请求保存客户端更改的一种机制。</span><span class="sxs-lookup"><span data-stu-id="fbda2-445">HTTP is a stateless protocol, and `VIEWSTATE` is one mechanism used to persist client changes across multiple requests.</span></span> <span data-ttu-id="fbda2-446">网页上的每个控件都包含一个 <xref:System.Web.UI.Control.ViewState%2A> 属性，该属性表示客户端所做的任何更改的累计。</span><span class="sxs-lookup"><span data-stu-id="fbda2-446">Each control on a Web page contains a <xref:System.Web.UI.Control.ViewState%2A> property, which represents the accumulation of any changes made by the client.</span></span> <span data-ttu-id="fbda2-447">在 Web 窗体页中，这些更改在回发数据中编码为 HTML `<input>` 元素的 `value`，该元素具有 `type` 特性 "`hidden`"。</span><span class="sxs-lookup"><span data-stu-id="fbda2-447">In a Web Forms page, these changes are encoded in postback data as the `value` of an HTML `<input>` element with a `type` attribute of `hidden`.</span></span> <span data-ttu-id="fbda2-448">例如:</span><span class="sxs-lookup"><span data-stu-id="fbda2-448">For example:</span></span>  
  
```  
<input type="hidden" name="__VIEWSTATE" value="t0PH_u56?cDxleHQ7P=" />  
```  
  
 如果 `true`，浏览器将不会正确地发送 `VIEWSTATE` 值中的非字母字符，也不会通过中间网关发送这些字符。 <span data-ttu-id="fbda2-450">若要更正此错误，服务器控件适配器会将 `VIEWSTATE` 值中的非字母字符替换为不需要 HTTP 请求编码的值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-450">To correct this, server-control adapters replace non-alphabetic characters in the `VIEWSTATE` value with ones that do not require encoding in HTTP requests.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-451">下面的代码示例演示如何确定浏览器是否需要对 `VIEWSTATE` 值进行特殊编码。</span><span class="sxs-lookup"><span data-stu-id="fbda2-451">The following code example shows how to determine whether the browser requires `VIEWSTATE` values to be specially encoded.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresSpecialViewStateEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresSpecialViewStateEncoding/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueFilePathSuffix As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueFilePathSuffix { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueFilePathSuffix : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueFilePathSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-452">获取一个值，该值指示浏览器是否需要唯一的窗体-操作 URL。</span><span class="sxs-lookup"><span data-stu-id="fbda2-452">Gets a value indicating whether the browser requires unique form-action URLs.</span></span></summary>
        <value><span data-ttu-id="fbda2-453">如果浏览器需要唯一表单操作 URL，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-453"><see langword="true" /> if the browser requires unique form-action URLs; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-454">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-454">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-455">自引用 HTML `<form>` 元素是 `action` 属性为其指定其 URL 的元素之一。</span><span class="sxs-lookup"><span data-stu-id="fbda2-455">A self-referring HTML `<form>` element is one for which the `action` attribute specifies its own URL.</span></span> <span data-ttu-id="fbda2-456">如果 `true`，则自引用窗体不会返回正确的结果。</span><span class="sxs-lookup"><span data-stu-id="fbda2-456">If `true`, self-referring forms do not return the correct results.</span></span> <span data-ttu-id="fbda2-457">这是由浏览器或中间网关进行缓存所致。</span><span class="sxs-lookup"><span data-stu-id="fbda2-457">This is due to caching by either the browser or an intermediate gateway.</span></span> <span data-ttu-id="fbda2-458">若要更正此错误，服务器控件适配器将默认查询字符串（`__ufps=``uniquefilepathsuffix`）追加到自引用窗体的 "操作 URL" 值上。</span><span class="sxs-lookup"><span data-stu-id="fbda2-458">To correct this, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto the form-action URL values of self-referring forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-459">下面的代码示例演示如何确定浏览器是否需要唯一的窗体-操作 Url。</span><span class="sxs-lookup"><span data-stu-id="fbda2-459">The following code example shows how to determine whether the browser requires unique form-action URLs.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueFilePathSuffix#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueFilePathSuffix/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlCheckboxNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlCheckboxNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlCheckboxNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlCheckboxNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlCheckboxNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-460">获取一个值，该值指示浏览器是否需要多个 HTML <see langword="name" /> 元素的唯一 <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> 特性值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-460">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-461">如果浏览器需要多个 HTML <see langword="true" /> 元素的唯一 <see langword="name" /> 特性值，则为 <see langword="&lt;input type=&quot;checkbox&quot;&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-461"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input type=&quot;checkbox&quot;&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-462">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-462">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-463">下面的代码示例演示如何确定浏览器是否需要多个 HTML `<input type="checkbox">` 元素的唯一 `NAME` 属性值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-463">The following code example shows how to determine whether the browser requires unique `NAME` attribute values of multiple HTML `<input type="checkbox">` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlCheckboxNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueHtmlInputNames">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUniqueHtmlInputNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUniqueHtmlInputNames As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueHtmlInputNames { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueHtmlInputNames : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUniqueHtmlInputNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-464">获取一个值，该值指示浏览器是否需要多个 HTML <see langword="name" /> 元素的唯一 <see langword="&lt;input&gt;" /> 特性值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-464">Gets a value indicating whether the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-465">如果浏览器需要多个 HTML <see langword="true" /> 元素的唯一 <see langword="name" /> 特性值，则为 <see langword="&lt;input&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-465"><see langword="true" /> if the browser requires unique <see langword="name" /> attribute values of multiple HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-466">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-466">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-467">下面的代码示例演示如何确定浏览器是否需要多个 HTML `<input>` 元素的唯一 `name` 属性值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-467">The following code example shows how to determine whether the browser requires unique `name` attribute values of multiple HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUniqueHtmlInputNames#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUniqueHtmlInputNames/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUrlEncodedPostfieldValues">
      <MemberSignature Language="C#" Value="public virtual bool RequiresUrlEncodedPostfieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RequiresUrlEncodedPostfieldValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUrlEncodedPostfieldValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUrlEncodedPostfieldValues : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-468">获取一个值，该值指示浏览器发送的回发数据是否为 <see langword="UrlEncoded" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-468">Gets a value indicating whether postback data sent by the browser will be <see langword="UrlEncoded" />.</span></span></summary>
        <value><span data-ttu-id="fbda2-469">如果浏览器发送的回发数据为 <see langword="true" />，则为 <see langword="UrlEncoded" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-469"><see langword="true" /> if postback data sent by the browser will be <see langword="UrlEncoded" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-470">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-470">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-471">下面的代码示例演示如何确定浏览器是否 `UrlEncodes` 回发数据。</span><span class="sxs-lookup"><span data-stu-id="fbda2-471">The following code example shows how to determine whether the browser `UrlEncodes` postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.RequiresUrlEncodedPostfieldValues/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenBitDepth">
      <MemberSignature Language="C#" Value="public virtual int ScreenBitDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenBitDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenBitDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenBitDepth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenBitDepth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenBitDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-472">返回显示的深度（以每像素位数为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-472">Returns the depth of the display, in bits per pixel.</span></span></summary>
        <value><span data-ttu-id="fbda2-473">显示的深度（以每像素位数为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-473">The depth of the display, in bits per pixel.</span></span> <span data-ttu-id="fbda2-474">默认值为 <see langword="1" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-474">The default is <see langword="1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-475">返回显示的近似高度（以字符行为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-475">Returns the approximate height of the display, in character lines.</span></span></summary>
        <value><span data-ttu-id="fbda2-476">显示的大致高度（以字符行为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-476">The approximate height of the display, in character lines.</span></span> <span data-ttu-id="fbda2-477">默认值为 <see langword="6" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-477">The default is <see langword="6" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-478">返回的值可从假定的字符大小和实际屏幕像素大小派生。</span><span class="sxs-lookup"><span data-stu-id="fbda2-478">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="fbda2-479">确定高度的算法使用默认字体大小（来自 .config 文件）、浏览器特定大小（再次从 .config 文件）和浏览器发送的显式标头的组合。</span><span class="sxs-lookup"><span data-stu-id="fbda2-479">The algorithm for determining the height uses a combination of the default font sizes (from a .config file), browser-specific sizes (again, from a .config file), and explicit headers sent by the browser.</span></span> <span data-ttu-id="fbda2-480">某些浏览器可能依赖于内部默认值，这些值仅近似于实际高度。</span><span class="sxs-lookup"><span data-stu-id="fbda2-480">Some browsers might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenCharactersWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenCharactersWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenCharactersWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenCharactersWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenCharactersWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenCharactersWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenCharactersWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-481">返回显示的近似宽度（以字符为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-481">Returns the approximate width of the display, in characters.</span></span></summary>
        <value><span data-ttu-id="fbda2-482">显示的大致宽度（以字符为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-482">The approximate width of the display, in characters.</span></span> <span data-ttu-id="fbda2-483">默认值为 <see langword="12" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-483">The default is <see langword="12" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-484">返回的值可从假定的字符大小和实际屏幕像素大小派生。</span><span class="sxs-lookup"><span data-stu-id="fbda2-484">The returned value can be derived from the assumed character size and actual screen pixel size.</span></span> <span data-ttu-id="fbda2-485">确定宽度的算法使用默认字体大小（来自 .config 文件）、设备特定大小（从 .config 文件）和由设备发送的显式标头的组合。</span><span class="sxs-lookup"><span data-stu-id="fbda2-485">The algorithm for determining the width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="fbda2-486">这些值不一定是精确值（特别是对于可变宽度字体，这些值是近似的）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-486">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="fbda2-487">某些设备可能依赖于内部默认值，这些值仅近似于实际宽度。</span><span class="sxs-lookup"><span data-stu-id="fbda2-487">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsHeight">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsHeight" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsHeight : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-488">返回显示的近似高度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-488">Returns the approximate height of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="fbda2-489">显示的大致高度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-489">The approximate height of the display, in pixels.</span></span> <span data-ttu-id="fbda2-490">默认值为 <see langword="72" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-490">The default is <see langword="72" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-491">返回的值可从假定的字符大小和字符高度派生。</span><span class="sxs-lookup"><span data-stu-id="fbda2-491">The returned value can be derived from the assumed character size and character height.</span></span> <span data-ttu-id="fbda2-492">确定像素高度的算法使用默认字体大小（来自 .config 文件）、设备特定大小（从 .config 文件）和由设备发送的显式标头的组合。</span><span class="sxs-lookup"><span data-stu-id="fbda2-492">The algorithm for determining the pixel height uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="fbda2-493">这些值不一定是精确的。</span><span class="sxs-lookup"><span data-stu-id="fbda2-493">These values are not necessarily exact.</span></span> <span data-ttu-id="fbda2-494">某些设备可能依赖于内部默认值，这些值仅近似于实际高度。</span><span class="sxs-lookup"><span data-stu-id="fbda2-494">Some devices might rely on internal default values, which only approximate the actual height.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPixelsWidth">
      <MemberSignature Language="C#" Value="public virtual int ScreenPixelsWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScreenPixelsWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScreenPixelsWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScreenPixelsWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ScreenPixelsWidth : int" Usage="System.Web.Configuration.HttpCapabilitiesBase.ScreenPixelsWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-495">返回显示的近似宽度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-495">Returns the approximate width of the display, in pixels.</span></span></summary>
        <value><span data-ttu-id="fbda2-496">显示的大致宽度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-496">The approximate width of the display, in pixels.</span></span> <span data-ttu-id="fbda2-497">默认值为 <see langword="96" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-497">The default is <see langword="96" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-498">返回的值可从假定的字符大小和字符宽度派生。</span><span class="sxs-lookup"><span data-stu-id="fbda2-498">The returned value can be derived from the assumed character size and character width.</span></span> <span data-ttu-id="fbda2-499">确定像素宽度的算法使用默认字体大小（来自 .config 文件）、设备特定大小（从 .config 文件）和由设备发送的显式标头的组合。</span><span class="sxs-lookup"><span data-stu-id="fbda2-499">The algorithm for determining the pixel width uses a combination of the default font sizes (from a .config file), device-specific sizes (again, from a .config file), and explicit headers sent by the devices.</span></span> <span data-ttu-id="fbda2-500">这些值不一定是精确值（特别是对于可变宽度字体，这些值是近似的）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-500">These values are not necessarily exact (especially for variable-width fonts, these values are approximate).</span></span> <span data-ttu-id="fbda2-501">某些设备可能依赖于内部默认值，这些值仅近似于实际宽度。</span><span class="sxs-lookup"><span data-stu-id="fbda2-501">Some devices might rely on internal default values, which only approximate the actual width.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAccesskeyAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAccesskeyAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAccesskeyAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAccesskeyAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAccesskeyAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAccesskeyAttribute : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsAccesskeyAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-502">获取一个值，该值指示浏览器是否支持 HTML <see langword="ACCESSKEY" />（定位点）和 <see langword="&lt;a&gt;" /> 元素的 <see langword="&lt;input&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-502">Gets a value indicating whether the browser supports the <see langword="ACCESSKEY" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-503">如果浏览器支持 HTML <see langword="true" />（定位点）和 <see langword="accesskey" /> 元素的 <see langword="&lt;a&gt;" /> 特性，则为 <see langword="&lt;input&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-503"><see langword="true" /> if the browser supports the <see langword="accesskey" /> attribute of HTML <see langword="&lt;a&gt;" /> (anchor) and <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-504">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-504">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-505">`accesskey` 属性通过在设备上分配软密钥或其他控制器来与 HTML `<a>` （定位点）和 `<input>` 元素进行交互，将网页上表单和链接的控制扩展到移动和可访问的平台。</span><span class="sxs-lookup"><span data-stu-id="fbda2-505">The `accesskey` attribute extends control of forms and links on a Web page to mobile and accessible platforms by assigning a soft key or other controller on the device to interact with HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-506">下面的代码示例演示如何确定浏览器是否支持 HTML `<a>` （定位点）和 `<input>` 元素的 `accesskey` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-506">The following code example shows how to determine whether the browser supports the `accesskey` attribute of HTML `<a>` (anchor) and `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsAccesskeyAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsAccesskeyAttribute/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBodyColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBodyColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBodyColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBodyColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBodyColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBodyColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBodyColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-507">获取一个值，该值指示浏览器是否支持 HTML <see langword="bgcolor" /> 元素的 <see langword="&lt;body&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-507">Gets a value indicating whether the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element.</span></span></summary>
        <value><span data-ttu-id="fbda2-508">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="bgcolor" /> 属性，则为 <see langword="&lt;body&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-508"><see langword="true" /> if the browser supports the <see langword="bgcolor" /> attribute of the HTML <see langword="&lt;body&gt;" /> element; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-509">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-509">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-510">下面的代码示例演示如何确定浏览器是否支持 HTML `<body>` 元素的 `bgcolor` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-510">The following code example shows how to determine whether the browser supports the `bgcolor` attribute of the HTML `<body>` element.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBodyColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBodyColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public virtual bool SupportsBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsBold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-511">获取一个值，该值指示浏览器是否支持 HTML <see langword="&lt;b&gt;" /> 元素进行粗体文本设置。</span><span class="sxs-lookup"><span data-stu-id="fbda2-511">Gets a value indicating whether the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text.</span></span></summary>
        <value><span data-ttu-id="fbda2-512">如果浏览器支持 HTML <see langword="true" /> 元素来格式化粗体文本，则为 <see langword="&lt;b&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-512"><see langword="true" /> if the browser supports HTML <see langword="&lt;b&gt;" /> elements to format bold text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-513">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-513">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-514">下面的代码示例演示如何确定浏览器是否支持 HTML `<b>` 元素设置粗体文本格式。</span><span class="sxs-lookup"><span data-stu-id="fbda2-514">The following code example shows how to determine whether the browser supports HTML `<b>` elements to format bold text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsBold#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsBold/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCacheControlMetaTag">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCacheControlMetaTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCacheControlMetaTag" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCacheControlMetaTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCacheControlMetaTag { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCacheControlMetaTag : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-515">获取一个值，该值指示浏览器是否支持 HTML <see langword="cache-control" /> 元素的 <see langword="http-equiv" /> 特性的 <see langword="&lt;meta&gt;" /> 值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-515">Gets a value indicating whether the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-516">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="cache-control" /> 属性的 <see langword="http-equiv" /> 值，则为 <see langword="&lt;meta&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-516"><see langword="true" /> if the browser supports the <see langword="cache-control" /> value for the <see langword="http-equiv" /> attribute of HTML <see langword="&lt;meta&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-517">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-517">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-518">HTML `<meta>` 元素的 `http-equiv` 属性的 `cache-control` 值允许控制包含网页的下载内容的客户端缓存。</span><span class="sxs-lookup"><span data-stu-id="fbda2-518">The `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements allows control over client caching of downloaded content, which includes Web pages.</span></span> <span data-ttu-id="fbda2-519">以下 HTML 片段显示了一个示例：</span><span class="sxs-lookup"><span data-stu-id="fbda2-519">The following HTML fragment shows an example:</span></span>  
  
```  
<META HTTP-EQUIV="CACHE-CONTROL" CONTENT="NO-CACHE"/>  
```  
  
 <span data-ttu-id="fbda2-520">如果 `true`，则在网页的 `<head>` 元素中包含此标记应强制浏览器从服务器重新加载内容。</span><span class="sxs-lookup"><span data-stu-id="fbda2-520">If `true`, the inclusion of this tag in the `<head>` element of a Web page should force the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="fbda2-521">如果 `false`，则服务器控件适配器将默认查询字符串（`__ufps=``uniquefilepathsuffix`）追加到尚未包含的链接 URL 值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-521">If `false`, server control adapters append a default query string (`__ufps=``uniquefilepathsuffix`) onto link URL values that do not already have one.</span></span> <span data-ttu-id="fbda2-522">这会强制浏览器从服务器重新加载内容。</span><span class="sxs-lookup"><span data-stu-id="fbda2-522">This forces the browser to reload content from the server.</span></span>  
  
 <span data-ttu-id="fbda2-523"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> 属性还适用于等效的 HTTP 标头形式：</span><span class="sxs-lookup"><span data-stu-id="fbda2-523">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCacheControlMetaTag%2A> property also applies to the equivalent HTTP header form:</span></span>  
  
```  
CACHE-CONTROL: NO-CACHE  
```  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-524">下面的代码示例演示如何确定浏览器是否支持 HTML `<meta>` 元素的 `http-equiv` 属性的 `cache-control` 值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-524">The following code example shows how to determine whether the browser supports the `cache-control` value for the `http-equiv` attribute of HTML `<meta>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCacheControlMetaTag#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCacheControlMetaTag/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCallback">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCallback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCallback : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-525">获取一个值，该值指示浏览器是否支持回叫脚本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-525">Gets a value indicating whether the browser supports callback scripts.</span></span></summary>
        <value><span data-ttu-id="fbda2-526">如果浏览器支持回调脚本，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-526"><see langword="true" /> if the browser supports callback scripts; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-527">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-527">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-528">下面的代码示例演示如何确定浏览器是否支持回调脚本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-528">The following code example shows how to determine whether the browser supports callback scripts.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCallback#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCallback/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCss">
      <MemberSignature Language="C#" Value="public virtual bool SupportsCss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCss" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsCss As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsCss { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsCss : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsCss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-529">获取一个值，该值指示浏览器是否支持级联样式表 (CSS)。</span><span class="sxs-lookup"><span data-stu-id="fbda2-529">Gets a value indicating whether the browser supports Cascading Style Sheets (CSS).</span></span></summary>
        <value><span data-ttu-id="fbda2-530">如果浏览器支持 CSS，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-530"><see langword="true" /> if the browser supports CSS; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-531">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-531">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-532">下面的代码示例演示如何确定浏览器是否支持 CSS。</span><span class="sxs-lookup"><span data-stu-id="fbda2-532">The following code example shows how to determine whether the browser supports CSS.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsCss#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsCss/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivAlign">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivAlign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivAlign As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivAlign { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivAlign : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-533">获取一个值，该值指示浏览器是否支持 HTML <see langword="align" /> 元素的 <see langword="&lt;div&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-533">Gets a value indicating whether the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-534">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="align" /> 属性，则为 <see langword="&lt;div&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-534"><see langword="true" /> if the browser supports the <see langword="align" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-535">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-535">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-536">HTML `<div>` 元素用于对多个 HTML 元素进行分组，以便可以将 CSS 样式作为一个整体应用于它们。</span><span class="sxs-lookup"><span data-stu-id="fbda2-536">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="fbda2-537">`align` 属性设置网页上 `<div>` 组的水平对齐方式。</span><span class="sxs-lookup"><span data-stu-id="fbda2-537">The `align` attribute sets the horizontal alignment of a `<div>` group on a Web page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-538">下面的代码示例演示如何确定浏览器是否支持 HTML `<div>` 元素的 `align` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-538">The following code example shows how to determine whether the browser supports the `align` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivAlign/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsDivNoWrap">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDivNoWrap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDivNoWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDivNoWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDivNoWrap { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDivNoWrap : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsDivNoWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-539">获取一个值，该值指示浏览器是否支持 HTML <see langword="nowrap" /> 元素的 <see langword="&lt;div&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-539">Gets a value indicating whether the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-540">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="nowrap" /> 属性，则为 <see langword="&lt;div&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-540"><see langword="true" /> if the browser supports the <see langword="nowrap" /> attribute of HTML <see langword="&lt;div&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-541">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-541">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-542">HTML `<div>` 元素用于对多个 HTML 元素进行分组，以便可以将 CSS 样式作为一个整体应用于它们。</span><span class="sxs-lookup"><span data-stu-id="fbda2-542">HTML `<div>` elements are used to group multiple HTML elements so that CSS styles can be applied to them as a whole.</span></span> <span data-ttu-id="fbda2-543">`nowrap` 特性指定包含在 `<div>` 组中的元素应保持不变，而不会换行到新行。</span><span class="sxs-lookup"><span data-stu-id="fbda2-543">The `nowrap` attribute specifies that the elements contained in the `<div>` group should remain adjacent to each other without wrapping to a new line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-544">下面的代码示例演示如何确定浏览器是否支持 HTML `<div>` 元素的 `nowrap` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-544">The following code example shows how to determine whether the browser supports the `nowrap` attribute of HTML `<div>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsDivNoWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsDivNoWrap/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEmptyStringInCookieValue">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEmptyStringInCookieValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEmptyStringInCookieValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEmptyStringInCookieValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEmptyStringInCookieValue : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsEmptyStringInCookieValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-545">获取一个值，该值指示浏览器是否支持 Cookie 值中的空 (<see langword="null" />) 字符串。</span><span class="sxs-lookup"><span data-stu-id="fbda2-545">Gets a value indicating whether the browser supports empty (<see langword="null" />) strings in cookie values.</span></span></summary>
        <value><span data-ttu-id="fbda2-546">如果浏览器支持 Cookie 值中的空 (<see langword="true" />) 字符串，则为 <see langword="null" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-546"><see langword="true" /> if the browser supports empty (<see langword="null" />) strings in cookie values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-547">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-547">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-548">下面的代码示例演示如何确定浏览器是否支持 cookie 值中的空（`null`）字符串。</span><span class="sxs-lookup"><span data-stu-id="fbda2-548">The following code example shows how to determine whether the browser supports empty (`null`) strings in cookie values.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsEmptyStringInCookieValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsEmptyStringInCookieValue/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontColor">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontColor { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontColor : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-549">获取一个值，该值指示浏览器是否支持 HTML <see langword="color" /> 元素的 <see langword="&lt;font&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-549">Gets a value indicating whether the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-550">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="color" /> 属性，则为 <see langword="&lt;font&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-550"><see langword="true" /> if the browser supports the <see langword="color" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-551">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-551">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-552">下面的代码示例演示如何确定浏览器是否支持 HTML `<font>` 元素的 `color` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-552">The following code example shows how to determine whether the browser supports the `color` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontColor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontColor/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontName">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontName : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-553">获取一个值，该值指示浏览器是否支持 HTML <see langword="name" /> 元素的 <see langword="&lt;font&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-553">Gets a value indicating whether the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-554">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="name" /> 属性，则为 <see langword="&lt;font&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-554"><see langword="true" /> if the browser supports the <see langword="name" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-555">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-555">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-556">下面的代码示例演示如何确定浏览器是否支持 HTML `<font>` 元素的 `name` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-556">The following code example shows how to determine whether the browser supports the `name` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontName/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsFontSize">
      <MemberSignature Language="C#" Value="public virtual bool SupportsFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsFontSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsFontSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsFontSize : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-557">获取一个值，该值指示浏览器是否支持 HTML <see langword="size" /> 元素的 <see langword="&lt;font&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-557">Gets a value indicating whether the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-558">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="size" /> 属性，则为 <see langword="&lt;font&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-558"><see langword="true" /> if the browser supports the <see langword="size" /> attribute of HTML <see langword="&lt;font&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-559">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-559">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-560">下面的代码示例演示如何确定浏览器是否支持 HTML `<font>` 元素的 `size` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-560">The following code example shows how to determine whether the browser supports the `size` attribute of HTML `<font>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsFontSize#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsFontSize/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsImageSubmit">
      <MemberSignature Language="C#" Value="public virtual bool SupportsImageSubmit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsImageSubmit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsImageSubmit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsImageSubmit { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsImageSubmit : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsImageSubmit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-561">获取一个值，该值指示浏览器是否支持使用自定义图像替换标准形式的“提交”按钮。</span><span class="sxs-lookup"><span data-stu-id="fbda2-561">Gets a value indicating whether the browser supports using a custom image in place of a standard form Submit button.</span></span></summary>
        <value><span data-ttu-id="fbda2-562">如果浏览器支持使用自定义图像替换标准形式的“提交”按钮，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-562"><see langword="true" /> if the browser supports using a custom image in place of a standard form Submit button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-563">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-563">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-564">下面的代码示例演示如何确定浏览器是否支持使用自定义图像替代标准窗体提交按钮。</span><span class="sxs-lookup"><span data-stu-id="fbda2-564">The following code example shows how to determine whether the browser supports using a custom image in place of a standard form Submit button.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsImageSubmit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsImageSubmit/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsIModeSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsIModeSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsIModeSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsIModeSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsIModeSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsIModeSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsIModeSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-565">获取一个值，该值指示浏览器是否支持 i-mode 符号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-565">Gets a value indicating whether the browser supports i-mode symbols.</span></span></summary>
        <value><span data-ttu-id="fbda2-566">如果浏览器支持 i-mode 符号，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-566"><see langword="true" /> if the browser supports i-mode symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-567">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-567">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-568"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> 属性仅适用于与 i 模式兼容的设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-568">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="fbda2-569">使用 <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> 属性，为与 i 模式兼容的浏览器设置特定于手机的图片符号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-569">Set i-Phone-specific picture symbols for i-mode-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-570">下面的代码示例演示如何确定浏览器是否支持 i 模式符号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-570">The following code example shows how to determine whether the browser supports i-mode symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsIModeSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsIModeSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputIStyle">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputIStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputIStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputIStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputIStyle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputIStyle : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputIStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-571">获取一个值，该值指示浏览器是否支持 HTML <see langword="istyle" /> 元素的 <see langword="&lt;input&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-571">Gets a value indicating whether the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-572">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="istyle" /> 属性，则为 <see langword="&lt;input&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-572"><see langword="true" /> if the browser supports the <see langword="istyle" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-573">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-573">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-574"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> 属性仅适用于与 i 模式兼容的设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-574">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="fbda2-575">`istyle` 特性用于设置与 i 模式兼容的浏览器上的文本输入字段的输入样式。</span><span class="sxs-lookup"><span data-stu-id="fbda2-575">The `istyle` attribute is used for setting the input style of a text-input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-576">下面的代码示例演示如何确定浏览器是否支持 HTML `<input>` 元素的 `istyle` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-576">The following code example shows how to determine whether the browser supports the `istyle` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputIStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputIStyle/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsInputMode">
      <MemberSignature Language="C#" Value="public virtual bool SupportsInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsInputMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsInputMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsInputMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsInputMode : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-577">获取一个值，该值指示浏览器是否支持 HTML <see langword="mode" /> 元素的 <see langword="&lt;input&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-577">Gets a value indicating whether the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-578">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="mode" /> 属性，则为 <see langword="&lt;input&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-578"><see langword="true" /> if the browser supports the <see langword="mode" /> attribute of HTML <see langword="&lt;input&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-579">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-579">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-580"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> 属性仅适用于与 i 模式兼容的设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-580">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsInputMode%2A> property applies only to i-mode-compatible devices.</span></span>  
  
 <span data-ttu-id="fbda2-581">`MODE` 特性用于设置与 i 模式兼容的浏览器上的文本输入字段的输入模式。</span><span class="sxs-lookup"><span data-stu-id="fbda2-581">The `MODE` attribute is used for setting the input mode of a text input field on i-mode-compatible browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-582">下面的代码示例演示如何确定浏览器是否支持 HTML `<input>` 元素的 `mode` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-582">The following code example shows how to determine whether the browser supports the `mode` attribute of HTML `<input>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsInputMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsInputMode/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public virtual bool SupportsItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsItalic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-583">获取一个值，该值指示浏览器是否支持 HTML <see langword="&lt;i&gt;" /> 元素进行斜体文本设置。</span><span class="sxs-lookup"><span data-stu-id="fbda2-583">Gets a value indicating whether the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text.</span></span></summary>
        <value><span data-ttu-id="fbda2-584">如果浏览器支持 HTML <see langword="true" /> 元素用于设置斜体文本格式，则为 <see langword="&lt;i&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-584"><see langword="true" /> if the browser supports HTML <see langword="&lt;i&gt;" /> elements to format italic text; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-585">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-585">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-586">下面的代码示例演示如何确定浏览器是否支持 HTML `<i>` 元素来设置斜体文本格式。</span><span class="sxs-lookup"><span data-stu-id="fbda2-586">The following code example shows how to determine whether the browser supports HTML `<i>` elements to format italic text.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsItalic#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsItalic/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneMultiMediaAttributes">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneMultiMediaAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneMultiMediaAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneMultiMediaAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneMultiMediaAttributes : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-587">获取一个值，该值指示浏览器是否支持 J-Phone 多媒体特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-587">Gets a value indicating whether the browser supports J-Phone multimedia attributes.</span></span></summary>
        <value><span data-ttu-id="fbda2-588">如果浏览器支持 J-Phone 多媒体特性，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-588"><see langword="true" /> if the browser supports J-Phone multimedia attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-589">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-589">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-590"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> 属性仅适用于与 J 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-590">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-591">J h 是一个基于 HTML 的标记语言规范，适用于 J-phone 兼容的浏览器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-591">J-Phone is a markup language specification, based on HTML, for J-Phone-compatible browsers.</span></span> <span data-ttu-id="fbda2-592">如果 `true`，则浏览器支持 HTML `<a>` （定位点）和 `<select>` 元素的附加属性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-592">If `true`, the browser supports additional attributes for HTML `<a>` (anchor) and `<select>` elements.</span></span> <span data-ttu-id="fbda2-593">支持的附加属性如下所示：</span><span class="sxs-lookup"><span data-stu-id="fbda2-593">The additional attributes supported are as follows:</span></span>  
  
-   `src`  
  
-   `soundstart`  
  
-   `loop`  
  
-   `volume`  
  
-   `vibration`  
  
-   `viblength`  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-594">下面的代码示例演示如何确定浏览器是否支持 J-phone 多媒体特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-594">The following code example shows how to determine whether the browser supports J-Phone multimedia attributes.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneMultiMediaAttributes/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsJPhoneSymbols">
      <MemberSignature Language="C#" Value="public virtual bool SupportsJPhoneSymbols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsJPhoneSymbols" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsJPhoneSymbols As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsJPhoneSymbols { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsJPhoneSymbols : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-595">获取指示浏览器是否支持特定于 J-Phone 的图片符号的值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-595">Gets a value indicating whether the browser supports J-Phone-specific picture symbols.</span></span></summary>
        <value><span data-ttu-id="fbda2-596"><see langword="true" /> 如果浏览器支持 J-phone 特定的图片符号，则为;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-596"><see langword="true" /> if the browser supports J-Phone-specific picture symbols; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-597">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-597">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-598"><xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> 属性仅适用于与 J 兼容的移动设备。</span><span class="sxs-lookup"><span data-stu-id="fbda2-598">The <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsJPhoneSymbols%2A> property applies only to J-Phone-compatible mobile devices.</span></span>  
  
 <span data-ttu-id="fbda2-599">使用 "<xref:System.Web.UI.WebControls.Image.ImageUrl%2A>" 属性为 J-电话兼容的浏览器设置 J 电话特定的图片符号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-599">Set J-Phone-specific picture symbols for J-Phone-compatible browsers by using the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-600">下面的代码示例演示如何确定浏览器是否支持 J-phone 特定的图片符号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-600">The following code example shows how to determine whether the browser supports J-Phone-specific picture symbols.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsJPhoneSymbols#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsJPhoneSymbols/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsQueryStringInFormAction">
      <MemberSignature Language="C#" Value="public virtual bool SupportsQueryStringInFormAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsQueryStringInFormAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsQueryStringInFormAction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsQueryStringInFormAction { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsQueryStringInFormAction : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsQueryStringInFormAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-601">获取一个值，该值指示浏览器是否在 HTML <see langword="action" /> 元素的 <see langword="&lt;form&gt;" /> 特性值中支持查询字符串。</span><span class="sxs-lookup"><span data-stu-id="fbda2-601">Gets a value indicating whether the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-602">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="action" /> 特性中的查询字符串，则为 <see langword="&lt;form&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-602"><see langword="true" /> if the browser supports a query string in the <see langword="action" /> attribute value of HTML <see langword="&lt;form&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-603">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-603">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-604">如果 `false`，则在回发数据中以 HTML `<input>` 元素的形式发送查询字符串参数，`type` 特性设置为 `hidden`。</span><span class="sxs-lookup"><span data-stu-id="fbda2-604">If `false`, query string parameters are sent, in postback data, as HTML `<input>` elements with the `type` attributes set to `hidden`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-605">下面的代码示例演示如何确定浏览器是否支持 HTML `<form>` 元素的 `action` 属性值中的查询字符串。</span><span class="sxs-lookup"><span data-stu-id="fbda2-605">The following code example shows how to determine whether the browser supports a query string in the value for the `action` attribute of HTML `<form>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsQueryStringInFormAction#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsQueryStringInFormAction/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectWithCookie">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectWithCookie { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectWithCookie" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectWithCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectWithCookie { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectWithCookie : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-606">获取一个值，该值指示浏览器在重定向时是否支持 Cookie。</span><span class="sxs-lookup"><span data-stu-id="fbda2-606">Gets a value indicating whether the browser supports cookies on redirection.</span></span></summary>
        <value><span data-ttu-id="fbda2-607">如果浏览器在重定向时支持 Cookie，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-607"><see langword="true" /> if the browser supports cookies on redirection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-608">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-608">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-609">UP。Browser 4.1 或更高。Browser 3.2，<xref:System.Web.HttpResponse.Redirect%2A> 方法的行为与 <xref:System.Web.HttpBrowserCapabilities> `false`对象的 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> 属性的值相同，除非已将 Web.config 的 <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> 节中的 <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> 属性显式设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="fbda2-609">With UP.Browser 4.1 or UP.Browser 3.2, the <xref:System.Web.HttpResponse.Redirect%2A> method behaves as if the value of the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsRedirectWithCookie%2A> property of the <xref:System.Web.HttpBrowserCapabilities> object is `false`, unless the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> property in the <xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A> section of Web.config has been explicitly set to `true`.</span></span>  
  
 <span data-ttu-id="fbda2-610">在 ASP.NET 1.1 中，此设置的选项是 `true` 或 `false`，但对于 ASP.NET 2.0，将展开选项，<xref:System.Web.HttpCookieMode.AutoDetect> 现在为默认设置。</span><span class="sxs-lookup"><span data-stu-id="fbda2-610">In ASP.NET 1.1, the options for this setting were `true` or `false`, but with ASP.NET 2.0, the choices are expanded, and <xref:System.Web.HttpCookieMode.AutoDetect> is now the default setting.</span></span> <span data-ttu-id="fbda2-611">如果 Web 应用程序的 web.config 文件中的 `<sessionState>` 部分的 `cookieless` 特性设置为布尔值，则 <xref:System.Web.HttpResponse.Redirect%2A> 应按预期方式为这些浏览器工作。</span><span class="sxs-lookup"><span data-stu-id="fbda2-611">If your Web application has the `cookieless` attribute of the `<sessionState>` section in the Web.config file set to a Boolean value, <xref:System.Web.HttpResponse.Redirect%2A> should work as expected for these browsers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-612">下面的代码示例演示如何确定浏览器是否在重定向时支持 cookie。</span><span class="sxs-lookup"><span data-stu-id="fbda2-612">The following code example shows how to determine whether the browser supports cookies on redirection.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsRedirectWithCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsRedirectWithCookie/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSelectMultiple">
      <MemberSignature Language="C#" Value="public virtual bool SupportsSelectMultiple { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsSelectMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsSelectMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsSelectMultiple { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsSelectMultiple : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsSelectMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-613">获取一个值，该值指示浏览器是否支持 HTML <see langword="multiple" /> 元素的 <see langword="&lt;select&gt;" /> 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-613">Gets a value indicating whether the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-614">如果浏览器支持 HTML <see langword="true" /> 元素的 <see langword="multiple" /> 属性，则为 <see langword="&lt;select&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-614"><see langword="true" /> if the browser supports the <see langword="multiple" /> attribute of HTML <see langword="&lt;select&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-615">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-615">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-616">下面的代码示例演示如何确定浏览器是否支持 HTML `<select>` 元素的 `multiple` 特性。</span><span class="sxs-lookup"><span data-stu-id="fbda2-616">The following code example shows how to determine whether the browser supports the `multiple` attribute of HTML `<select>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsSelectMultiple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsSelectMultiple/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsUncheck">
      <MemberSignature Language="C#" Value="public virtual bool SupportsUncheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsUncheck" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsUncheck As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsUncheck { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsUncheck : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsUncheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-617">获取一个值，该值指示是否在回发数据中反映对选中的 HTML <see langword="&lt;input type=checkbox&gt;" /> 元素的取消选中操作。</span><span class="sxs-lookup"><span data-stu-id="fbda2-617">Gets a value indicating whether the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data.</span></span></summary>
        <value><span data-ttu-id="fbda2-618">如果在回发数据中反映对选中的 HTML <see langword="true" /> 元素的取消选中操作，则为 <see langword="&lt;input type=checkbox&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-618"><see langword="true" /> if the clearing of a checked HTML <see langword="&lt;input type=checkbox&gt;" /> element is reflected in postback data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-619">默认值为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-619">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-620">如果 `false`，则从回发数据中省略 HTML `<input type=checkbox>` 元素的 `checked` 特性的值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-620">If `false`, the value of the `checked` attribute of HTML `<input type=checkbox>` elements is omitted from postback data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-621">下面的代码示例演示如何确定是否在回发数据中反映对已选中的 HTML `<input type=checkbox>` 元素的清除。</span><span class="sxs-lookup"><span data-stu-id="fbda2-621">The following code example shows how to determine whether the clearing of a checked HTML `<input type=checkbox>` element is reflected in postback data.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsUncheck#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsUncheck/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsXmlHttp">
      <MemberSignature Language="C#" Value="public virtual bool SupportsXmlHttp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsXmlHttp" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsXmlHttp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsXmlHttp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsXmlHttp : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-622">获取一个值，该值指示浏览器是否支持通过 HTTP 接收 XML。</span><span class="sxs-lookup"><span data-stu-id="fbda2-622">Gets a value indicating whether the browser supports receiving XML over HTTP.</span></span></summary>
        <value><span data-ttu-id="fbda2-623">如果浏览器支持通过 HTTP 接收 XML，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-623"><see langword="true" /> if the browser supports receiving XML over HTTP; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-624">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-624">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-625">下面的代码示例演示如何确定浏览器是否支持通过 HTTP 接收 XML。</span><span class="sxs-lookup"><span data-stu-id="fbda2-625">The following code example shows how to determine whether the browser supports receiving XML over HTTP.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.SupportsXmlHttp#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.SupportsXmlHttp/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.CompareFilters">
      <MemberSignature Language="C#" Value="int IFilterResolutionService.CompareFilters (string filter1, string filter2);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Web.UI.IFilterResolutionService.CompareFilters(string filter1, string filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Function CompareFilters (filter1 As String, filter2 As String) As Integer Implements IFilterResolutionService.CompareFilters" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Web.UI.IFilterResolutionService.CompareFilters(System::String ^ filter1, System::String ^ filter2) = System::Web::UI::IFilterResolutionService::CompareFilters;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IFilterResolutionService.CompareFilters : string * string -&gt; int&#xA;override this.System.Web.UI.IFilterResolutionService.CompareFilters : string * string -&gt; int" Usage="httpCapabilitiesBase.System.Web.UI.IFilterResolutionService.CompareFilters (filter1, filter2)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.CompareFilters(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter1" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="filter2" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filter1"><span data-ttu-id="fbda2-626">要比较的第一个筛选器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-626">The first filter to compare.</span></span></param>
        <param name="filter2"><span data-ttu-id="fbda2-627">要比较的第二个筛选器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-627">The second filter to compare.</span></span></param>
        <summary><span data-ttu-id="fbda2-628">在内部用于比较筛选器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-628">Used internally to compare filters.</span></span></summary>
        <returns><span data-ttu-id="fbda2-629">如果 <paramref name="filter1" /> 是 <paramref name="filter2" /> 的父级，则为 1；如果 <paramref name="filter2" /> 是 <paramref name="filter1" /> 的父级，则为 -1；如果 <paramref name="filter1" /> 和 <paramref name="filter2" /> 之间不存在父/子关系，则为 0。</span><span class="sxs-lookup"><span data-stu-id="fbda2-629">1 if <paramref name="filter1" /> is a parent of <paramref name="filter2" />; -1 if <paramref name="filter2" /> is a parent of <paramref name="filter1" />; 0 if there is no parent-child relationship between <paramref name="filter1" /> and <paramref name="filter2" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IFilterResolutionService.EvaluateFilter">
      <MemberSignature Language="C#" Value="bool IFilterResolutionService.EvaluateFilter (string filterName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IFilterResolutionService.EvaluateFilter(string filterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Configuration.HttpCapabilitiesBase.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function EvaluateFilter (filterName As String) As Boolean Implements IFilterResolutionService.EvaluateFilter" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IFilterResolutionService.EvaluateFilter(System::String ^ filterName) = System::Web::UI::IFilterResolutionService::EvaluateFilter;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IFilterResolutionService.EvaluateFilter : string -&gt; bool&#xA;override this.System.Web.UI.IFilterResolutionService.EvaluateFilter : string -&gt; bool" Usage="httpCapabilitiesBase.System.Web.UI.IFilterResolutionService.EvaluateFilter filterName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IFilterResolutionService.EvaluateFilter(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filterName"><span data-ttu-id="fbda2-630">要计算的筛选器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-630">The filter to evaluate.</span></span></param>
        <summary><span data-ttu-id="fbda2-631">在内部用于评估筛选器。</span><span class="sxs-lookup"><span data-stu-id="fbda2-631">Used internally to evaluate a filter.</span></span></summary>
        <returns><span data-ttu-id="fbda2-632">如果成功计算了筛选器，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-632"><see langword="true" /> if the filter was successfully evaluated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public bool Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tables { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-633">获取一个值，该值指示浏览器是否支持 HTML <see langword="&lt;table&gt;" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-633">Gets a value indicating whether the browser supports HTML <see langword="&lt;table&gt;" /> elements.</span></span></summary>
        <value><span data-ttu-id="fbda2-634">如果浏览器支持 HTML <see langword="true" /> 元素，则为 <see langword="&lt;table&gt;" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-634"><see langword="true" /> if the browser supports HTML <see langword="&lt;table&gt;" /> elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-635">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-635">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-636">下面的代码示例演示如何确定浏览器是否支持 HTML `<table>` 元素。</span><span class="sxs-lookup"><span data-stu-id="fbda2-636">The following code example shows how to determine whether the browser supports HTML `<table>` elements.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Tables#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Tables#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Tables/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagWriter">
      <MemberSignature Language="C#" Value="public Type TagWriter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TagWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TagWriter As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TagWriter { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagWriter : Type" Usage="System.Web.Configuration.HttpCapabilitiesBase.TagWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-637">内部使用以获取用于为浏览器写入标记的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="fbda2-637">Used internally to get the type of the object that is used to write tags for the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-638">为浏览器编写标记的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-638">The <see cref="T:System.Type" /> of the object that is used to write tags for the browser.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpUnhandledException"><span data-ttu-id="fbda2-639">存在分析错误。</span><span class="sxs-lookup"><span data-stu-id="fbda2-639">There is a parse error.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-640">获取浏览器的名称和主（整数）版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-640">Gets the name and major (integer) version number of the browser.</span></span></summary>
        <value><span data-ttu-id="fbda2-641">浏览器的名称和主（整数）版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-641">The name and major version number of the browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-642">下面的代码示例演示如何确定浏览器是否为 Internet Explorer 版本6。</span><span class="sxs-lookup"><span data-stu-id="fbda2-642">The following code example shows how to determine whether the browser is Internet Explorer version 6.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Type#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Type#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Type/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseOptimizedCacheKey">
      <MemberSignature Language="C#" Value="public bool UseOptimizedCacheKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseOptimizedCacheKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseOptimizedCacheKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseOptimizedCacheKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseOptimizedCacheKey : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.UseOptimizedCacheKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-643">在内部用于获取一个值，该值指示是否使用经过优化的缓存密钥。</span><span class="sxs-lookup"><span data-stu-id="fbda2-643">Used internally to get a value indicating whether to use an optimized cache key.</span></span></summary>
        <value><span data-ttu-id="fbda2-644">使用经过优化的缓存密钥，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-644"><see langword="true" /> to use an optimized cache key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-645">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-645">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VBScript">
      <MemberSignature Language="C#" Value="public bool VBScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VBScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VBScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool VBScript { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.VBScript : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.VBScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-646">获取一个值，该值指示浏览器是否支持 Visual Basic Scripting Edition (VBScript)。</span><span class="sxs-lookup"><span data-stu-id="fbda2-646">Gets a value indicating whether the browser supports Visual Basic Scripting edition (VBScript).</span></span></summary>
        <value><span data-ttu-id="fbda2-647">如果浏览器支持 VBScript，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-647"><see langword="true" /> if the browser supports VBScript; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-648">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-648">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-649">下面的代码示例演示如何确定浏览器是否支持 VBScript。</span><span class="sxs-lookup"><span data-stu-id="fbda2-649">The following code example shows how to determine whether the browser supports VBScript.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.VBScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.VBScript/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.Web.Configuration.HttpCapabilitiesBase.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-650">以字符串形式获取浏览器的完整版本号（整数和小数）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-650">Gets the full version number (integer and decimal) of the browser as a string.</span></span></summary>
        <value><span data-ttu-id="fbda2-651">浏览器的完整版本号（字符串形式）。</span><span class="sxs-lookup"><span data-stu-id="fbda2-651">The full version number of the browser as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fbda2-652"><xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> 属性返回一个字符串。</span><span class="sxs-lookup"><span data-stu-id="fbda2-652">The <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property returns a string.</span></span> <span data-ttu-id="fbda2-653">在某些情况下，<xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> 属性可能包含字母字符，如浏览器或客户端设备，它是 beta 版本，如 "7.0 b"。</span><span class="sxs-lookup"><span data-stu-id="fbda2-653">In some scenarios, the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> property might contain letter characters, as in the case of a browser or client device that is a beta version such as "7.0b."</span></span> <span data-ttu-id="fbda2-654">若要将版本正确地获取为可在数值比较中使用的数据类型，请连接 <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> 和 <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="fbda2-654">To correctly get the version as a data type that can be used in a numeric comparison, concatenate the <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fbda2-655">下面的代码示例演示如何确定浏览器的 <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A>。</span><span class="sxs-lookup"><span data-stu-id="fbda2-655">The following code example shows how to determine the <xref:System.Web.Configuration.HttpCapabilitiesBase.Version%2A> of the browser.</span></span> <span data-ttu-id="fbda2-656"><xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> 属性和 <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> 属性串联在一起，并使用结果来确定浏览器版本是否大于5.01。</span><span class="sxs-lookup"><span data-stu-id="fbda2-656">The <xref:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion%2A> property and <xref:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion%2A> property are concatenated and the result is used to determine whether the browser version is greater than 5.01.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Version#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Version#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Version/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MajorVersion" />
        <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.MinorVersion" />
      </Docs>
    </Member>
    <Member MemberName="W3CDomVersion">
      <MemberSignature Language="C#" Value="public Version W3CDomVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version W3CDomVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property W3CDomVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ W3CDomVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.W3CDomVersion : Version" Usage="System.Web.Configuration.HttpCapabilitiesBase.W3CDomVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-657">获取浏览器所支持的万维网联合会 (W3C) XML 文档对象模型 (DOM) 的版本。</span><span class="sxs-lookup"><span data-stu-id="fbda2-657">Gets the version of the World Wide Web Consortium (W3C) XML Document Object Model (DOM) that the browser supports.</span></span></summary>
        <value><span data-ttu-id="fbda2-658">浏览器所支持的 W3C XML DOM 的版本号。</span><span class="sxs-lookup"><span data-stu-id="fbda2-658">The number of the W3C XML DOM version number that the browser supports.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-659">下面的代码示例演示如何确定浏览器 W3C XML DOM 的版本是否大于1。</span><span class="sxs-lookup"><span data-stu-id="fbda2-659">The following code example shows how to determine whether the browser W3C XML DOM version is greater than 1.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.W3CDomVersion#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.W3CDomVersion/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win16">
      <MemberSignature Language="C#" Value="public bool Win16 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win16" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win16 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win16 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win16 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win16" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-660">获取一个值，该值指示客户端是否为基于 Win16 的计算机。</span><span class="sxs-lookup"><span data-stu-id="fbda2-660">Gets a value indicating whether the client is a Win16-based computer.</span></span></summary>
        <value><span data-ttu-id="fbda2-661">如果浏览器运行于基于 Win16 的计算机上，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-661"><see langword="true" /> if the browser is running on a Win16-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-662">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-662">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-663">下面的代码示例演示如何确定浏览器是否在基于 Win16 的计算机上运行。</span><span class="sxs-lookup"><span data-stu-id="fbda2-663">The following code example shows how to determine whether the browser is running on a Win16-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win16/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32">
      <MemberSignature Language="C#" Value="public bool Win32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Win32" />
      <MemberSignature Language="DocId" Value="P:System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Win32 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Win32 { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Win32 : bool" Usage="System.Web.Configuration.HttpCapabilitiesBase.Win32" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fbda2-664">获取一个值，该值指示客户端是否为基于 Win32 的计算机。</span><span class="sxs-lookup"><span data-stu-id="fbda2-664">Gets a value indicating whether the client is a Win32-based computer.</span></span></summary>
        <value><span data-ttu-id="fbda2-665">如果客户端是基于 Win32 的计算机，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-665"><see langword="true" /> if the client is a Win32-based computer; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fbda2-666">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fbda2-666">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fbda2-667">下面的代码示例演示如何确定客户端是否为基于 Win32 的计算机。</span><span class="sxs-lookup"><span data-stu-id="fbda2-667">The following code example shows how to determine whether the client is a Win32-based computer.</span></span>  
  
 [!code-aspx-csharp[HttpCapabilitiesBase.Win32#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/CS/sample_cs.aspx#1)]
 [!code-aspx-vb[HttpCapabilitiesBase.Win32#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpCapabilitiesBase.Win32/VB/sample_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
