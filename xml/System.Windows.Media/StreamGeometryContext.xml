<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e16606186823cd986d76d454ad6d626971197af" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82450008" /></Metadata><TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamGeometryContext&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamGeometryContext abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <TypeSignature Language="F#" Value="type StreamGeometryContext = class&#xA;    inherit DispatcherObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c34b4-101">使用绘图命令描述几何图形。</span><span class="sxs-lookup"><span data-stu-id="c34b4-101">Describes a geometry using drawing commands.</span></span> <span data-ttu-id="c34b4-102">此类与 <see cref="T:System.Windows.Media.StreamGeometry" /> 类结合使用，以创建不支持数据绑定、动画或修改的轻量几何图形。</span><span class="sxs-lookup"><span data-stu-id="c34b4-102">This class is used with the <see cref="T:System.Windows.Media.StreamGeometry" /> class to create a lightweight geometry that does not support data binding, animation, or modification.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ArcTo (point As Point, size As Size, rotationAngle As Double, isLargeArc As Boolean, sweepDirection As SweepDirection, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ArcTo(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member ArcTo : System.Windows.Point * System.Windows.Size * double * bool * System.Windows.Media.SweepDirection * bool * bool -&gt; unit" Usage="streamGeometryContext.ArcTo (point, size, rotationAngle, isLargeArc, sweepDirection, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="c34b4-103">弧线末尾的目标点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-103">The destination point for the end of the arc.</span></span></param>
        <param name="size"><span data-ttu-id="c34b4-104">其圆周用于绘制角度的椭圆的半径（半宽度和高度的一半）。</span><span class="sxs-lookup"><span data-stu-id="c34b4-104">The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle.</span></span> <span data-ttu-id="c34b4-105">如果椭圆在所有方向都呈圆角，弧线也将呈圆角；如果椭圆接近水平，弧线也将如此。例如，如果宽度和高度值很大，则表示椭圆很大，角的曲度很小。</span><span class="sxs-lookup"><span data-stu-id="c34b4-105">If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.</span></span></param>
        <param name="rotationAngle"><span data-ttu-id="c34b4-106">指定曲线的椭圆的旋转角度。</span><span class="sxs-lookup"><span data-stu-id="c34b4-106">The rotation angle of the oval that specifies the curve.</span></span> <span data-ttu-id="c34b4-107">可以使用此参数来旋转弧线的曲面。</span><span class="sxs-lookup"><span data-stu-id="c34b4-107">The curvature of the arc can be rotated with this parameter.</span></span></param>
        <param name="isLargeArc"><span data-ttu-id="c34b4-108">若要绘制大于 180 度的弧线，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-108"><see langword="true" /> to draw the arc greater than 180 degrees; otherwise, <see langword="false" />.</span></span></param>
        <param name="sweepDirection"><span data-ttu-id="c34b4-109">一个值，该值指示在 <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> 还是 <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> 方向绘制弧线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-109">A value that indicates whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.</span></span></param>
        <param name="isStroked"><span data-ttu-id="c34b4-110">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-110"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="c34b4-111">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-111"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c34b4-112">绘制一条到指定点的弧线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-112">Draws an arc to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-113">此方法使用上一段的终点作为起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-113">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="c34b4-114">如果这是图形中的第一段，则它将使用 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 方法指定的点作为起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-114">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="c34b4-115">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-115">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c34b4-116">下面的示例演示如何使用 <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> 方法绘制圆弧。</span><span class="sxs-lookup"><span data-stu-id="c34b4-116">The following example shows how to draw an arc using the <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginFigure (startPoint As Point, isFilled As Boolean, isClosed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginFigure(System::Windows::Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="F#" Value="abstract member BeginFigure : System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.BeginFigure (startPoint, isFilled, isClosed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint"><span data-ttu-id="c34b4-117">图开始的 <see cref="T:System.Windows.Point" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-117">The <see cref="T:System.Windows.Point" /> where the figure begins.</span></span></param>
        <param name="isFilled"><span data-ttu-id="c34b4-118">若要使用该图包含的区域进行命中测试、呈现和剪辑，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-118"><see langword="true" /> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <see langword="false" />.</span></span></param>
        <param name="isClosed"><span data-ttu-id="c34b4-119">若要关闭图，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-119"><see langword="true" /> to close the figure; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c34b4-120">例如，如果绘制了两条连接线，并且 <paramref name="isClosed" /> 设置为 <see langword="false" />，则绘制的就只是两条线，但如果 <paramref name="isClosed" /> 设置为 <see langword="true" />，则这两条线将封闭进而形成一个三角形。</span><span class="sxs-lookup"><span data-stu-id="c34b4-120">For example, if two connecting lines are drawn, and <paramref name="isClosed" /> is set to <see langword="false" />, the drawing will just be of two lines but if <paramref name="isClosed" /> is set to <see langword="true" />, the two lines will be closed to create a triangle.</span></span></param>
        <summary><span data-ttu-id="c34b4-121">指定新图的起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-121">Specifies the starting point for a new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-122">通过多次调用此方法，您可以在此 <xref:System.Windows.Media.StreamGeometryContext>中创建多个图形（自包含几何形状）。</span><span class="sxs-lookup"><span data-stu-id="c34b4-122">By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.</span></span>  
  
 <span data-ttu-id="c34b4-123">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-123">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BezierTo (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BezierTo(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member BezierTo : System.Windows.Point * System.Windows.Point * System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.BezierTo (point1, point2, point3, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="c34b4-124">用于指定曲线形状的第一个控制点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-124">The first control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="c34b4-125">用于指定曲线形状的第二个控制点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-125">The second control point used to specify the shape of the curve.</span></span></param>
        <param name="point3"><span data-ttu-id="c34b4-126">曲线末尾的目标点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-126">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked"><span data-ttu-id="c34b4-127">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-127"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="c34b4-128">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-128"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c34b4-129">绘制一条到指定点的贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-129">Draws a Bezier curve to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-130">三次方贝塞尔曲线由起点、终点和两个控制点定义。</span><span class="sxs-lookup"><span data-stu-id="c34b4-130">A cubic Bezier curve is defined by a start point, end point, and two control points.</span></span> <span data-ttu-id="c34b4-131">第一个控制点确定段前半的曲率，第二个控制点决定线段的后半的曲率。</span><span class="sxs-lookup"><span data-stu-id="c34b4-131">The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.</span></span>  
  
 <span data-ttu-id="c34b4-132">此方法使用上一段的终点作为起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-132">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="c34b4-133">如果这是图形中的第一段，则它将使用 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 方法指定的点作为起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-133">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="c34b4-134">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-134">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c34b4-135">下面的示例演示如何使用 <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> 方法绘制贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-135">The following example shows how to draw a Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c34b4-136">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-136">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="streamGeometryContext.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c34b4-137">关闭此上下文并刷新其内容，以使其可以呈现。</span><span class="sxs-lookup"><span data-stu-id="c34b4-137">Closes this context and flushes its content so that it can be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-138">关闭后，不能修改上下文。</span><span class="sxs-lookup"><span data-stu-id="c34b4-138">Once closed, the context cannot be modified.</span></span> <span data-ttu-id="c34b4-139">上下文必须先关闭，然后才能呈现其内容。</span><span class="sxs-lookup"><span data-stu-id="c34b4-139">The context must be closed before its content can be rendered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c34b4-140">已关闭或释放此上下文。</span><span class="sxs-lookup"><span data-stu-id="c34b4-140">This context has already been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LineTo (point As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LineTo(System::Windows::Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member LineTo : System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.LineTo (point, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="c34b4-141">直线末尾的目标点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-141">The destination point for the end of the line.</span></span></param>
        <param name="isStroked"><span data-ttu-id="c34b4-142">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-142"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="c34b4-143">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-143"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c34b4-144">绘制一条到指定的 <see cref="T:System.Windows.Point" /> 的直线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-144">Draws a straight line to the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-145">此方法使用上一段的终点作为起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-145">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="c34b4-146">如果这是图形中的第一段，则它将使用 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 方法指定的点作为起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-146">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="c34b4-147">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-147">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c34b4-148">下面的示例演示如何使用 <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> 方法绘制三角形。</span><span class="sxs-lookup"><span data-stu-id="c34b4-148">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c34b4-149">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-149">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyBezierTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyBezierTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="c34b4-150">为一条或多条贝塞尔曲线指定控制点和目标点的点列表。</span><span class="sxs-lookup"><span data-stu-id="c34b4-150">The list of points that specify control points and destination points for one or more Bezier curves.</span></span> <span data-ttu-id="c34b4-151">此列表中的点数应为三的倍数。</span><span class="sxs-lookup"><span data-stu-id="c34b4-151">The number of points in this list should be a multiple of three.</span></span></param>
        <param name="isStroked"><span data-ttu-id="c34b4-152">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-152"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="c34b4-153">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-153"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c34b4-154">绘制一条或多条互相连接的贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-154">Draws one or more connected Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-155">`points` 中的第一个点指定第一个控制点，接下来指定第二个控制点，第三个点指定终点，下一个点指定下一条曲线的第一个控制点，依此类推。</span><span class="sxs-lookup"><span data-stu-id="c34b4-155">The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.</span></span>  
  
 <span data-ttu-id="c34b4-156">此方法使用上一段的终点作为起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-156">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="c34b4-157">如果这是图形中的第一段，则它将使用 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 方法指定的点作为起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-157">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="c34b4-158">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-158">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c34b4-159">下面的示例演示如何使用 <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> 方法绘制多个连接的贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-159">The following example shows how to draw multiple connected Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c34b4-160">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-160">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyLineTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyLineTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyLineTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyLineTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="c34b4-161">为一条或多条互相连接的直线指定目标点的点集合。</span><span class="sxs-lookup"><span data-stu-id="c34b4-161">The collection of points that specify destination points for one or more connected straight lines.</span></span></param>
        <param name="isStroked"><span data-ttu-id="c34b4-162">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-162"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="c34b4-163">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-163"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c34b4-164">绘制一条或多条互相连接的直线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-164">Draws one or more connected straight lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-165">此方法使用上一段的终点作为起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-165">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="c34b4-166">如果这是图形中的第一段，则它将使用 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 方法指定的点作为起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-166">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="c34b4-167">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-167">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c34b4-168">下面的示例演示如何使用 <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> 方法绘制三角形。</span><span class="sxs-lookup"><span data-stu-id="c34b4-168">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c34b4-169">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-169">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyQuadraticBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyQuadraticBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member PolyQuadraticBezierTo : System.Collections.Generic.IList&lt;System.Windows.Point&gt; * bool * bool -&gt; unit" Usage="streamGeometryContext.PolyQuadraticBezierTo (points, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="c34b4-170">为一条或多条二次贝塞尔曲线指定控制点和目标点的点集合。</span><span class="sxs-lookup"><span data-stu-id="c34b4-170">The collection of points that specify control points and destination points for one or more quadratic Bezier curves.</span></span> <span data-ttu-id="c34b4-171">该列表中的第一个点指定曲线的控制点，下一个点指定目标点，接下来的一个点指定下一条曲线的控制点，依此类推。</span><span class="sxs-lookup"><span data-stu-id="c34b4-171">The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on.</span></span> <span data-ttu-id="c34b4-172">该列表必须包含偶数个点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-172">The list must contain an even number of points.</span></span></param>
        <param name="isStroked"><span data-ttu-id="c34b4-173">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-173"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="c34b4-174">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-174"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c34b4-175">绘制一条或多条互相连接的二次贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-175">Draws one or more connected quadratic Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-176">此方法使用上一段的终点作为起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-176">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="c34b4-177">如果这是图形中的第一段，则它将使用 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 方法指定的点作为起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-177">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="c34b4-178">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-178">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c34b4-179">下面的示例演示如何使用 <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> 方法绘制多个连接的二次贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-179">The following example shows how to draw multiple connected quadratic Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c34b4-180">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-180">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub QuadraticBezierTo (point1 As Point, point2 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void QuadraticBezierTo(System::Windows::Point point1, System::Windows::Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="F#" Value="abstract member QuadraticBezierTo : System.Windows.Point * System.Windows.Point * bool * bool -&gt; unit" Usage="streamGeometryContext.QuadraticBezierTo (point1, point2, isStroked, isSmoothJoin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="c34b4-181">用于指定曲线形状的控制点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-181">The control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="c34b4-182">曲线末尾的目标点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-182">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked"><span data-ttu-id="c34b4-183">若要在使用 <see cref="T:System.Windows.Media.Pen" /> 呈现线段时使线段描边，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-183"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin"><span data-ttu-id="c34b4-184">在用 <see cref="T:System.Windows.Media.Pen" /> 描边时，如果要将此线段与前一条线段之间的联接视为角，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c34b4-184"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c34b4-185">绘制一条二次贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-185">Draws a quadratic Bezier curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c34b4-186">不同于使用两个控制点的三次方贝塞尔曲线，二次三次方贝塞尔曲线使用单个控制点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-186">Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.</span></span>  
  
 <span data-ttu-id="c34b4-187">此方法使用上一段的终点作为起始点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-187">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="c34b4-188">如果这是图形中的第一段，则它将使用 <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> 方法指定的点作为起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-188">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="c34b4-189">如果 <xref:System.Windows.Media.StreamGeometry> 包含 <xref:System.Windows.Media.Transform> 或任何非描边或未填充段，则无法对其进行序列化。</span><span class="sxs-lookup"><span data-stu-id="c34b4-189">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c34b4-190">下面的示例演示如何使用 <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> 方法绘制二次贝塞尔曲线。</span><span class="sxs-lookup"><span data-stu-id="c34b4-190">The following example shows how to draw a quadratic Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c34b4-191">试图添加一条线段，但未通过调用 <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> 方法来指定图形的起点。</span><span class="sxs-lookup"><span data-stu-id="c34b4-191">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="streamGeometryContext.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c34b4-192">此成员支持 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基础结构，但不能在代码中直接使用。</span><span class="sxs-lookup"><span data-stu-id="c34b4-192">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
