<Type Name="IncrementalHash" FullName="System.Security.Cryptography.IncrementalHash">
  <Metadata><Meta Name="ms.openlocfilehash" Value="791b009a83ae32c77997015ed9b1162f3753f4e3" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82465569" /></Metadata><TypeSignature Language="C#" Value="public sealed class IncrementalHash : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IncrementalHash extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.IncrementalHash" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IncrementalHash&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class IncrementalHash sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type IncrementalHash = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netstandard-2.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="04231-101">支持跨多个段以增量方式计算哈希或基于哈希的消息验证代码 (HMAC) 值。</span><span class="sxs-lookup"><span data-stu-id="04231-101">Provides support for computing a hash or Hash-based Message Authentication Code (HMAC) value incrementally across several segments.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlgorithmName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName AlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName AlgorithmName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.IncrementalHash.AlgorithmName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmName As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName AlgorithmName { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmName : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.IncrementalHash.AlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="04231-102">获取正在执行的算法的名称。</span><span class="sxs-lookup"><span data-stu-id="04231-102">Gets the name of the algorithm being performed.</span></span> <span data-ttu-id="04231-103">HMAC 算法前面附有“HMAC”，以区别于未经加密的摘要。</span><span class="sxs-lookup"><span data-stu-id="04231-103">HMAC algorithms are prepended with "HMAC" to distinguish them from an unkeyed digest.</span></span></summary>
        <value><span data-ttu-id="04231-104">正在执行的算法的名称。</span><span class="sxs-lookup"><span data-stu-id="04231-104">The name of the algorithm being performed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.AppendData : byte[] -&gt; unit" Usage="incrementalHash.AppendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="04231-105">要处理的数据。</span><span class="sxs-lookup"><span data-stu-id="04231-105">The data to process.</span></span></param>
        <summary><span data-ttu-id="04231-106">将指定数据追加到已进行哈希或 HMAC 处理的数据。</span><span class="sxs-lookup"><span data-stu-id="04231-106">Appends the specified data to the data already processed in the hash or HMAC.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04231-107"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04231-107"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04231-108"><see cref="T:System.Security.Cryptography.IncrementalHash" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="04231-108">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (ReadOnlySpan&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(ReadOnlySpan&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="member this.AppendData : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="incrementalHash.AppendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="04231-109">要处理的数据。</span><span class="sxs-lookup"><span data-stu-id="04231-109">The data to process.</span></span></param>
        <summary><span data-ttu-id="04231-110">将指定数据追加到已在哈希或基于哈希的消息验证代码 (HMAC) 中处理的数据。</span><span class="sxs-lookup"><span data-stu-id="04231-110">Appends the specified data to the data already processed in the hash or Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04231-111"><see cref="T:System.Security.Cryptography.IncrementalHash" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="04231-111">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.AppendData : byte[] * int * int -&gt; unit" Usage="incrementalHash.AppendData (data, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="04231-112">要处理的数据。</span><span class="sxs-lookup"><span data-stu-id="04231-112">The data to process.</span></span></param>
        <param name="offset"><span data-ttu-id="04231-113">字节数组中的偏移量，从该位置开始使用数据。</span><span class="sxs-lookup"><span data-stu-id="04231-113">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="04231-114">要从 <paramref name="data" /> 中使用的字节数。</span><span class="sxs-lookup"><span data-stu-id="04231-114">The number of bytes to use from <paramref name="data" />.</span></span></param>
        <summary><span data-ttu-id="04231-115">从指定偏移量开始，向已经过哈希或基于哈希的消息验证代码 (HMAC) 处理的数据追加指定数据的指定字节数。</span><span class="sxs-lookup"><span data-stu-id="04231-115">Appends the specified number of bytes from the specified data, starting at the specified offset, to the data already processed in the hash or Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04231-116"><paramref name="data" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04231-116"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="04231-117"><paramref name="count" /> 或 <paramref name="offset" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="04231-117"><paramref name="count" /> or <paramref name="offset" /> is negative.</span></span>  
  
<span data-ttu-id="04231-118">- 或 -</span><span class="sxs-lookup"><span data-stu-id="04231-118">-or-</span></span> 
 <span data-ttu-id="04231-119"><paramref name="count" /> 大于 <paramref name="data" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="04231-119"><paramref name="count" /> is larger than the length of <paramref name="data" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04231-120"><paramref name="offset" /> 与 <paramref name="count" /> 的总和大于数据长度。</span><span class="sxs-lookup"><span data-stu-id="04231-120">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the data length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04231-121"><see cref="T:System.Security.Cryptography.IncrementalHash" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="04231-121">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHash">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHash (System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHash(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHash (hashAlgorithm As HashAlgorithmName) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHash(System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateHash : System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.IncrementalHash" Usage="System.Security.Cryptography.IncrementalHash.CreateHash hashAlgorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm"><span data-ttu-id="04231-122">要执行的哈希算法的名称。</span><span class="sxs-lookup"><span data-stu-id="04231-122">The name of the hash algorithm to perform.</span></span></param>
        <summary><span data-ttu-id="04231-123">为指定算法创建 <see cref="T:System.Security.Cryptography.IncrementalHash" />。</span><span class="sxs-lookup"><span data-stu-id="04231-123">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="04231-124">一个 <see cref="T:System.Security.Cryptography.IncrementalHash" /> 实例，该实例已准备好计算 <paramref name="hashAlgorithm" /> 指定的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="04231-124">An <see cref="T:System.Security.Cryptography.IncrementalHash" /> instance ready to compute the hash algorithm specified by <paramref name="hashAlgorithm" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04231-125"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="04231-125"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="04231-126">为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="04231-126">is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="04231-127"><paramref name="hashAlgorithm" /> 不是已知的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="04231-127"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHMAC">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHMAC (System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHMAC(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHMAC (hashAlgorithm As HashAlgorithmName, key As Byte()) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHMAC(System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="static member CreateHMAC : System.Security.Cryptography.HashAlgorithmName * byte[] -&gt; System.Security.Cryptography.IncrementalHash" Usage="System.Security.Cryptography.IncrementalHash.CreateHMAC (hashAlgorithm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm"><span data-ttu-id="04231-128">要在 HMAC 内执行的哈希算法的名称。</span><span class="sxs-lookup"><span data-stu-id="04231-128">The name of the hash algorithm to perform within the HMAC.</span></span></param>
        <param name="key"><span data-ttu-id="04231-129">HMAC 的密钥。</span><span class="sxs-lookup"><span data-stu-id="04231-129">The secret key for the HMAC.</span></span> <span data-ttu-id="04231-130">密钥可以为任何长度，但将对长度超过指定哈希算法的输出大小的密钥进行哈希处理，以便派生大小正确的密钥。</span><span class="sxs-lookup"><span data-stu-id="04231-130">The key can be of any length, but a key longer than the output size of the specified hash algorithm will be hashed to derive a correctly-sized key.</span></span> <span data-ttu-id="04231-131">因此，建议的密钥大小为指定哈希算法的输出大小。</span><span class="sxs-lookup"><span data-stu-id="04231-131">Therefore, the recommended size of the secret key is the output size of the specified hash algorithm.</span></span></param>
        <summary><span data-ttu-id="04231-132">使用指定的哈希算法和密钥为基于哈希的消息验证代码 (HMAC) 算法创建 <see cref="T:System.Security.Cryptography.IncrementalHash" />。</span><span class="sxs-lookup"><span data-stu-id="04231-132">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the Hash-based Message Authentication Code (HMAC) algorithm using the specified hash algorithm and key.</span></span></summary>
        <returns><span data-ttu-id="04231-133"><see cref="T:System.Security.Cryptography.IncrementalHash" /> 类的一个实例，该实例已准备好计算指定的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="04231-133">An instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class ready to compute the specified hash algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="04231-134"><paramref name="key" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="04231-134"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="04231-135"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="04231-135"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="04231-136">为 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="04231-136">is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="04231-137"><paramref name="hashAlgorithm" /> 不是已知的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="04231-137"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="incrementalHash.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04231-138">释放 <see cref="T:System.Security.Cryptography.IncrementalHash" /> 类的当前实例使用的资源。</span><span class="sxs-lookup"><span data-stu-id="04231-138">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAndReset">
      <MemberSignature Language="C#" Value="public byte[] GetHashAndReset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetHashAndReset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.GetHashAndReset" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashAndReset () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetHashAndReset();" />
      <MemberSignature Language="F#" Value="member this.GetHashAndReset : unit -&gt; byte[]" Usage="incrementalHash.GetHashAndReset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="04231-139">在哈希或基于哈希的消息验证代码 (HMAC) 中检索从之前对 <see cref="Overload:System.Security.Cryptography.IncrementalHash.AppendData" /> 方法的调用中累积的数据，并将对象重置为初始状态。</span><span class="sxs-lookup"><span data-stu-id="04231-139">Retrieves the hash or Hash-based Message Authentication Code (HMAC) for the data accumulated from prior calls to the <see cref="Overload:System.Security.Cryptography.IncrementalHash.AppendData" /> methods,  and resets the object to its initial state.</span></span></summary>
        <returns><span data-ttu-id="04231-140">计算所得的哈希或 HMAC。</span><span class="sxs-lookup"><span data-stu-id="04231-140">The computed hash or HMAC.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04231-141"><see cref="T:System.Security.Cryptography.IncrementalHash" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="04231-141">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetHashAndReset">
      <MemberSignature Language="C#" Value="public bool TryGetHashAndReset (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetHashAndReset(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.TryGetHashAndReset(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetHashAndReset (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetHashAndReset(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryGetHashAndReset : Span&lt;byte&gt; * int -&gt; bool" Usage="incrementalHash.TryGetHashAndReset (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="04231-142">要接收哈希或基于哈希的消息验证代码 (HMAC) 值的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="04231-142">The buffer to receive the hash or Hash-Based Message Authentication Code (HMAC) value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="04231-143">此方法返回时，为写入 <paramref name="destination" /> 的字节总数。</span><span class="sxs-lookup"><span data-stu-id="04231-143">When this method returns, the total number of bytes written into <paramref name="destination" />.</span></span> <span data-ttu-id="04231-144">该参数未经初始化即被处理。</span><span class="sxs-lookup"><span data-stu-id="04231-144">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="04231-145">在哈希算法处理最后一个数据后，尝试结束哈希计算。</span><span class="sxs-lookup"><span data-stu-id="04231-145">Attempts to finalize the hash computation after the last data is processed by the hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="04231-146"><paramref name="destination" /> 的长度不足以接收哈希或 HMAC 值，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="04231-146"><see langword="true" /> if <paramref name="destination" /> is long enough to receive the hash or HMAC value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="04231-147"><see cref="T:System.Security.Cryptography.IncrementalHash" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="04231-147">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
