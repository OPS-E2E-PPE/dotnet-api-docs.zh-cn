<Type Name="AesCcm" FullName="System.Security.Cryptography.AesCcm">
  <Metadata><Meta Name="ms.openlocfilehash" Value="28be1b54252b2cae03d8869cfc5f4f66607b88b3" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75163140" /></Metadata><TypeSignature Language="C#" Value="public sealed class AesCcm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AesCcm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AesCcm" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AesCcm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AesCcm sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type AesCcm = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>表示一个高级加密标准 (AES) 密钥，该密钥用于采用 CBC-MAC (CCM) 操作模式的计数器。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : byte[] -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">用于此实例的密钥。</param>
        <summary>使用所提供的密钥来初始化 <see cref="T:System.Security.Cryptography.AesCcm" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="key" /> 参数长度不能是 16、24 或 32 字节（128、192 或 256 位）。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AesCcm (ReadOnlySpan&lt;byte&gt; key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.#ctor(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AesCcm(ReadOnlySpan&lt;System::Byte&gt; key);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.AesCcm : ReadOnlySpan&lt;byte&gt; -&gt; System.Security.Cryptography.AesCcm" Usage="new System.Security.Cryptography.AesCcm key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="key">用于此实例的密钥。</param>
        <summary>使用所提供的密钥来初始化 <see cref="T:System.Security.Cryptography.AesCcm" /> 类的一个新实例。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><paramref name="key" /> 参数长度不能是 16、24 或 32 字节（128、192 或 256 位）。</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (byte[] nonce, byte[] ciphertext, byte[] tag, byte[] plaintext, byte[] associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(unsigned int8[] nonce, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] plaintext, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As Byte(), ciphertext As Byte(), tag As Byte(), plaintext As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">与此消息关联的 nonce。它必须与加密过程中提供的值相匹配。</param>
        <param name="ciphertext">要解密的加密内容。</param>
        <param name="tag">加密过程中为此消息生成的身份验证标记。</param>
        <param name="plaintext">接收解密内容的字节数组。</param>
        <param name="associatedData">与此消息关联的额外数据。该数据必须与加密过程中提供的值相匹配。</param>
        <summary>如果可验证身份验证标记，则将已加密文本解密到提供的目标缓冲区中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

如果无法验证 `tag` （使用 key、`nonce`、`ciphertext`和 `associatedData` 值），则将清除 `plaintext`。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> 参数和 <paramref name="ciphertext" /> 的长度不同。

- 或 -

<paramref name="nonce" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> 所允许。

- 或 -

<paramref name="tag" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> 所允许。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="nonce" />、<paramref name="ciphertext" />、<paramref name="tag" /> 或 <paramref name="plaintext" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">无法验证标记值，或者解密操作失败。</exception>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public void Decrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; ciphertext, ReadOnlySpan&lt;byte&gt; tag, Span&lt;byte&gt; plaintext, ReadOnlySpan&lt;byte&gt; associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; ciphertext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; tag, valuetype System.Span`1&lt;unsigned int8&gt; plaintext, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Decrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decrypt (nonce As ReadOnlySpan(Of Byte), ciphertext As ReadOnlySpan(Of Byte), tag As ReadOnlySpan(Of Byte), plaintext As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Decrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Decrypt (nonce, ciphertext, tag, plaintext, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">与此消息关联的 nonce。它必须与加密过程中提供的值相匹配。</param>
        <param name="ciphertext">要解密的加密内容。</param>
        <param name="tag">加密过程中为此消息生成的身份验证标记。</param>
        <param name="plaintext">接收解密内容的字节范围。</param>
        <param name="associatedData">与此消息关联的额外数据。该数据必须与加密过程中提供的值相匹配。</param>
        <summary>如果可验证身份验证标记，则将已加密文本解密到提供的目标缓冲区中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

如果无法验证 `tag` （使用 key、`nonce`、`ciphertext`和 `associatedData` 值），则将清除 `plaintext`。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> 参数和 <paramref name="ciphertext" /> 的长度不同。

- 或 -

<paramref name="nonce" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> 所允许。

- 或 -

<paramref name="tag" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> 所允许。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">无法验证标记值，或者解密操作失败。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="aesCcm.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>释放 <see cref="T:System.Security.Cryptography.AesCcm" /> 类的当前实例使用的资源。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (byte[] nonce, byte[] plaintext, byte[] ciphertext, byte[] tag, byte[] associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(unsigned int8[] nonce, unsigned int8[] plaintext, unsigned int8[] ciphertext, unsigned int8[] tag, unsigned int8[] associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.Byte[],System.Byte[],System.Byte[],System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As Byte(), plaintext As Byte(), ciphertext As Byte(), tag As Byte(), Optional associatedData As Byte() = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] * byte[] * byte[] * byte[] * byte[] -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.Byte[]" />
        <Parameter Name="plaintext" Type="System.Byte[]" />
        <Parameter Name="ciphertext" Type="System.Byte[]" />
        <Parameter Name="tag" Type="System.Byte[]" />
        <Parameter Name="associatedData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="nonce">与此消息相关联的 nonce。对于具有相同密钥的每个操作，它应该是唯一值。</param>
        <param name="plaintext">要加密的内容。</param>
        <param name="ciphertext">接收加密内容的字节数组。</param>
        <param name="tag">接收生成的身份验证标记的字节数组。</param>
        <param name="associatedData">与此消息关联的额外数据。该数据还必须在解密过程中提供。</param>
        <summary>将纯文本加密到已加密文本目标缓冲区，并将身份验证标记生成到单独的缓冲区中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

AES-CCM 算法模式的安全性保证要求相同的 nonce 值永远不会使用相同的密钥。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> 参数和 <paramref name="ciphertext" /> 的长度不同。

- 或 -

<paramref name="nonce" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> 所允许。

- 或 -

<paramref name="tag" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> 所允许。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="nonce" />、<paramref name="ciphertext" />、<paramref name="tag" /> 或 <paramref name="plaintext" /> 参数为 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">加密操作失败。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public void Encrypt (ReadOnlySpan&lt;byte&gt; nonce, ReadOnlySpan&lt;byte&gt; plaintext, Span&lt;byte&gt; ciphertext, Span&lt;byte&gt; tag, ReadOnlySpan&lt;byte&gt; associatedData = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Encrypt(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; nonce, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; plaintext, valuetype System.Span`1&lt;unsigned int8&gt; ciphertext, valuetype System.Span`1&lt;unsigned int8&gt; tag, valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; associatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AesCcm.Encrypt(System.ReadOnlySpan{System.Byte},System.ReadOnlySpan{System.Byte},System.Span{System.Byte},System.Span{System.Byte},System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Encrypt (nonce As ReadOnlySpan(Of Byte), plaintext As ReadOnlySpan(Of Byte), ciphertext As Span(Of Byte), tag As Span(Of Byte), Optional associatedData As ReadOnlySpan(Of Byte) = null)" />
      <MemberSignature Language="F#" Value="member this.Encrypt : ReadOnlySpan&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; * Span&lt;byte&gt; * Span&lt;byte&gt; * ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="aesCcm.Encrypt (nonce, plaintext, ciphertext, tag, associatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonce" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="plaintext" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="ciphertext" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="tag" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="associatedData" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="nonce">与此消息相关联的 nonce。对于具有相同密钥的每个操作，它应该是唯一值。</param>
        <param name="plaintext">要加密的内容。</param>
        <param name="ciphertext">接收加密内容的字节范围。</param>
        <param name="tag">接收生成的身份验证标记的字节范围。</param>
        <param name="associatedData">与此消息关联的额外数据。该数据还必须在解密过程中提供。</param>
        <summary>将纯文本加密到已加密文本目标缓冲区，并将身份验证标记生成到单独的缓冲区中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

AES-CCM 算法模式的安全性保证要求相同的 nonce 值永远不会使用相同的密钥。

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="plaintext" /> 参数和 <paramref name="ciphertext" /> 的长度不同。

- 或 -

<paramref name="nonce" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.NonceByteSizes" /> 所允许。

- 或 -

<paramref name="tag" /> 参数长度不被 <see cref="P:System.Security.Cryptography.AesCcm.TagByteSizes" /> 所允许。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">加密操作失败。</exception>
      </Docs>
    </Member>
    <Member MemberName="NonceByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes NonceByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes NonceByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NonceByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ NonceByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NonceByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.NonceByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此实例支持的 nonce 大小（以字节为单位）。</summary>
        <value>此实例支持的 nonce 大小：7、8、9、10、11、12或13字节（56、64、72、80、88、96或 104 bits）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TagByteSizes">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.KeySizes TagByteSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Cryptography.KeySizes TagByteSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TagByteSizes As KeySizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Cryptography::KeySizes ^ TagByteSizes { System::Security::Cryptography::KeySizes ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagByteSizes : System.Security.Cryptography.KeySizes" Usage="System.Security.Cryptography.AesCcm.TagByteSizes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取此实例支持的标记大小（以字节为单位）。</summary>
        <value>此实例支持的标记大小：4、6、8、10、12、14或16字节（32、48、64、80、96、112或 128 bits）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
