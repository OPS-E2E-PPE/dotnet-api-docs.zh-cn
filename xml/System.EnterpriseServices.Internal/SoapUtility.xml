<Type Name="SoapUtility" FullName="System.EnterpriseServices.Internal.SoapUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9dc60385275b7b7ebf649cf1f239481b339130b2" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77226025" /></Metadata><TypeSignature Language="C#" Value="public sealed class SoapUtility : System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapUtility extends System.Object implements class System.EnterpriseServices.Internal.ISoapUtility" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Internal.SoapUtility" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapUtility&#xA;Implements ISoapUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapUtility sealed : System::EnterpriseServices::Internal::ISoapUtility" />
  <TypeSignature Language="F#" Value="type SoapUtility = class&#xA;    interface ISoapUtility" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.EnterpriseServices.Internal.ISoapUtility</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("5F9A955F-AA55-4127-A32B-33496AA8A44E")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c7560-101">提供一些实用工具，以便支持由服务器导出启用 SOAP 的 COM+ 应用程序代理，以及由客户端导入这些代理。</span><span class="sxs-lookup"><span data-stu-id="c7560-101">Provides utilities to support the exporting of COM+ SOAP-enabled application proxies by the server and the importing of the proxies by the client.</span></span> <span data-ttu-id="c7560-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="c7560-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7560-103"><xref:System.EnterpriseServices.Internal.SoapUtility> 提供的实用工具函数从 COM + 内的多个位置进行调用;但是，它们的主要目的是支持导出和导入客户端代理。</span><span class="sxs-lookup"><span data-stu-id="c7560-103">The utility functions that <xref:System.EnterpriseServices.Internal.SoapUtility> provides are called from numerous locations within COM+; however, their primary purpose is to support the export and import of client proxies.</span></span>  
  
 <span data-ttu-id="c7560-104"><xref:System.EnterpriseServices.Internal.SoapUtility> 由 .NET Framework 在内部使用。</span><span class="sxs-lookup"><span data-stu-id="c7560-104"><xref:System.EnterpriseServices.Internal.SoapUtility> is used internally by the .NET Framework.</span></span> <span data-ttu-id="c7560-105">不需要直接在代码中使用它。</span><span class="sxs-lookup"><span data-stu-id="c7560-105">You do not need to use it directly in your code.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapUtility ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapUtility();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7560-106">初始化 <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="c7560-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Internal.SoapUtility" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServerBinPath">
      <MemberSignature Language="C#" Value="public void GetServerBinPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string binPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerBinPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; binPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerBinPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef binPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerBinPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % binPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerBinPath : string * string * string * string -&gt; unit&#xA;override this.GetServerBinPath : string * string * string * string -&gt; unit" Usage="soapUtility.GetServerBinPath (rootWebServer, inBaseUrl, inVirtualRoot, binPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerBinPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="binPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="c7560-107">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="c7560-107">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="c7560-108">基 URL 地址。</span><span class="sxs-lookup"><span data-stu-id="c7560-108">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="c7560-109">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="c7560-109">The name of the virtual root.</span></span></param>
        <param name="binPath"><span data-ttu-id="c7560-110">此方法返回时，此参数包含 SOAP 虚拟根 bin 目录的文件路径。</span><span class="sxs-lookup"><span data-stu-id="c7560-110">When this method returns, this parameter contains the file path for the SOAP virtual root bin directory.</span></span></param>
        <summary><span data-ttu-id="c7560-111">返回 SOAP bin 目录的路径。</span><span class="sxs-lookup"><span data-stu-id="c7560-111">Returns the path for the SOAP bin directory.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7560-112">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c7560-112">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c7560-113">SOAP 实用工具不可用。</span><span class="sxs-lookup"><span data-stu-id="c7560-113">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="c7560-114">获取系统目录的调用失败。</span><span class="sxs-lookup"><span data-stu-id="c7560-114">The call to get the system directory failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetServerPhysicalPath">
      <MemberSignature Language="C#" Value="public void GetServerPhysicalPath (string rootWebServer, string inBaseUrl, string inVirtualRoot, out string physicalPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetServerPhysicalPath(string rootWebServer, string inBaseUrl, string inVirtualRoot, [out] string&amp; physicalPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetServerPhysicalPath (rootWebServer As String, inBaseUrl As String, inVirtualRoot As String, ByRef physicalPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetServerPhysicalPath(System::String ^ rootWebServer, System::String ^ inBaseUrl, System::String ^ inVirtualRoot, [Runtime::InteropServices::Out] System::String ^ % physicalPath);" />
      <MemberSignature Language="F#" Value="abstract member GetServerPhysicalPath : string * string * string * string -&gt; unit&#xA;override this.GetServerPhysicalPath : string * string * string * string -&gt; unit" Usage="soapUtility.GetServerPhysicalPath (rootWebServer, inBaseUrl, inVirtualRoot, physicalPath)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.GetServerPhysicalPath(System.String,System.String,System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootWebServer" Type="System.String" />
        <Parameter Name="inBaseUrl" Type="System.String" />
        <Parameter Name="inVirtualRoot" Type="System.String" />
        <Parameter Name="physicalPath" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rootWebServer"><span data-ttu-id="c7560-115">根 Web 服务器。</span><span class="sxs-lookup"><span data-stu-id="c7560-115">The root Web server.</span></span></param>
        <param name="inBaseUrl"><span data-ttu-id="c7560-116">基 URL 地址。</span><span class="sxs-lookup"><span data-stu-id="c7560-116">The base URL address.</span></span></param>
        <param name="inVirtualRoot"><span data-ttu-id="c7560-117">虚拟根目录的名称。</span><span class="sxs-lookup"><span data-stu-id="c7560-117">The name of the virtual root.</span></span></param>
        <param name="physicalPath"><span data-ttu-id="c7560-118">此方法返回时，此参数包含 SOAP 虚拟根目录的文件路径。</span><span class="sxs-lookup"><span data-stu-id="c7560-118">When this method returns, this parameter contains the file path for the SOAP virtual root.</span></span></param>
        <summary><span data-ttu-id="c7560-119">返回 SOAP 虚拟根目录的路径。</span><span class="sxs-lookup"><span data-stu-id="c7560-119">Returns the path for the SOAP virtual root.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7560-120">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c7560-120">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c7560-121">SOAP 实用工具不可用。</span><span class="sxs-lookup"><span data-stu-id="c7560-121">The SOAP utility is not available.</span></span></exception>
        <exception cref="T:System.EnterpriseServices.ServicedComponentException"><span data-ttu-id="c7560-122">获取系统目录的调用失败。</span><span class="sxs-lookup"><span data-stu-id="c7560-122">The call to get the system directory failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Present">
      <MemberSignature Language="C#" Value="public void Present ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Present() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Internal.SoapUtility.Present" />
      <MemberSignature Language="VB.NET" Value="Public Sub Present ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Present();" />
      <MemberSignature Language="F#" Value="abstract member Present : unit -&gt; unit&#xA;override this.Present : unit -&gt; unit" Usage="soapUtility.Present " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.EnterpriseServices.Internal.ISoapUtility.Present</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7560-123">确定是否存在经过身份验证的、加密的 SOAP 接口。</span><span class="sxs-lookup"><span data-stu-id="c7560-123">Determines whether authenticated, encrypted SOAP interfaces are present.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c7560-124">调用链中的调用方无权访问非托管代码。</span><span class="sxs-lookup"><span data-stu-id="c7560-124">A caller in the call chain does not have permission to access unmanaged code.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="c7560-125">SOAP 实用工具不可用。</span><span class="sxs-lookup"><span data-stu-id="c7560-125">The SOAP utility is not available.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
