<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b069a9b16311417870891b263feb0f6d4e36ae56" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78807461" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1aa5-101">表示具有设计时语义的项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="a1aa5-102">此类可加载项目文件、编辑项和属性，并可生成项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-103">使用全局项目集合的全局属性和默认工具版本构造一个空项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1aa5-104">使用全局项目集合的全局属性和默认工具版本构造一个空项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-105">当向全局项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="a1aa5-106">要用于计算的 ProjectRootElement。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="a1aa5-107">使用给定的项目根和全局项目集合的全局属性以及默认工具版本，构造一个空项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-108">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-109">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-110">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="a1aa5-111">要将新项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="a1aa5-112">使用给定项目集合的全局属性和默认工具版本构造一个空项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-113">当向给定的项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到该项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="a1aa5-114">要计算的源项目文件。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="a1aa5-115">利用给定的源项目文件以及全局项目集合的全局属性和默认工具版本，构造一个项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-116">项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="a1aa5-117">如果项目集合中已经存在用于计算此源项目文件的项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="a1aa5-118">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="a1aa5-119">如果计算失败。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="a1aa5-120">从中读取项目源代码的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="a1aa5-121">构造一个项目，并计算来自给定的 XML 读取器的源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="a1aa5-122">将使用全局项目集合的全局属性和默认工具版本计算源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-123">当向全局项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="a1aa5-124">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-125">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="a1aa5-126">要用于计算的项目根。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-127">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-127">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-128">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-129">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-129">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-130">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-130">May be null.</span></span></param>
        <summary><span data-ttu-id="a1aa5-131">使用给定的项目根以及给定的全局属性和给定的工具版本，构造一个空项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-132">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-133">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-134">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="a1aa5-135">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-135">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-136">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-137">用于计算项目的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="a1aa5-138">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-139">要将新项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="a1aa5-140">使用给定的项目集合以及给定的全局属性和给定的工具版本，构造一个要进行计算的空项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-141">当向指定的项目集合提供源项目文件的完整路径（通常通过保存项目）时，该项目将添加到该集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="a1aa5-142">要计算的源项目文件的路径。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-143">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-143">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-144">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-145">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-145">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-146">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-146">May be null.</span></span></param>
        <summary><span data-ttu-id="a1aa5-147">利用给定的源项目文件以及给定的全局属性和给定的工具版本，构造一个项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-148">项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="a1aa5-149">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-150">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="a1aa5-151">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="a1aa5-152">从中读取项目源代码的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-153">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-153">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-154">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-155">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-155">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-156">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-156">May be null.</span></span></param>
        <summary><span data-ttu-id="a1aa5-157">构造一个项目，并计算来自给定的 XML 读取器的源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="a1aa5-158">将使用给定的全局属性和给定的工具版本计算源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-159">当向全局项目集合提供源项目文件的完整路径（通常通过保存项目）时，此项目将添加到全局项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="a1aa5-160">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-161">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="a1aa5-162">要用于计算的项目根。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-163">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-163">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-164">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-165">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-165">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-166">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-167">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="a1aa5-168">使用给定的项目根以及给定的全局属性和给定的工具版本，构造一个项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-169">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-170">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-171">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="a1aa5-172">要计算的源项目文件的路径。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-173">全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-173">The global properties.</span></span> <span data-ttu-id="a1aa5-174">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-175">工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-175">The tools version.</span></span> <span data-ttu-id="a1aa5-176">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-177">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-177">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-178">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="a1aa5-179">利用给定的源项目文件以及给定的全局属性和给定的工具版本，构造一个项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-180">项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="a1aa5-181">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-182">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="a1aa5-183">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="a1aa5-184">从中读取项目源代码的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-185">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-185">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-186">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-187">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-187">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-188">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-189">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-189">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-190">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="a1aa5-191">构造一个项目，并计算来自给定的 XML 读取器的源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="a1aa5-192">将使用给定的全局属性和给定的工具版本计算源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-193">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-194">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-195">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="a1aa5-196">要用于计算的项目根。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-197">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-197">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-198">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-199">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-199">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-200">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-201">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-201">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-202">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="a1aa5-203">要用于计算的加载设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="a1aa5-204">使用给定的项目根以及给定的全局属性、给定的工具版本和给定的加载设置，构造一个空项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-205">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-206">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-207">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="a1aa5-208">要计算的源项目文件的路径。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-209">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-209">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-210">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-211">工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-211">The tools version.</span></span> <span data-ttu-id="a1aa5-212">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-213">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-213">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-214">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="a1aa5-215">要用于计算的加载设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="a1aa5-216">利用给定的源项目文件以及给定的全局属性、给定的工具版本和给定的加载设置，构造一个项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-217">项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="a1aa5-218">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-219">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="a1aa5-220">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="a1aa5-221">从中读取项目源代码的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-222">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-222">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-223">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-224">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-224">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-225">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-226">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-226">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-227">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="a1aa5-228">要用于计算的加载设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="a1aa5-229">构造一个项目，并计算来自给定的 XML 读取器的源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="a1aa5-230">将使用给定的全局属性和给定的工具版本计算源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-231">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-232">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-233">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="a1aa5-234">要用于计算的项目根。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-235">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-235">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-236">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-237">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-237">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-238">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="a1aa5-239">用于评估的子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="a1aa5-240">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-241">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-241">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-242">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="a1aa5-243">要用于计算的加载设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="a1aa5-244">使用给定的项目根以及给定的全局属性、工具和子工具集版本、项目集合、和加载设置，构造一个项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-245">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-246">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-247">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="a1aa5-248">要计算的源项目文件的路径。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-249">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-249">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-250">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-251">工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-251">The tools version.</span></span> <span data-ttu-id="a1aa5-252">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="a1aa5-253">子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-253">The sub toolset version.</span></span> <span data-ttu-id="a1aa5-254">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-255">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-255">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-256">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="a1aa5-257">要用于计算的加载设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="a1aa5-258">利用给定的源项目文件以及给定的全局属性、工具和子工具集版本、项目集合、和加载设置，构造一个项目并对其进行计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-259">项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="a1aa5-260">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-261">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="a1aa5-262">可能引发与 IO 相关的异常。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xmlReader As XmlReader, globalProperties As IDictionary(Of String, String), toolsVersion As String, subToolsetVersion As String, projectCollection As ProjectCollection, loadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toolsVersion" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="subToolsetVersion" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" Index="5" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="a1aa5-263">从中读取项目源代码的 Xml 读取器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="a1aa5-264">要计算的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-264">Global properties to evaluate with.</span></span> <span data-ttu-id="a1aa5-265">可以为 null，在此情况下，将使用包含项目集合的全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="a1aa5-266">用于计算的工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-266">Tools version to evaluate with.</span></span> <span data-ttu-id="a1aa5-267">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="a1aa5-268">用于评估的子工具集版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="a1aa5-269">可能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="a1aa5-270">将项目添加到的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-270">The project collection the project is added to.</span></span> <span data-ttu-id="a1aa5-271">不能为 null。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="a1aa5-272">要用于计算的加载设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="a1aa5-273">构造一个项目，并计算来自给定的 XML 读取器的源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="a1aa5-274">使用给定全局属性、工具和子工具集版本、项目集合和加载设置来计算源代码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-275">当向此项目或给定的项目根提供源项目文件的完整路径时，此项目将添加到给定的项目集合中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="a1aa5-276">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="a1aa5-277">如果已在项目集合中加载了等效项目，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-278">添加项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="a1aa5-279">所添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="a1aa5-280">要添加的项的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="a1aa5-281">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-282">添加的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-282">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-283">以后可以添加任何元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-283">Any metadata can be added later.</span></span> <span data-ttu-id="a1aa5-284">如果通配符表达式已包含新项，则不会修改项目源。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="a1aa5-285">评估会尽力进行。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="a1aa5-286">在新项后面的项目源中定义的项可用于计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="a1aa5-287">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-287">Only this item is evaluated.</span></span> <span data-ttu-id="a1aa5-288">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="a1aa5-289">所添加的项的项类型。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="a1aa5-290">要添加的项的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="a1aa5-291">所添加的项的元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="a1aa5-292">向项目中添加包含给定元数据的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-293">添加的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-293">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-294">元数据可能为 null，表示没有元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="a1aa5-295">评估会尽力进行。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="a1aa5-296">在新项后面的项目源中定义的项可用于计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="a1aa5-297">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-297">Only this item is evaluated.</span></span> <span data-ttu-id="a1aa5-298">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-299">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="a1aa5-300">将不会尝试查看现有的通配符是否已匹配新项，除非它是项组中的第一项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="a1aa5-301">也不会尝试将新项放置到相似项的附近。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="a1aa5-302">要添加的项类型。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="a1aa5-303">要添加到该项的未计算 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="a1aa5-304">向项目中添加不包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="a1aa5-305">将不会尝试查看现有的通配符是否已匹配新项，除非它是项组中的第一项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="a1aa5-306">也不会尝试将新项放置到相似项的附近。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-307">所添加的项目项的列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-307">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-308">将项追加到不具有条件并且没有子级或者其第一个子级为同一类型的项的第一个项组。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="a1aa5-309">按最大努力计算：-使用所有项展开。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="a1aa5-310">可以使用在新项下的 XML 中定义的项，即使在实际计算中不是这样。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="a1aa5-311">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-311">Only this item is evaluated.</span></span> <span data-ttu-id="a1aa5-312">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="a1aa5-313">这是一种很方便的方法，它不一定会使项目处于完全一致的状态，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="a1aa5-314">要添加的项类型。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="a1aa5-315">要添加到该项的未计算 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="a1aa5-316">要添加的元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="a1aa5-317">向此项目中添加包含元数据的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="a1aa5-318">元数据可能为 null，以指示没有元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="a1aa5-319">将不会尝试查看现有的通配符是否已匹配新项，除非它是项组中的第一项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="a1aa5-320">也不会尝试将新项放置到相似项的附近。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-321">所添加的项目项的列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-321">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-322">将项追加到不具有条件并且没有子级或者其第一个子级为同一类型的项的第一个项组。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="a1aa5-323">按最大努力计算：-使用所有项展开。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="a1aa5-324">可以使用在新项下的 XML 中定义的项，即使在实际计算中不是这样。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="a1aa5-325">仅评估此项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-325">Only this item is evaluated.</span></span> <span data-ttu-id="a1aa5-326">可能依赖于它的其他项不受影响。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="a1aa5-327">这是一种很方便的方法，它不一定会使项目处于完全一致的状态，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-328">获取在计算过程中遇到的所有项定义元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="a1aa5-329">在计算过程中遇到的所有项定义元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-329">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="a1aa5-330">这不包括其条件计算结果不为 true 的任何元素，也不包括自上次计算以后添加的任何项定义元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-331">在第二个计算传递过程中读取项元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="a1aa5-332">不同于 ItemDefinitions 属性返回的元数据，将对此元数据进行排序，并包括随后使用相同的名称和项类型重写的任何元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-333">获取可枚举在计算过程中遇到的所有项的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="a1aa5-334">在进行第三轮计算时读取这些项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="a1aa5-335">计算过程中遇到的所有项的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-335">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="a1aa5-336">在进行第三轮计算时读取这些项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-337">与 Items 属性返回的项不同，这些项与在计算过程中遇到的所有其他项有关，而不只是针对相同项类型的项进行排序。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="a1aa5-338">在某些应用程序中，这种完整的相互排序非常重要，此类主机可以使用此属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="a1aa5-339">枚举不包括其条件计算结果不为 true 的任何元素，也不包括自上次计算后添加的任何项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-340">获取在计算过程中遇到的所有属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="a1aa5-341">评估过程中遇到的所有属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-341">All properties encountered during evaluation.</span></span> <span data-ttu-id="a1aa5-342">这不包括其条件计算结果不为 true 的任何属性，也不包括自上次计算以后添加的任何属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-343">在第一次计算传递过程中，将读取这些属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="a1aa5-344">不同于 Properties 属性返回的属性，这些属性是有序的，并包括随后使用同一名称重写的任何属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-345">使用默认目标生成此项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1aa5-346">使用默认目标生成此项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-347">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-347"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-348">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-349">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="a1aa5-350">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="a1aa5-351">使用默认目标和给定记录器生成此项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-352">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-352"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-353">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-354">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="a1aa5-355">一个可枚举要在生成过程中使用的所有记录器的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="a1aa5-356">使用默认目标和给定记录器生成此项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-357">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-357"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-358">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-359">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a1aa5-360">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="a1aa5-361">生成此项目（生成给定目标）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-362">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-362"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-363">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-364">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="a1aa5-365">要生成的目标数组。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="a1aa5-366">生成此项目（生成给定目标）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-367">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-367"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-368">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-369">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="a1aa5-370">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="a1aa5-371">要在生成期间使用的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="a1aa5-372">使用默认目标以及给定记录器和远程记录器生成此项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-373">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-373"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-374">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-375">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a1aa5-376">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="a1aa5-377">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="a1aa5-378">生成此项目（生成给定目标并使用给定记录器）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-379">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-379"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-380">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-381">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="a1aa5-382">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="a1aa5-383">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="a1aa5-384">生成此项目（生成给定目标并使用给定记录器）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-385">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-385"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-386">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-387">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="a1aa5-388">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="a1aa5-389">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="a1aa5-390">要在生成期间使用的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="a1aa5-391">生成此项目（生成给定目标并使用给定记录器和远程记录器）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-392">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-392"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-393">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-394">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="a1aa5-395">要生成的目标。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="a1aa5-396">要在生成期间使用的记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="a1aa5-397">要在生成期间使用的远程记录器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="a1aa5-398">生成此项目（生成给定目标并使用给定记录器和远程记录器）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-399">如果成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-399"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-400">若要设置或获取用于生成的虚拟项，请显式克隆项目实例并生成它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="a1aa5-401">此方法不会修改项目对象。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-402">获取某些属性的可能值的集合，这些属性用于计算有关属性、属性组、导入和时间的条件。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="a1aa5-403">属性的可能属性值的集合，这些属性用于计算在属性、属性组、导入和的时间找到的条件。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-403">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="a1aa5-404">该集合采用规范格式。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-404">The collection is in canonical form.</span></span> <span data-ttu-id="a1aa5-405">条目的名称是要计算的属性的名称，值是可能的属性值的列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-406">例如，如果项目中的属性上存在以下情况： Condition = "' $ （Configuration）&#124;$ （Platform） ' = = ' Debug&#124;x86 '" Condition = "' $ （Configuration） ' = = ' Release '"，则将使用 {"Configuration" 填充表 {"调试"，"发布"}} {"平台"，{"X86"}} Visual Studio 使用此集合来确定项目中定义的配置</span><span class="sxs-lookup"><span data-stu-id="a1aa5-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-407">基于此项目创建一个项目实例，但将此项目与创建的项目实例完全断开连接。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-408">可用于单独生成。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-408">Can be used to build independently.</span></span> <span data-ttu-id="a1aa5-409">在创建实例之前计算原始项目（如有必要），以便将原始项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1aa5-410">基于此项目创建一个项目实例，但将此项目与创建的项目实例完全断开连接。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-411">项目实例。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-411">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-412">可用于单独生成。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-412">Can be used to build independently.</span></span> <span data-ttu-id="a1aa5-413">在创建实例之前计算原始项目（如有必要），以便将原始项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="a1aa5-414">确定所创建的项目实例是否为不可变的，以及该实例是否包含查找表以提高性能。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="a1aa5-415">基于此项目创建一个项目实例，但将此项目与创建的项目实例完全断开连接。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-416">项目实例。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-416">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-417">可用于单独生成。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-417">Can be used to build independently.</span></span> <span data-ttu-id="a1aa5-418">在创建实例之前计算原始项目（如有必要），以便将原始项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-419">获取此项目的根目录。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="a1aa5-420">此项目的根目录。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-420">The root directory for this project.</span></span> <span data-ttu-id="a1aa5-421">根目录从不会是 null；内存中项目使用在项目加载时的当前目录。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-422">获取或设置一个值，此值指示是否已暂时禁用了 <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-422">Gets or sets a value that indicates whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="a1aa5-423">例如，可以通过此标记来设置全局属性，而不必将项目标记为已更新（从而导致重新计算）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="a1aa5-424"><see langword="true" />，表示暂时禁用了 <see langword="MarkDirty" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-424"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-425">获取一个数值，在每次重新计算项目时，该数值会递增。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="a1aa5-426">递增的值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-426">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-427">应将此值与以前的值进行比较，以查看是否已重新计算项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="a1aa5-428">不应使用它来确定重新计算项目的次数，因为对于给定的重新计算，该项目可能会递增多次。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="a1aa5-429">要计算的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="a1aa5-430">通过扩展项和属性，计算给定的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="a1aa5-431">计算字符串时将其视为位于项目文件的最末尾。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-432">计算的字符串。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-432">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-433">当尽力评估足够时，可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-434">获取或设置项目源文件的完整路径。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="a1aa5-435">项目源文件的完整路径，如果未从磁盘加载项目，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-435">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-436">对项目集合中的项目设置此属性会重命名该项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-436">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-437">获取所提供的项的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-437">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1aa5-438">要计算和转义的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-438">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="a1aa5-439">获取所提供的项的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-439">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-440">所提供的项的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-440">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1aa5-441">要计算和转义的项定义。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-441">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="a1aa5-442">获取所提供的项定义的 Include 特性的值，该值是计算得到的且经过了转义。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-442">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-443">Include 特性的值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-443">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="a1aa5-444">要检索的项类型。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-444">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="a1aa5-445">获取项目中的给定项类型的所有项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-445">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="a1aa5-446">如果不存在任何给定项类型的项，则返回一个空列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-446">If there are none, returns an empty list.</span></span> <span data-ttu-id="a1aa5-447">使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-447">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-448">项目中的给定项类型的所有项，或者如果没有任何具有给定项名称的项，则为空列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-448">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-449">使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-449">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="a1aa5-450">计算的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-450">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="a1aa5-451">获取具有给定的计算 Include 特性的所有项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-451">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-452">具有给定的计算 Include 特性的所有项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-452">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-453">例如，此方法可能会返回所有具有已计算的 Include 特性 "component .cpp" 的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-453">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="a1aa5-454">通常，返回零个或一个项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-454">Typically zero or one items are returned.</span></span> <span data-ttu-id="a1aa5-455">但是，可能有多个具有相同路径和不同项类型的项，甚至有相同的项类型。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-455">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="a1aa5-456">要检索的项类型。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-456">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="a1aa5-457">获取项目中的给定类型的所有项（不管其 Condition 特性的计算结果是否为 true）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-457">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="a1aa5-458">这是一个只读列表：可使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-458">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-459">项目中的给定类型的所有项（不管其 Condition 特性的计算结果是否为 true）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-459">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-460">这是一个只读列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-460">This is a read-only list.</span></span> <span data-ttu-id="a1aa5-461">使用 AddItem 或 RemoveItem 修改此项目中的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-461">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1aa5-462">获取可枚举“逻辑项目”中的所有元素的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-462">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="a1aa5-463">逻辑项目定义为从单个 MSBuild 文件获得的未计算项目，该 MSBuild 文件是通过将原始 MSBuild 项目清单文件的所有导入的文本内联得到的。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-463">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-464">可枚举“逻辑项目”中的所有元素的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-464">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-465">逻辑项目定义为从单个 MSBuild 文件获取的未计算的项目，该文件是包含原始 MSBuild 项目清单文件的所有导入的文本内联的结果。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-466">获取所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-466">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="a1aa5-467">要转义的元数据。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-467">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="a1aa5-468">获取所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-468">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-469">所提供的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-469">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1aa5-470">要转义其元数据的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-470">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="a1aa5-471">要转义的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-471">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="a1aa5-472">获取所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-472">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-473">所提供的项中具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-473">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1aa5-474">要转义其元数据的项定义。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-474">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="a1aa5-475">要转义的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-475">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="a1aa5-476">获取所提供的项定义上具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-476">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-477">所提供的项定义上具有提供的名称的元数据的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-477">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1aa5-478">要检索的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-478">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="a1aa5-479">获取项目中具有指定名称的任何属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-479">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-480">项目中具有指定名称的任何属性，或如果不存在具有该名称的属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-480">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1aa5-481">要检索其值的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-481">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="a1aa5-482">获取此项目中的给定属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-482">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-483">此项目中的给定属性的值，或如果不存在具有该名称的属性，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-483">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="a1aa5-484">在返回字符串之前将转换转义序列。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-484">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-485">如果属性的值为空字符串，并且根本没有属性，则不能在此方法之间区分。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-485">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="a1aa5-486">若要确定是否在项目中对属性进行了设置，请使用 GetProperty （name）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-486">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="a1aa5-487">要转义的属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-487">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="a1aa5-488">获取所提供的属性的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-488">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-489">所提供的属性的转义值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-489">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-490">获取用于计算此项目的全局属性的字典。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-490">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="a1aa5-491">用于计算此项目的全局属性的字典。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-491">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-492">这是公开的 getter，转换为只读停滞 IDictionary\<string，string >。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-492">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="a1aa5-493">为了轻松地判断更新，设置和删除全局属性是通过 <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> 和 <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>来完成的。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-493">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-494">获取参与此项目计算的所有文件的列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-494">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="a1aa5-495">参与此项目计算的所有文件的列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-495">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
 <span data-ttu-id="a1aa5-496">每项的名称是导致导入对应文件的 Import 元素。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-496">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="a1aa5-497">每项的值是导入的项目的项目根。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-497">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="a1aa5-498">将不包括其 Condition 特性的计算结果为 false 的 Import 元素。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-498">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-499">不包含此项目的项目根。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-499">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-500">获取重复导入的列表（如果多次导入某个导入文件）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-500">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="a1aa5-501">但是，在计算中仅使用第一个导入。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-501">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="a1aa5-502">重复导入的列表。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-502">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-503">获取或设置一个属性，该属性选择是否可以生成此项目的目标和任务。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-503">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="a1aa5-504"><see langword="true" /> 如果可以生成此项目的目标和任务，则为; 否则为。否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-504"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-505">可用于安全目的。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-505">Can be used for security purposes.</span></span> <span data-ttu-id="a1aa5-506">默认情况下，新项目具有与包含它的父项目集合相同的 IsBuildEnabled 设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-506">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="a1aa5-507">当 IsBuildEnabled 为 false 时，此项目上的生成方法将失败。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-507">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-508">获取一个值，此值指示此项目是否已经过了修改以致于必须要重新计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-508">Gets a value that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="a1aa5-509">如果此项目已修改以便必须重新进行评估，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-509"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-510">修改项目时，必须在基础项目源代码（包括对导入文件的更改）时重新计算项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-510">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="a1aa5-511">如果项目工具集发生更改，则还必须重新计算项目的修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-511">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-512">获取此项目中的项定义的字典（按项类型组织条目）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-512">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="a1aa5-513">此项目中的项定义的字典，按项类型进行键控。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-513">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-514">获取可枚举此项目中的所有项（在项类型组中排序）的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-514">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="a1aa5-515">针对此项目中的所有项的枚举器，在项类型组中进行排序。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-515">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-516">获取可枚举此项目中的所有项（在项类型组中排序）的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-516">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="a1aa5-517">此项目中的所有项（在项类型组中排序）的枚举器（包括其条件计算结果为 false 的项），或者包含在其条件计算结果为 <see langword="false" />的项组中。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-517">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-518">可用于显示所有项，即使它们不是当前配置中的生成的一部分。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-518">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-519">获取可枚举此项目中的所有项类型的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-519">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="a1aa5-520">此项目中的所有项类型的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-520">An enumerator over all item types in this project.</span></span> <span data-ttu-id="a1aa5-521">这是一个有序集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-521">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1aa5-522">将此项目标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-522">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-523">很少需要显式调用此方法，因为影响项目的所有编辑会自动将其标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-523">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="a1aa5-524">但有时，必须调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-524">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="a1aa5-525">例如，项目可能有一个导入元素，其条件依赖于磁盘上存在的文件。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-525">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="a1aa5-526">如果该文件不存在于计算时，并且在计算后创建，则该项目必须显式标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-526">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="a1aa5-527"><xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> 方法使用此属性来确定是否需要进行评估。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-527">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-528">获取包含此项目的项目集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-528">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="a1aa5-529">包含此项目的项目集合，该项目集合从不 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-529">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-530">给定文件的位置，其中没有任何特定内容。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-530">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="a1aa5-531">如果未对文件命名一个名称，此为空的位置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-531">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="a1aa5-532">这是没有位置的合理情况。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-532">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="a1aa5-533">原始文件位置，或者，如果没有为文件指定名称，则为空位置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-533">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-534">获取可枚举此项目中的所有属性的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-534">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="a1aa5-535">这是一个无序集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-535">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="a1aa5-536">此项目中的所有属性的枚举器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-536">An enumerator over all properties in this project.</span></span> <span data-ttu-id="a1aa5-537">由于属性按其出现的顺序进行计算，因此这是一个无序集合。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-537">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1aa5-538">重新计算项目以合并任何更改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-538">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-539">仅当项目标记为已修改时才会重新计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-539">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="a1aa5-540">重新评估合并了对项目源代码所做的所有更改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-540">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="a1aa5-541">如果计算失败，将引发 Microsoft.build.buildengine.invalidprojectfileexception。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-541">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1aa5-542">要移除的全局属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-542">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="a1aa5-543">移除一个全局属性，并将项目标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-543">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-544">如果设置了全局属性的值，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-544"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1aa5-545">要移除的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-545">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="a1aa5-546">从项目中移除一个项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-546">Removes an item from the project.</span></span> <span data-ttu-id="a1aa5-547">要移除的项必须存在于项目中，并且不得源自于导入的文件。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-547">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-548">如果此项存在于此计算的项目中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-548"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a1aa5-549">此方法通常会返回 true，原因是，如果请求的项不存在，则此方法会引发异常。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-549">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="a1aa5-550">不过，如果该项仅存在于 ItemsIgnoringCondition 集合中，则此方法将返回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-550">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-551">如果包含该项的项组为空，则它也将被删除。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-551">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="a1aa5-552">如果项源自通配符或分号分隔的表达式，则该表达式将首先展开为多个项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-552">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="a1aa5-553">项目已更新，但在重新评估之前不会进行进一步的评估。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-553">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="a1aa5-554">例如，如果删除了类型为 "i" 的项，则在重新评估之前，不会修改从 "@ （i）" 计算得出的 "j"。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-554">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="a1aa5-555">要移除的项。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-555">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="a1aa5-556">移除项目中的所有给定项，除非它们源自于导入的项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-556">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-557">如果项源自导入的项目，则只需跳过它。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-557">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="a1aa5-558">要删除的属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-558">The property to remove.</span></span></param>
        <summary><span data-ttu-id="a1aa5-559">从项目中移除一个属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-559">Removes an property from the project.</span></span> <span data-ttu-id="a1aa5-560">要移除的属性必须存在于项目中，并且不得源自于导入的文件。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-560">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-561">如果此属性存在于此计算的项目中，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-561"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-562">如果包含该属性的属性组为空，则它也将被删除。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-562">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="a1aa5-563">项目已更新，但在重新评估之前不会进行进一步的评估。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-563">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="a1aa5-564">例如，如果删除了 "p"，则在重新评估之前，不会修改从 "$ （p）" 计算得出的 "q"。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-564">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1aa5-565">使用默认的字符编码将项目保存到文件系统上（如果项目已修改）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-565">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1aa5-566">使用默认的字符编码将项目保存到文件系统上（如果项目已修改）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-566">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a1aa5-567">要将项目保存到的文本编写器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-567">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="a1aa5-568">将项目保存到提供的文本编写器（无论项目是否已修改）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-568">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="a1aa5-569">使用文本编写器的字符编码，并将项目标记为未修改。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-569">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a1aa5-570">项目源代码的路径。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-570">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="a1aa5-571">使用默认的字符编码将项目保存到文件系统上（如果项目已修改或项目源代码的路径已修改）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-571">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="a1aa5-572">用于保存项目的字符编码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-572">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="a1aa5-573">使用给定的字符编码将项目保存到文件系统上（如果项目已修改）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-573">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String, encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="a1aa5-574">项目源代码的路径。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-574">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="a1aa5-575">用于保存项目的字符编码。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-575">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="a1aa5-576">使用给定的字符编码将项目保存到文件系统上（如果项目已修改或项目源代码的路径已修改）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-576">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a1aa5-577">用于保存项目文件的编写器。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-577">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="a1aa5-578">保存“逻辑”或“预处理”项目文件，该文件包括所有导入的文件，就如同这些文件构成了单个文件一样。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-578">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1aa5-579">要设置的全局属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-579">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="a1aa5-580">全局属性的新值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-580">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="a1aa5-581">在计算项目之后设置一个全局属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-581">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="a1aa5-582">如果值发生更改，则将项目标记为需要重新计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-582">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-583">如果值发生更改，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-583"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1aa5-584">要设置的属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-584">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="a1aa5-585">属性的新的未计算值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-585">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="a1aa5-586">在项目中设置或添加一个具有给定名称和值的属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-586">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="a1aa5-587">如果存在同名属性，但它不是源自于导入的文件，则覆盖该属性的值。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-587">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="a1aa5-588">属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-588">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-589">如果没有具有给定名称的属性，将更新具有给定名称的最后一个现有属性，该属性对自身或其属性组没有任何条件，除非该属性源自于导入的文件。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-589">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="a1aa5-590">否则，将在第一个属性组中添加新属性，而不返回条件，如果需要，请在最后一个现有属性组之后创建属性组，否则在项目开始时创建一个属性组。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-590">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="a1aa5-591">评估会尽力进行。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-591">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="a1aa5-592">使用新属性在项目源中定义的属性可用于计算。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-592">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="a1aa5-593">仅计算此属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-593">Only this property is evaluated.</span></span> <span data-ttu-id="a1aa5-594">可能依赖于它的其他属性不受影响。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-594">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-595">获取或设置一个值，此值指示是否已暂时禁用了 ReevaluateIfNecessary。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-595">Gets or sets a value that indicates whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="a1aa5-596">当宿主希望对项目进行大量读写操作并希望临时牺牲准确性以换取性能，则可以使用此标志。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-596">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="a1aa5-597">确定是否临时禁用 ReevaluateIfNecessary 的标志。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-597">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-598">获取 SubToolsetVersion 特性的值（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-598">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="a1aa5-599">此值结合 TolsVersion 特性的值确定此项目的工具集属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-599">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="a1aa5-600">SubToolsetVersion 属性值，如果该属性不存在，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-600">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-601">获取此项目中的所有目标的字典（按目标名称组织条目）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-601">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="a1aa5-602">此项目中所有目标的只读字典，按目标名称进行键控。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-602">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="a1aa5-603">此集合中不包括重写的目标。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-603">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-604">获取计算此项目所使用的工具版本（如果有的话）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-604">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="a1aa5-605">计算此项目所用的工具版本（如果有）。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-605">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-606">由构造函数设置。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-606">Set by the constructor.</span></span> <span data-ttu-id="a1aa5-607">这并不一定与项目标记上的工具版本（如果有）相同。它可能已在外部指定，例如，在命令行中使用/tv 开关。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-607">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="a1aa5-608">可以从 <xref:Microsoft.Build.Evaluation.Project.Xml%2A>获取项目标记上的实际工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-608">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="a1aa5-609">创建项目后，无法更改工具版本。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-609">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1aa5-610">获取与此项目关联的根目录。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-610">Gets the root project associated with this project.</span></span> <span data-ttu-id="a1aa5-611">绝不会为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-611">Can never be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="a1aa5-612">与此项目关联的根项目，该项目永远不会 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-612">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1aa5-613">无法设置此属性。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-613">There is no way to set this property.</span></span> <span data-ttu-id="a1aa5-614">如果有新的项目根，请将其评估为新项目。</span><span class="sxs-lookup"><span data-stu-id="a1aa5-614">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
