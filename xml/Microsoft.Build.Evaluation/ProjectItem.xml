<Type Name="ProjectItem" FullName="Microsoft.Build.Evaluation.ProjectItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c24cd9e12d171138155e636fb4c88171859e9a3e" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76957623" /></Metadata><TypeSignature Language="C#" Value="public class ProjectItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectItem" />
  <TypeSignature Language="F#" Value="type ProjectItem = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="600d8-101">表示计算的设计时项目项。</span><span class="sxs-lookup"><span data-stu-id="600d8-101">Represents an evaluated design-time project item.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadata As IEnumerable(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ DirectMetadata { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectMetadata : seq&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-102">获取可枚举所有项元数据的枚举器。</span><span class="sxs-lookup"><span data-stu-id="600d8-102">Gets an enumerator over all item metadata.</span></span></summary>
        <value><span data-ttu-id="600d8-103">枚举所有项元数据的枚举器，该枚举数绝不能 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="600d8-103">An enumerator over all item metadata, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-104">不包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-104">Does not include metadata from item definitions.</span></span> <span data-ttu-id="600d8-105">不包括内置元数据，如 "FullPath"。</span><span class="sxs-lookup"><span data-stu-id="600d8-105">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectMetadataCount">
      <MemberSignature Language="C#" Value="public int DirectMetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirectMetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirectMetadataCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectMetadataCount : int" Usage="Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-106">获取此项的元数据的计数。</span><span class="sxs-lookup"><span data-stu-id="600d8-106">Gets the count of metadata for this item.</span></span></summary>
        <value><span data-ttu-id="600d8-107">此项的元数据的计数。</span><span class="sxs-lookup"><span data-stu-id="600d8-107">The count of metadata for this item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-108">不包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-108">Does not include metadata from item definitions.</span></span> <span data-ttu-id="600d8-109">不包括内置元数据，如 "FullPath"。</span><span class="sxs-lookup"><span data-stu-id="600d8-109">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedInclude">
      <MemberSignature Language="C#" Value="public string EvaluatedInclude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedInclude { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedInclude : string" Usage="Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-110">获取 Include 特性的计算值。</span><span class="sxs-lookup"><span data-stu-id="600d8-110">Gets the evaluated value of the Include attribute.</span></span></summary>
        <value><span data-ttu-id="600d8-111">Include 特性的计算值。</span><span class="sxs-lookup"><span data-stu-id="600d8-111">The evaluated value of the Include attribute.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-112">转义字符不存在。</span><span class="sxs-lookup"><span data-stu-id="600d8-112">Escaped characters are not present.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata GetMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata (name As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ GetMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetMetadata : string -&gt; Microsoft.Build.Evaluation.ProjectMetadata" Usage="projectItem.GetMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="600d8-113">要检索其值的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="600d8-113">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="600d8-114">获取此项的给定元数据的计算值。</span><span class="sxs-lookup"><span data-stu-id="600d8-114">Gets the evaluated value of the given metadata for this item.</span></span></summary>
        <returns><span data-ttu-id="600d8-115">此项的给定元数据的计算值，或如果不存在具有给定名称的元数据，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="600d8-115">The evaluated value of the given metadata for this item, or <see langword="null" /> if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-116">可能包含来自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-116">May include metadata from an item definition.</span></span> <span data-ttu-id="600d8-117">不包括内置元数据，如 "FullPath"。</span><span class="sxs-lookup"><span data-stu-id="600d8-117">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValue">
      <MemberSignature Language="C#" Value="public string GetMetadataValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMetadataValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetMetadataValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetMetadataValue : string -&gt; string&#xA;override this.GetMetadataValue : string -&gt; string" Usage="projectItem.GetMetadataValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="600d8-118">要检索其值的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="600d8-118">The name of the metadata whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="600d8-119">获取此项的给定元数据（包括源自于项定义的元数据）的计算值。</span><span class="sxs-lookup"><span data-stu-id="600d8-119">Gets the evaluated value of the given metadata for this item, including metadata originating from an item definition.</span></span></summary>
        <returns><span data-ttu-id="600d8-120">此项的给定元数据（包括源自于项定义的元数据）的计算值，或如果不存在具有给定名称的元数据，则为空字符串。</span><span class="sxs-lookup"><span data-stu-id="600d8-120">The evaluated value of the given metadata for this item, including metadata originating from an item definition, or an empty string if no metadata exists with the given name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-121">若要确定元数据是否存在，请使用 <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>。</span><span class="sxs-lookup"><span data-stu-id="600d8-121">To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span></span>  
  
 <span data-ttu-id="600d8-122">此方法可用于访问内置元数据的值，例如 "FullPath"。</span><span class="sxs-lookup"><span data-stu-id="600d8-122">This method may be used to access the value of built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMetadata">
      <MemberSignature Language="C#" Value="public bool HasMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.HasMetadata : string -&gt; bool" Usage="projectItem.HasMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="600d8-123">要搜索的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="600d8-123">The name of the metadata to be searched for.</span></span></param>
        <summary><span data-ttu-id="600d8-124">确定在此项上是否定义了具有给定名称的元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-124">Determines whether metadata with the given name is defined on this item.</span></span></summary>
        <returns><span data-ttu-id="600d8-125">如果在此项上定义了具有给定名称的元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="600d8-125"><see langword="true" /> if metadata with the given name is defined on this item; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-126">包括内置的元数据和源自项定义的元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-126">Includes built-in metadata and metadata originating from item definitions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-127">确定此项是否源自于一个导入的文件。</span><span class="sxs-lookup"><span data-stu-id="600d8-127">Determines if this item originates from an imported file.</span></span></summary>
        <value><span data-ttu-id="600d8-128"><see langword="true" /> 如果此项源自于导入的文件，则为; 否则为。否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="600d8-128"><see langword="true" /> if this item originates from an imported file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-129">获取或设置此项的类型。</span><span class="sxs-lookup"><span data-stu-id="600d8-129">Gets or sets the type of this item.</span></span></summary>
        <value><span data-ttu-id="600d8-130">项类型。</span><span class="sxs-lookup"><span data-stu-id="600d8-130">The item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ Metadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-131">获取此项的所有元数据（包括源自于项定义的元数据）。</span><span class="sxs-lookup"><span data-stu-id="600d8-131">Gets all the metadata for this item, including metadata originating from item definitions.</span></span></summary>
        <value><span data-ttu-id="600d8-132">此项的所有元数据（包括源自于项定义的元数据）。</span><span class="sxs-lookup"><span data-stu-id="600d8-132">All the metadata for this item, including metadata originating from item definitions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-133">不包括内置元数据，如 "FullPath"。</span><span class="sxs-lookup"><span data-stu-id="600d8-133">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 <span data-ttu-id="600d8-134">若要添加、删除或更改内置元数据的值，请使用 <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> 和 <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="600d8-134">To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataCount">
      <MemberSignature Language="C#" Value="public int MetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataCount : int" Usage="Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-135">获取此项的元数据（包括源自于项定义的任何元数据和任何内置元数据）的计数。</span><span class="sxs-lookup"><span data-stu-id="600d8-135">Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span></span></summary>
        <value><span data-ttu-id="600d8-136">此项的元数据（包括源自于项定义的任何元数据和任何内置元数据）的计数。</span><span class="sxs-lookup"><span data-stu-id="600d8-136">The count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-137">获取包含此项目项的项目。</span><span class="sxs-lookup"><span data-stu-id="600d8-137">Gets the project that contains this project item.</span></span></summary>
        <value><span data-ttu-id="600d8-138">包含此项目项的项目。</span><span class="sxs-lookup"><span data-stu-id="600d8-138">The project that contains this project item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-139">项目中始终包含项目项。</span><span class="sxs-lookup"><span data-stu-id="600d8-139">Project items are always contained by a project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadata">
      <MemberSignature Language="C#" Value="public bool RemoveMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveMetadata(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveMetadata : string -&gt; bool" Usage="projectItem.RemoveMetadata name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="600d8-140">要移除的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="600d8-140">The name of the metadata to remove.</span></span></param>
        <summary><span data-ttu-id="600d8-141">移除任何具有给定名称的元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-141">Removes any metadata with the given name.</span></span></summary>
        <returns><span data-ttu-id="600d8-142">如果在移除前存在具有给定名称的元数据，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="600d8-142"><see langword="true" /> if metadata with the given name exists before removal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-143">如果元数据名称引用内置元数据（如 "FullPath"），则会引发 InvalidArgumentException。</span><span class="sxs-lookup"><span data-stu-id="600d8-143">Throws InvalidArgumentException if the metadata name refers to built-in metadata, like "FullPath".</span></span>  
  
 <span data-ttu-id="600d8-144">如果元数据名称引用源自于项定义的元数据，则会引发 InvalidOperationException。</span><span class="sxs-lookup"><span data-stu-id="600d8-144">Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rename(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rename(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Rename : string -&gt; unit" Usage="projectItem.Rename name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="600d8-145">该项的新名称。</span><span class="sxs-lookup"><span data-stu-id="600d8-145">The new name of the item.</span></span></param>
        <summary><span data-ttu-id="600d8-146">将该项重命名为给定的名称。</span><span class="sxs-lookup"><span data-stu-id="600d8-146">Renames the item to the given name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-147">等效于设置 <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="600d8-147">Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value.</span></span> <span data-ttu-id="600d8-148">通常不会进行任何计算，因为这可能会导致多个项，这在重命名单个项的上下文中没有意义。</span><span class="sxs-lookup"><span data-stu-id="600d8-148">Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item.</span></span> <span data-ttu-id="600d8-149">但是，如果不需要拆分项，且新值的计算结果正好为一个项，则将用计算的值更新其计算的 Include 特性。</span><span class="sxs-lookup"><span data-stu-id="600d8-149">However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadataValue (name As String, unevaluatedValue As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ SetMetadataValue(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetMetadataValue : string * string -&gt; Microsoft.Build.Evaluation.ProjectMetadata" Usage="projectItem.SetMetadataValue (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="600d8-150">要添加的元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="600d8-150">The name of the metadata to add.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="600d8-151">要添加的元数据的未计算值。</span><span class="sxs-lookup"><span data-stu-id="600d8-151">The unevaluated value of the metadata to add.</span></span></param>
        <summary><span data-ttu-id="600d8-152">将具有给定名称和未计算值的元数据添加到该项。</span><span class="sxs-lookup"><span data-stu-id="600d8-152">Adds metadata with the given name and unevaluated value to the item.</span></span></summary>
        <returns><span data-ttu-id="600d8-153">新的元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-153">The new metadata.</span></span> <span data-ttu-id="600d8-154">如果已存在具有给定名称的元数据，则返回此元数据。</span><span class="sxs-lookup"><span data-stu-id="600d8-154">If metadata with the given name already exists, returns this metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="600d8-155">如果项上已存在具有给定名称的元数据，则更新现有元数据的值，前提是它不来自项定义。</span><span class="sxs-lookup"><span data-stu-id="600d8-155">Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition.</span></span> <span data-ttu-id="600d8-156">更新计算的项目，但不会影响项目中的任何其他内容，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="600d8-156">Updates the evaluated project, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="600d8-157">例如，如果在 "i" 类型的项上添加了一个名为 "m" 的元数据段，则它不会影响从 "@ （j->"% （m） "）" 计算所得的 "j" （在重新评估之前）。</span><span class="sxs-lookup"><span data-stu-id="600d8-157">For example, if a piece of metadata named "m" is added on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="600d8-158">此外，如果将未计算的值 "m" 设置为由计算修改的内容（如 "$ （p）"），则计算的值将设置为 "$ （p）"，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="600d8-158">Also if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to literally "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="600d8-159">应将未计算的值中的特殊字符转换为转义符。</span><span class="sxs-lookup"><span data-stu-id="600d8-159">Special characters in the unevaluated value should be converted to escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedInclude">
      <MemberSignature Language="C#" Value="public string UnevaluatedInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedInclude { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedInclude : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-160">获取或设置 Include 特性的未计算值。</span><span class="sxs-lookup"><span data-stu-id="600d8-160">Gets or sets the unevaluated value of the Include attribute.</span></span></summary>
        <value><span data-ttu-id="600d8-161">Include 特性的未计算值。</span><span class="sxs-lookup"><span data-stu-id="600d8-161">The unevaluated value of the Include attribute.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectItemElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectItemElement ^ Xml { Microsoft::Build::Construction::ProjectItemElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectItemElement" Usage="Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="600d8-162">获取与此项关联的项元素。</span><span class="sxs-lookup"><span data-stu-id="600d8-162">Gets the item element that is associated with this item.</span></span></summary>
        <value><span data-ttu-id="600d8-163">与此项关联的项元素，这些项元素永远不会 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="600d8-163">The item element that is associated with this item, which can never be <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
