<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <Metadata><Meta Name="ms.openlocfilehash" Value="589715ef3f65447f939d0373f4b03d1bae40287f" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78807435" /></Metadata><TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <TypeSignature Language="F#" Value="type ProjectMetadata = class&#xA;    interface IEquatable&lt;ProjectMetadata&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a9d61-101">表示计算的设计时元数据。</span><span class="sxs-lookup"><span data-stu-id="a9d61-101">Represents evaluated design-time metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d61-102">从不用于表示内置元数据，如% （Filename）。</span><span class="sxs-lookup"><span data-stu-id="a9d61-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="a9d61-103">元数据始终与项目源代码关联。</span><span class="sxs-lookup"><span data-stu-id="a9d61-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="a9d61-104">元数据由 <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> 或 <xref:Microsoft.Build.Evaluation.ProjectItem>包含。</span><span class="sxs-lookup"><span data-stu-id="a9d61-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-105">此条件特性的位置。</span><span class="sxs-lookup"><span data-stu-id="a9d61-105">Location of the Condition attribute.</span></span></summary>
        <value><span data-ttu-id="a9d61-106">返回条件特性位置。</span><span class="sxs-lookup"><span data-stu-id="a9d61-106">Returns Condition attribute location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluatedValue : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-107">获取计算的元数据值。</span><span class="sxs-lookup"><span data-stu-id="a9d61-107">Gets the evaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="a9d61-108">计算的元数据值，该值从不 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a9d61-108">The evaluated metadata value, which is never <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d61-109">不能直接设置：只能设置未计算的值。</span><span class="sxs-lookup"><span data-stu-id="a9d61-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsImported : bool" Usage="Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-110">确定元数据是否源自于一个导入的文件。</span><span class="sxs-lookup"><span data-stu-id="a9d61-110">Determines if the metadata originated from an imported file.</span></span></summary>
        <value><span data-ttu-id="a9d61-111">如果元数据源自于导入的文件，则为 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a9d61-111"><see langword="true" /> if the metadata originated from an imported file; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-112">获取用作容器的项定义或项的项类型。</span><span class="sxs-lookup"><span data-stu-id="a9d61-112">Gets the item type of the containing item definition or item.</span></span></summary>
        <value><span data-ttu-id="a9d61-113">包含项定义或项的项类型。</span><span class="sxs-lookup"><span data-stu-id="a9d61-113">The item type of the containing item definition or item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-114">元素的位置。</span><span class="sxs-lookup"><span data-stu-id="a9d61-114">Location of the element.</span></span></summary>
        <value><span data-ttu-id="a9d61-115">元素位置。</span><span class="sxs-lookup"><span data-stu-id="a9d61-115">The element location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-116">获取元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="a9d61-116">Gets the name of the metadata.</span></span></summary>
        <value><span data-ttu-id="a9d61-117">元数据的名称。</span><span class="sxs-lookup"><span data-stu-id="a9d61-117">The name of the metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predecessor : Microsoft.Build.Evaluation.ProjectMetadata" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-118">获取在计算期间由此元数据重写的（某个项定义或项中的）最后一个元数据。</span><span class="sxs-lookup"><span data-stu-id="a9d61-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span></span></summary>
        <value><span data-ttu-id="a9d61-119">其值在计算期间由此元数据重写的最后一个元数据（来自项定义或项），或在未重写元数据的情况下 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a9d61-119">The last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation, or <see langword="null" /> if the metadata has not been overridden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d61-120">此方法搜索逻辑项目文件中所有具有相同名称的元数据，这些元数据包含在相同项类型的项定义中，并且其条件的计算结果为 true。</span><span class="sxs-lookup"><span data-stu-id="a9d61-120">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="a9d61-121">如果某个项包含元数据，则此方法将搜索其条件计算结果为 true 的所有以前的元数据。</span><span class="sxs-lookup"><span data-stu-id="a9d61-121">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="a9d61-122">在项之前搜索项定义。</span><span class="sxs-lookup"><span data-stu-id="a9d61-122">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="a9d61-123">如果自上次修改后项目尚未重新评估，则此值可能不正确。</span><span class="sxs-lookup"><span data-stu-id="a9d61-123">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Project : Microsoft.Build.Evaluation.Project" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-124">获取包含此元数据的项目。</span><span class="sxs-lookup"><span data-stu-id="a9d61-124">Gets the project that contains this metadata.</span></span></summary>
        <value><span data-ttu-id="a9d61-125">包含此元数据的项目，该项目永远不会 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a9d61-125">The project that contains this metadata, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberSignature Language="F#" Value="abstract member System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals : Microsoft.Build.Evaluation.ProjectMetadata -&gt; bool&#xA;override this.System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals : Microsoft.Build.Evaluation.ProjectMetadata -&gt; bool" Usage="projectMetadata.System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="a9d61-126">要进行比较的项目元数据。</span><span class="sxs-lookup"><span data-stu-id="a9d61-126">The project metadata to be compared to.</span></span></param>
        <summary><span data-ttu-id="a9d61-127">比较此项目元数据与给定项目元数据是否相等。</span><span class="sxs-lookup"><span data-stu-id="a9d61-127">Compares this project metadata with the given project metadata for equality.</span></span></summary>
        <returns><span data-ttu-id="a9d61-128">如果项目元数据相等，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a9d61-128"><see langword="true" /> if the project metadata are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnevaluatedValue : string with get, set" Usage="Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-129">获取或设置未计算的元数据值。</span><span class="sxs-lookup"><span data-stu-id="a9d61-129">Gets or sets the unevaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="a9d61-130">未计算的元数据值。</span><span class="sxs-lookup"><span data-stu-id="a9d61-130">The unevaluated metadata value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9d61-131">Setter 方法同时更新未计算的值和计算出的值，但不会影响项目中的任何其他内容，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="a9d61-131">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="a9d61-132">例如，如果在 "i" 类型的项上修改了名为 "m" 的元数据片段，则它不会影响从 "@ （j->"% （m） "）" 计算的 "j"，直到重新计算。</span><span class="sxs-lookup"><span data-stu-id="a9d61-132">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="a9d61-133">--如果 "m" 的未计算值设置为由计算修改的内容（如 "$ （p）"），则计算的值将设置为 "$ （p）"，直到重新评估。</span><span class="sxs-lookup"><span data-stu-id="a9d61-133">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="a9d61-134">如果 item 元素源自于项列表、通配符或分号表达式，通过 <xref:Microsoft.Build.Evaluation.ProjectItem> 设置元数据可能会导致关联的 <xref:Microsoft.Build.Construction.ProjectItemElement> 被拆分。</span><span class="sxs-lookup"><span data-stu-id="a9d61-134">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="a9d61-135">因为这意味着只会影响该特定项目。</span><span class="sxs-lookup"><span data-stu-id="a9d61-135">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="a9d61-136">通过 ProjectMetadata 设置元数据不会导致任何拆分，因为这意味着需要使用基础 <xref:Microsoft.Build.Construction.ProjectMetadataElement>来影响所有项目。</span><span class="sxs-lookup"><span data-stu-id="a9d61-136">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="a9d61-137">将包含项目标记为已修改。</span><span class="sxs-lookup"><span data-stu-id="a9d61-137">The containing project is marked as modified.</span></span> <span data-ttu-id="a9d61-138">未计算的值被假定为包含所需的转义字符序列。</span><span class="sxs-lookup"><span data-stu-id="a9d61-138">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="a9d61-139">此方法可能不会使项目处于自我一致的状态。</span><span class="sxs-lookup"><span data-stu-id="a9d61-139">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectMetadataElement" Usage="Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9d61-140">获取相关的项目元数据元素。</span><span class="sxs-lookup"><span data-stu-id="a9d61-140">Gets the associated project metadata element.</span></span></summary>
        <value><span data-ttu-id="a9d61-141">关联的项目元数据元素，绝不能 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a9d61-141">The associated project metadata element, which can never be <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
