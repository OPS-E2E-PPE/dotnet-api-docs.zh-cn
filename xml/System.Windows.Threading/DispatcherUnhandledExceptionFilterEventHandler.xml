<Type Name="DispatcherUnhandledExceptionFilterEventHandler" FullName="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26e12c00452ef5467859fba6ba5c678fbeaa5648" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82448552" /></Metadata><TypeSignature Language="C#" Value="public delegate void DispatcherUnhandledExceptionFilterEventHandler(object sender, DispatcherUnhandledExceptionFilterEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DispatcherUnhandledExceptionFilterEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DispatcherUnhandledExceptionFilterEventHandler(sender As Object, e As DispatcherUnhandledExceptionFilterEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DispatcherUnhandledExceptionFilterEventHandler(System::Object ^ sender, DispatcherUnhandledExceptionFilterEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DispatcherUnhandledExceptionFilterEventHandler = delegate of obj * DispatcherUnhandledExceptionFilterEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">事件数据。</param>
    <summary>表示用来处理 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter" /> 事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 当 <xref:System.Windows.Threading.Dispatcher> 执行的代码引发未处理的异常时，将发生 <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> 事件。  
  
 <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> 事件提供了不引发 <xref:System.Windows.Threading.Dispatcher.UnhandledException> 事件的方法。  首先引发 <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter> 事件，如果 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> 上的 <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> 设置为 `false`，则不会引发 <xref:System.Windows.Threading.Dispatcher.UnhandledException> 事件。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs" />
    <altmember cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />
    <altmember cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs" />
    <altmember cref="T:System.Windows.Threading.Dispatcher" />
  </Docs>
</Type>
