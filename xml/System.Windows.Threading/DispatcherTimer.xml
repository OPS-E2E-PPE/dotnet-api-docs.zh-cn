<Type Name="DispatcherTimer" FullName="System.Windows.Threading.DispatcherTimer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a93492f27ed0e36d80c790bb060af5a2998ec59b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78831056" /></Metadata><TypeSignature Language="C#" Value="public class DispatcherTimer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DispatcherTimer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherTimer" />
  <TypeSignature Language="VB.NET" Value="Public Class DispatcherTimer" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherTimer" />
  <TypeSignature Language="F#" Value="type DispatcherTimer = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f25f8-101">集成到按指定时间间隔和指定优先级处理的 <see cref="T:System.Windows.Threading.Dispatcher" /> 队列中的计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-101">A timer that is integrated into the <see cref="T:System.Windows.Threading.Dispatcher" /> queue which is processed at a specified interval of time and at a specified priority.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-102">将在每个 <xref:System.Windows.Threading.Dispatcher> 循环的顶部重新计算 <xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-102">The <xref:System.Windows.Threading.DispatcherTimer> is reevaluated at the top of every <xref:System.Windows.Threading.Dispatcher> loop.</span></span>  
  
 <span data-ttu-id="f25f8-103">不保证计时器在时间间隔内执行，但在发生时间间隔之前，不一定会执行计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-103">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="f25f8-104">这是因为 <xref:System.Windows.Threading.DispatcherTimer> 操作将放置在 <xref:System.Windows.Threading.Dispatcher> 队列中，如其他操作。</span><span class="sxs-lookup"><span data-stu-id="f25f8-104">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="f25f8-105">当执行 <xref:System.Windows.Threading.DispatcherTimer> 操作时，会依赖于队列中的其他作业及其优先级。</span><span class="sxs-lookup"><span data-stu-id="f25f8-105">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
 <span data-ttu-id="f25f8-106">如果在 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 应用程序中使用 <xref:System.Timers.Timer?displayProperty=nameWithType>，则值得注意的是，<xref:System.Timers.Timer?displayProperty=nameWithType> 与 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 线程在不同的线程上运行。</span><span class="sxs-lookup"><span data-stu-id="f25f8-106">If a <xref:System.Timers.Timer?displayProperty=nameWithType> is used in a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application, it is worth noting that the <xref:System.Timers.Timer?displayProperty=nameWithType> runs on a different thread than the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread.</span></span>  <span data-ttu-id="f25f8-107">为了访问 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 线程上的对象，需要使用 <xref:System.Windows.Threading.Dispatcher.Invoke%2A> 或 <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>将操作发布到 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 线程的 <xref:System.Windows.Threading.Dispatcher> 上。</span><span class="sxs-lookup"><span data-stu-id="f25f8-107">In order to access objects on the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread, it is necessary to post the operation onto the <xref:System.Windows.Threading.Dispatcher> of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] thread using <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A>.</span></span> <span data-ttu-id="f25f8-108">使用 <xref:System.Windows.Threading.DispatcherTimer> 而不是 <xref:System.Timers.Timer?displayProperty=nameWithType> 的原因是 <xref:System.Windows.Threading.DispatcherTimer> 与 <xref:System.Windows.Threading.Dispatcher> 在同一线程上运行，并且可在 <xref:System.Windows.Threading.DispatcherPriority> 上设置 <xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-108">Reasons for using a <xref:System.Windows.Threading.DispatcherTimer> as opposed to a <xref:System.Timers.Timer?displayProperty=nameWithType> are that the <xref:System.Windows.Threading.DispatcherTimer> runs on the same thread as the <xref:System.Windows.Threading.Dispatcher> and a <xref:System.Windows.Threading.DispatcherPriority> can be set on the <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  
  
 <span data-ttu-id="f25f8-109">当对象的方法绑定到计时器时，<xref:System.Windows.Threading.DispatcherTimer> 会使对象保持活动状态。</span><span class="sxs-lookup"><span data-stu-id="f25f8-109">A <xref:System.Windows.Threading.DispatcherTimer> will keep an object alive whenever the object's methods are bound to the timer.</span></span>  
  
## Examples  
 <span data-ttu-id="f25f8-110">下面的示例创建更新 <xref:System.Windows.Controls.Label> 的内容的 <xref:System.Windows.Threading.DispatcherTimer>，并对 <xref:System.Windows.Input.CommandManager>调用 <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="f25f8-110">The following example creates a <xref:System.Windows.Threading.DispatcherTimer> that updates the contents of a <xref:System.Windows.Controls.Label> and calls the <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> method on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="f25f8-111">创建一个名为 `dispatcherTimer` 的 <xref:System.Windows.Threading.DispatcherTimer> 对象。</span><span class="sxs-lookup"><span data-stu-id="f25f8-111">A <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="f25f8-112">事件处理程序 `dispatcherTimer_Tick` 将添加到 `dispatcherTimer`的 <xref:System.Windows.Threading.DispatcherTimer.Tick> 事件。</span><span class="sxs-lookup"><span data-stu-id="f25f8-112">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event of `dispatcherTimer`.</span></span>  <span data-ttu-id="f25f8-113">使用 <xref:System.Windows.Duration.TimeSpan%2A> 对象将 <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 设置为1秒，并启动计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-113">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object, and the timer is started.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 <span data-ttu-id="f25f8-114"><xref:System.Windows.Threading.DispatcherTimer.Tick> 事件处理程序更新显示当前秒的 <xref:System.Windows.Controls.Label>，并对 <xref:System.Windows.Input.CommandManager>调用 <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-114">The <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f25f8-115">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f25f8-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f25f8-116">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f25f8-116">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-117"><xref:System.Windows.Threading.DispatcherTimer> 按 <xref:System.Windows.Threading.DispatcherPriority.Background> 优先级在当前线程的 <xref:System.Windows.Threading.Dispatcher> 上运行。</span><span class="sxs-lookup"><span data-stu-id="f25f8-117"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread at <xref:System.Windows.Threading.DispatcherPriority.Background> priority.</span></span>  <span data-ttu-id="f25f8-118">若要指定其他 <xref:System.Windows.Threading.Dispatcher>，请使用以下构造函数： <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-118">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer priority" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="f25f8-119">调用计时器的优先级。</span><span class="sxs-lookup"><span data-stu-id="f25f8-119">The priority at which to invoke the timer.</span></span></param>
        <summary><span data-ttu-id="f25f8-120">初始化按指定优先级处理计时器事件的 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f25f8-120">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which processes timer events at the specified priority.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-121"><xref:System.Windows.Threading.DispatcherTimer> 在当前线程的 <xref:System.Windows.Threading.Dispatcher> 上运行。</span><span class="sxs-lookup"><span data-stu-id="f25f8-121"><xref:System.Windows.Threading.DispatcherTimer> runs on the <xref:System.Windows.Threading.Dispatcher> of the current thread.</span></span>  <span data-ttu-id="f25f8-122">若要指定其他 <xref:System.Windows.Threading.Dispatcher>，请使用以下构造函数： <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-122">To specify a different <xref:System.Windows.Threading.Dispatcher>, use the following constructor: <xref:System.Windows.Threading.DispatcherTimer.%23ctor%28System.Windows.Threading.DispatcherPriority%2CSystem.Windows.Threading.Dispatcher%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (System.Windows.Threading.DispatcherPriority priority, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Threading.DispatcherPriority priority, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (priority As DispatcherPriority, dispatcher As Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(System::Windows::Threading::DispatcherPriority priority, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : System.Windows.Threading.DispatcherPriority * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (priority, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="priority"><span data-ttu-id="f25f8-123">调用计时器的优先级。</span><span class="sxs-lookup"><span data-stu-id="f25f8-123">The priority at which to invoke the timer.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="f25f8-124">与计时器关联的调度程序。</span><span class="sxs-lookup"><span data-stu-id="f25f8-124">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="f25f8-125">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 类的新实例，该类按指定优先级在指定的 <see cref="T:System.Windows.Threading.Dispatcher" /> 上运行。</span><span class="sxs-lookup"><span data-stu-id="f25f8-125">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which runs on the specified <see cref="T:System.Windows.Threading.Dispatcher" /> at the specified priority.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f25f8-126"><paramref name="dispatcher" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-126"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DispatcherTimer (TimeSpan interval, System.Windows.Threading.DispatcherPriority priority, EventHandler callback, System.Windows.Threading.Dispatcher dispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan interval, valuetype System.Windows.Threading.DispatcherPriority priority, class System.EventHandler callback, class System.Windows.Threading.Dispatcher dispatcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (interval As TimeSpan, priority As DispatcherPriority, callback As EventHandler, dispatcher As Dispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherTimer(TimeSpan interval, System::Windows::Threading::DispatcherPriority priority, EventHandler ^ callback, System::Windows::Threading::Dispatcher ^ dispatcher);" />
      <MemberSignature Language="F#" Value="new System.Windows.Threading.DispatcherTimer : TimeSpan * System.Windows.Threading.DispatcherPriority * EventHandler * System.Windows.Threading.Dispatcher -&gt; System.Windows.Threading.DispatcherTimer" Usage="new System.Windows.Threading.DispatcherTimer (interval, priority, callback, dispatcher)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="interval" Type="System.TimeSpan" />
        <Parameter Name="priority" Type="System.Windows.Threading.DispatcherPriority" />
        <Parameter Name="callback" Type="System.EventHandler" />
        <Parameter Name="dispatcher" Type="System.Windows.Threading.Dispatcher" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="f25f8-127">刻度之间的时间段。</span><span class="sxs-lookup"><span data-stu-id="f25f8-127">The period of time between ticks.</span></span></param>
        <param name="priority"><span data-ttu-id="f25f8-128">调用计时器的优先级。</span><span class="sxs-lookup"><span data-stu-id="f25f8-128">The priority at which to invoke the timer.</span></span></param>
        <param name="callback"><span data-ttu-id="f25f8-129">当 <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> 事件发生时调用的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f25f8-129">The event handler to call when the <see cref="E:System.Windows.Threading.DispatcherTimer.Tick" /> event occurs.</span></span></param>
        <param name="dispatcher"><span data-ttu-id="f25f8-130">与计时器关联的调度程序。</span><span class="sxs-lookup"><span data-stu-id="f25f8-130">The dispatcher the timer is associated with.</span></span></param>
        <summary><span data-ttu-id="f25f8-131">初始化 <see cref="T:System.Windows.Threading.DispatcherTimer" /> 类的新实例，该类使用指定的时间间隔、优先级、事件处理程序和 <see cref="T:System.Windows.Threading.Dispatcher" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-131">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherTimer" /> class which uses the specified time interval, priority, event handler, and <see cref="T:System.Windows.Threading.Dispatcher" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f25f8-132"><paramref name="callback" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-132"><paramref name="callback" /> is <see langword="null" />.</span></span>

<span data-ttu-id="f25f8-133">- 或 -</span><span class="sxs-lookup"><span data-stu-id="f25f8-133">-or-</span></span>

<span data-ttu-id="f25f8-134"><paramref name="dispatcher" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-134"><paramref name="dispatcher" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f25f8-135"><paramref name="interval" /> 小于 0 或大于 <see cref="F:System.Int32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-135"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Dispatcher : System.Windows.Threading.Dispatcher" Usage="System.Windows.Threading.DispatcherTimer.Dispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f25f8-136">获取与此 <see cref="T:System.Windows.Threading.Dispatcher" /> 关联的 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-136">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> associated with this <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <value><span data-ttu-id="f25f8-137">调度程序。</span><span class="sxs-lookup"><span data-stu-id="f25f8-137">The dispatcher.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-138"><xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> 属性是在创建 <xref:System.Windows.Threading.DispatcherTimer> 对象时确定的。</span><span class="sxs-lookup"><span data-stu-id="f25f8-138">The <xref:System.Windows.Threading.DispatcherTimer.Dispatcher%2A> property is determined at the creation of the <xref:System.Windows.Threading.DispatcherTimer> object.</span></span>  <span data-ttu-id="f25f8-139">如果指定了不同的 <xref:System.Windows.Threading.Dispatcher>，则在创建时将 <xref:System.Windows.Threading.Dispatcher> 属性设置为当前 <xref:System.Windows.Threading.Dispatcher>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-139">The <xref:System.Windows.Threading.Dispatcher> property is set to the current <xref:System.Windows.Threading.Dispatcher> at the time of creation unless a different <xref:System.Windows.Threading.Dispatcher> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public TimeSpan Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Interval { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : TimeSpan with get, set" Usage="System.Windows.Threading.DispatcherTimer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f25f8-140">获取或设置计时器刻度之间的时间段。</span><span class="sxs-lookup"><span data-stu-id="f25f8-140">Gets or sets the period of time between timer ticks.</span></span></summary>
        <value><span data-ttu-id="f25f8-141">刻度之间的时间段。</span><span class="sxs-lookup"><span data-stu-id="f25f8-141">The period of time between ticks.</span></span> <span data-ttu-id="f25f8-142">默认值为“00:00:00”。</span><span class="sxs-lookup"><span data-stu-id="f25f8-142">The default is 00:00:00.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-143">不保证计时器在时间间隔内执行，但在发生时间间隔之前，不一定会执行计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-143">Timers are not guaranteed to execute exactly when the time interval occurs, but they are guaranteed to not execute before the time interval occurs.</span></span>  <span data-ttu-id="f25f8-144">这是因为 <xref:System.Windows.Threading.DispatcherTimer> 操作将放置在 <xref:System.Windows.Threading.Dispatcher> 队列中，如其他操作。</span><span class="sxs-lookup"><span data-stu-id="f25f8-144">This is because <xref:System.Windows.Threading.DispatcherTimer> operations are placed on the <xref:System.Windows.Threading.Dispatcher> queue like other operations.</span></span>  <span data-ttu-id="f25f8-145">当执行 <xref:System.Windows.Threading.DispatcherTimer> 操作时，会依赖于队列中的其他作业及其优先级。</span><span class="sxs-lookup"><span data-stu-id="f25f8-145">When the <xref:System.Windows.Threading.DispatcherTimer> operation executes is dependent on the other jobs in the queue and their priorities.</span></span>  
  
## Examples  
 <span data-ttu-id="f25f8-146">下面的示例创建一个 <xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-146">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="f25f8-147">创建一个名为 `dispatcherTimer` 的新 <xref:System.Windows.Threading.DispatcherTimer> 对象。</span><span class="sxs-lookup"><span data-stu-id="f25f8-147">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="f25f8-148">事件处理程序 `dispatcherTimer_Tick` 将添加到 <xref:System.Windows.Threading.DispatcherTimer.Tick> 事件。</span><span class="sxs-lookup"><span data-stu-id="f25f8-148">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="f25f8-149">使用 <xref:System.TimeSpan> 对象将 <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 设置为1秒。</span><span class="sxs-lookup"><span data-stu-id="f25f8-149">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f25f8-150"><paramref name="interval" /> 小于 0 或大于 <see cref="F:System.Int32.MaxValue" /> 毫秒。</span><span class="sxs-lookup"><span data-stu-id="f25f8-150"><paramref name="interval" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" /> milliseconds.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.Threading.DispatcherTimer.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f25f8-151">获取或设置一个指示是否正在运行计时器的值。</span><span class="sxs-lookup"><span data-stu-id="f25f8-151">Gets or sets a value that indicates whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="f25f8-152">如果计时器处于启用状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-152"><see langword="true" /> if the timer is enabled; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="f25f8-153">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-153">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 必须设置为 `true` 才能引发 <xref:System.Windows.Threading.DispatcherTimer.Tick> 事件。</span><span class="sxs-lookup"><span data-stu-id="f25f8-154"><xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> must be set to `true` for the <xref:System.Windows.Threading.DispatcherTimer.Tick> event to be raised.</span></span>  
  
 <span data-ttu-id="f25f8-155">调用 <xref:System.Windows.Threading.DispatcherTimer.Start%2A> 将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="f25f8-155">Calling <xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="f25f8-156">调用 <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> 将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="f25f8-156">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
## Examples  
 <span data-ttu-id="f25f8-157">下面的示例创建一个 <xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-157">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="f25f8-158">创建一个名为 `dispatcherTimer` 的新 <xref:System.Windows.Threading.DispatcherTimer> 对象。</span><span class="sxs-lookup"><span data-stu-id="f25f8-158">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="f25f8-159">事件处理程序 `dispatcherTimer_Tick` 将添加到 <xref:System.Windows.Threading.DispatcherTimer.Tick> 事件。</span><span class="sxs-lookup"><span data-stu-id="f25f8-159">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="f25f8-160">使用 <xref:System.TimeSpan> 对象将 <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 设置为1秒。</span><span class="sxs-lookup"><span data-stu-id="f25f8-160">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.TimeSpan> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="dispatcherTimer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f25f8-161">启动 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-161">Starts the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-162">将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为在启动计时器时 `false` 停止计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-162">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="f25f8-163">将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为在计时器停止时 `true` 会启动计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-163">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="f25f8-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> 将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="f25f8-164"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="f25f8-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> 重置计时器 <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-165"><xref:System.Windows.Threading.DispatcherTimer.Start%2A> resets the timer <xref:System.Windows.Threading.DispatcherTimer.Interval%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f25f8-166">下面的示例创建一个 <xref:System.Windows.Threading.DispatcherTimer>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-166">The following example creates a <xref:System.Windows.Threading.DispatcherTimer>.</span></span>  <span data-ttu-id="f25f8-167">创建一个名为 `dispatcherTimer` 的新 <xref:System.Windows.Threading.DispatcherTimer> 对象。</span><span class="sxs-lookup"><span data-stu-id="f25f8-167">A new <xref:System.Windows.Threading.DispatcherTimer> object named `dispatcherTimer` is created.</span></span>  <span data-ttu-id="f25f8-168">事件处理程序 `dispatcherTimer_Tick` 将添加到 <xref:System.Windows.Threading.DispatcherTimer.Tick> 事件。</span><span class="sxs-lookup"><span data-stu-id="f25f8-168">The event handler `dispatcherTimer_Tick` is added to the <xref:System.Windows.Threading.DispatcherTimer.Tick> event.</span></span>  <span data-ttu-id="f25f8-169">使用 <xref:System.Windows.Duration.TimeSpan%2A> 对象将 <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> 设置为1秒。</span><span class="sxs-lookup"><span data-stu-id="f25f8-169">The <xref:System.Windows.Threading.DispatcherTimer.Interval%2A> is set to 1 second using a <xref:System.Windows.Duration.TimeSpan%2A> object.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimerinit)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimerInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimerinit)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherTimer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="dispatcherTimer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f25f8-170">停止 <see cref="T:System.Windows.Threading.DispatcherTimer" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-170">Stops the <see cref="T:System.Windows.Threading.DispatcherTimer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f8-171">将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为在启动计时器时 `false` 停止计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-171">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false` when the timer is started stops the timer.</span></span>  
  
 <span data-ttu-id="f25f8-172">将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为在计时器停止时 `true` 会启动计时器。</span><span class="sxs-lookup"><span data-stu-id="f25f8-172">Setting <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `true` when the timer is stopped starts the timer.</span></span>  
  
 <span data-ttu-id="f25f8-173">调用 <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> 将 <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> 设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="f25f8-173">Calling <xref:System.Windows.Threading.DispatcherTimer.Stop%2A> sets <xref:System.Windows.Threading.DispatcherTimer.IsEnabled%2A> to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Threading.DispatcherTimer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f25f8-174">获取或设置用户定义的数据对象。</span><span class="sxs-lookup"><span data-stu-id="f25f8-174">Gets or sets a user-defined data object.</span></span></summary>
        <value><span data-ttu-id="f25f8-175">用户定义的数据。</span><span class="sxs-lookup"><span data-stu-id="f25f8-175">The user-defined data.</span></span>  <span data-ttu-id="f25f8-176">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f25f8-176">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Threading.DispatcherTimer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Tick As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f25f8-177">超过计时器间隔时发生。</span><span class="sxs-lookup"><span data-stu-id="f25f8-177">Occurs when the timer interval has elapsed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f25f8-178">下面的示例创建一个 <xref:System.Windows.Threading.DispatcherTimer.Tick> 事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="f25f8-178">The following example creates a <xref:System.Windows.Threading.DispatcherTimer.Tick> event handler.</span></span>  <span data-ttu-id="f25f8-179">事件处理程序更新显示当前秒的 <xref:System.Windows.Controls.Label>，并对 <xref:System.Windows.Input.CommandManager>调用 <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A>。</span><span class="sxs-lookup"><span data-stu-id="f25f8-179">The event handler updates a <xref:System.Windows.Controls.Label> that displays the current second, and it calls <xref:System.Windows.Input.CommandManager.InvalidateRequerySuggested%2A> on the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampledispatchertimer)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleDispatcherTimer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampledispatchertimer)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
