<Type Name="AnonymousPipeServerStream" FullName="System.IO.Pipes.AnonymousPipeServerStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ac6d33881a5057839013e8a90db7f103133cedc" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75132668" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type AnonymousPipeServerStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1b98b-101">公开匿名管道周围的流，该管道既支持同步读写操作，也支持异步读写操作。</span><span class="sxs-lookup"><span data-stu-id="1b98b-101">Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-102">匿名管道有助于在子进程和父进程之间提供安全的进程间通信。</span><span class="sxs-lookup"><span data-stu-id="1b98b-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="1b98b-103">使用 <xref:System.IO.Pipes.AnonymousPipeServerStream> 类，可以使用父进程从子进程发送或接收信息。</span><span class="sxs-lookup"><span data-stu-id="1b98b-103">The <xref:System.IO.Pipes.AnonymousPipeServerStream> class enables a parent process to send or receive information from a child process.</span></span>  
  
 <span data-ttu-id="1b98b-104">匿名管道是指通常在父进程和子进程之间传输数据的单向管道。</span><span class="sxs-lookup"><span data-stu-id="1b98b-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="1b98b-105">匿名管道始终是本地的;它们不能通过网络使用。</span><span class="sxs-lookup"><span data-stu-id="1b98b-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="1b98b-106">不支持 <xref:System.IO.Pipes.PipeDirection.InOut> <xref:System.IO.Pipes.PipeDirection> 值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="1b98b-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="1b98b-107">匿名管道不支持 <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 读取模式。</span><span class="sxs-lookup"><span data-stu-id="1b98b-107">Anonymous pipes do not support the <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span>  
  
 <span data-ttu-id="1b98b-108">必须通过调用 <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> 方法，从服务器端提供的管道句柄创建匿名管道的客户端。</span><span class="sxs-lookup"><span data-stu-id="1b98b-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="1b98b-109">然后，在创建客户端进程时将该字符串作为参数传递。</span><span class="sxs-lookup"><span data-stu-id="1b98b-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="1b98b-110">然后，将该客户端进程作为 `pipeHandleAsString` 参数传递给 <xref:System.IO.Pipes.AnonymousPipeClientStream> 构造函数。</span><span class="sxs-lookup"><span data-stu-id="1b98b-110">From the client process, it is then passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
 <span data-ttu-id="1b98b-111"><xref:System.IO.Pipes.AnonymousPipeServerStream> 对象必须使用 <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 方法释放客户端句柄，以便在客户端退出时获得通知。</span><span class="sxs-lookup"><span data-stu-id="1b98b-111">The <xref:System.IO.Pipes.AnonymousPipeServerStream> object must dispose the client handle using the <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method in order to be notified when the client exits.</span></span>  
  
## Examples  

<span data-ttu-id="1b98b-112">下面的示例使用匿名管道将一个字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="1b98b-112">The following example sends a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="1b98b-113">此示例在父进程中创建 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象，它的 <xref:System.IO.Pipes.PipeDirection> 值为 <xref:System.IO.Pipes.PipeDirection.Out?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="1b98b-113">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1b98b-114">它还在 <xref:System.IO.Pipes.PipeDirection> 值为 <xref:System.IO.Pipes.PipeDirection.In?displayProperty=nameWithType>的子进程中创建 <xref:System.IO.Pipes.AnonymousPipeClientStream> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b98b-114">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1b98b-115">接下来，父进程将用户提供的字符串发送给子进程。</span><span class="sxs-lookup"><span data-stu-id="1b98b-115">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="1b98b-116">此字符串将显示在控制台中。</span><span class="sxs-lookup"><span data-stu-id="1b98b-116">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="1b98b-117">此示例适用于使用 <xref:System.IO.Pipes.AnonymousPipeServerStream> 类的服务器进程。</span><span class="sxs-lookup"><span data-stu-id="1b98b-117">This example is for the server process, which uses the <xref:System.IO.Pipes.AnonymousPipeServerStream> class.</span></span> <span data-ttu-id="1b98b-118">有关完整的代码示例（包括管道客户端和服务器的代码），请参阅[如何：使用匿名管道进行本地进程间通信](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)。</span><span class="sxs-lookup"><span data-stu-id="1b98b-118">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b98b-119">初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1b98b-119">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b98b-120">初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1b98b-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-121">对于没有 <xref:System.IO.Pipes.PipeDirection> 参数的 <xref:System.IO.Pipes.AnonymousPipeServerStream> 构造函数，默认方向为 <xref:System.IO.Pipes.PipeDirection.Out>。</span><span class="sxs-lookup"><span data-stu-id="1b98b-121">For <xref:System.IO.Pipes.AnonymousPipeServerStream> constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="1b98b-122">不支持 <xref:System.IO.Pipes.PipeDirection.InOut> <xref:System.IO.Pipes.PipeDirection> 值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="1b98b-122">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="1b98b-123">此构造函数将创建一个 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象，该对象具有默认的缓冲区大小、没有管道安全性和 <xref:System.IO.HandleInheritability> 值 <xref:System.IO.HandleInheritability.None>。</span><span class="sxs-lookup"><span data-stu-id="1b98b-123">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1b98b-124">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="1b98b-124">for full trust for the immediate caller.</span></span> <span data-ttu-id="1b98b-125">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="1b98b-125">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream direction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="1b98b-126">确定管道方向的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-126">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="1b98b-127">匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-127">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <summary><span data-ttu-id="1b98b-128">使用指定的管道方向初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1b98b-128">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-129">不支持 <xref:System.IO.Pipes.PipeDirection.InOut> <xref:System.IO.Pipes.PipeDirection> 值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="1b98b-129">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="1b98b-130">此构造函数将创建一个 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象，该对象具有默认的缓冲区大小、没有管道安全性和 <xref:System.IO.HandleInheritability> 值 <xref:System.IO.HandleInheritability.None>。</span><span class="sxs-lookup"><span data-stu-id="1b98b-130">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b98b-131">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-131"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1b98b-132">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="1b98b-132">for full trust for the immediate caller.</span></span> <span data-ttu-id="1b98b-133">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="1b98b-133">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="1b98b-134">确定管道方向的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-134">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="1b98b-135">匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-135">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="1b98b-136">确定基础句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-136">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="1b98b-137">必须设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-137">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <summary><span data-ttu-id="1b98b-138">使用指定的管道方向和继承模式初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1b98b-138">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction and inheritability mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-139">不支持 <xref:System.IO.Pipes.PipeDirection.InOut> <xref:System.IO.Pipes.PipeDirection> 值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="1b98b-139">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="1b98b-140">此构造函数将创建一个 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象，该对象具有默认的缓冲区大小并且没有管道安全性。</span><span class="sxs-lookup"><span data-stu-id="1b98b-140">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size and no pipe security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b98b-141">下面的示例演示了一个方法，该方法使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="1b98b-141">The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="1b98b-142">在此示例中，将在具有 <xref:System.IO.Pipes.PipeDirection> 值 <xref:System.IO.Pipes.PipeDirection.Out>的父进程中创建一个 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b98b-142">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b98b-143">未将 <paramref name="inheritability" /> 设为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-143"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b98b-144">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-144"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1b98b-145">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="1b98b-145">for full trust for the immediate caller.</span></span> <span data-ttu-id="1b98b-146">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="1b98b-146">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, class Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, serverSafePipeHandle As SafePipeHandle, clientSafePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ serverSafePipeHandle, Microsoft::Win32::SafeHandles::SafePipeHandle ^ clientSafePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * Microsoft.Win32.SafeHandles.SafePipeHandle * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, serverSafePipeHandle, clientSafePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="serverSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <Parameter Name="clientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="1b98b-147">确定管道方向的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-147">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="1b98b-148">匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-148">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="serverSafePipeHandle"><span data-ttu-id="1b98b-149">此 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象将封装的管道的安全句柄。</span><span class="sxs-lookup"><span data-stu-id="1b98b-149">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object will encapsulate.</span></span></param>
        <param name="clientSafePipeHandle"><span data-ttu-id="1b98b-150"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的安全句柄。</span><span class="sxs-lookup"><span data-stu-id="1b98b-150">A safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></param>
        <summary><span data-ttu-id="1b98b-151">从指定的管道句柄初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1b98b-151">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class from the specified pipe handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-152">不支持 <xref:System.IO.Pipes.PipeDirection.InOut> <xref:System.IO.Pipes.PipeDirection> 值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="1b98b-152">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b98b-153"><paramref name="serverSafePipeHandle" /> 或 <paramref name="clientSafePipeHandle" /> 是无效句柄。</span><span class="sxs-lookup"><span data-stu-id="1b98b-153"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b98b-154"><paramref name="serverSafePipeHandle" /> 或 <paramref name="clientSafePipeHandle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-154"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b98b-155">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-155"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1b98b-156">发生 I/O 错误，如磁盘错误。</span><span class="sxs-lookup"><span data-stu-id="1b98b-156">An I/O error, such as a disk error, has occurred.</span></span>  
  
 <span data-ttu-id="1b98b-157">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1b98b-157">-or-</span></span>  
  
 <span data-ttu-id="1b98b-158">已关闭流。</span><span class="sxs-lookup"><span data-stu-id="1b98b-158">The stream has been closed.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1b98b-159">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="1b98b-159">for full trust for the immediate caller.</span></span> <span data-ttu-id="1b98b-160">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="1b98b-160">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="1b98b-161">确定管道方向的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-161">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="1b98b-162">匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-162">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="1b98b-163">确定基础句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-163">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="1b98b-164">必须设置为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-164">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1b98b-165">缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="1b98b-165">The size of the buffer.</span></span> <span data-ttu-id="1b98b-166">此值必须大于等于 0。</span><span class="sxs-lookup"><span data-stu-id="1b98b-166">This value must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="1b98b-167">使用指定的管道方向、继承模式和缓冲区大小初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1b98b-167">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-168">不支持 <xref:System.IO.Pipes.PipeDirection.InOut> <xref:System.IO.Pipes.PipeDirection> 值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="1b98b-168">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="1b98b-169">此构造函数将创建一个不带管道安全的 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b98b-169">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object without pipe security.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b98b-170">未将 <paramref name="inheritability" /> 设为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-170"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
<span data-ttu-id="1b98b-171">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1b98b-171">-or-</span></span> 
 <span data-ttu-id="1b98b-172"><paramref name="bufferSize" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="1b98b-172"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b98b-173">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-173"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1b98b-174">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="1b98b-174">for full trust for the immediate caller.</span></span> <span data-ttu-id="1b98b-175">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="1b98b-175">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int * System.IO.Pipes.PipeSecurity -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize, pipeSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" Index="1" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="2" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" Index="3" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="1b98b-176">确定管道方向的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-176">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="1b98b-177">匿名管道只能是单向的，因此，<paramref name="direction" /> 不能设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-177">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="1b98b-178">确定基础句柄能否由子进程继承的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="1b98b-178">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1b98b-179">缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="1b98b-179">The size of the buffer.</span></span> <span data-ttu-id="1b98b-180">此值必须大于等于 0。</span><span class="sxs-lookup"><span data-stu-id="1b98b-180">This value must be greater than or equal to 0.</span></span></param>
        <param name="pipeSecurity"><span data-ttu-id="1b98b-181">一个对象，确定管道的访问控制和审核安全性。</span><span class="sxs-lookup"><span data-stu-id="1b98b-181">An object that determines the access control and audit security for the pipe.</span></span></param>
        <summary><span data-ttu-id="1b98b-182">使用指定的管道方向、继承模式、缓冲区大小和管道安全性初始化 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1b98b-182">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-183">不支持 <xref:System.IO.Pipes.PipeDirection.InOut> <xref:System.IO.Pipes.PipeDirection> 值，因为匿名管道定义为单向。</span><span class="sxs-lookup"><span data-stu-id="1b98b-183">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b98b-184">未将 <paramref name="inheritability" /> 设为 <see cref="F:System.IO.HandleInheritability.None" /> 或 <see cref="F:System.IO.HandleInheritability.Inheritable" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-184"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
<span data-ttu-id="1b98b-185">- 或 -</span><span class="sxs-lookup"><span data-stu-id="1b98b-185">-or-</span></span> 
 <span data-ttu-id="1b98b-186"><paramref name="bufferSize" /> 小于 0。</span><span class="sxs-lookup"><span data-stu-id="1b98b-186"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b98b-187">将 <paramref name="direction" /> 设置为 <see cref="F:System.IO.Pipes.PipeDirection.InOut" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-187"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="1b98b-188">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="1b98b-188">for full trust for the immediate caller.</span></span> <span data-ttu-id="1b98b-189">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="1b98b-189">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClientSafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientSafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ ClientSafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSafePipeHandle : Microsoft.Win32.SafeHandles.SafePipeHandle" Usage="System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b98b-190">获取 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的安全句柄，当前该对象连接到 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b98b-190">Gets the safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></summary>
        <value><span data-ttu-id="1b98b-191"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄，当前该对象连接到 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b98b-191">A handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-192">将客户端句柄传递到客户端进程后，应调用 <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b98b-192">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="1b98b-193">如果未调用此方法，则当客户端释放其 <xref:System.IO.Pipes.PipeStream> 对象时，<xref:System.IO.Pipes.AnonymousPipeServerStream> 对象将不会收到通知。</span><span class="sxs-lookup"><span data-stu-id="1b98b-193">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="anonymousPipeServerStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeLocalCopyOfClientHandle">
      <MemberSignature Language="C#" Value="public void DisposeLocalCopyOfClientHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisposeLocalCopyOfClientHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisposeLocalCopyOfClientHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisposeLocalCopyOfClientHandle();" />
      <MemberSignature Language="F#" Value="member this.DisposeLocalCopyOfClientHandle : unit -&gt; unit" Usage="anonymousPipeServerStream.DisposeLocalCopyOfClientHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b98b-194">关闭 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象句柄的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b98b-194">Closes the local copy of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-195">在客户端句柄被传递到客户端之后，应调用 <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b98b-195">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after the client handle has been passed to the client.</span></span> <span data-ttu-id="1b98b-196">如果未调用此方法，则当客户端释放其 <xref:System.IO.Pipes.PipeStream> 对象时，<xref:System.IO.Pipes.AnonymousPipeServerStream> 对象将不会收到通知。</span><span class="sxs-lookup"><span data-stu-id="1b98b-196">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b98b-197">下面的示例演示如何使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="1b98b-197">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="1b98b-198">在此示例中，将在具有 <xref:System.IO.Pipes.PipeDirection> 值 <xref:System.IO.Pipes.PipeDirection.Out>的父进程中创建一个 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b98b-198">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeServerStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="anonymousPipeServerStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b98b-199">在通过垃圾回收将 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 实例回收之前，释放非托管资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="1b98b-199">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientHandleAsString">
      <MemberSignature Language="C#" Value="public string GetClientHandleAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetClientHandleAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientHandleAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClientHandleAsString();" />
      <MemberSignature Language="F#" Value="member this.GetClientHandleAsString : unit -&gt; string" Usage="anonymousPipeServerStream.GetClientHandleAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b98b-200">以字符串形式获取已连接的 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄。</span><span class="sxs-lookup"><span data-stu-id="1b98b-200">Gets the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle as a string.</span></span></summary>
        <returns><span data-ttu-id="1b98b-201">一个表示已连接的 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> 对象的句柄的字符串。</span><span class="sxs-lookup"><span data-stu-id="1b98b-201">A string that represents the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b98b-202">将客户端句柄传递到客户端进程后，应调用 <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b98b-202">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="1b98b-203">如果未调用此方法，则当客户端释放其 <xref:System.IO.Pipes.PipeStream> 对象时，<xref:System.IO.Pipes.AnonymousPipeServerStream> 对象将不会收到通知。</span><span class="sxs-lookup"><span data-stu-id="1b98b-203">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1b98b-204">下面的示例演示如何使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="1b98b-204">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="1b98b-205">在此示例中，将在具有 <xref:System.IO.Pipes.PipeDirection> 值 <xref:System.IO.Pipes.PipeDirection.Out>的父进程中创建一个 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b98b-205">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b98b-206">设置 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象的读取模式。</span><span class="sxs-lookup"><span data-stu-id="1b98b-206">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span> <span data-ttu-id="1b98b-207">对于匿名管道，传输模式必须为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-207">For anonymous pipes, transmission mode must be <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span></span></summary>
        <value><span data-ttu-id="1b98b-208"><see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> 对象的读取模式。</span><span class="sxs-lookup"><span data-stu-id="1b98b-208">The reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="1b98b-209">匿名管道不支持 <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 读取模式。</span><span class="sxs-lookup"><span data-stu-id="1b98b-209">Anonymous pipes do not support the <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span> <span data-ttu-id="1b98b-210">由于此属性的默认值为 <xref:System.IO.Pipes.PipeTransmissionMode.Byte?displayProperty=nameWithType>，因此永远不需要在代码中设置此属性。</span><span class="sxs-lookup"><span data-stu-id="1b98b-210">Because the default value of this property is <xref:System.IO.Pipes.PipeTransmissionMode.Byte?displayProperty=nameWithType>, there is never a reason to set this property in your code.</span></span>    

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b98b-211">传输模式无效。</span><span class="sxs-lookup"><span data-stu-id="1b98b-211">The transmission mode is not valid.</span></span> <span data-ttu-id="1b98b-212">对于匿名管道，只支持 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /></span><span class="sxs-lookup"><span data-stu-id="1b98b-212">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="1b98b-213">该属性设置为 <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />，对于匿名管道不支持此设置。</span><span class="sxs-lookup"><span data-stu-id="1b98b-213">The property is set to <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, which is not supported for anonymous pipes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1b98b-214">连接断开或出现其他 I/O 错误。</span><span class="sxs-lookup"><span data-stu-id="1b98b-214">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b98b-215">管道已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b98b-215">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b98b-216">获取当前管道支持的管道传输模式。</span><span class="sxs-lookup"><span data-stu-id="1b98b-216">Gets the pipe transmission mode that is supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="1b98b-217">当前管道支持的 <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</span><span class="sxs-lookup"><span data-stu-id="1b98b-217">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> that is supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="1b98b-218">匿名管道不支持 <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> 读取模式。</span><span class="sxs-lookup"><span data-stu-id="1b98b-218">Anonymous pipes do not support the <xref:System.IO.Pipes.PipeTransmissionMode.Message?displayProperty=nameWithType> read mode.</span></span>  
  
## Examples  
 <span data-ttu-id="1b98b-219">下面的示例演示如何使用匿名管道将字符串从父进程发送到子进程。</span><span class="sxs-lookup"><span data-stu-id="1b98b-219">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="1b98b-220">在此示例中，将在父进程中创建一个 <xref:System.IO.Pipes.AnonymousPipeServerStream> 对象，并将 <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> 属性显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="1b98b-220">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> property is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
