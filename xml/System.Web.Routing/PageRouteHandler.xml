<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc1600c52106e4ff3332e8565675b71d9f40959c" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77102931" /></Metadata><TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f9b2b-101">提供用于定义如何将 URL 映射到物理文件的属性和方法。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-101">Provides properties and methods for defining how a URL maps to a physical file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="f9b2b-102">将 <xref:System.Web.Routing.PageRouteHandler> 的实例传递到 <xref:System.Web.Routing.Route> 构造函数，以便映射物理文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-102">You pass an instance of <xref:System.Web.Routing.PageRouteHandler> to the <xref:System.Web.Routing.Route> constructor in order to map a URL of a physical file.</span></span> <span data-ttu-id="f9b2b-103"><xref:System.Web.Routing.PageRouteHandler> 对象指定物理文件的虚拟路径，并确定是否检查物理 URL 的授权规则。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-103">The <xref:System.Web.Routing.PageRouteHandler> object specifies the virtual path of the physical file and determines whether authorization rules for the physical URL is checked.</span></span>

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-104">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-104">ASP.NET Routing</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-105">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-105">How to: Define Routes for Web Forms Applications</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-106">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-106">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f9b2b-107">初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-107">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-108">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-108">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-109">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-109">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-110">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-110">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="f9b2b-111">此 <see cref="P:System.Web.Routing.RouteData.Route" /> 对象的物理文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-111">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span></span> <span data-ttu-id="f9b2b-112">文件必须位于当前应用程序中。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-112">The file must be located in the current application.</span></span> <span data-ttu-id="f9b2b-113">因此，路径必须以波形符 (~) 开头。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-113">Therefore, the path must begin with a tilde (~).</span></span></param>
        <summary><span data-ttu-id="f9b2b-114">初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-114">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="f9b2b-115">使用此构造函数时，<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-115">When you use this constructor, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true`.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9b2b-116"><paramref name="virtualPath" /> 参数为 <see langword="null" /> 或为空字符串或不以“~/”开头。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-116">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-117">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-117">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-118">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-118">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-119">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-119">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="f9b2b-120">此 <see cref="P:System.Web.Routing.RouteData.Route" /> 对象的物理文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-120">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span></span> <span data-ttu-id="f9b2b-121">文件必须位于当前应用程序中。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-121">The file must be located in the current application.</span></span> <span data-ttu-id="f9b2b-122">因此，路径必须以波形符 (~) 开头。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-122">Therefore, the path must begin with a tilde (~).</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="f9b2b-123">如果此属性设置为 <see langword="false" />，则授权规则将应用于请求 URL，而非物理页的 URL。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-123">If this property is set to <see langword="false" />, authorization rules will be applied to the request URL and not to the URL of the physical page.</span></span> <span data-ttu-id="f9b2b-124">如果此属性设置为 <see langword="true" />，则授权规则将同时应用于请求 URL 和物理页的 URL。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-124">If this property is set to <see langword="true" />, authorization rules will be applied to both the request URL and to the URL of the physical page.</span></span></param>
        <summary><span data-ttu-id="f9b2b-125">初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-125">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="f9b2b-126">默认情况下，<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性为 `true`。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-126">By default, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`.</span></span> <span data-ttu-id="f9b2b-127">因此，如果您希望将授权规则应用于物理页的 URL 和路由 URL，则可以使用 <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> 构造函数而不是此构造函数。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-127">Therefore, if you want authorization rules to be applied to both the URL of the physical page and to the route URL, you can use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructor instead of this constructor.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f9b2b-128"><paramref name="virtualPath" /> 参数为 <see langword="null" /> 或为空字符串或不以“~/”开头。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-128">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span></span></exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-129">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-129">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-130">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-130">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-131">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-131">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9b2b-132">获取一个值，该值确定授权规则是否应用于物理文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-132">Gets a value that determines whether authorization rules are applied to the physical file's URL.</span></span></summary>
        <value><span data-ttu-id="f9b2b-133">如果检查授权中是否有与路由关联的物理文件的 URL，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-133"><see langword="true" /> if authorization is checked for the URL of the physical file that is associated with the route; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f9b2b-134">默认为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-134">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="f9b2b-135">使用 <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> 构造函数时，可以设置 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-135">You can set the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property when you use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructor.</span></span>

 <span data-ttu-id="f9b2b-136"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性的值确定 <xref:System.Web.Routing.PageRouteHandler> 对象是否仅检查路由 URL 或物理页面和路由 URL 的安全权限。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-136">The value of the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property determines whether the <xref:System.Web.Routing.PageRouteHandler> object will check security permissions only for the route URL or for both the physical page and the route URL.</span></span>

 <span data-ttu-id="f9b2b-137"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性设置为 `true` （其默认值）时，用户必须具有访问路由 URL 和物理 URL 的权限。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-137">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true` (which is its default value), a user must have permission to access both the route URL and the physical URL.</span></span> <span data-ttu-id="f9b2b-138">当 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性设置为 `false`时，用户只需要访问路由 URL 的权限，而不检查物理 URL 的权限。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-138">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `false`, a user requires only permission to access the route URL, and permissions for the physical URL are not checked.</span></span>

 <span data-ttu-id="f9b2b-139">权限是在 web.config 文件中定义的，如以下示例中所示：</span><span class="sxs-lookup"><span data-stu-id="f9b2b-139">Permissions are defined in the Web.config file, as shown in the following example:</span></span>

```
<configuration>
  <location path="categoriespage.aspx">
    <system.web>
      <authorization>
        <allow roles="admin"/>
        <deny users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="category">
    <system.web>
      <authorization>
        <allow users="*"/>
      </authorization>
    </system.web>
  </location>
</configuration>
```

 <span data-ttu-id="f9b2b-140">对于包含域名后 `Category/food/show` 的请求 URL，如果路由 URL 模式为 `Category/{action}/{categoryName}` 并且物理页为 Categoriespage，则 [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 应用在上一个示例中定义的权限，如下所示：</span><span class="sxs-lookup"><span data-stu-id="f9b2b-140">For a request URL that contains `Category/food/show` after the domain name, if the route URL pattern is `Category/{action}/{categoryName}` and the physical page is Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applies the permissions defined in the previous example in one of the following ways:</span></span>

-   <span data-ttu-id="f9b2b-141">如果 `false`<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性，则会向所有用户授予访问权限，因为所有用户都被授予访问以 `category`开头的 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-141">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `false`, all users are granted access, because all users are granted access to the URL pattern that starts with `category`.</span></span>

-   <span data-ttu-id="f9b2b-142">如果 `true`<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> 属性，则仅授予 `admin` 用户访问权限。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-142">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`, only `admin` users are granted access.</span></span> <span data-ttu-id="f9b2b-143">所有用户都有权访问以 `category`开头的 URL 模式，但只有 `admin` 用户有权访问物理页面 Categoriespage。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-143">All users have access to the URL pattern that begins with `category`, but only `admin` users have access to the physical page Categoriespage.aspx.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-144">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-144">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-145">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-145">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-146">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-146">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="f9b2b-147">一个对象，用于封装有关请求的信息。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-147">An object that encapsulates information about the request.</span></span></param>
        <summary><span data-ttu-id="f9b2b-148">返回用于处理请求的对象。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-148">Returns the object that processes the request.</span></span></summary>
        <returns><span data-ttu-id="f9b2b-149">用于处理请求的对象。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-149">The object that processes the request.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9b2b-150"><paramref name="requestContext" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-150">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-151">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-151">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-152">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-152">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-153">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-153">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="f9b2b-154">一个对象，用于封装有关请求的信息。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-154">An object that encapsulates information about the request.</span></span></param>
        <summary><span data-ttu-id="f9b2b-155">在替换操作应用于任何替换参数后返回路由的物理文件的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-155">Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</span></span></summary>
        <returns><span data-ttu-id="f9b2b-156">基于路由生成的物理文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-156">The URL of the physical file that was generated from a route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="f9b2b-157">如果 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 值不包含任何替换参数，则 <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> 方法返回与 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 属性相同的值。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-157">If the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> value does not contain any replacement parameters, the <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> method returns the same value as the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9b2b-158"><paramref name="requestContext" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-158">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-159">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-159">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-160">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-160">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-161">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-161">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9b2b-162">获取与此路由关联的网页的虚拟路径。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-162">Gets the virtual path of the Web page that is associated with this route.</span></span></summary>
        <value><span data-ttu-id="f9b2b-163">对任何替换参数应用替换操作前网页的 URL。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-163">The URL of the Web page, before substitutions have been applied for any replacement parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="f9b2b-164">在 <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> 构造函数或 <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> 构造函数中设置 <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="f9b2b-164">You set the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor or in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="f9b2b-165">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-165">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="f9b2b-166">如何：为 Web 窗体应用程序定义路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-166">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)"><span data-ttu-id="f9b2b-167">演练：在 Web 窗体应用程序中使用 ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="f9b2b-167">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
