<Type Name="CompilerInfo" FullName="System.CodeDom.Compiler.CompilerInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="754792052438df5039382ebbbdb0d2c354239f9c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82318240" /></Metadata><TypeSignature Language="C#" Value="public sealed class CompilerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompilerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.CompilerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompilerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompilerInfo sealed" />
  <TypeSignature Language="F#" Value="type CompilerInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b91a3-101">表示语言提供程序的配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-101">Represents the configuration settings of a language provider.</span></span> <span data-ttu-id="b91a3-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="b91a3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-103">使用 <xref:System.CodeDom.Compiler.CompilerInfo> 类来确定计算机上是否配置了 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现，或检查特定语言提供程序的配置和编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-103">Use the <xref:System.CodeDom.Compiler.CompilerInfo> class to determine whether a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation is configured on the computer, or to examine the configuration and compiler settings for a specific language provider.</span></span>  
  
 <span data-ttu-id="b91a3-104">计算机配置文件中的[&lt;system.object&gt; 元素](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)包含语言提供程序和编译器配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-104">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings.</span></span> <span data-ttu-id="b91a3-105">每个已配置的语言提供程序都有相应的编译器配置元素。</span><span class="sxs-lookup"><span data-stu-id="b91a3-105">Each configured language provider has a corresponding compiler configuration element.</span></span> <span data-ttu-id="b91a3-106">每个元素定义 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现类型、支持的语言名称、支持的文件扩展名和编译器参数。</span><span class="sxs-lookup"><span data-stu-id="b91a3-106">Each element defines the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation type, supported language names, supported file name extensions, and compiler parameters.</span></span>  
  
 <span data-ttu-id="b91a3-107">.NET Framework 在计算机配置文件中定义初始编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-107">The .NET Framework defines the initial compiler settings in the machine configuration file.</span></span> <span data-ttu-id="b91a3-108">开发人员和编译器供应商可以添加新 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现的配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-108">Developers and compiler vendors can add configuration settings for a new <xref:System.CodeDom.Compiler.CodeDomProvider> implementation.</span></span>  
  
 <span data-ttu-id="b91a3-109"><xref:System.CodeDom.Compiler.CompilerInfo> 类提供对计算机配置文件中这些设置的只读访问。</span><span class="sxs-lookup"><span data-stu-id="b91a3-109">The <xref:System.CodeDom.Compiler.CompilerInfo> class provides read-only access to these settings in the machine configuration file.</span></span> <span data-ttu-id="b91a3-110">使用 <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>、<xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>和 <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 成员检查语言提供程序的相应配置特性。</span><span class="sxs-lookup"><span data-stu-id="b91a3-110">Use the <xref:System.CodeDom.Compiler.CompilerInfo.GetLanguages%2A>, <xref:System.CodeDom.Compiler.CompilerInfo.GetExtensions%2A>, and <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> members to examine the corresponding configuration attributes for a language provider.</span></span> <span data-ttu-id="b91a3-111">使用 <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> 方法可获取语言提供程序的编译器选项和警告等级特性值。</span><span class="sxs-lookup"><span data-stu-id="b91a3-111">Use the <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> method to obtain the compiler options and warning level attribute values for a language provider.</span></span>  
  
 <span data-ttu-id="b91a3-112">有关配置文件中的语言提供程序设置的更多详细信息，请参阅[编译器和语言提供程序设置架构](~/docs/framework/configure-apps/file-schema/compiler/index.md)。</span><span class="sxs-lookup"><span data-stu-id="b91a3-112">For more details on language provider settings in the configuration file, see [Compiler and Language Provider Settings Schema](~/docs/framework/configure-apps/file-schema/compiler/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b91a3-113">此类包含类级别的链接要求，该请求应用于所有成员。</span><span class="sxs-lookup"><span data-stu-id="b91a3-113">This class contains a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="b91a3-114">当直接调用方不具有完全信任权限时，将引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="b91a3-114">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission.</span></span> <span data-ttu-id="b91a3-115">有关链接要求的详细信息，请参阅[链接需求](~/docs/framework/misc/link-demands.md)。</span><span class="sxs-lookup"><span data-stu-id="b91a3-115">For details about link demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-116">下面的代码示例显示了语言提供程序的配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-116">The following code example displays language provider configuration settings.</span></span> <span data-ttu-id="b91a3-117">命令行参数用于指定语言、文件扩展名或提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="b91a3-117">Command-line arguments are used to specify a language, file name extension, or provider type.</span></span> <span data-ttu-id="b91a3-118">对于给定的输入，该示例确定了相应的语言提供程序，并显示了配置的语言编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-118">For the given input, the example determines the corresponding language provider and displays the configured language compiler settings.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#1)]
 [!code-csharp[CodeDom_CompilerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#1)]
 [!code-vb[CodeDom_CompilerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
    <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
    <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md"><span data-ttu-id="b91a3-119">编译器和语言提供程序设置架构</span><span class="sxs-lookup"><span data-stu-id="b91a3-119">Compiler and Language Provider Settings Schema</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CodeDomProviderType">
      <MemberSignature Language="C#" Value="public Type CodeDomProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CodeDomProviderType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeDomProviderType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CodeDomProviderType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProviderType : Type" Usage="System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b91a3-120">获取已配置的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 实现的类型。</span><span class="sxs-lookup"><span data-stu-id="b91a3-120">Gets the type of the configured <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> implementation.</span></span></summary>
        <value><span data-ttu-id="b91a3-121">一个只读 <see cref="T:System.Type" /> 实例，它表示已配置的语言提供程序类型。</span><span class="sxs-lookup"><span data-stu-id="b91a3-121">A read-only <see cref="T:System.Type" /> instance that represents the configured language provider type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-122">计算机配置文件包含计算机上每个 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现的完全限定的类型名称。</span><span class="sxs-lookup"><span data-stu-id="b91a3-122">The machine configuration file contains the fully qualified type name for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="b91a3-123"><xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 属性值是表示已配置的语言提供程序实现的 <xref:System.Type> 实例。</span><span class="sxs-lookup"><span data-stu-id="b91a3-123">The <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> property value is a <xref:System.Type> instance that represents a configured language provider implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-124">下面的代码示例确定输入语言在计算机上是否具有配置的 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-124">The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="b91a3-125">如果为指定的语言配置了提供程序，该示例将显示语言提供程序的配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-125">If there is a provider configured for the specified language, the example displays the language provider configuration settings.</span></span> <span data-ttu-id="b91a3-126">此代码示例是为 <xref:System.CodeDom.Compiler.CompilerInfo> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b91a3-126">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationException"><span data-ttu-id="b91a3-127">此计算机上没有配置语言提供程序。</span><span class="sxs-lookup"><span data-stu-id="b91a3-127">The language provider is not configured on this computer.</span></span></exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="b91a3-128">不能定位类型，因为它是 <see langword="null" /> 或空字符串。</span><span class="sxs-lookup"><span data-stu-id="b91a3-128">Cannot locate the type because it is a <see langword="null" /> or empty string.</span></span>  
  
<span data-ttu-id="b91a3-129">- 或 -</span><span class="sxs-lookup"><span data-stu-id="b91a3-129">-or-</span></span> 
<span data-ttu-id="b91a3-130">不能定位类型，因为不能在配置文件中找到 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="b91a3-130">Cannot locate the type because the name for the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> cannot be found in the configuration file.</span></span></exception>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
    <Member MemberName="CreateDefaultCompilerParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CompilerParameters CreateDefaultCompilerParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDefaultCompilerParameters () As CompilerParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CompilerParameters ^ CreateDefaultCompilerParameters();" />
      <MemberSignature Language="F#" Value="member this.CreateDefaultCompilerParameters : unit -&gt; System.CodeDom.Compiler.CompilerParameters" Usage="compilerInfo.CreateDefaultCompilerParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CompilerParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b91a3-131">获取语言提供程序实现的配置的编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-131">Gets the configured compiler settings for the language provider implementation.</span></span></summary>
        <returns><span data-ttu-id="b91a3-132">一个只读 <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> 实例，它包含为语言提供程序配置的编译器选项和设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-132">A read-only <see cref="T:System.CodeDom.Compiler.CompilerParameters" /> instance that contains the compiler options and settings configured for the language provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-133">使用 <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> 方法检查由 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> 和 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> 方法返回的 <xref:System.CodeDom.Compiler.CompilerInfo> 实例的编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-133">Use the <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> method to examine the compiler settings of the <xref:System.CodeDom.Compiler.CompilerInfo> instances returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> and <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="b91a3-134">计算机配置文件中的[&lt;system.object&gt; 元素](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)包含计算机上每个 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现的语言提供程序和编译器配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-134">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="b91a3-135">每个语言提供程序配置元素都可以包含可选 `compilerOptions` 和 `warningLevel` 属性。</span><span class="sxs-lookup"><span data-stu-id="b91a3-135">Each language provider configuration element can contain optional `compilerOptions` and `warningLevel` attributes.</span></span> <span data-ttu-id="b91a3-136">这些属性定义 <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> 的默认值和 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> 的属性。</span><span class="sxs-lookup"><span data-stu-id="b91a3-136">These attributes define the default values for the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> and <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="b91a3-137">如果语言提供程序配置元素未定义 `compilerOptions` 属性，则 <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> 属性值为空字符串（""）。</span><span class="sxs-lookup"><span data-stu-id="b91a3-137">If the language provider configuration element does not define the `compilerOptions` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A?displayProperty=nameWithType> property value is an empty string ("").</span></span> <span data-ttu-id="b91a3-138">如果语言提供程序配置元素未定义 `warningLevel` 特性，则 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> 属性值为-1。</span><span class="sxs-lookup"><span data-stu-id="b91a3-138">If the language provider configuration element does not define the `warningLevel` attribute, the <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A?displayProperty=nameWithType> property value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-139">下面的代码示例确定输入语言在计算机上是否具有配置的 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-139">The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="b91a3-140">如果为指定的语言配置了提供程序，该示例将显示语言提供程序的配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-140">If there is a provider configured for the specified language, the example displays the language provider configuration settings.</span></span> <span data-ttu-id="b91a3-141">此代码示例是为 <xref:System.CodeDom.Compiler.CompilerInfo> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b91a3-141">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md"><span data-ttu-id="b91a3-142">编译器和语言提供程序设置架构</span><span class="sxs-lookup"><span data-stu-id="b91a3-142">Compiler and Language Provider Settings Schema</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProvider">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b91a3-143">返回当前语言提供程序设置的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b91a3-143">Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider () As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider();" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : unit -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b91a3-144">返回当前语言提供程序设置的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b91a3-144">Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings.</span></span></summary>
        <returns><span data-ttu-id="b91a3-145">与语言提供程序配置关联的 CodeDOM 提供程序。</span><span class="sxs-lookup"><span data-stu-id="b91a3-145">A CodeDOM provider associated with the language provider configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-146"><xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> 方法返回当前语言提供程序设置的 <xref:System.CodeDom.Compiler.CodeDomProvider> 实例。</span><span class="sxs-lookup"><span data-stu-id="b91a3-146">The <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for the current language provider settings.</span></span>  
  
 <span data-ttu-id="b91a3-147">使用 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> 方法可获取 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> 或 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> 方法返回的 <xref:System.CodeDom.Compiler.CompilerInfo> 实例的 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-147">Use the <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> method to get a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a <xref:System.CodeDom.Compiler.CompilerInfo> instance returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> or <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-148">下面的代码示例枚举计算机上的语言提供程序，并显示每个语言提供程序的配置和编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-148">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="b91a3-149">此代码示例是为 <xref:System.CodeDom.Compiler.CompilerInfo> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b91a3-149">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md"><span data-ttu-id="b91a3-150">编译器和语言提供程序设置架构</span><span class="sxs-lookup"><span data-stu-id="b91a3-150">Compiler and Language Provider Settings Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CreateProvider (System.Collections.Generic.IDictionary&lt;string,string&gt; providerOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.Compiler.CodeDomProvider CreateProvider(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; providerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.CreateProvider(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProvider (providerOptions As IDictionary(Of String, String)) As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::Compiler::CodeDomProvider ^ CreateProvider(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ providerOptions);" />
      <MemberSignature Language="F#" Value="member this.CreateProvider : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.CodeDom.Compiler.CodeDomProvider" Usage="compilerInfo.CreateProvider providerOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerOptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="providerOptions"><span data-ttu-id="b91a3-151">来自配置文件的提供程序选项的集合。</span><span class="sxs-lookup"><span data-stu-id="b91a3-151">A collection of provider options from the configuration file.</span></span></param>
        <summary><span data-ttu-id="b91a3-152">返回当前语言提供程序设置和指定选项的 <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="b91a3-152">Returns a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance for the current language provider settings and specified options.</span></span></summary>
        <returns><span data-ttu-id="b91a3-153">与语言提供程序配置和指定选项关联的 CodeDOM 提供程序。</span><span class="sxs-lookup"><span data-stu-id="b91a3-153">A CodeDOM provider associated with the language provider configuration and specified options.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-154"><xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 方法返回当前语言提供程序设置和指定提供程序选项的 <xref:System.CodeDom.Compiler.CodeDomProvider> 实例。</span><span class="sxs-lookup"><span data-stu-id="b91a3-154">The <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method returns a <xref:System.CodeDom.Compiler.CodeDomProvider> instance for the current language provider settings and the specified provider options.</span></span> <span data-ttu-id="b91a3-155">有关支持的提供程序选项的信息，请参阅特定的 CodeDOM 提供程序文档。</span><span class="sxs-lookup"><span data-stu-id="b91a3-155">For information about supported provider options, see the specific CodeDOM provider documentation.</span></span>  
  
 <span data-ttu-id="b91a3-156">使用 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> 方法可获取 <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> 或 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> 方法返回的 <xref:System.CodeDom.Compiler.CompilerInfo> 实例的 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-156">Use the <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%28System.Collections.Generic.IDictionary%7BSystem.String%2CSystem.String%7D%29> method to get a <xref:System.CodeDom.Compiler.CodeDomProvider> implementation for a <xref:System.CodeDom.Compiler.CompilerInfo> instance returned by the <xref:System.CodeDom.Compiler.CodeDomProvider.GetAllCompilerInfo%2A?displayProperty=nameWithType> or <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b91a3-157"><paramref name="providerOptions" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b91a3-157"><paramref name="providerOptions" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b91a3-158">提供程序不支持选项。</span><span class="sxs-lookup"><span data-stu-id="b91a3-158">The provider does not support options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compilerInfo.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="b91a3-159">将与当前 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="b91a3-159">The object to compare with the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" />.</span></span></param>
        <summary><span data-ttu-id="b91a3-160">确定指定的对象是否表示与当前 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 相同的语言提供程序和编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-160">Determines whether the specified object represents the same language provider and compiler settings as the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" />.</span></span></summary>
        <returns><span data-ttu-id="b91a3-161">如果 <paramref name="o" /> 为 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 对象并且它的值与此实例相同，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b91a3-161"><see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> object and its value is the same as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-162">此方法将重写 <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="b91a3-162">This method overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b91a3-163">如果以下属性的值相等，则将两个实例视为相等：</span><span class="sxs-lookup"><span data-stu-id="b91a3-163">The two instances are considered equal if the values of the following properties are equal:</span></span>  
  
-   <span data-ttu-id="b91a3-164"><xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b91a3-164">The <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> property.</span></span>  
  
-   <span data-ttu-id="b91a3-165"><xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> 方法返回的 <xref:System.CodeDom.Compiler.CompilerParameters> 实例的 <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>、<xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>和 <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="b91a3-165">The <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>, <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>, and <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> properties of the <xref:System.CodeDom.Compiler.CompilerParameters> instance returned by the <xref:System.CodeDom.Compiler.CompilerInfo.CreateDefaultCompilerParameters%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CompilerParameters" />
      </Docs>
    </Member>
    <Member MemberName="GetExtensions">
      <MemberSignature Language="C#" Value="public string[] GetExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetExtensions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExtensions () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetExtensions();" />
      <MemberSignature Language="F#" Value="member this.GetExtensions : unit -&gt; string[]" Usage="compilerInfo.GetExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b91a3-166">返回受语言提供程序支持的文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="b91a3-166">Returns the file name extensions supported by the language provider.</span></span></summary>
        <returns><span data-ttu-id="b91a3-167">受语言提供程序支持的文件扩展名数组。</span><span class="sxs-lookup"><span data-stu-id="b91a3-167">An array of file name extensions supported by the language provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-168">计算机配置文件中的[&lt;system.object&gt; 元素](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)包含计算机上每个 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现的语言提供程序和编译器配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-168">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="b91a3-169">每个已配置的语言提供程序支持一个或多个文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="b91a3-169">Each configured language provider supports one or more file name extensions.</span></span> <span data-ttu-id="b91a3-170">例如，<xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> 可能支持文件扩展名 ".cs" 和 "c #"。</span><span class="sxs-lookup"><span data-stu-id="b91a3-170">For example, a <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> might support the file name extensions ".cs" and ".c#".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-171">下面的代码示例枚举计算机上的语言提供程序，并显示每个语言提供程序的配置和编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-171">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="b91a3-172">此代码示例是为 <xref:System.CodeDom.Compiler.CompilerInfo> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b91a3-172">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedExtension(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md"><span data-ttu-id="b91a3-173">编译器和语言提供程序设置架构</span><span class="sxs-lookup"><span data-stu-id="b91a3-173">Compiler and Language Provider Settings Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compilerInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b91a3-174">返回当前实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="b91a3-174">Returns the hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="b91a3-175">当前 <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> 实例的 32 位带符号整数哈希代码，适合在哈希算法和数据结构（如哈希表）中使用。</span><span class="sxs-lookup"><span data-stu-id="b91a3-175">A 32-bit signed integer hash code for the current <see cref="T:System.CodeDom.Compiler.CompilerInfo" /> instance, suitable for use in hashing algorithms and data structures such as a hash table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-176">此方法将重写 <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="b91a3-176">This method overrides the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="b91a3-177">此方法为根据 <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A> 方法视为相等的两个对象生成相同的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="b91a3-177">This method generates the same hash code for two objects that are equal according to the <xref:System.CodeDom.Compiler.CompilerInfo.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-178">下面的代码示例创建 <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="b91a3-178">The following code example creates an instance of the <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="b91a3-179">该示例显示了新提供程序实例的提供程序名称、哈希代码和默认文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="b91a3-179">The example displays the provider name, hash code, and default file name extension for the new provider instance.</span></span> <span data-ttu-id="b91a3-180">此代码示例是为 <xref:System.CodeDom.Compiler.CompilerInfo> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b91a3-180">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#3)]
 [!code-csharp[CodeDom_CompilerInfo#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#3)]
 [!code-vb[CodeDom_CompilerInfo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Collections.Hashtable" />
        <altmember cref="M:System.CodeDom.Compiler.CompilerInfo.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetLanguages">
      <MemberSignature Language="C#" Value="public string[] GetLanguages ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetLanguages() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.CompilerInfo.GetLanguages" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguages () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetLanguages();" />
      <MemberSignature Language="F#" Value="member this.GetLanguages : unit -&gt; string[]" Usage="compilerInfo.GetLanguages " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b91a3-181">获取受语言提供程序支持的语言名称。</span><span class="sxs-lookup"><span data-stu-id="b91a3-181">Gets the language names supported by the language provider.</span></span></summary>
        <returns><span data-ttu-id="b91a3-182">受语言提供程序支持的语言名称数组。</span><span class="sxs-lookup"><span data-stu-id="b91a3-182">An array of language names supported by the language provider.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-183">计算机配置文件中的[&lt;system.object&gt; 元素](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md)包含计算机上每个 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现的语言提供程序和编译器配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-183">The [&lt;system.codedom&gt; Element](~/docs/framework/configure-apps/file-schema/compiler/system-codedom-element.md) in the machine configuration file contains the language provider and compiler configuration settings for each <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="b91a3-184">每个已配置的语言提供程序支持一个或多个语言名称。</span><span class="sxs-lookup"><span data-stu-id="b91a3-184">Each configured language provider supports one or more language names.</span></span> <span data-ttu-id="b91a3-185">例如，<xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> 的 <xref:System.CodeDom.Compiler.CompilerInfo> 对象可能返回语言名称为 "c #"、"cs" 和 "csharp" 的数组。</span><span class="sxs-lookup"><span data-stu-id="b91a3-185">For example, the <xref:System.CodeDom.Compiler.CompilerInfo> object for a <xref:Microsoft.CSharp.CSharpCodeProvider?displayProperty=nameWithType> might return an array with the language names "c#", "cs", and "csharp".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-186">下面的代码示例枚举计算机上的语言提供程序，并显示每个语言提供程序的配置和编译器设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-186">The following code example enumerates the language providers on the computer and displays the configuration and compiler settings for each language provider.</span></span> <span data-ttu-id="b91a3-187">此代码示例是为 <xref:System.CodeDom.Compiler.CompilerInfo> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b91a3-187">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#8](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#8)]
 [!code-csharp[CodeDom_CompilerInfo#8](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#8)]
 [!code-vb[CodeDom_CompilerInfo#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.CodeDom.Compiler.CodeDomProvider.IsDefinedLanguage(System.String)" />
        <related type="Article" href="~/docs/framework/configure-apps/file-schema/compiler/index.md"><span data-ttu-id="b91a3-188">编译器和语言提供程序设置架构</span><span class="sxs-lookup"><span data-stu-id="b91a3-188">Compiler and Language Provider Settings Schema</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsCodeDomProviderTypeValid">
      <MemberSignature Language="C#" Value="public bool IsCodeDomProviderTypeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCodeDomProviderTypeValid" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCodeDomProviderTypeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCodeDomProviderTypeValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCodeDomProviderTypeValid : bool" Usage="System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b91a3-189">返回一个值，该值指示是否在计算机上配置了语言提供程序实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-189">Returns a value indicating whether the language provider implementation is configured on the computer.</span></span></summary>
        <value><span data-ttu-id="b91a3-190">如果在计算机上配置了语言提供程序实现类型，则为 <see langword="true" />；否则，为<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b91a3-190"><see langword="true" /> if the language provider implementation type is configured on the computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b91a3-191">在访问提供程序属性或方法之前，请使用 <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> 属性检查 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-191">Use the <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> property to check the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation before accessing the provider properties or methods.</span></span> <span data-ttu-id="b91a3-192">例如，从 <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> 方法获取语言提供程序设置后，请在调用 <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> 方法或使用 <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> 属性之前，使用 <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> 属性验证提供程序类型实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-192">For example, after you get the language provider settings from the <xref:System.CodeDom.Compiler.CodeDomProvider.GetCompilerInfo%2A> method, use the <xref:System.CodeDom.Compiler.CompilerInfo.IsCodeDomProviderTypeValid%2A> property to verify the provider type implementation before calling the <xref:System.CodeDom.Compiler.CompilerInfo.CreateProvider%2A> method or using the <xref:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b91a3-193">下面的代码示例确定输入语言在计算机上是否具有配置的 <xref:System.CodeDom.Compiler.CodeDomProvider> 实现。</span><span class="sxs-lookup"><span data-stu-id="b91a3-193">The following code example determines whether the input language has a configured <xref:System.CodeDom.Compiler.CodeDomProvider> implementation on the computer.</span></span> <span data-ttu-id="b91a3-194">如果为指定的语言配置了提供程序，该示例将显示语言提供程序的配置设置。</span><span class="sxs-lookup"><span data-stu-id="b91a3-194">If there is a provider configured for the specified language, the example displays the language provider configuration settings.</span></span> <span data-ttu-id="b91a3-195">此代码示例是为 <xref:System.CodeDom.Compiler.CompilerInfo> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="b91a3-195">This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerInfo> class.</span></span>  
  
 [!code-cpp[CodeDom_CompilerInfo#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDom_CompilerInfo/CPP/source.cpp#7)]
 [!code-csharp[CodeDom_CompilerInfo#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDom_CompilerInfo/CS/source.cs#7)]
 [!code-vb[CodeDom_CompilerInfo#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDom_CompilerInfo/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.CodeDom.Compiler.CompilerInfo.CodeDomProviderType" />
        <altmember cref="T:System.CodeDom.Compiler.CodeDomProvider" />
      </Docs>
    </Member>
  </Members>
</Type>
