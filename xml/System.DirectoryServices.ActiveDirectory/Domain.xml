<Type Name="Domain" FullName="System.DirectoryServices.ActiveDirectory.Domain">
  <Metadata><Meta Name="ms.openlocfilehash" Value="da985fc73cd1c0a6dda200123b7cb9cf21e25091" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75136854" /></Metadata><TypeSignature Language="C#" Value="public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Domain extends System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.ActiveDirectory.Domain" />
  <TypeSignature Language="VB.NET" Value="Public Class Domain&#xA;Inherits ActiveDirectoryPartition" />
  <TypeSignature Language="C++ CLI" Value="public ref class Domain : System::DirectoryServices::ActiveDirectory::ActiveDirectoryPartition" />
  <TypeSignature Language="F#" Value="type Domain = class&#xA;    inherit ActiveDirectoryPartition" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="28a0f-101"><see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 类表示 Active Directory 域。</span><span class="sxs-lookup"><span data-stu-id="28a0f-101">The <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> class represents an Active Directory domain.</span></span></summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><span data-ttu-id="28a0f-102">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span><span class="sxs-lookup"><span data-stu-id="28a0f-102">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span></span></permission>
    <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-103">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-103">How To: Work with Trusts</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DomainCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainCollection ^ Children { System::DirectoryServices::ActiveDirectory::DomainCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.DirectoryServices.ActiveDirectory.DomainCollection" Usage="System.DirectoryServices.ActiveDirectory.Domain.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-104">获取此域的子域。</span><span class="sxs-lookup"><span data-stu-id="28a0f-104">Gets the domains that are children of this domain.</span></span></summary>
        <value><span data-ttu-id="28a0f-105">包含子域的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-105">An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" /> object that contains the child domains.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-106">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-106">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateLocalSideOfTrustRelationship(string targetDomainName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateLocalSideOfTrustRelationship (targetDomainName As String, direction As TrustDirection, trustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateLocalSideOfTrustRelationship(System::String ^ targetDomainName, System::DirectoryServices::ActiveDirectory::TrustDirection direction, System::String ^ trustPassword);" />
      <MemberSignature Language="F#" Value="member this.CreateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="domain.CreateLocalSideOfTrustRelationship (targetDomainName, direction, trustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="trustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-107">与其创建信任关系的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-107">The DNS name of the domain that the trust is created with.</span></span></param>
        <param name="direction"><span data-ttu-id="28a0f-108">确定相对于此域的信任方向的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 成员之一。</span><span class="sxs-lookup"><span data-stu-id="28a0f-108">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> members that determines the direction of the trust, relative to this domain.</span></span></param>
        <param name="trustPassword"><span data-ttu-id="28a0f-109">信任的密码。</span><span class="sxs-lookup"><span data-stu-id="28a0f-109">The password for the trust.</span></span></param>
        <summary><span data-ttu-id="28a0f-110">创建与指定域存在信任关系的本地方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-110">Creates the local side of a trust relationship with the specified domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-111">此方法创建信任关系的一方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-111">This method creates one side of a trust relationship.</span></span> <span data-ttu-id="28a0f-112">只有在创建信任的双方后，才会建立信任。</span><span class="sxs-lookup"><span data-stu-id="28a0f-112">The trust is not established until both sides of the trust have been created.</span></span>  
  
 <span data-ttu-id="28a0f-113">`trustPassword` 参数将密码与创建的信任相关联。</span><span class="sxs-lookup"><span data-stu-id="28a0f-113">The `trustPassword` parameter associates a password with the created trust.</span></span> <span data-ttu-id="28a0f-114">当创建信任的另一方时，将提供相同的密码，然后将两个本地信任相互绑定。</span><span class="sxs-lookup"><span data-stu-id="28a0f-114">When the other side of the trust is created, the same password is provided and the two local trusts are then bound to each other.</span></span>  
  
 <span data-ttu-id="28a0f-115">若要以编程方式在单个方法调用中创建信任关系的双方，请使用 <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="28a0f-115">To programmatically create both sides of a trust relationship in a single method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException"><span data-ttu-id="28a0f-116">信任关系已存在。</span><span class="sxs-lookup"><span data-stu-id="28a0f-116">The trust relationship already exists.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-117">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-117">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-118">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-118">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-119"><paramref name="targetDomainName" /> 或 <paramref name="trustPassword" /> 为空。</span><span class="sxs-lookup"><span data-stu-id="28a0f-119"><paramref name="targetDomainName" /> or <paramref name="trustPassword" /> is empty.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-120"><paramref name="targetDomainName" /> 或 <paramref name="trustPassword" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-120"><paramref name="targetDomainName" /> or <paramref name="trustPassword" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="28a0f-121"><paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-121"><paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-122">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-122">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-123">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-123">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-124">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-124">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateTrustRelationship">
      <MemberSignature Language="C#" Value="public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateTrustRelationship (targetDomain As Domain, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.CreateTrustRelationship : System.DirectoryServices.ActiveDirectory.Domain * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="domain.CreateTrustRelationship (targetDomain, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain"><span data-ttu-id="28a0f-125">表示正在用于创建信任的域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-125">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain that the trust is being created with.</span></span></param>
        <param name="direction"><span data-ttu-id="28a0f-126">确定相对于此域的信任方向的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 成员之一。</span><span class="sxs-lookup"><span data-stu-id="28a0f-126">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> members that determines the direction of the trust, relative to this domain.</span></span></param>
        <summary><span data-ttu-id="28a0f-127">使用指定的域创建信任关系的双方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-127">Creates both sides of a trust relationship with the specified domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-128">此方法使用单个方法调用创建信任关系的双方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-128">This method creates both sides of a trust relationship with a single method call.</span></span> <span data-ttu-id="28a0f-129"><xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> 方法仅用于创建信任的一方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-129">The <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> method is used to create only one side of a trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException"><span data-ttu-id="28a0f-130">信任关系已存在。</span><span class="sxs-lookup"><span data-stu-id="28a0f-130">The trust relationship already exists.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-131">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-131">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-132">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-132">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-133"><paramref name="targetDomain" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-133"><paramref name="targetDomain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="28a0f-134"><paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-134"><paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-135">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-135">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-136">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-136">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-137">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-137">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteLocalSideOfTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteLocalSideOfTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteLocalSideOfTrustRelationship (targetDomainName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteLocalSideOfTrustRelationship(System::String ^ targetDomainName);" />
      <MemberSignature Language="F#" Value="member this.DeleteLocalSideOfTrustRelationship : string -&gt; unit" Usage="domain.DeleteLocalSideOfTrustRelationship targetDomainName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-138">与其存在信任的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-138">The DNS name of the domain that the trust exists with.</span></span></param>
        <summary><span data-ttu-id="28a0f-139">删除信任关系的本地方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-139">Deletes the local side of a trust relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-140">删除信任关系的一方时，该信任会变长。</span><span class="sxs-lookup"><span data-stu-id="28a0f-140">When one side of a trust relationship is deleted, the trust longer exists.</span></span>  
  
 <span data-ttu-id="28a0f-141">若要使用一个方法调用删除信任关系的双方，请使用 <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="28a0f-141">To delete both sides of a trust relationship with one method call, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-142">与 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 参数指定的 <paramref name="targetDomainName" /> 没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-142">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> that is specified by the <paramref name="targetDomainName" /> parameter.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-143">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-143">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-144">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-144">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-145"><paramref name="targetDomainName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-145"><paramref name="targetDomainName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-146"><paramref name="targetDomainName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-146"><paramref name="targetDomainName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-147">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-147">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-148">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-148">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-149">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-149">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteTrustRelationship">
      <MemberSignature Language="C#" Value="public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteTrustRelationship (targetDomain As Domain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain);" />
      <MemberSignature Language="F#" Value="member this.DeleteTrustRelationship : System.DirectoryServices.ActiveDirectory.Domain -&gt; unit" Usage="domain.DeleteTrustRelationship targetDomain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
      </Parameters>
      <Docs>
        <param name="targetDomain"><span data-ttu-id="28a0f-150">表示与其存在信任关系的域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-150">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain that the trust exists with.</span></span></param>
        <summary><span data-ttu-id="28a0f-151">删除信任关系的双方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-151">Deletes both sides of a trust relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-152">若要仅删除信任关系的一方，请使用 <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="28a0f-152">To delete only one side of a trust relationship, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-153">与指定的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-153">There is no trust relationship with the specified <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" />.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-154">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-154">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-155">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-155">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-156"><paramref name="targetDomain" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-156"><paramref name="targetDomain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-157">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-157">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-158">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-158">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)" />
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-159">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-159">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainControllers As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ DomainControllers { System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainControllers : System.DirectoryServices.ActiveDirectory.DomainControllerCollection" Usage="System.DirectoryServices.ActiveDirectory.Domain.DomainControllers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-160">在此域中获取域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-160">Gets the domain controllers in this domain.</span></span></summary>
        <value><span data-ttu-id="28a0f-161">包含此域中的域控制器的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-161">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> object that contains the domain controllers in this domain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-162">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-162">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <Member MemberName="DomainMode">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ActiveDirectory.DomainMode DomainMode" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainMode As DomainMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainMode DomainMode { System::DirectoryServices::ActiveDirectory::DomainMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainMode : System.DirectoryServices.ActiveDirectory.DomainMode" Usage="System.DirectoryServices.ActiveDirectory.Domain.DomainMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-163">获取此域正在运行的模式。</span><span class="sxs-lookup"><span data-stu-id="28a0f-163">Gets the mode that this domain is operating in.</span></span></summary>
        <value><span data-ttu-id="28a0f-164">其中一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> 值，该值指示此域正在运行的模式。</span><span class="sxs-lookup"><span data-stu-id="28a0f-164">One of the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> values that indicates the mode that this domain is operating in.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-165">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-165">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" />
      </Docs>
    </Member>
    <Member MemberName="DomainModeLevel">
      <MemberSignature Language="C#" Value="public int DomainModeLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DomainModeLevel" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DomainModeLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DomainModeLevel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DomainModeLevel : int" Usage="System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-166">获取此域正在运行的模式级别。</span><span class="sxs-lookup"><span data-stu-id="28a0f-166">Gets the mode level that this domain is operating in.</span></span></summary>
        <value><span data-ttu-id="28a0f-167">域模式级别。</span><span class="sxs-lookup"><span data-stu-id="28a0f-167">The domain mode level.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDiscoverableDomainControllers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28a0f-168">查找此域中的所有可发现域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-168">Finds all of the discoverable domain controllers in this domain.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDiscoverableDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableDomainControllers () As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDiscoverableDomainControllers();" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableDomainControllers : unit -&gt; System.DirectoryServices.ActiveDirectory.DomainControllerCollection" Usage="domain.FindAllDiscoverableDomainControllers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28a0f-169">查找此域中的所有可发现域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-169">Finds all of the discoverable domain controllers in this domain.</span></span></summary>
        <returns><span data-ttu-id="28a0f-170">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含由此方法找到的域控制器对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-170">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-171">可以通过查询 DNS SRV 记录找到可发现的域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-171">You can find discoverable domain controllers by querying DNS SRV records.</span></span> <span data-ttu-id="28a0f-172">此方法仅返回那些注册了一般的非特定于站点的域控制器 SRV 记录的域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-172">Only those domain controllers that register the generic, non-site-specific, domain controller SRV record will be returned by this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-173">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-173">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-174">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-174">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDiscoverableDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDiscoverableDomainControllers (siteName As String) As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDiscoverableDomainControllers(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllDiscoverableDomainControllers : string -&gt; System.DirectoryServices.ActiveDirectory.DomainControllerCollection" Usage="domain.FindAllDiscoverableDomainControllers siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName"><span data-ttu-id="28a0f-175">从中搜索域控制器的站点名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-175">The name of the site to search for the domain controllers.</span></span></param>
        <summary><span data-ttu-id="28a0f-176">查找此域中的所有可发现域控制器，它们也在指定的站点中。</span><span class="sxs-lookup"><span data-stu-id="28a0f-176">Finds all of the discoverable domain controllers in this domain that are also in the specified site.</span></span></summary>
        <returns><span data-ttu-id="28a0f-177">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含由此方法找到的域控制器对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-177">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-178">可以通过查询 DNS SRV 记录找到可发现的域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-178">You can find discoverable domain controllers by querying DNS SRV records.</span></span>  <span data-ttu-id="28a0f-179">如果域控制器未为指定站点注册 SRV 记录，则此方法不会返回该记录，即使域控制器在物理位置位于该站点中。</span><span class="sxs-lookup"><span data-stu-id="28a0f-179">If a domain controller does not register an SRV record for the specified site, it will not be returned by this method, even if the domain controller is physically located within that site.</span></span>  
  
 <span data-ttu-id="28a0f-180">此方法将返回注册指定站点的 SRV 记录的所有域控制器，即使它们不在该站点内的物理位置。</span><span class="sxs-lookup"><span data-stu-id="28a0f-180">All domain controllers that register an SRV record for the specified site will be returned by this method, even if they are not physically located within that site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-181">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-181">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-182"><paramref name="siteName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-182"><paramref name="siteName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-183"><paramref name="siteName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-183"><paramref name="siteName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-184">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-184">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAllDomainControllers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28a0f-185">查找此域中的所有域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-185">Finds all of the domain controllers in this domain.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAllDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDomainControllers () As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDomainControllers();" />
      <MemberSignature Language="F#" Value="member this.FindAllDomainControllers : unit -&gt; System.DirectoryServices.ActiveDirectory.DomainControllerCollection" Usage="domain.FindAllDomainControllers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28a0f-186">查找此域中的所有域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-186">Finds all of the domain controllers in this domain.</span></span></summary>
        <returns><span data-ttu-id="28a0f-187">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含由此方法找到的域控制器对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-187">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-188">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-188">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-189">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-189">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <Member MemberName="FindAllDomainControllers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAllDomainControllers (siteName As String) As DomainControllerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainControllerCollection ^ FindAllDomainControllers(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindAllDomainControllers : string -&gt; System.DirectoryServices.ActiveDirectory.DomainControllerCollection" Usage="domain.FindAllDomainControllers siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainControllerCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName"><span data-ttu-id="28a0f-190">从中搜索域控制器的站点名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-190">The name of the site to search for the domain controllers.</span></span></param>
        <summary><span data-ttu-id="28a0f-191">在此域中查找也位于指定站点中的所有域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-191">Finds all of the domain controllers in this domain that are also in the specified site.</span></span></summary>
        <returns><span data-ttu-id="28a0f-192">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />，其中包含由此方法找到的域控制器对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-192">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" /> that contains the domain controller objects that were found by this method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-193">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-193">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-194"><paramref name="siteName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-194"><paramref name="siteName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-195"><paramref name="siteName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-195"><paramref name="siteName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-196">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-196">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainControllerCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindDomainController">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28a0f-197">在此域中查找任何域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-197">Finds any domain controller in this domain.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController () As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController();" />
      <MemberSignature Language="F#" Value="member this.FindDomainController : unit -&gt; System.DirectoryServices.ActiveDirectory.DomainController" Usage="domain.FindDomainController " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28a0f-198">在此域中查找任何域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-198">Finds any domain controller in this domain.</span></span></summary>
        <returns><span data-ttu-id="28a0f-199">表示通过此方法找到的域控制器的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-199">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> that represents the domain controller that is found by this method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-200">此方法在域中查找任何域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-200">This method finds any domain controller in the domain.</span></span> <span data-ttu-id="28a0f-201">不能保证此方法的另一次调用会找到同一域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-201">There is no guarantee that the same domain controller will be found by another call to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-202">找不到域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-202">A domain controller cannot be located.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-203">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-203">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-204">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-204">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController (flag As LocatorOptions) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController(System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindDomainController : System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.DomainController" Usage="domain.FindDomainController flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="28a0f-205">定义要查找的域控制器类型的一个或多个 <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> 成员的组合。</span><span class="sxs-lookup"><span data-stu-id="28a0f-205">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of domain controller to find.</span></span></param>
        <summary><span data-ttu-id="28a0f-206">在此域中找到满足指定条件的域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-206">Finds a domain controller in this domain that meets the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="28a0f-207">表示通过此方法找到的域控制器的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-207">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> that represents the domain controller that is found by this method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-208">找不到域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-208">A domain controller cannot be located.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-209">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-209">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-210"><paramref name="flag" /> 参数包含无效值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-210">The <paramref name="flag" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-211">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-211">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(string siteName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController (siteName As String) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController(System::String ^ siteName);" />
      <MemberSignature Language="F#" Value="member this.FindDomainController : string -&gt; System.DirectoryServices.ActiveDirectory.DomainController" Usage="domain.FindDomainController siteName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="siteName"><span data-ttu-id="28a0f-212">要搜索域控制器的站点的名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-212">The name of the site to search for the domain controller.</span></span></param>
        <summary><span data-ttu-id="28a0f-213">在此域和指定的站点中查找域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-213">Finds a domain controller in this domain and in the specified site.</span></span></summary>
        <returns><span data-ttu-id="28a0f-214">表示通过此方法找到的域控制器的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-214">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that is found by this method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-215">找不到域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-215">A domain controller cannot be located.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-216">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-216">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-217"><paramref name="siteName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-217"><paramref name="siteName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-218"><paramref name="siteName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-218"><paramref name="siteName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-219">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-219">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="FindDomainController">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.DomainController FindDomainController(string siteName, valuetype System.DirectoryServices.ActiveDirectory.LocatorOptions flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindDomainController (siteName As String, flag As LocatorOptions) As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::DomainController ^ FindDomainController(System::String ^ siteName, System::DirectoryServices::ActiveDirectory::LocatorOptions flag);" />
      <MemberSignature Language="F#" Value="member this.FindDomainController : string * System.DirectoryServices.ActiveDirectory.LocatorOptions -&gt; System.DirectoryServices.ActiveDirectory.DomainController" Usage="domain.FindDomainController (siteName, flag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="flag" Type="System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Parameters>
      <Docs>
        <param name="siteName"><span data-ttu-id="28a0f-220">要搜索域控制器的站点的名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-220">The name of the site to search for the domain controller.</span></span></param>
        <param name="flag"><span data-ttu-id="28a0f-221">定义要查找的域控制器类型的一个或多个 <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> 成员的组合。</span><span class="sxs-lookup"><span data-stu-id="28a0f-221">A combination of one or more of the <see cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" /> members that defines the type of domain controller to find.</span></span></param>
        <summary><span data-ttu-id="28a0f-222">在此域和符合指定条件的指定站点中查找域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-222">Finds a domain controller in this domain and in the specified site that meets the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="28a0f-223">表示通过此方法找到的域控制器的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-223">A <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that is found by this method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-224">找不到域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-224">A domain controller cannot be located.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-225">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-225">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-226">如果存在以下任一原因，则会发生此异常。</span><span class="sxs-lookup"><span data-stu-id="28a0f-226">This exception will occur for any of the following reasons.</span></span>  
  <span data-ttu-id="28a0f-227">
-   <paramref name="siteName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-227">
-   <paramref name="siteName" /> is an empty string.</span></span>  
  <span data-ttu-id="28a0f-228">
-   <paramref name="flag" /> 包含无效值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-228">
-   <paramref name="flag" /> contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-229"><paramref name="siteName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-229"><paramref name="siteName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-230">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-230">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.LocatorOptions" />
      </Docs>
    </Member>
    <Member MemberName="Forest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Forest Forest" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Forest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Forest As Forest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Forest ^ Forest { System::DirectoryServices::ActiveDirectory::Forest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Forest : System.DirectoryServices.ActiveDirectory.Forest" Usage="System.DirectoryServices.ActiveDirectory.Domain.Forest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Forest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-231">获取此域所属的林。</span><span class="sxs-lookup"><span data-stu-id="28a0f-231">Gets the forest that this domain is a member of.</span></span></summary>
        <value><span data-ttu-id="28a0f-232">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 对象，表示此域所属的林。</span><span class="sxs-lookup"><span data-stu-id="28a0f-232">A <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> object that represents the forest that this domain is a member of.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-233">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-233">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Forest" />
      </Docs>
    </Member>
    <Member MemberName="GetAllTrustRelationships">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllTrustRelationships () As TrustRelationshipInformationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformationCollection ^ GetAllTrustRelationships();" />
      <MemberSignature Language="F#" Value="member this.GetAllTrustRelationships : unit -&gt; System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" Usage="domain.GetAllTrustRelationships " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28a0f-234">检索此域的所有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-234">Retrieves all of the trust relationships for this domain.</span></span></summary>
        <returns><span data-ttu-id="28a0f-235">包含此域的所有信任关系的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-235">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" /> object that contains all of the trust relationships for this domain.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-236">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-236">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-237">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-237">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-238">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-238">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-239">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-239">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetComputerDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComputerDomain () As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Domain ^ GetComputerDomain();" />
      <MemberSignature Language="F#" Value="static member GetComputerDomain : unit -&gt; System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28a0f-240">获取表示本地计算机所加入的域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-240">Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain to which the local computer is joined.</span></span></summary>
        <returns><span data-ttu-id="28a0f-241">表示本地计算机所加入的域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-241">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain to which the local machine is joined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-242"><xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> 方法的返回值是一个 <xref:System.DirectoryServices.ActiveDirectory.Domain> 对象，该对象表示运行应用程序的计算机加入到的域。</span><span class="sxs-lookup"><span data-stu-id="28a0f-242">The return value of the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method is a <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined.</span></span>  <span data-ttu-id="28a0f-243">此返回值与运行应用程序时所用的域凭据无关。</span><span class="sxs-lookup"><span data-stu-id="28a0f-243">This return value is independent of the domain credentials under which the application is run.</span></span> <span data-ttu-id="28a0f-244">此方法将检索计算机的域，而不考虑在其下运行的受信任帐户域凭据。</span><span class="sxs-lookup"><span data-stu-id="28a0f-244">This method will retrieve the computer's domain regardless of the trusted account domain credentials it is run under.</span></span>  <span data-ttu-id="28a0f-245">若要检索表示与运行应用程序的安全上下文中有效的用户凭据对应的域的 <xref:System.DirectoryServices.ActiveDirectory.Domain> 对象，请改用 <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="28a0f-245">To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object that represents the domain corresponding to the user credentials in effect for the security context under which the application is running, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-246">无法建立到域的连接。</span><span class="sxs-lookup"><span data-stu-id="28a0f-246">A connection to the domain could not be made.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCurrentDomain () As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Domain ^ GetCurrentDomain();" />
      <MemberSignature Language="F#" Value="static member GetCurrentDomain : unit -&gt; System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28a0f-247">获取当前的有效用户凭据的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象，该凭据适用于应用程序在其中运行的安全性上下文。</span><span class="sxs-lookup"><span data-stu-id="28a0f-247">Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object for the current user credentials in effect for the security context under which the application is running.</span></span></summary>
        <returns><span data-ttu-id="28a0f-248">表示指定的有效用户凭据的域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象，该凭据适用于应用程序在其中运行的安全性上下文。</span><span class="sxs-lookup"><span data-stu-id="28a0f-248">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain for the specified user credentials in effect for the security context under which the application is running.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-249"><xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> 方法取决于应用程序运行时所用的域凭据。</span><span class="sxs-lookup"><span data-stu-id="28a0f-249"><xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A> method is determined by the domain credentials under which the application is running.</span></span>  <span data-ttu-id="28a0f-250">若要检索表示运行应用程序的计算机加入的域的 <xref:System.DirectoryServices.ActiveDirectory.Domain> 对象，而不考虑与该应用程序关联的凭据，请改用 <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="28a0f-250">To retrieve the <xref:System.DirectoryServices.ActiveDirectory.Domain> object representing the domain to which the computer running the application is joined, regardless of the credentials associated with that application, use the <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A> method instead.</span></span>  
  
## <a name="see-also"></a><span data-ttu-id="28a0f-251">另请参阅</span><span class="sxs-lookup"><span data-stu-id="28a0f-251">See Also</span></span>  
 <xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-252">无法连接到当前上下文。</span><span class="sxs-lookup"><span data-stu-id="28a0f-252">A connection to the current context could not be made.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryEntry">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.DirectoryEntry GetDirectoryEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDirectoryEntry () As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::DirectoryEntry ^ GetDirectoryEntry();" />
      <MemberSignature Language="F#" Value="override this.GetDirectoryEntry : unit -&gt; System.DirectoryServices.DirectoryEntry" Usage="domain.GetDirectoryEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28a0f-253">检索 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象，该对象表示域的默认命名上下文。</span><span class="sxs-lookup"><span data-stu-id="28a0f-253">Retrieves a <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the default naming context of the domain.</span></span></summary>
        <returns><span data-ttu-id="28a0f-254">一个表示域的 <see cref="T:System.DirectoryServices.DirectoryEntry" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-254">A <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that represents the domain.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-255">已释放当前对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-255">The current object has been disposed.</span></span></exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><span data-ttu-id="28a0f-256">需求值： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></span><span class="sxs-lookup"><span data-stu-id="28a0f-256">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></span></span></permission>
        <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetDomain">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.ActiveDirectory.Domain GetDomain(class System.DirectoryServices.ActiveDirectory.DirectoryContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDomain (context As DirectoryContext) As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::ActiveDirectory::Domain ^ GetDomain(System::DirectoryServices::ActiveDirectory::DirectoryContext ^ context);" />
      <MemberSignature Language="F#" Value="static member GetDomain : System.DirectoryServices.ActiveDirectory.DirectoryContext -&gt; System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Domain.GetDomain context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="28a0f-257"><see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> 对象，它包含用于检索对象的目标和凭据。</span><span class="sxs-lookup"><span data-stu-id="28a0f-257">An <see cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" /> object that contains the target and credentials to use to retrieve the object.</span></span> <span data-ttu-id="28a0f-258">上下文的类型必须为域或目录服务器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-258">The type of the context must be a domain or directory server.</span></span></param>
        <summary><span data-ttu-id="28a0f-259">获取指定上下文的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-259">Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object for the specified context.</span></span></summary>
        <returns><span data-ttu-id="28a0f-260">表示指定上下文的域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-260">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain for the specified context.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-261">无法形成到 <paramref name="context" /> 中指定的目标的连接。</span><span class="sxs-lookup"><span data-stu-id="28a0f-261">A connection to the target specified in <paramref name="context" /> could not be made.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-262"><paramref name="context" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="28a0f-262"><paramref name="context" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-263"><paramref name="context" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-263"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DirectoryContext" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public bool GetSelectiveAuthenticationStatus (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSelectiveAuthenticationStatus(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectiveAuthenticationStatus (targetDomainName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSelectiveAuthenticationStatus(System::String ^ targetDomainName);" />
      <MemberSignature Language="F#" Value="member this.GetSelectiveAuthenticationStatus : string -&gt; bool" Usage="domain.GetSelectiveAuthenticationStatus targetDomainName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-264">信任存在的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-264">The DNS name of the domain which with the trust exists.</span></span></param>
        <summary><span data-ttu-id="28a0f-265">确定入站信任的身份验证类型。</span><span class="sxs-lookup"><span data-stu-id="28a0f-265">Determines the authentication type of an inbound trust.</span></span></summary>
        <returns><span data-ttu-id="28a0f-266">如果信任的身份验证是可选择的，则为 <see langword="true" />；如果身份验证是全域性的，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-266"><see langword="true" /> if the authentication of the trust is selective; <see langword="false" /> if the authentication is domain-wide.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-267">与 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 参数指定的 <paramref name="targetForestName" /> 没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-267">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by the <paramref name="targetForestName" /> parameter.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-268">对 <c>LsaQueryTrustedDomainInfoByName</c> 的调用失败。</span><span class="sxs-lookup"><span data-stu-id="28a0f-268">The call to <c>LsaQueryTrustedDomainInfoByName</c> failed.</span></span> <span data-ttu-id="28a0f-269">有关详细信息，请参阅 <see href="/windows/desktop/api/ntsecapi/nf-ntsecapi-lsaquerytrusteddomaininfobyname">LsaQueryTrustedDomainInfoByName</see>。</span><span class="sxs-lookup"><span data-stu-id="28a0f-269">For more information, see the <see href="/windows/desktop/api/ntsecapi/nf-ntsecapi-lsaquerytrusteddomaininfobyname">LsaQueryTrustedDomainInfoByName</see>.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-270">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-270">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-271"><paramref name="targetDomainName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-271"><paramref name="targetDomainName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-272"><paramref name="targetDomainName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-272"><paramref name="targetDomainName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-273">已释放当前对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-273">The current object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-274">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-274">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-275">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-275">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public bool GetSidFilteringStatus (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSidFilteringStatus(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSidFilteringStatus (targetDomainName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetSidFilteringStatus(System::String ^ targetDomainName);" />
      <MemberSignature Language="F#" Value="member this.GetSidFilteringStatus : string -&gt; bool" Usage="domain.GetSidFilteringStatus targetDomainName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-276">与其存在信任关系的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-276">The DNS name of the domain which with the trust relationship exists.</span></span></param>
        <summary><span data-ttu-id="28a0f-277">确定信任的 SID 筛选状态。</span><span class="sxs-lookup"><span data-stu-id="28a0f-277">Determines the SID filtering status of a trust.</span></span></summary>
        <returns><span data-ttu-id="28a0f-278">如果启用 SID 筛选，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-278"><see langword="true" /> if SID filtering is enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-279">与 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 参数指定的 <paramref name="targetForestName" /> 没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-279">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by the <paramref name="targetForestName" /> parameter.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-280">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-280">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-281">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-281">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-282"><paramref name="targetDomainName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-282"><paramref name="targetDomainName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-283"><paramref name="targetDomainName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-283"><paramref name="targetDomainName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-284">已释放当前对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-284">The current object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-285">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-285">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-286">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-286">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTrustRelationship">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTrustRelationship (targetDomainName As String) As TrustRelationshipInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::ActiveDirectory::TrustRelationshipInformation ^ GetTrustRelationship(System::String ^ targetDomainName);" />
      <MemberSignature Language="F#" Value="member this.GetTrustRelationship : string -&gt; System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" Usage="domain.GetTrustRelationship targetDomainName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-287">与其存在信任关系的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-287">The DNS name of the domain with which the trust relationship exists.</span></span></param>
        <summary><span data-ttu-id="28a0f-288">获取此域和指定的域之间的信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-288">Gets the trust relationship between this domain and the specified domain.</span></span></summary>
        <returns><span data-ttu-id="28a0f-289">表示此域和指定的域之间的信任关系的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-289">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" /> object that represents the trust relationship between this domain and the specified domain.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-290">与 <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> 参数指定的 <paramref name="targetForestName" /> 没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-290">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Forest" /> that is specified by the <paramref name="targetForestName" /> parameter.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-291">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-291">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-292">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-292">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-293"><paramref name="targetDomainName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-293"><paramref name="targetDomainName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-294"><paramref name="targetDomainName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-294"><paramref name="targetDomainName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-295">已释放当前对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-295">The current object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-296">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-296">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation" />
      </Docs>
    </Member>
    <Member MemberName="InfrastructureRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InfrastructureRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ InfrastructureRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InfrastructureRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-297">获取此域的基础结构角色所有者。</span><span class="sxs-lookup"><span data-stu-id="28a0f-297">Gets the infrastructure role owner for this domain.</span></span></summary>
        <value><span data-ttu-id="28a0f-298">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象，表示保留基础结构所有者角色的域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-298">An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that holds the infrastructure owner role.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-299">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-299">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.Domain Parent" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Domain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::Domain ^ Parent { System::DirectoryServices::ActiveDirectory::Domain ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.DirectoryServices.ActiveDirectory.Domain" Usage="System.DirectoryServices.ActiveDirectory.Domain.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.Domain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-300">获取此域的父域。</span><span class="sxs-lookup"><span data-stu-id="28a0f-300">Gets the parent domain of this domain.</span></span></summary>
        <value><span data-ttu-id="28a0f-301">表示此域的父域的 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-301">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the parent domain of this domain.</span></span> <span data-ttu-id="28a0f-302">如果此域没有父域，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-302"><see langword="null" /> if this domain has no parent domain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-303">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-303">The object has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PdcRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PdcRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ PdcRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PdcRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-304">获取 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象，其保留此域的主域控制器 (PDC)。</span><span class="sxs-lookup"><span data-stu-id="28a0f-304">Gets the <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that holds the primary domain controller (PDC) for this domain.</span></span></summary>
        <value><span data-ttu-id="28a0f-305">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象，表示保留此域的 PDC 仿真器角色的域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-305">An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that holds the PDC emulator role for this domain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-306">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-306">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDomainFunctionality">
      <MemberSignature Language="C#" Value="public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseDomainFunctionality(valuetype System.DirectoryServices.ActiveDirectory.DomainMode domainMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseDomainFunctionality(System::DirectoryServices::ActiveDirectory::DomainMode domainMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseDomainFunctionality : System.DirectoryServices.ActiveDirectory.DomainMode -&gt; unit" Usage="domain.RaiseDomainFunctionality domainMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainMode" Type="System.DirectoryServices.ActiveDirectory.DomainMode" />
      </Parameters>
      <Docs>
        <param name="domainMode"><span data-ttu-id="28a0f-307">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> 枚举值，该值指定域的新操作级别。</span><span class="sxs-lookup"><span data-stu-id="28a0f-307">An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> enumeration value that specifies the new operation level for the domain.</span></span></param>
        <summary><span data-ttu-id="28a0f-308">为域提升操作模式。</span><span class="sxs-lookup"><span data-stu-id="28a0f-308">Raises the mode of operation for the domain.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-309">可以引发 <xref:System.DirectoryServices.ActiveDirectory.DomainMode> 值，但不能减少。</span><span class="sxs-lookup"><span data-stu-id="28a0f-309">The <xref:System.DirectoryServices.ActiveDirectory.DomainMode> value can be raised but not lowered.</span></span> <span data-ttu-id="28a0f-310">这意味着提高域的功能级别是不可逆的，并且应谨慎地做出此决定。</span><span class="sxs-lookup"><span data-stu-id="28a0f-310">This means that raising the functionality level of the domain is not reversible and the decision to do this should be made carefully.</span></span>  
  
 <span data-ttu-id="28a0f-311">有关域操作模式的详细信息，请参阅[域和林功能](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd894353(v%3dws.11))。</span><span class="sxs-lookup"><span data-stu-id="28a0f-311">For more information about domain operational modes, see [Domain and forest functionality](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2008-r2-and-2008/dd894353(v%3dws.11)).</span></span>  
  
 <span data-ttu-id="28a0f-312">下表根据域的当前运行模式定义 `domainMode` 的有效值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-312">The following table defines the valid values for `domainMode` based on the current operating mode of the domain.</span></span>  
  
|<span data-ttu-id="28a0f-313">当前模式</span><span class="sxs-lookup"><span data-stu-id="28a0f-313">Current mode</span></span>|<span data-ttu-id="28a0f-314">模式可提升到</span><span class="sxs-lookup"><span data-stu-id="28a0f-314">Mode can be raised to</span></span>|  
|------------------|---------------------------|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000MixedDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2000NativeDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003InterimDomain>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|  
|<xref:System.DirectoryServices.ActiveDirectory.DomainMode.Windows2003Domain>|<span data-ttu-id="28a0f-315">无</span><span class="sxs-lookup"><span data-stu-id="28a0f-315">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-316">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-316">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-317">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-317">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-318">基于域的当前操作模式，为 <paramref name="domainMode" /> 指定的值无效。</span><span class="sxs-lookup"><span data-stu-id="28a0f-318">Based on the current operating mode of the domain, the value specified for <paramref name="domainMode" /> is not valid.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="28a0f-319"><paramref name="domainMode" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> 枚举值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-319"><paramref name="domainMode" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" /> enumeration value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-320">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-320">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-321">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-321">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainMode" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDomainFunctionalityLevel">
      <MemberSignature Language="C#" Value="public void RaiseDomainFunctionalityLevel (int domainMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseDomainFunctionalityLevel(int32 domainMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseDomainFunctionalityLevel (domainMode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseDomainFunctionalityLevel(int domainMode);" />
      <MemberSignature Language="F#" Value="member this.RaiseDomainFunctionalityLevel : int -&gt; unit" Usage="domain.RaiseDomainFunctionalityLevel domainMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domainMode" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="domainMode"><span data-ttu-id="28a0f-322">表示新级别的值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-322">A value representing the new level.</span></span></param>
        <summary><span data-ttu-id="28a0f-323">提高域的功能级别。</span><span class="sxs-lookup"><span data-stu-id="28a0f-323">Raises the functionality level for the domain.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RepairTrustRelationship">
      <MemberSignature Language="C#" Value="public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RepairTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RepairTrustRelationship (targetDomain As Domain)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RepairTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain);" />
      <MemberSignature Language="F#" Value="member this.RepairTrustRelationship : System.DirectoryServices.ActiveDirectory.Domain -&gt; unit" Usage="domain.RepairTrustRelationship targetDomain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
      </Parameters>
      <Docs>
        <param name="targetDomain"><span data-ttu-id="28a0f-324">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象，表示与其存在信任关系的域。</span><span class="sxs-lookup"><span data-stu-id="28a0f-324">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain with which the trust exists.</span></span></param>
        <summary><span data-ttu-id="28a0f-325">修复信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-325">Repairs a trust relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-326">此方法通过重置信任的安全通道来修复信任。</span><span class="sxs-lookup"><span data-stu-id="28a0f-326">This method repairs the trust by resetting the secure channel for the trust.</span></span> <span data-ttu-id="28a0f-327">如果操作未能重置安全通道，它也会重置信任密码。</span><span class="sxs-lookup"><span data-stu-id="28a0f-327">If the operation fails to reset the secure channel, then it will also reset the trust password.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-328">与 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 指定的 <paramref name="targetDomain" /> 没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-328">There is no trust relationship with the <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> that is specified by <paramref name="targetDomain" />.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-329">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-329">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-330">目标服务器或源服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-330">The target or source server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-331"><paramref name="targetDomain" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-331"><paramref name="targetDomain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-332">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-332">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-333">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-333">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.Domain" />
      </Docs>
    </Member>
    <Member MemberName="RidRoleOwner">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RidRoleOwner As DomainController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ActiveDirectory::DomainController ^ RidRoleOwner { System::DirectoryServices::ActiveDirectory::DomainController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RidRoleOwner : System.DirectoryServices.ActiveDirectory.DomainController" Usage="System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ActiveDirectory.DomainController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28a0f-334">获取此域的 RID 主机角色拥有者。</span><span class="sxs-lookup"><span data-stu-id="28a0f-334">Gets the RID master role holder for this domain.</span></span></summary>
        <value><span data-ttu-id="28a0f-335"><see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> 对象，表示拥有此域的相对标识符 (RID) 主机角色的域控制器。</span><span class="sxs-lookup"><span data-stu-id="28a0f-335">An <see cref="T:System.DirectoryServices.ActiveDirectory.DomainController" /> object that represents the domain controller that holds the relative identifier (RID) master role for this domain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-336">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-336">The object has been disposed.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.DomainController" />
      </Docs>
    </Member>
    <Member MemberName="SetSelectiveAuthenticationStatus">
      <MemberSignature Language="C#" Value="public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectiveAuthenticationStatus(string targetDomainName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectiveAuthenticationStatus (targetDomainName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectiveAuthenticationStatus(System::String ^ targetDomainName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSelectiveAuthenticationStatus : string * bool -&gt; unit" Usage="domain.SetSelectiveAuthenticationStatus (targetDomainName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-337">入站信任所存在的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-337">The DNS name of the domain with which the inbound trust exists.</span></span></param>
        <param name="enable"><span data-ttu-id="28a0f-338">如果启用了选择性身份验证，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-338"><see langword="true" /> if selective authentication is enabled; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="28a0f-339">启用或禁用入站信任的选择性身份验证。</span><span class="sxs-lookup"><span data-stu-id="28a0f-339">Enables or disables selective authentication for an inbound trust.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-340">与由 <paramref name="targetDomainName" /> 指定的域控制器之间没有任何信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-340">There is no trust relationship with the domain controller that is specified by <paramref name="targetDomainName" />.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-341">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-341">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-342">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-342">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-343"><paramref name="targetDomainName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-343"><paramref name="targetDomainName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-344"><paramref name="targetDomainName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-344"><paramref name="targetDomainName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-345">已释放当前对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-345">The current object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-346">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-346">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-347">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-347">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetSidFilteringStatus">
      <MemberSignature Language="C#" Value="public void SetSidFilteringStatus (string targetDomainName, bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSidFilteringStatus(string targetDomainName, bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSidFilteringStatus (targetDomainName As String, enable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSidFilteringStatus(System::String ^ targetDomainName, bool enable);" />
      <MemberSignature Language="F#" Value="member this.SetSidFilteringStatus : string * bool -&gt; unit" Usage="domain.SetSidFilteringStatus (targetDomainName, enable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-348">与其存在信任的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-348">The DNS name of the domain with which the trust exists.</span></span></param>
        <param name="enable"><span data-ttu-id="28a0f-349">如果必须启用 SID 筛选功能，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-349"><see langword="true" /> if SID filtering must be enabled; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="28a0f-350">设置指定域的 SID 筛选状态。</span><span class="sxs-lookup"><span data-stu-id="28a0f-350">Sets the SID filtering state for the specified domain.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-351">与 <paramref name="targetDomainName" /> 指定的域没有任何信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-351">There is no trust relationship with the domain that is specified by <paramref name="targetDomainName" />.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-352">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-352">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-353">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-353">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-354"><paramref name="targetDomainName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-354"><paramref name="targetDomainName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-355"><paramref name="targetDomainName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-355"><paramref name="targetDomainName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-356">已释放当前对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-356">The current object has been disposed.</span></span></exception>
        <altmember cref="M:System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-357">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-357">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateLocalSideOfTrustRelationship">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28a0f-358">更新信任关系的本地方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-358">Updates the local side of a trust relationship.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetDomainName, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetDomainName As String, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetDomainName, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * string -&gt; unit" Usage="domain.UpdateLocalSideOfTrustRelationship (targetDomainName, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-359">与其存在信任的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-359">The DNS name of the domain with which a trust exists.</span></span></param>
        <param name="newTrustPassword"><span data-ttu-id="28a0f-360">信任的新密码。</span><span class="sxs-lookup"><span data-stu-id="28a0f-360">The new password for the trust.</span></span></param>
        <summary><span data-ttu-id="28a0f-361">更新信任关系本地方的密码。</span><span class="sxs-lookup"><span data-stu-id="28a0f-361">Updates the password for the local side of a trust relationship.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-362">若要重新建立信任关系，必须用相同的密码更新信任的双方。</span><span class="sxs-lookup"><span data-stu-id="28a0f-362">To re-establish the trust, both sides of the trust must be updated with the same password.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-363">与 <paramref name="targetDomainName" /> 指定的域没有任何信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-363">There is no trust relationship with the domain that is specified by <paramref name="targetDomainName" />.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-364">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-364">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-365">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-365">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-366"><paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-366"><paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-367"><paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-367"><paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-368">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-368">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-369">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-369">The specified account does not have permission to perform this operation.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-370">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-370">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocalSideOfTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLocalSideOfTrustRelationship(string targetDomainName, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLocalSideOfTrustRelationship (targetDomainName As String, newTrustDirection As TrustDirection, newTrustPassword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLocalSideOfTrustRelationship(System::String ^ targetDomainName, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection, System::String ^ newTrustPassword);" />
      <MemberSignature Language="F#" Value="member this.UpdateLocalSideOfTrustRelationship : string * System.DirectoryServices.ActiveDirectory.TrustDirection * string -&gt; unit" Usage="domain.UpdateLocalSideOfTrustRelationship (targetDomainName, newTrustDirection, newTrustPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <Parameter Name="newTrustPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-371">与其存在信任的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-371">The DNS name of the domain with which a trust exists.</span></span></param>
        <param name="newTrustDirection"><span data-ttu-id="28a0f-372">信任关系的新信任方向的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-372">An <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value for the new trust direction for the trust relationship.</span></span></param>
        <param name="newTrustPassword"><span data-ttu-id="28a0f-373">信任的新密码。</span><span class="sxs-lookup"><span data-stu-id="28a0f-373">The new password for the trust.</span></span></param>
        <summary><span data-ttu-id="28a0f-374">更新信任关系本地方的密码和信任方向。</span><span class="sxs-lookup"><span data-stu-id="28a0f-374">Updates the password and trust direction for the local side of a trust relationship.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-375">与 <paramref name="targetDomainName" /> 参数指定的域没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-375">There is no trust relationship with the domain that is specified by the <paramref name="targetDomainName" /> parameter.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-376">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-376">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-377">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-377">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-378"><paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-378"><paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-379"><paramref name="targetDomainName" /> 或 <paramref name="newTrustPassword" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-379"><paramref name="targetDomainName" /> or <paramref name="newTrustPassword" /> are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="28a0f-380"><paramref name="newTrustDirection" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-380"><paramref name="newTrustDirection" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-381">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-381">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-382">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-382">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-383">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-383">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateTrustRelationship">
      <MemberSignature Language="C#" Value="public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTrustRelationship (targetDomain As Domain, newTrustDirection As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain, System::DirectoryServices::ActiveDirectory::TrustDirection newTrustDirection);" />
      <MemberSignature Language="F#" Value="member this.UpdateTrustRelationship : System.DirectoryServices.ActiveDirectory.Domain * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="domain.UpdateTrustRelationship (targetDomain, newTrustDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="newTrustDirection" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain"><span data-ttu-id="28a0f-384">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象，表示与其存在信任关系的域。</span><span class="sxs-lookup"><span data-stu-id="28a0f-384">An <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain with which the trust exists.</span></span></param>
        <param name="newTrustDirection"><span data-ttu-id="28a0f-385">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值，该值为信任关系指定新的信任方向。</span><span class="sxs-lookup"><span data-stu-id="28a0f-385">An <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the new trust direction for the trust relationship.</span></span></param>
        <summary><span data-ttu-id="28a0f-386">更新现有信任关系的信任方向。</span><span class="sxs-lookup"><span data-stu-id="28a0f-386">Updates the trust direction for an existing trust relationship.</span></span> <span data-ttu-id="28a0f-387">对信任的双方更新信任方向。</span><span class="sxs-lookup"><span data-stu-id="28a0f-387">The trust directions are updated on both sides of the trust.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-388">与 <paramref name="targetDomain" /> 参数指定的域没有信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-388">There is no trust relationship with the domain that is specified by the <paramref name="targetDomain" /> parameter.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-389">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-389">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-390">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-390">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-391"><paramref name="targetDomain" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-391"><paramref name="targetDomain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="28a0f-392"><paramref name="newTrustDirection" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-392"><paramref name="newTrustDirection" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-393">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-393">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-394">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-394">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-395">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-395">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VerifyOutboundTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyOutboundTrustRelationship (string targetDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyOutboundTrustRelationship(string targetDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyOutboundTrustRelationship (targetDomainName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyOutboundTrustRelationship(System::String ^ targetDomainName);" />
      <MemberSignature Language="F#" Value="member this.VerifyOutboundTrustRelationship : string -&gt; unit" Usage="domain.VerifyOutboundTrustRelationship targetDomainName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetDomainName"><span data-ttu-id="28a0f-396">与其存在信任的域的 DNS 名称。</span><span class="sxs-lookup"><span data-stu-id="28a0f-396">The DNS name of the domain with which the trust exists.</span></span></param>
        <summary><span data-ttu-id="28a0f-397">验证以前建立的与指定域的出站信任关系是否有效。</span><span class="sxs-lookup"><span data-stu-id="28a0f-397">Verifies that a previously established outbound trust with the specified domain is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-398">此方法用于验证是否已完全建立了信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-398">This method is used to verify that a trust relationship has been fully established.</span></span> <span data-ttu-id="28a0f-399">只有在创建信任的双方后，才会建立信任。</span><span class="sxs-lookup"><span data-stu-id="28a0f-399">The trust is not established until both sides of the trust have been created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-400">与 <paramref name="targetDomainName" /> 指定的域没有任何出站信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-400">There is no outbound trust relationship with the domain that is specified by <paramref name="targetDomainName" />.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-401">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-401">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-402">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-402">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28a0f-403"><paramref name="targetDomainName" /> 是一个空字符串。</span><span class="sxs-lookup"><span data-stu-id="28a0f-403"><paramref name="targetDomainName" /> is an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-404"><paramref name="targetDomainName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-404"><paramref name="targetDomainName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-405">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-405">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-406">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-406">The specified account does not have permission to perform this operation.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-407">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-407">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VerifyTrustRelationship">
      <MemberSignature Language="C#" Value="public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyTrustRelationship(class System.DirectoryServices.ActiveDirectory.Domain targetDomain, valuetype System.DirectoryServices.ActiveDirectory.TrustDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyTrustRelationship (targetDomain As Domain, direction As TrustDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyTrustRelationship(System::DirectoryServices::ActiveDirectory::Domain ^ targetDomain, System::DirectoryServices::ActiveDirectory::TrustDirection direction);" />
      <MemberSignature Language="F#" Value="member this.VerifyTrustRelationship : System.DirectoryServices.ActiveDirectory.Domain * System.DirectoryServices.ActiveDirectory.TrustDirection -&gt; unit" Usage="domain.VerifyTrustRelationship (targetDomain, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDomain" Type="System.DirectoryServices.ActiveDirectory.Domain" />
        <Parameter Name="direction" Type="System.DirectoryServices.ActiveDirectory.TrustDirection" />
      </Parameters>
      <Docs>
        <param name="targetDomain"><span data-ttu-id="28a0f-408">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> 对象，表示与其存在信任关系的域。</span><span class="sxs-lookup"><span data-stu-id="28a0f-408">A <see cref="T:System.DirectoryServices.ActiveDirectory.Domain" /> object that represents the domain with which the trust exists.</span></span></param>
        <param name="direction"><span data-ttu-id="28a0f-409">一个 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值，指定信任关系相对于此域的方向。</span><span class="sxs-lookup"><span data-stu-id="28a0f-409">A <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value that specifies the direction, relative to this domain, of the trust.</span></span></param>
        <summary><span data-ttu-id="28a0f-410">验证以前建立的与指定域的信任关系是否有效。</span><span class="sxs-lookup"><span data-stu-id="28a0f-410">Verifies that a previously established trust with the specified domain is valid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28a0f-411">此方法验证是否已完全建立了信任关系。</span><span class="sxs-lookup"><span data-stu-id="28a0f-411">This method verifies that a trust relationship has been fully established.</span></span> <span data-ttu-id="28a0f-412">只有在创建信任的双方后，才会建立信任。</span><span class="sxs-lookup"><span data-stu-id="28a0f-412">The trust is not established until both sides of the trust have been created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException"><span data-ttu-id="28a0f-413">与 <paramref name="targetDomain" /> 参数指定的域没有信任关系，或者目标域没有 <paramref name="direction" /> 参数指定的信任方向。</span><span class="sxs-lookup"><span data-stu-id="28a0f-413">There is no trust relationship with the domain that is specified by the <paramref name="targetDomain" /> parameter, or the target domain does not have the trust direction that is specified by the <paramref name="direction" /> parameter.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException"><span data-ttu-id="28a0f-414">对基础目录服务的调用导致了错误。</span><span class="sxs-lookup"><span data-stu-id="28a0f-414">A call to the underlying directory service resulted in an error.</span></span></exception>
        <exception cref="T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException"><span data-ttu-id="28a0f-415">目标服务器忙或不可用。</span><span class="sxs-lookup"><span data-stu-id="28a0f-415">The target server is either busy or unavailable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28a0f-416"><paramref name="targetDomain" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="28a0f-416"><paramref name="targetDomain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="28a0f-417"><paramref name="direction" /> 不是有效的 <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> 值。</span><span class="sxs-lookup"><span data-stu-id="28a0f-417"><paramref name="direction" /> is not a valid <see cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" /> value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="28a0f-418">已释放此对象。</span><span class="sxs-lookup"><span data-stu-id="28a0f-418">The object has been disposed.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="28a0f-419">指定的帐户没有权限执行此操作。</span><span class="sxs-lookup"><span data-stu-id="28a0f-419">The specified account does not have permission to perform this operation.</span></span></exception>
        <altmember cref="T:System.DirectoryServices.ActiveDirectory.TrustDirection" />
        <related type="Article" href="https://msdn.microsoft.com/library/e1df3378-17b0-4429-91c7-13d4a457fb6e"><span data-ttu-id="28a0f-420">如何：使用信任</span><span class="sxs-lookup"><span data-stu-id="28a0f-420">How To: Work with Trusts</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
