<Type Name="MidpointRounding" FullName="System.MidpointRounding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16852c5650fe39be383a2014289015f7c26bc340" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82485745" /></Metadata><TypeSignature Language="C#" Value="public enum MidpointRounding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MidpointRounding extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.MidpointRounding" />
  <TypeSignature Language="VB.NET" Value="Public Enum MidpointRounding" />
  <TypeSignature Language="C++ CLI" Value="public enum class MidpointRounding" />
  <TypeSignature Language="F#" Value="type MidpointRounding = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="4.2.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="4.2.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Runtime.Extensions" FromVersion="4.2.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d61b8-101">指定数学舍入方法应如何处理两个数字间的中间值。</span><span class="sxs-lookup"><span data-stu-id="d61b8-101">Specifies how mathematical rounding methods should process a number that is midway between two numbers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d61b8-102">将 `MidpointRounding` 与适当的 <xref:System.Math.Round%2A?displayProperty=nameWithType> 重载一起使用，以便更好地控制舍入过程。</span><span class="sxs-lookup"><span data-stu-id="d61b8-102">Use `MidpointRounding` with appropriate overloads of <xref:System.Math.Round%2A?displayProperty=nameWithType> to provide more control of the rounding process.</span></span>  
  
 <span data-ttu-id="d61b8-103">舍入操作采用具有隐式或指定精度的原始数字;检查下一个数字，该数字在该精度内加1。和返回与原始数字具有相同精度的最接近的数字。</span><span class="sxs-lookup"><span data-stu-id="d61b8-103">A rounding operation takes an original number with an implicit or specified precision; examines the next digit, which is at that precision plus one; and returns the nearest number with the same precision as the original number.</span></span> <span data-ttu-id="d61b8-104">对于正数，如果下一个数字是从0到4，则最接近的数为负无穷。</span><span class="sxs-lookup"><span data-stu-id="d61b8-104">For positive numbers, if the next digit is from 0 through 4, the nearest number is toward negative infinity.</span></span> <span data-ttu-id="d61b8-105">如果下一个数字是从6到9的数字，则最接近的数为正无穷。</span><span class="sxs-lookup"><span data-stu-id="d61b8-105">If the next digit is from 6 through 9, the nearest number is toward positive infinity.</span></span> <span data-ttu-id="d61b8-106">对于负数，如果下一个数字是从0到4，则最接近正无穷。</span><span class="sxs-lookup"><span data-stu-id="d61b8-106">For negative numbers, if the next digit is from 0 through 4, the nearest number is toward positive infinity.</span></span> <span data-ttu-id="d61b8-107">如果下一个数字是从6到9的数字，则最接近的数为负无穷大。</span><span class="sxs-lookup"><span data-stu-id="d61b8-107">If the next digit is from 6 through 9, the nearest number is toward negative infinity.</span></span>  
  
 <span data-ttu-id="d61b8-108">在前面的示例中，`MidpointRounding` 枚举不影响舍入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="d61b8-108">In the previous cases, the `MidpointRounding` enumeration does not affect the result of the rounding operation.</span></span> <span data-ttu-id="d61b8-109">但是，如果下一个数字是5，这是两个可能结果之间的中点，并且所有剩余数字均为零，或者没有剩余数字，则最接近的数字是不明确的。</span><span class="sxs-lookup"><span data-stu-id="d61b8-109">However, if the next digit is 5, which is the midpoint between two possible results, and all remaining digits are zero or there are no remaining digits, the nearest number is ambiguous.</span></span> <span data-ttu-id="d61b8-110">在这种情况下，`MidpointRounding` 枚举使你可以指定舍入操作是从零还是最接近的偶数返回最近的数字。</span><span class="sxs-lookup"><span data-stu-id="d61b8-110">In this case, the `MidpointRounding` enumeration enables you to specify whether the rounding operation returns the nearest number away from zero or the nearest even number.</span></span>  
  
 <span data-ttu-id="d61b8-111">下表演示了将一些负数和正数与 `MidpointRounding`的值一起舍入的结果。</span><span class="sxs-lookup"><span data-stu-id="d61b8-111">The following table demonstrates the results of rounding some negative and positive numbers in conjunction with the values of `MidpointRounding`.</span></span> <span data-ttu-id="d61b8-112">用于对数字进行舍入的精度为零，这意味着小数点之后的数字会影响舍入运算。</span><span class="sxs-lookup"><span data-stu-id="d61b8-112">The precision used to round the numbers is zero, which means the number after the decimal point affects the rounding operation.</span></span> <span data-ttu-id="d61b8-113">例如，对于数字-2.5，小数点后的数字为5。</span><span class="sxs-lookup"><span data-stu-id="d61b8-113">For example, for the number -2.5, the digit after the decimal point is 5.</span></span> <span data-ttu-id="d61b8-114">因为该数字是中点，所以您可以使用 `MidpointRounding` 值来确定舍入的结果。</span><span class="sxs-lookup"><span data-stu-id="d61b8-114">Because that digit is the midpoint, you can use a `MidpointRounding` value to determine the result of rounding.</span></span> <span data-ttu-id="d61b8-115">如果指定了 `AwayFromZero`，则返回-3，因为它是从零开始的最接近数字，精度为零。</span><span class="sxs-lookup"><span data-stu-id="d61b8-115">If `AwayFromZero` is specified, -3 is returned because it is the nearest number away from zero with a precision of zero.</span></span> <span data-ttu-id="d61b8-116">如果指定 `ToEven`，则返回-2，因为它是精度为零的最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="d61b8-116">If `ToEven` is specified, -2 is returned because it is the nearest even number with a precision of zero.</span></span>  
  
|<span data-ttu-id="d61b8-117">原始数字</span><span class="sxs-lookup"><span data-stu-id="d61b8-117">Original number</span></span>|<span data-ttu-id="d61b8-118">AwayFromZero</span><span class="sxs-lookup"><span data-stu-id="d61b8-118">AwayFromZero</span></span>|<span data-ttu-id="d61b8-119">ToEven</span><span class="sxs-lookup"><span data-stu-id="d61b8-119">ToEven</span></span>|  
|---------------------|------------------|------------|  
|<span data-ttu-id="d61b8-120">3.5</span><span class="sxs-lookup"><span data-stu-id="d61b8-120">3.5</span></span>|<span data-ttu-id="d61b8-121">4</span><span class="sxs-lookup"><span data-stu-id="d61b8-121">4</span></span>|<span data-ttu-id="d61b8-122">4</span><span class="sxs-lookup"><span data-stu-id="d61b8-122">4</span></span>|  
|<span data-ttu-id="d61b8-123">2.8</span><span class="sxs-lookup"><span data-stu-id="d61b8-123">2.8</span></span>|<span data-ttu-id="d61b8-124">3</span><span class="sxs-lookup"><span data-stu-id="d61b8-124">3</span></span>|<span data-ttu-id="d61b8-125">3</span><span class="sxs-lookup"><span data-stu-id="d61b8-125">3</span></span>|  
|<span data-ttu-id="d61b8-126">2.5</span><span class="sxs-lookup"><span data-stu-id="d61b8-126">2.5</span></span>|<span data-ttu-id="d61b8-127">3</span><span class="sxs-lookup"><span data-stu-id="d61b8-127">3</span></span>|<span data-ttu-id="d61b8-128">2</span><span class="sxs-lookup"><span data-stu-id="d61b8-128">2</span></span>|  
|<span data-ttu-id="d61b8-129">2.1</span><span class="sxs-lookup"><span data-stu-id="d61b8-129">2.1</span></span>|<span data-ttu-id="d61b8-130">2</span><span class="sxs-lookup"><span data-stu-id="d61b8-130">2</span></span>|<span data-ttu-id="d61b8-131">2</span><span class="sxs-lookup"><span data-stu-id="d61b8-131">2</span></span>|  
|<span data-ttu-id="d61b8-132">-2.1</span><span class="sxs-lookup"><span data-stu-id="d61b8-132">-2.1</span></span>|<span data-ttu-id="d61b8-133">-2</span><span class="sxs-lookup"><span data-stu-id="d61b8-133">-2</span></span>|<span data-ttu-id="d61b8-134">-2</span><span class="sxs-lookup"><span data-stu-id="d61b8-134">-2</span></span>|  
|<span data-ttu-id="d61b8-135">-2.5</span><span class="sxs-lookup"><span data-stu-id="d61b8-135">-2.5</span></span>|<span data-ttu-id="d61b8-136">-3</span><span class="sxs-lookup"><span data-stu-id="d61b8-136">-3</span></span>|<span data-ttu-id="d61b8-137">-2</span><span class="sxs-lookup"><span data-stu-id="d61b8-137">-2</span></span>|  
|<span data-ttu-id="d61b8-138">-2.8</span><span class="sxs-lookup"><span data-stu-id="d61b8-138">-2.8</span></span>|<span data-ttu-id="d61b8-139">-3</span><span class="sxs-lookup"><span data-stu-id="d61b8-139">-3</span></span>|<span data-ttu-id="d61b8-140">-3</span><span class="sxs-lookup"><span data-stu-id="d61b8-140">-3</span></span>|  
|<span data-ttu-id="d61b8-141">-3.5</span><span class="sxs-lookup"><span data-stu-id="d61b8-141">-3.5</span></span>|<span data-ttu-id="d61b8-142">-4</span><span class="sxs-lookup"><span data-stu-id="d61b8-142">-4</span></span>|<span data-ttu-id="d61b8-143">-4</span><span class="sxs-lookup"><span data-stu-id="d61b8-143">-4</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="d61b8-144">下面的示例演示如何将 <xref:System.Math.Round%2A?displayProperty=nameWithType> 方法与 `MidpointRounding` 枚举结合在一起：</span><span class="sxs-lookup"><span data-stu-id="d61b8-144">The following example demonstrates the <xref:System.Math.Round%2A?displayProperty=nameWithType> method in conjunction with the `MidpointRounding` enumeration:</span></span>
  
 [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]
 [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]
 [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AwayFromZero">
      <MemberSignature Language="C#" Value="AwayFromZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding AwayFromZero = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.AwayFromZero" />
      <MemberSignature Language="VB.NET" Value="AwayFromZero" />
      <MemberSignature Language="C++ CLI" Value="AwayFromZero" />
      <MemberSignature Language="F#" Value="AwayFromZero = 1" Usage="System.MidpointRounding.AwayFromZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d61b8-145">当一个数字是其他两个数字的中间值时，会将其舍入为两个数字中从零开始较接近的数字。</span><span class="sxs-lookup"><span data-stu-id="d61b8-145">When a number is halfway between two others, it is rounded toward the nearest number that is away from zero.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToEven">
      <MemberSignature Language="C#" Value="ToEven" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToEven = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToEven" />
      <MemberSignature Language="VB.NET" Value="ToEven" />
      <MemberSignature Language="C++ CLI" Value="ToEven" />
      <MemberSignature Language="F#" Value="ToEven = 0" Usage="System.MidpointRounding.ToEven" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d61b8-146">当一个数字是其他两个数字的中间值时，会将其舍入为最接近的偶数。</span><span class="sxs-lookup"><span data-stu-id="d61b8-146">When a number is halfway between two others, it is rounded toward the nearest even number.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToNegativeInfinity">
      <MemberSignature Language="C#" Value="ToNegativeInfinity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToNegativeInfinity = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToNegativeInfinity" />
      <MemberSignature Language="VB.NET" Value="ToNegativeInfinity" />
      <MemberSignature Language="C++ CLI" Value="ToNegativeInfinity" />
      <MemberSignature Language="F#" Value="ToNegativeInfinity = 3" Usage="System.MidpointRounding.ToNegativeInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d61b8-147">当一个数字是其他两个数字的中间值时，会将其舍入为最接近且不大于无限精确的结果。</span><span class="sxs-lookup"><span data-stu-id="d61b8-147">When a number is halfway between two others, it is rounded toward the result closest to and no greater than the infinitely precise result.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToPositiveInfinity">
      <MemberSignature Language="C#" Value="ToPositiveInfinity" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToPositiveInfinity = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToPositiveInfinity" />
      <MemberSignature Language="VB.NET" Value="ToPositiveInfinity" />
      <MemberSignature Language="C++ CLI" Value="ToPositiveInfinity" />
      <MemberSignature Language="F#" Value="ToPositiveInfinity = 4" Usage="System.MidpointRounding.ToPositiveInfinity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d61b8-148">当一个数字是其他两个数字的中间值时，会将其舍入为最接近且不小于无限精确的结果。</span><span class="sxs-lookup"><span data-stu-id="d61b8-148">When a number is halfway between two others, it is rounded toward the result closest to and no less than the infinitely precise result.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ToZero">
      <MemberSignature Language="C#" Value="ToZero" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.MidpointRounding ToZero = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.MidpointRounding.ToZero" />
      <MemberSignature Language="VB.NET" Value="ToZero" />
      <MemberSignature Language="C++ CLI" Value="ToZero" />
      <MemberSignature Language="F#" Value="ToZero = 2" Usage="System.MidpointRounding.ToZero" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Intrinsics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.MidpointRounding</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d61b8-149">当一个数字是其他两个数字的中间值时，会将其舍入为最接近结果，而不是无限精确的结果。</span><span class="sxs-lookup"><span data-stu-id="d61b8-149">When a number is halfway between two others, it is rounded toward the result closest to and no greater in magnitude than the infinitely precise result.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
