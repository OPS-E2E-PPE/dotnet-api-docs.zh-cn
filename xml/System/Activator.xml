<Type Name="Activator" FullName="System.Activator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de59f019da85bff1f8225126ab9fa90f64187706" /><Meta Name="ms.sourcegitcommit" Value="19810b7f44c3fa6cc5f0af0391e435c59897b089" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/07/2020" /><Meta Name="ms.locfileid" Value="75707981" /></Metadata><TypeSignature Language="C#" Value="public sealed class Activator : System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activator extends System.Object implements class System.Runtime.InteropServices._Activator" />
  <TypeSignature Language="DocId" Value="T:System.Activator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activator&#xA;Implements _Activator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activator sealed : System::Runtime::InteropServices::_Activator" />
  <TypeSignature Language="F#" Value="type Activator = class&#xA;    interface _Activator" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Activator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Activator))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6cc05-101">包含特定的方法，用以在本地或从远程创建对象类型，或获取对现有远程对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-101">Contains methods to create types of objects locally or remotely, or obtain references to existing remote objects.</span></span> <span data-ttu-id="6cc05-102">此类不能被继承。</span><span class="sxs-lookup"><span data-stu-id="6cc05-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-103"><xref:System.Activator.CreateInstance%2A> 方法通过调用与指定参数匹配程度最高的构造函数来创建在程序集中定义的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-103">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type defined in an assembly by invoking the constructor that best matches the specified arguments.</span></span> <span data-ttu-id="6cc05-104">如果未指定任何参数，则调用不带任何参数的构造函数（即无参数的构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-104">If no arguments are specified, the constructor that takes no parameters, that is, the parameterless constructor, is invoked.</span></span>  
  
 <span data-ttu-id="6cc05-105">您必须具有足够的权限才能搜索和调用构造函数;否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-105">You must have sufficient permission to search for and call a constructor; otherwise, an exception is thrown.</span></span> <span data-ttu-id="6cc05-106">默认情况下，在搜索构造函数期间只考虑公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-106">By default, only public constructors are considered during the search for a constructor.</span></span> <span data-ttu-id="6cc05-107">如果找不到任何构造函数或无参数构造函数，则会引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-107">If no constructor or parameterless constructor can be found, an exception is thrown.</span></span>  
  
 <span data-ttu-id="6cc05-108">联编程序参数指定一个对象，该对象在程序集上搜索合适的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-108">A binder parameter specifies an object that searches an assembly for a suitable constructor.</span></span> <span data-ttu-id="6cc05-109">您可以指定自己的联编程序和搜索条件。</span><span class="sxs-lookup"><span data-stu-id="6cc05-109">You can specify your own binder and search criteria.</span></span> <span data-ttu-id="6cc05-110">如果未指定联编程序，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-110">If no binder is specified, a default binder is used.</span></span> <span data-ttu-id="6cc05-111">有关更多信息，请参见 <xref:System.Reflection.Binder?displayProperty=nameWithType> 和 <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="6cc05-111">For more information, see the <xref:System.Reflection.Binder?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags?displayProperty=nameWithType> classes.</span></span>  
  
 <span data-ttu-id="6cc05-112">证据参数会影响构造函数的安全策略和权限。</span><span class="sxs-lookup"><span data-stu-id="6cc05-112">An evidence parameter affects the security policy and permissions for the constructor.</span></span> <span data-ttu-id="6cc05-113">有关更多信息，请参见 <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="6cc05-113">For more information, see the <xref:System.Security.Policy.Evidence?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="6cc05-114">可以在本地或远程站点创建类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-114">An instance of a type can be created at a local or remote site.</span></span> <span data-ttu-id="6cc05-115">如果类型是远程创建的，则激活特性参数将指定远程站点的 URI。</span><span class="sxs-lookup"><span data-stu-id="6cc05-115">If the type is created remotely, an activation attribute parameter specifies the URI of the remote site.</span></span> <span data-ttu-id="6cc05-116">创建实例的调用可能会在到达远程站点之前通过中间站点。</span><span class="sxs-lookup"><span data-stu-id="6cc05-116">The call to create the instance might pass through intermediary sites before it reaches the remote site.</span></span> <span data-ttu-id="6cc05-117">其他激活属性可以修改调用在远程和中间站点上的运行环境或上下文。</span><span class="sxs-lookup"><span data-stu-id="6cc05-117">Other activation attributes can modify the environment, or context, in which the call operates at the remote and intermediary sites.</span></span>  
  
 <span data-ttu-id="6cc05-118">如果实例是在本地创建的，则返回对该对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-118">If the instance is created locally, a reference to that object is returned.</span></span> <span data-ttu-id="6cc05-119">如果实例是远程创建的，则返回对代理的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-119">If the instance is created remotely, a reference to a proxy is returned.</span></span> <span data-ttu-id="6cc05-120">远程对象通过代理操作，就像它是本地对象一样。</span><span class="sxs-lookup"><span data-stu-id="6cc05-120">The remote object is manipulated through the proxy as if it were a local object.</span></span>  
  
 <span data-ttu-id="6cc05-121"><xref:System.Activator.GetObject%2A> 方法为当前正在运行的远程对象、服务器激活的已知对象或 XML Web service 创建代理。</span><span class="sxs-lookup"><span data-stu-id="6cc05-121">The <xref:System.Activator.GetObject%2A> method creates a proxy to a currently running remote object, server-activated well-known object, or XML Web service.</span></span> <span data-ttu-id="6cc05-122">可以指定连接介质，即通道。</span><span class="sxs-lookup"><span data-stu-id="6cc05-122">You can specify the connection medium, that is, the channel.</span></span> <span data-ttu-id="6cc05-123">有关更多信息，请参见 <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="6cc05-123">For more information, see the <xref:System.Runtime.Remoting.Channels.ChannelServices?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="6cc05-124">程序集包含类型定义。</span><span class="sxs-lookup"><span data-stu-id="6cc05-124">Assemblies contain type definitions.</span></span> <span data-ttu-id="6cc05-125"><xref:System.Activator.CreateInstance%2A> 方法从当前运行的程序集创建类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-125">The <xref:System.Activator.CreateInstance%2A> method creates an instance of a type from a currently running assembly.</span></span> <span data-ttu-id="6cc05-126"><xref:System.Activator.CreateInstanceFrom%2A> 方法从包含程序集的文件创建实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-126">The <xref:System.Activator.CreateInstanceFrom%2A> method creates an instance from a file that contains an assembly.</span></span> <span data-ttu-id="6cc05-127"><xref:System.Activator.CreateComInstanceFrom%2A> 方法从包含程序集的文件创建 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-127">The <xref:System.Activator.CreateComInstanceFrom%2A> method creates an instance of a COM object from a file that contains an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cc05-128">下面的示例演示如何使用 <xref:System.Activator> 类在运行时动态构造对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-128">The following example shows how to use the <xref:System.Activator> class to dynamically construct objects at run time.</span></span>  
  
 [!code-cpp[ActivatorX#1](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#1)]
 [!code-csharp[ActivatorX#1](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#1)]
 [!code-vb[ActivatorX#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateComInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6cc05-129">创建指定名称的 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-129">Creates an instance of the COM object whose name is specified.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="6cc05-130">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-130">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-131">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-131">The name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="6cc05-132">使用已命名的程序集文件和无参数构造函数，创建指定名称的 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-132">Creates an instance of the COM object whose name is specified, using the named assembly file and the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-133">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-133">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-134">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-134">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-135">必须显式或默认情况下将值为 `true` <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 特性应用于 COM 类型，以便 <xref:System.Activator.CreateComInstanceFrom%2A> 方法可以创建该类型的实例;否则，会引发 <xref:System.TypeLoadException>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-135">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="6cc05-136">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-136">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-137">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于创建非公共类型，前提是已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标记 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型的程序集的授予集被限制为调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-137">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-138">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-138">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-139">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-139">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-140"><paramref name="typeName" /> 或 <paramref name="assemblyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-140"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-141">无法通过 COM 创建实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-141">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="6cc05-142">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-142">-or-</span></span> 
 <span data-ttu-id="6cc05-143">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-143"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-144">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-144">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-145">未找到 <paramref name="assemblyName" />，或者你正在试图加载的模块未指定文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="6cc05-145"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-146">无法创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-146">Cannot create an instance of an abstract class.</span></span>  
  
 <span data-ttu-id="6cc05-147">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-147">-or-</span></span>  
  
 <span data-ttu-id="6cc05-148">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-148">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-149">调用方不能为非继承自 <see cref="T:System.MarshalByRefObject" /> 的对象提供激活属性。</span><span class="sxs-lookup"><span data-stu-id="6cc05-149">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-150"><paramref name="assemblyName" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6cc05-150"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-151">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-151">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-152">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateComInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateComInstanceFrom (assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateComInstanceFrom(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateComInstanceFrom : string * string * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateComInstanceFrom (assemblyName, typeName, hashValue, hashAlgorithm)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashValue" Type="System.Byte[]" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="6cc05-153">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-153">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-154">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-154">The name of the type to create an instance of.</span></span></param>
        <param name="hashValue"><span data-ttu-id="6cc05-155">计算所得的哈希代码的值。</span><span class="sxs-lookup"><span data-stu-id="6cc05-155">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="6cc05-156">用于对文件进行哈希计算并生成强名称的哈希算法。</span><span class="sxs-lookup"><span data-stu-id="6cc05-156">The hash algorithm used for hashing files and generating the strong name.</span></span></param>
        <summary><span data-ttu-id="6cc05-157">使用已命名的程序集文件和无参数构造函数，创建指定名称的 COM 对象的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-157">Creates an instance of the COM object whose name is specified, using the named assembly file and the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-158">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-158">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-159">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-159">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-160">必须显式或默认情况下将值为 `true` <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> 特性应用于 COM 类型，以便 <xref:System.Activator.CreateComInstanceFrom%2A> 方法可以创建该类型的实例;否则，会引发 <xref:System.TypeLoadException>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-160">A <xref:System.Runtime.InteropServices.ComVisibleAttribute?displayProperty=nameWithType> attribute with a value of `true` must be applied either explicitly or by default to the COM type so the <xref:System.Activator.CreateComInstanceFrom%2A> method can create an instance of that type; otherwise, <xref:System.TypeLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="6cc05-161">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-161">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-162">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于创建非公共类型，前提是已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标记 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型的程序集的授予集被限制为调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-162">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-163">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-163">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-164">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-164">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-165"><paramref name="typeName" /> 或 <paramref name="assemblyName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-165"><paramref name="typeName" /> or <paramref name="assemblyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-166"><paramref name="assemblyName" /> 为空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6cc05-166"><paramref name="assemblyName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="6cc05-167">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-167">An assembly or module was loaded twice with two different evidences.</span></span>
        
<span data-ttu-id="6cc05-168">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-168">-or-</span></span> 
 <span data-ttu-id="6cc05-169"><paramref name="assemblyName" /> 超过系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="6cc05-169"><paramref name="assemblyName" /> is longer than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-170">未找到 <paramref name="assemblyName" />，或者你正在试图加载的模块未指定文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="6cc05-170"><paramref name="assemblyName" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-171"><paramref name="assemblyName" /> 已找到，但无法加载。</span><span class="sxs-lookup"><span data-stu-id="6cc05-171"><paramref name="assemblyName" /> is found but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-172"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-172"><paramref name="assemblyName" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-173">指定了不以“file://”开头的基本代码，且没有所需的 <see langword="WebPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-173">A code base that does not start with "file://" was specified without the required <see langword="WebPermission" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-174">无法通过 COM 创建实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-174">An instance cannot be created through COM.</span></span>  
  
<span data-ttu-id="6cc05-175">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-175">-or-</span></span> 
 <span data-ttu-id="6cc05-176">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-176"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-177">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-177">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-178">无法创建抽象类的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-178">An instance of an abstract class cannot be created.</span></span>  
  
 <span data-ttu-id="6cc05-179">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-179">-or-</span></span>  
  
 <span data-ttu-id="6cc05-180">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-180">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-181">调用方不能为非继承自 <see cref="T:System.MarshalByRefObject" /> 的对象提供激活属性。</span><span class="sxs-lookup"><span data-stu-id="6cc05-181">The caller cannot provide activation attributes for an object that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-182">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-182">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-183">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-184">用于读取以 "file://" 开头的 URI。</span><span class="sxs-lookup"><span data-stu-id="6cc05-184">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="6cc05-185">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-185">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="6cc05-186">用于读取不以 "file://" 开头的 URI。</span><span class="sxs-lookup"><span data-stu-id="6cc05-186">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6cc05-187">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-187">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance activationContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="6cc05-188">一个激活上下文对象，用于指定要创建的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-188">An activation context object that specifies the object to create.</span></span></param>
        <summary><span data-ttu-id="6cc05-189">创建类型的一个实例，该类型由指定的 <see cref="T:System.ActivationContext" /> 对象指定。</span><span class="sxs-lookup"><span data-stu-id="6cc05-189">Creates an instance of the type designated by the specified <see cref="T:System.ActivationContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="6cc05-190">要访问新创建的对象则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-190">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-191">方法为 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-191">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="6cc05-192">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-192">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-193">激活上下文在基于清单的激活过程中用于设置域策略并提供基于应用程序的安全模型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-193">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="6cc05-194"><xref:System.ActivationContext> 类包含一个 <xref:System.ApplicationIdentity> 对象，该对象提供对应用程序清单的访问。</span><span class="sxs-lookup"><span data-stu-id="6cc05-194">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="6cc05-195">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="6cc05-195">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type -&gt; obj" Usage="System.Activator.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-196">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-196">The type of object to create.</span></span></param>
        <summary><span data-ttu-id="6cc05-197">使用类型的无参数构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-197">Creates an instance of the specified type using that type's parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-198">对新创建对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-198">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-199">要调用的构造函数必须是可访问的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-199">The constructor to be invoked must be accessible.</span></span>  

 <span data-ttu-id="6cc05-200">方法为 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-200">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

> [!NOTE]
>  <span data-ttu-id="6cc05-201">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于访问非公共类型，前提是已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型的程序集的授予集被限制为调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-201">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-202">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-202">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-203">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-203">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cc05-204">下面的代码示例演示如何调用 <xref:System.Activator.CreateInstance%28System.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="6cc05-204">The following code example demonstrates how to call the <xref:System.Activator.CreateInstance%28System.Type%29> method.</span></span> <span data-ttu-id="6cc05-205">将创建几个不同类型的实例，并显示其默认值。</span><span class="sxs-lookup"><span data-stu-id="6cc05-205">Instances of several different types are created and their default values are displayed.</span></span>  
  
 [!code-cpp[ActivatorX#4](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/source2.cpp#4)]
 [!code-csharp[ActivatorX#4](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/source2.cs#4)]
 [!code-vb[ActivatorX#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/source2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-206"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-206"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-207"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-207"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="6cc05-208">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-208">-or-</span></span> 
 <span data-ttu-id="6cc05-209"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-209"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-210"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-210"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="6cc05-211">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-211">-or-</span></span> 
<span data-ttu-id="6cc05-212">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-212">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-213">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-213">-or-</span></span> 
<span data-ttu-id="6cc05-214">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-214">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-215">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-215">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="6cc05-216">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MemberAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-216">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="6cc05-217">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-217">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-218">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-218">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-219">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-219">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="6cc05-220">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MissingMemberException" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-220">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="6cc05-221">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-221">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6cc05-222"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="6cc05-222"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-223"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-223"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-224">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-224">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-225">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-225">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-226">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-226">for accessing nonpublic types regardless of their grant sets.</span></span> <span data-ttu-id="6cc05-227">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-227">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.ActivationContext activationContext, string[] activationCustomData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.ActivationContext,System.String[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(ActivationContext ^ activationContext, cli::array &lt;System::String ^&gt; ^ activationCustomData);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : ActivationContext * string[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (activationContext, activationCustomData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activationContext" Type="System.ActivationContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
        <Parameter Name="activationCustomData" Type="System.String[]" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="activationContext"><span data-ttu-id="6cc05-228">一个激活上下文对象，用于指定要创建的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-228">An activation context object that specifies the object to create.</span></span></param>
        <param name="activationCustomData"><span data-ttu-id="6cc05-229">一个包含自定义激活数据的 Unicode 字符串数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-229">An array of Unicode strings that contain custom activation data.</span></span></param>
        <summary><span data-ttu-id="6cc05-230">创建类型的一个实例，该类型由指定的 <see cref="T:System.ActivationContext" /> 对象指定，并由指定的自定义激活数据激活。</span><span class="sxs-lookup"><span data-stu-id="6cc05-230">Creates an instance of the type that is designated by the specified <see cref="T:System.ActivationContext" /> object and activated with the specified custom activation data.</span></span></summary>
        <returns><span data-ttu-id="6cc05-231">要访问新创建的对象则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-231">A handle that must be unwrapped to access the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-232">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-232">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-233">激活上下文在基于清单的激活过程中用于设置域策略并提供基于应用程序的安全模型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-233">The activation context is used during manifest-based activation to set up the domain policy and to provide an application-based security model.</span></span> <span data-ttu-id="6cc05-234"><xref:System.ActivationContext> 类包含一个 <xref:System.ApplicationIdentity> 对象，该对象提供对应用程序清单的访问。</span><span class="sxs-lookup"><span data-stu-id="6cc05-234">The <xref:System.ActivationContext> class contains an <xref:System.ApplicationIdentity> object that provides access to the application manifest.</span></span> <span data-ttu-id="6cc05-235">有关更多信息，请参见 <xref:System.Security.Policy.ApplicationSecurityManager> 类。</span><span class="sxs-lookup"><span data-stu-id="6cc05-235">For more information, see the <xref:System.Security.Policy.ApplicationSecurityManager> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ActivationContext" />
        <altmember cref="T:System.ApplicationIdentity" />
        <altmember cref="T:System.Security.Policy.ApplicationSecurityManager" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="6cc05-236">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-236">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="6cc05-237">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-237">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-238">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-238">The fully qualified name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="6cc05-239">使用已命名的程序集和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-239">Creates an instance of the type whose name is specified, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-240">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-240">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-241">方法为 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-241">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="6cc05-242">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-242">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-243">`assemblyName` 可以是以下之一：</span><span class="sxs-lookup"><span data-stu-id="6cc05-243">`assemblyName` can be either of the following:</span></span>  
  
-   <span data-ttu-id="6cc05-244">程序集的简单名称，没有路径或文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="6cc05-244">The simple name of an assembly, without its path or file extension.</span></span> <span data-ttu-id="6cc05-245">例如，您可以为 .\bin\TypeExtensions.dll. 的路径和名称指定的程序集指定 `TypeExtensions`</span><span class="sxs-lookup"><span data-stu-id="6cc05-245">For example, you would specify `TypeExtensions` for an assembly whose path and name are .\bin\TypeExtensions.dll.</span></span>  
  
-   <span data-ttu-id="6cc05-246">签名程序集的全名，由其简单名称、版本、区域性和公钥标记组成;例如，"TypeExtensions，Version = 1.0.0.0，Culture = 中立，PublicKeyToken = 181869f2f7435b51"。</span><span class="sxs-lookup"><span data-stu-id="6cc05-246">The full name of a signed assembly, which consists of its simple name, version, culture, and public key token; for example, "TypeExtensions, Version=1.0.0.0, Culture=neutral, PublicKeyToken=181869f2f7435b51".</span></span>  
  
 <span data-ttu-id="6cc05-247">有关公共语言运行时如何识别和加载程序集的详细信息，请参阅[运行时如何定位程序集](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md)。</span><span class="sxs-lookup"><span data-stu-id="6cc05-247">For more information on how the common language runtime identifies and loads assemblies, see [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span> <span data-ttu-id="6cc05-248">有关使用应用程序配置文件来定义程序集位置的信息，请参阅[指定程序集的位置](~/docs/framework/configure-apps/specify-assembly-location.md)。</span><span class="sxs-lookup"><span data-stu-id="6cc05-248">For information on using the application configuration file to define assembly locations, see [Specifying an Assembly's Location](~/docs/framework/configure-apps/specify-assembly-location.md).</span></span> <span data-ttu-id="6cc05-249">如果找到 `assemblyName`，它将加载到默认上下文中。</span><span class="sxs-lookup"><span data-stu-id="6cc05-249">If `assemblyName` is found, it is loaded in the default context.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-250">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于创建非公共类型，前提是已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标记 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型的程序集的授予集被限制为调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-250">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-251">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-251">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-252">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-252">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cc05-253">下面的示例在名为 `PersonInfo`的程序集中定义名为 `Person` 的类。</span><span class="sxs-lookup"><span data-stu-id="6cc05-253">The following example defines a class named `Person` in an assembly named `PersonInfo`.</span></span> <span data-ttu-id="6cc05-254">请注意，`Person` 类有两个构造函数，其中一个是无参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-254">Note that the `Person` class has two constructors, one of which is parameterless.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/personinfo.cs#1)]
 [!code-vb[System.Activator.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/personinfo.vb#1)]  
  
 <span data-ttu-id="6cc05-255">下面的示例调用 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 方法来实例化 `Person` 类。</span><span class="sxs-lookup"><span data-stu-id="6cc05-255">The following example calls the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method to instantiate the `Person` class.</span></span> <span data-ttu-id="6cc05-256">它需要将对 PersonInfo 的引用添加到该项目中。</span><span class="sxs-lookup"><span data-stu-id="6cc05-256">It requires a reference to PersonInfo.dll to be added to the project.</span></span> <span data-ttu-id="6cc05-257">由于 <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> 方法调用 `Person` 类无参数构造函数，因此该示例将值赋给其 `Name` 属性。</span><span class="sxs-lookup"><span data-stu-id="6cc05-257">Because the <xref:System.Activator.CreateInstance%28System.String%2CSystem.String%29> method calls the `Person` class parameterless constructor,  the example assigns a value to its `Name` property.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1.cs#2)]
 [!code-vb[System.Activator.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1.vb#2)]  
  
 <span data-ttu-id="6cc05-258">但是，通常调用 <xref:System.Activator.CreateInstance%2A> 来实例化跨计算机边界的类型或在设计时不知道的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-258">However, <xref:System.Activator.CreateInstance%2A> is frequently called to instantiate a type that crosses machine boundaries or that is not known at design time.</span></span> <span data-ttu-id="6cc05-259">在这种情况下，不能在项目中包括对程序集的引用，并且无法对类型的成员进行早期绑定调用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-259">In this case, you cannot include a reference to the assembly in the project and cannot make early-bound calls to the type's members.</span></span> <span data-ttu-id="6cc05-260">若要解决此限制，以下示例使用 <xref:System.Activator.CreateInstance%2A> 方法和反射来向 `Person` 对象的 `Name` 属性赋值并显示其值。</span><span class="sxs-lookup"><span data-stu-id="6cc05-260">To work around this limitation, the following example uses the <xref:System.Activator.CreateInstance%2A> method along with reflection to assign a value to the `Person` object's `Name` property and to display its value.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstanceex1a.cs#3)]
 [!code-vb[System.Activator.CreateInstance#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstanceex1a.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-261"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-261"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-262">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-262">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-263">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-263"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-264">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-264"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-265">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-265">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-266">你无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-266">You cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-267">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-267">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-268">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-268">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-269">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-269">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-270"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-270"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-271">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-271">-or-</span></span> 
<span data-ttu-id="6cc05-272">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-272">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-273">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-273">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-274">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-274">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="6cc05-275">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-275">-or-</span></span>  
  
 <span data-ttu-id="6cc05-276">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="6cc05-276">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-277">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-277">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-278">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-278">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-279">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-279">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-280">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-280">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, bool nonPublic);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * bool -&gt; obj" Usage="System.Activator.CreateInstance (type, nonPublic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="nonPublic" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-281">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-281">The type of object to create.</span></span></param>
        <param name="nonPublic"><span data-ttu-id="6cc05-282">如果公共或非公共无参数构造函数可以匹配，则为 <see langword="true" />；如果只有公共无参数构造函数可以匹配，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-282"><see langword="true" /> if a public or nonpublic parameterless constructor can match; <see langword="false" /> if only a public parameterless constructor can match.</span></span></param>
        <summary><span data-ttu-id="6cc05-283">使用类型的无参数构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-283">Creates an instance of the specified type using that type's parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-284">对新创建对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-284">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

 <span data-ttu-id="6cc05-285">方法为 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-285">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

> [!NOTE]
>  <span data-ttu-id="6cc05-286">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于访问非公共类型和成员（如果已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型和成员的程序集的授予集被限制为调用方的授权集或其子集）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-286">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-287">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-287">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-288">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-288">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-289"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-289"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-290"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-290"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="6cc05-291">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-291">-or-</span></span> 
 <span data-ttu-id="6cc05-292"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-292"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-293"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-293"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="6cc05-294">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-294">-or-</span></span> 
<span data-ttu-id="6cc05-295">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-295">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-296">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-296">-or-</span></span> 
<span data-ttu-id="6cc05-297">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-297">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-298">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-298">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-299">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-299">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-300">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-300">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-301">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-301">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-302">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-302">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6cc05-303"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="6cc05-303"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-304"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-304"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-305">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-305">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-306">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-306">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-307">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-307">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-308">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-308">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, params object[] args);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args)" />
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-309">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-309">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-310">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-310">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-311">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-311">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <summary><span data-ttu-id="6cc05-312">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-312">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-313">对新创建对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-313">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-314">要调用的构造函数必须是可访问的，并且必须提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="6cc05-314">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
 <span data-ttu-id="6cc05-315">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-315">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="6cc05-316">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于访问非公共类型，前提是已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型的程序集的授予集被限制为调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-316">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-317">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-317">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-318">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-318">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cc05-319">下面的示例调用 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 方法来创建 <xref:System.String> 对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-319">The following example calls the  <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to create a <xref:System.String> object.</span></span> <span data-ttu-id="6cc05-320">它调用 <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> 构造函数来实例化一个字符串，该字符串包含从第十四个位置开始的字符数组中的十个元素。</span><span class="sxs-lookup"><span data-stu-id="6cc05-320">It calls the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> constructor to instantiate a string that contains ten elements from a character array starting at the fourteenth position.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/CreateInstance5.cs#5)]
 [!code-vb[System.Activator.CreateInstance#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/CreateInstance5.vb#5)]  
  
 <span data-ttu-id="6cc05-321">下面的示例创建一个交错数组，其元素是要传递到 <xref:System.String> 构造函数的参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-321">The following example creates a jagged array whose elements are arguments to be passed to a <xref:System.String> constructor.</span></span> <span data-ttu-id="6cc05-322">然后，该示例将每个数组传递到 <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> 方法，以调用适当的字符串构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-322">The example then passes each array to the <xref:System.Activator.CreateInstance%28System.Type%2CSystem.Object%5B%5D%29> method to invoke the appropriate string constructor.</span></span>  
  
 [!code-csharp[System.Activator.CreateInstance#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activator.createinstance/cs/createinstance2.cs#4)]
 [!code-vb[System.Activator.CreateInstance#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activator.createinstance/vb/createinstance2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-323"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-323"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-324"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-324"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="6cc05-325">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-325">-or-</span></span> 
 <span data-ttu-id="6cc05-326"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-326"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-327"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-327"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="6cc05-328">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-328">-or-</span></span> 
<span data-ttu-id="6cc05-329">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-329">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-330">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-330">-or-</span></span> 
<span data-ttu-id="6cc05-331">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-331">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="6cc05-332">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-332">-or-</span></span> 
<span data-ttu-id="6cc05-333">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-333">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-334">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-334">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="6cc05-335">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MemberAccessException" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-335">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="6cc05-336">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-336">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-337">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-337">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-338">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-338">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="6cc05-339">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MissingMemberException" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-339">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="6cc05-340">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-340">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6cc05-341"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="6cc05-341"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-342"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-342"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-343">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-343">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-344">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-344">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-345">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-345">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-346">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-346">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="6cc05-347">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="6cc05-347">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="6cc05-348">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-348">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="6cc05-349">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-349">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-350">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-350">The fully qualified name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="6cc05-351">使用命名的程序集和无参数构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-351">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-352">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-352">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-353">方法为 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-353">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="6cc05-354">当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用 <xref:System.Activator.CreateInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-354">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="6cc05-355">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-355">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-356">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-356">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-357"><paramref name="typeName" /> 或 <paramref name="domain" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-357"><paramref name="typeName" /> or <paramref name="domain" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-358">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-358">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-359">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-359"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-360">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-360"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-361">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-361">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-362">无法创建抽象类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-362">Cannot create an instance of an abstract type.</span></span>  
  
 <span data-ttu-id="6cc05-363">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-363">-or-</span></span>  
  
 <span data-ttu-id="6cc05-364">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-364">This member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-365">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-365">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-366">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-366">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-367">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-367">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-368"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-368"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-369">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-369">-or-</span></span> 
<span data-ttu-id="6cc05-370">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-370">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-371">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-371">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-372">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-372">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="6cc05-373">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-373">-or-</span></span>  
  
 <span data-ttu-id="6cc05-374">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="6cc05-374">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-375">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-375">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-376">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-376">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-377">用于在所有类型成员上调用操作的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-377">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="6cc05-378">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-378">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-379">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-379">requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-380">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-380">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="6cc05-381">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-381">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="6cc05-382">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-382">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-383">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-383">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-384">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-384">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-385">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-385">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-386">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-386">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-387">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-387">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-388">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-388">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-389">使用已命名的程序集和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-389">Creates an instance of the type whose name is specified, using the named assembly and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-390">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-390">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-391">方法为 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-391">The method returns `null` for the <xref:System.Nullable%601> instances.</span></span>

 <span data-ttu-id="6cc05-392">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-392">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-393">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于创建非公共类型，前提是已向调用方授予 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，而非公共类型的授予集限制为调用方的授权集或其子集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-393">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-394">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-394">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-395">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-395">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-396"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-396"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-397">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-397">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-398">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-398"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-399">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-399"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-400">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-400">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-401">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-401">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-402">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-402">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-403">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-403">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-404">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-404">-or-</span></span> 
 <span data-ttu-id="6cc05-405"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-405"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="6cc05-406">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-406">-or-</span></span> 
 <span data-ttu-id="6cc05-407"><paramref name="activationAttributes" /> 不是 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-407"><paramref name="activationAttributes" /> is not a <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /></span></span>  
  
<span data-ttu-id="6cc05-408">数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-408">array.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-409"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-409"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-410">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-410">-or-</span></span> 
<span data-ttu-id="6cc05-411">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-411">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-412">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-412">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-413">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-413">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="6cc05-414">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-414">-or-</span></span>  
  
 <span data-ttu-id="6cc05-415">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="6cc05-415">The assembly name or code base is invalid.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-416">在 <paramref name="activationAttributes" /> 中指定的目标中尝试远程激活时出错。</span><span class="sxs-lookup"><span data-stu-id="6cc05-416">An error occurred when attempting remote activation in a target specified in <paramref name="activationAttributes" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-417">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-417">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-418">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-418">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-419">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-419">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-420">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-420">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, object[] args, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, object[] args, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, cli::array &lt;System::Object ^&gt; ^ args, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj[] * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, args, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="args" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-421">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-421">The type of object to create.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-422">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-422">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-423">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-423">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-424">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-424">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-425">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-425">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-426">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-426">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-427">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-427">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-428">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-428">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-429">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-429">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-430">对新创建对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-430">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-431">要调用的构造函数必须是可访问的，并且必须提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="6cc05-431">The constructor to be invoked must be accessible and must provide the most specific match with the specified argument list.</span></span>  
  
 <span data-ttu-id="6cc05-432">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-432">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="6cc05-433">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于访问非公共类型，前提是已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型的程序集的授予集被限制为调用方的授予集或其子集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-433">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-434">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-434">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-435">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-435">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-436"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-436"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-437"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-437"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="6cc05-438">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-438">-or-</span></span> 
 <span data-ttu-id="6cc05-439"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-439"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-440"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-440"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="6cc05-441">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-441">-or-</span></span> 
<span data-ttu-id="6cc05-442">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-442">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-443">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-443">-or-</span></span> 
 <span data-ttu-id="6cc05-444"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-444"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="6cc05-445">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-445">-or-</span></span> 
<span data-ttu-id="6cc05-446">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-446">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="6cc05-447">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-447">-or-</span></span> 
<span data-ttu-id="6cc05-448">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-448">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-449">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-449">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-450">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-450">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-451">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-451">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-452">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-452">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-453">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-453">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6cc05-454"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="6cc05-454"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-455"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-455"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-456">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-456">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-457">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-457">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-458">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-458">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-459">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-459">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-460">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-460">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-461">影响 <paramref name="type" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-461">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="6cc05-462">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-462">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-463">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="type" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-463">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="6cc05-464">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-464">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-465">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-465">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-466">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-466">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-467">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="type" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-467">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="6cc05-468">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-468">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="6cc05-469">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-469">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-470">对新创建对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-470">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-471">要调用的构造函数必须在指定的联编程序和绑定特性的约束下，提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="6cc05-471">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
  <span data-ttu-id="6cc05-472">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-472">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="6cc05-473">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于访问非公共类型和成员（如果已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型和成员的程序集的授予集被限制为调用方的授权集或其子集）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-473">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-474">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-474">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-475">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-475">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-476"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-476"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-477"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-477"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="6cc05-478">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-478">-or-</span></span> 
 <span data-ttu-id="6cc05-479"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-479"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-480"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-480"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="6cc05-481">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-481">-or-</span></span> 
<span data-ttu-id="6cc05-482">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-482">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-483">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-483">-or-</span></span> 
<span data-ttu-id="6cc05-484">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-484">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="6cc05-485">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-485">-or-</span></span> 
<span data-ttu-id="6cc05-486">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-486">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-487">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-487">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-488">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-488">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-489">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-489">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-490">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-490">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-491">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-491">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6cc05-492"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="6cc05-492"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-493"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-493"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-494">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-494">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-495">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-495">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-496">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-496">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-497">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-497">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (Type type, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.Type type, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(Type ^ type, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; obj" Usage="System.Activator.CreateInstance (type, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-498">要创建的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-498">The type of object to create.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-499">影响 <paramref name="type" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-499">A combination of zero or more bit flags that affect the search for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="6cc05-500">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-500">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-501">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="type" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-501">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="6cc05-502">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-502">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-503">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-503">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-504">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-504">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-505">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="type" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-505">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="type" /> constructor.</span></span> <span data-ttu-id="6cc05-506">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-506">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-507">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-507">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-508">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-508">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-509">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-509">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-510">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-510">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-511">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-511">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-512">使用与指定参数匹配程度最高的构造函数创建指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-512">Creates an instance of the specified type using the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-513">对新创建对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-513">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-514">要调用的构造函数必须在指定的联编程序和绑定特性的约束下，提供与指定参数列表最具体的匹配项。</span><span class="sxs-lookup"><span data-stu-id="6cc05-514">The constructor to be invoked must provide the most specific match with the specified argument list under the constraints of the specified binder and binding attributes.</span></span>  
  
 <span data-ttu-id="6cc05-515">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-515">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="6cc05-516">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于访问非公共类型和成员（如果已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标记 <xref:System.Security.Permissions.ReflectionPermission>，以及非公共类型和成员的授予集是否限制为调用方的授权集或其子集）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-516">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-517">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-517">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-518">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-518">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-519"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-519"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="6cc05-520"><paramref name="type" /> 不是 <see langword="RuntimeType" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-520"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="6cc05-521">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-521">-or-</span></span> 
 <span data-ttu-id="6cc05-522"><paramref name="type" /> 是开放式泛型类型（即，<see cref="P:System.Type.ContainsGenericParameters" /> 属性将返回 <see langword="true" />）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-522"><paramref name="type" /> is an open generic type (that is, the <see cref="P:System.Type.ContainsGenericParameters" /> property returns <see langword="true" />).</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-523"><paramref name="type" /> 不能为 <see cref="T:System.Reflection.Emit.TypeBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-523"><paramref name="type" /> cannot be a <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span></span>  
  
<span data-ttu-id="6cc05-524">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-524">-or-</span></span> 
<span data-ttu-id="6cc05-525">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-525">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-526">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-526">-or-</span></span> 
 <span data-ttu-id="6cc05-527"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-527"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="6cc05-528">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-528">-or-</span></span> 
<span data-ttu-id="6cc05-529">包含 <paramref name="type" /> 的程序集是一个用 <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" /> 创建的动态程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-529">The assembly that contains <paramref name="type" /> is a dynamic assembly that was created with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Save" />.</span></span>  
  
<span data-ttu-id="6cc05-530">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-530">-or-</span></span> 
<span data-ttu-id="6cc05-531">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-531">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-532">正在被调用的构造函数引发了一个异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-532">The constructor being called throws an exception.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-533">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-533">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-534">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-534">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-535">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-535">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-536">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-536">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="6cc05-537"><paramref name="type" /> 是一个 COM 对象，但用于获取类型的类标识符无效，或标识的类未注册。</span><span class="sxs-lookup"><span data-stu-id="6cc05-537"><paramref name="type" /> is a COM object but the class identifier used to obtain the type is invalid, or the identified class is not registered.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-538"><paramref name="type" /> 不是有效类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-538"><paramref name="type" /> is not a valid type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-539">用于提供证据。</span><span class="sxs-lookup"><span data-stu-id="6cc05-539">for supplying evidence.</span></span> <span data-ttu-id="6cc05-540">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-540">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-541">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-541">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-542">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-542">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="6cc05-543">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-543">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="6cc05-544">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-544">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-545">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-545">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-546">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-546"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-547">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-547">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-548">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-548">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-549">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-549">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-550">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-550">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-551">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-551">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-552">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-552">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-553">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-553">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-554">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-554">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-555">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-555">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-556">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-556">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-557">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-557">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-558">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-558">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-559">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-559">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-560">使用指定的程序集和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-560">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-561">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-561">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-562">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-562">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-563">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-563">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>
 
> [!NOTE]
>  <span data-ttu-id="6cc05-564">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于创建非公共类型和成员（如果已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型和成员的程序集的授予集限制为调用方的授权集或其子集）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-564">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-565">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-565">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-566">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-566">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-567"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-567"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-568">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-568">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-569">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-569"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-570">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-570"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-571">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-571">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-572">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-572">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-573">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-573">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-574">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-574">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-575">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-575">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-576">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-576">-or-</span></span> 
 <span data-ttu-id="6cc05-577"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-577"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="6cc05-578">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-578">-or-</span></span> 
<span data-ttu-id="6cc05-579">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-579">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-580"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-580"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-581">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-581">-or-</span></span> 
<span data-ttu-id="6cc05-582">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-582">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-583">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-583">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-584">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-584">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="6cc05-585">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-585">-or-</span></span>  
  
 <span data-ttu-id="6cc05-586">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="6cc05-586">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-587">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-587">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-588">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-588">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-589">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-589">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-590">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-590">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="6cc05-591">在其中创建名为 <paramref name="typeName" /> 的类型的域。</span><span class="sxs-lookup"><span data-stu-id="6cc05-591">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="6cc05-592">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-592">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="6cc05-593">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-593">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-594">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-594">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-595">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-595"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-596">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-596">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-597">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-597">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-598">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-598">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-599">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-599">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-600">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-600">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-601">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-601">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-602">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-602">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-603">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-603">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-604">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-604">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-605">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-605">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-606">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-606">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-607">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-607">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-608">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-608">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-609">使用命名的程序集和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-609">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-610">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-610">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-611">当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用 <xref:System.Activator.CreateInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-611">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="6cc05-612">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-612">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>

 <span data-ttu-id="6cc05-613">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-613">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-614">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-614">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-615"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-615"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-616">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-616">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-617">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-617"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-618">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-618"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-619">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-619">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-620">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-620">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-621">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-621">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-622">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-622">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-623">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-623">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-624">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-624">-or-</span></span> 
 <span data-ttu-id="6cc05-625"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-625"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="6cc05-626">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-626">-or-</span></span> 
<span data-ttu-id="6cc05-627">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-627">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-628"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-628"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-629">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-629">-or-</span></span> 
<span data-ttu-id="6cc05-630">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-630">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-631">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-631">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-632">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-632">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="6cc05-633">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-633">-or-</span></span>  
  
 <span data-ttu-id="6cc05-634">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="6cc05-634">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-635">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-635">requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-636">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-636">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-637">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-637">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-638">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-638">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-639">用于在所有类型成员上调用操作的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-639">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="6cc05-640">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-640">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" Index="8" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="6cc05-641">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-641">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="6cc05-642">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-642">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-643">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-643">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-644">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-644"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-645">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-645">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-646">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-646">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-647">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-647">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-648">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-648">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-649">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-649">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-650">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-650">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-651">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-651">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-652">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-652">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-653">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-653">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-654">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-654">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-655">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-655">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-656">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-656">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-657">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-657">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="6cc05-658">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-658">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="6cc05-659">使用指定的程序集和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-659">Creates an instance of the type whose name is specified, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-660">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-660">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-661">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-661">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>

 <span data-ttu-id="6cc05-662">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-662">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-663">从 [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]开始，此方法可用于创建非公共类型和成员（如果已向调用方授予了 <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> 标志 <xref:System.Security.Permissions.ReflectionPermission>，以及包含非公共类型和成员的程序集的授予集限制为调用方的授权集或其子集）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-663">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to create nonpublic types and members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the assembly that contains the nonpublic types and members is restricted to the caller's grant set or to a subset thereof.</span></span> <span data-ttu-id="6cc05-664">（请参阅[反射的安全注意事项](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md)。）</span><span class="sxs-lookup"><span data-stu-id="6cc05-664">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="6cc05-665">若要使用此功能，应用程序应为 [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 或更高版本。</span><span class="sxs-lookup"><span data-stu-id="6cc05-665">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-666"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-666"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-667">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-667">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-668">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-668"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-669">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-669"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-670">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-670">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-671">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-671">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-672">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-672">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-673">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-673">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-674">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-674">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-675">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-675">-or-</span></span> 
 <span data-ttu-id="6cc05-676"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-676"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="6cc05-677">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-677">-or-</span></span> 
<span data-ttu-id="6cc05-678">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-678">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-679"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-679"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-680">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-680">-or-</span></span> 
<span data-ttu-id="6cc05-681">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-681">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-682">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-682">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-683">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-683">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="6cc05-684">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-684">-or-</span></span>  
  
 <span data-ttu-id="6cc05-685">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="6cc05-685">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-686">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-686">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-687">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-687">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-688">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-688">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-689">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-689">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstance (AppDomain domain, string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstance(class System.AppDomain domain, string assemblyName, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstance(AppDomain ^ domain, System::String ^ assemblyName, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstance (domain, assemblyName, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstance which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="6cc05-690">在其中创建名为 <paramref name="typeName" /> 的类型的域。</span><span class="sxs-lookup"><span data-stu-id="6cc05-690">The domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="6cc05-691">将在其中查找名为 <paramref name="typeName" /> 的类型的程序集的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-691">The name of the assembly where the type named <paramref name="typeName" /> is sought.</span></span> <span data-ttu-id="6cc05-692">如果 <paramref name="assemblyName" /> 为 <see langword="null" />，则搜索正在执行的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-692">If <paramref name="assemblyName" /> is <see langword="null" />, the executing assembly is searched.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-693">为其创建实例的类型的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-693">The fully qualified name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-694">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-694"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-695">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-695">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-696">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-696">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-697">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-697">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-698">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-698">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-699">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-699">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-700">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-700">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-701">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-701">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-702">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-702">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-703">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-703">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-704">通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-704">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object.</span></span> <span data-ttu-id="6cc05-705"><see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-705">The <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> specifies the URL that is required to activate a remote object.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="6cc05-706">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-706">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="6cc05-707">使用命名的程序集和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-707">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-708">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-708">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-709">方法为没有值的 <xref:System.Nullable%601> 实例返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="6cc05-709">The method returns `null` for the <xref:System.Nullable%601> instances with no value.</span></span>

 <span data-ttu-id="6cc05-710">当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用 <xref:System.Activator.CreateInstance%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-710">Use <xref:System.Activator.CreateInstance%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="6cc05-711">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-711">Use <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-712">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-712">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-713"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-713"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-714">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-714">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-715">在 <paramref name="assemblyName" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-715"><paramref name="typename" /> was not found in <paramref name="assemblyName" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-716">未找到 <paramref name="assemblyName" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-716"><paramref name="assemblyName" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-717">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-717">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-718">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-718">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-719">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-719">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException"><span data-ttu-id="6cc05-720">未通过 <see cref="Overload:System.Type.GetTypeFromProgID" /> 或 <see cref="Overload:System.Type.GetTypeFromCLSID" /> 获取 COM 类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-720">The COM type was not obtained through <see cref="Overload:System.Type.GetTypeFromProgID" /> or <see cref="Overload:System.Type.GetTypeFromCLSID" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-721">不支持创建 <see cref="T:System.TypedReference" />、<see cref="T:System.ArgIterator" />、<see cref="T:System.Void" /> 和 <see cref="T:System.RuntimeArgumentHandle" /> 类型，或者这些类型的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-721">Creation of <see cref="T:System.TypedReference" />, <see cref="T:System.ArgIterator" />, <see cref="T:System.Void" />, and <see cref="T:System.RuntimeArgumentHandle" /> types, or arrays of those types, is not supported.</span></span>  
  
<span data-ttu-id="6cc05-722">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-722">-or-</span></span> 
 <span data-ttu-id="6cc05-723"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-723"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span>  
  
<span data-ttu-id="6cc05-724">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-724">-or-</span></span> 
<span data-ttu-id="6cc05-725">最匹配 <paramref name="args" /> 的构造函数具有 <see langword="varargs" /> 参数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-725">The constructor that best matches <paramref name="args" /> has <see langword="varargs" /> arguments.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-726"><paramref name="assemblyName" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-726"><paramref name="assemblyName" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-727">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-727">-or-</span></span> 
<span data-ttu-id="6cc05-728">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-728">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-729">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-729">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="6cc05-730">一个程序集或模块用两个不同的证据加载了两次。</span><span class="sxs-lookup"><span data-stu-id="6cc05-730">An assembly or module was loaded twice with two different evidences.</span></span>  
  
 <span data-ttu-id="6cc05-731">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-731">-or-</span></span>  
  
 <span data-ttu-id="6cc05-732">程序集名称或基本代码无效。</span><span class="sxs-lookup"><span data-stu-id="6cc05-732">The assembly name or code base is invalid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-733">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-733">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-734">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-734">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-735">用于在所有类型成员上调用操作的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-735">for the ability to invoke operations on all type members.</span></span> <span data-ttu-id="6cc05-736">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-736">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-737">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-737">requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-738">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-738">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CreateInstance&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CreateInstance&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstance``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T CreateInstance();" />
      <MemberSignature Language="F#" Value="static member CreateInstance : unit -&gt; 'T" Usage="System.Activator.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="6cc05-739">要创建的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-739">The type to create.</span></span></typeparam>
        <summary><span data-ttu-id="6cc05-740">使用无参数构造函数，创建指定泛型类型参数所指定类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-740">Creates an instance of the type designated by the specified generic type parameter, using the parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-741">对新创建对象的引用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-741">A reference to the newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-742">编译器使用 <xref:System.Activator.CreateInstance%60%601> 泛型方法来实现由类型参数指定的类型的实例化。</span><span class="sxs-lookup"><span data-stu-id="6cc05-742">The <xref:System.Activator.CreateInstance%60%601> generic method is used by compilers to implement the instantiation of types specified by type parameters.</span></span> <span data-ttu-id="6cc05-743">例如，在下面的泛型方法中，`new T()` 的实现（`gcnew T()` 中C++）使用 <xref:System.Activator.CreateInstance%60%601> 泛型方法。</span><span class="sxs-lookup"><span data-stu-id="6cc05-743">For example, in the following generic method, the implementation of `new T()` (`gcnew T()` in C++) uses the <xref:System.Activator.CreateInstance%60%601> generic method.</span></span>  
  
 [!code-cpp[System.Activation.CreateInstance~~1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cpp/remarks.cpp#1)]
 [!code-csharp[System.Activation.CreateInstance~~1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.activation.createinstance~~1/cs/remarks.cs#1)]
 [!code-vb[System.Activation.CreateInstance~~1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.activation.createinstance~~1/vb/remarks.vb#1)]  
  
 <span data-ttu-id="6cc05-744">通常，应用程序代码中不使用 <xref:System.Activator.CreateInstance%60%601> 泛型方法，因为该类型在编译时必须是已知的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-744">In general, there is no use for the <xref:System.Activator.CreateInstance%60%601> generic method in application code, because the type must be known at compile time.</span></span> <span data-ttu-id="6cc05-745">如果该类型在编译时是已知的，则可以使用普通的实例化语法（ C#`new` 中的运算符，`New` Visual Basic C++，`gcnew` 中）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-745">If the type is known at compile time, normal instantiation syntax can be used (`new` operator in C#, `New` in Visual Basic, `gcnew` in C++).</span></span> <span data-ttu-id="6cc05-746">如果类型在编译时未知，则可以调用 <xref:System.Activator.CreateInstance%2A>的非泛型重载。</span><span class="sxs-lookup"><span data-stu-id="6cc05-746">If the type is not known at compile time, you can call a non-generic overload of <xref:System.Activator.CreateInstance%2A>.</span></span>  
  
 <span data-ttu-id="6cc05-747">不存在采用参数列表的 <xref:System.Activator.CreateInstance%60%601> 泛型方法的重载，因为 <xref:System.Activator.CreateInstance%2A> 的非泛型重载已经提供后期绑定构造函数解析。</span><span class="sxs-lookup"><span data-stu-id="6cc05-747">There are no overloads of the <xref:System.Activator.CreateInstance%60%601> generic method that take argument lists, because the non-generic overloads of <xref:System.Activator.CreateInstance%2A> already provide late-bound constructor resolution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MissingMethodException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="6cc05-748">在<see href="https://go.microsoft.com/fwlink/?LinkID=247912">适用于 Windows 应用商店应用的 .NET</see> 或<see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">可移植类库</see>中，改为捕获基类异常 <see cref="T:System.MissingMemberException" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-748">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="6cc05-749">无法创建抽象类的实例；或者，为 <typeparamref name="T" /> 指定的类型没有无参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-749">Cannot create an instance of an abstract class, or the type that is specified for <typeparamref name="T" /> does not have a parameterless constructor.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstanceFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6cc05-750">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-750">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="6cc05-751">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-751">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-752">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-752">The name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="6cc05-753">使用已命名的程序集文件和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-753">Creates an instance of the type whose name is specified, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-754">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-754">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-755">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-755">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-756">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-756">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cc05-757">下面的代码示例演示如何调用 <xref:System.Activator.CreateInstanceFrom%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="6cc05-757">The following code example demonstrates how to call the <xref:System.Activator.CreateInstanceFrom%2A> method.</span></span> <span data-ttu-id="6cc05-758">此代码示例是为 <xref:System.Activator> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-758">This code example is part of a larger example provided for the <xref:System.Activator> class.</span></span>  
  
 [!code-cpp[ActivatorX#3](~/samples/snippets/cpp/VS_Snippets_CLR/ActivatorX/cpp/ActivatorX.cpp#3)]
 [!code-csharp[ActivatorX#3](~/samples/snippets/csharp/VS_Snippets_CLR/ActivatorX/cs/ActivatorX.cs#3)]
 [!code-vb[ActivatorX#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ActivatorX/VB/ActivatorX.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-759"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-759"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-760">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-760">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-761">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-761"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-762">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-762"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-763">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-763">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-764">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-764">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-765">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-765">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-766">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-766">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-767"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-767"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-768">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-768">-or-</span></span> 
<span data-ttu-id="6cc05-769">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-769">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-770">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-770">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-771">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-771">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-772">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-772">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-773">允许搜索目录路径并读取其内容。</span><span class="sxs-lookup"><span data-stu-id="6cc05-773">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="6cc05-774">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-774">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-775">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-775">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-776">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-776">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="6cc05-777">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="6cc05-777">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="6cc05-778">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-778">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-779">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-779">The name of the type to create an instance of.</span></span></param>
        <summary><span data-ttu-id="6cc05-780">使用已命名的程序集文件和无参数构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-780">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-781">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-781">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-782">当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用 <xref:System.Activator.CreateInstanceFrom%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-782">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="6cc05-783">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-783">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-784">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-784">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="6cc05-785">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-785">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-786"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-786"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-787">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-787">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-788">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-788"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-789">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-789"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-790">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-790">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-791">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-791">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-792">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-792">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-793">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-793">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-794"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-794"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-795">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-795">-or-</span></span> 
<span data-ttu-id="6cc05-796">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-796">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-797">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-797">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-798">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-798">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-799">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-799">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-800">允许搜索目录路径并读取其内容。</span><span class="sxs-lookup"><span data-stu-id="6cc05-800">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="6cc05-801">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-801">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-802">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-802">requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-803">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-803">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstanceFrom (assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="6cc05-804">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-804">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-805">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-805">The name of the type to create an instance of.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-806">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-806">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-807">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-807">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-808">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-808">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-809">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-809">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-810">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-810">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-811">使用已命名的程序集文件和无参数构造函数，创建名称已指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-811">Creates an instance of the type whose name is specified, using the named assembly file and parameterless constructor.</span></span></summary>
        <returns><span data-ttu-id="6cc05-812">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-812">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-813">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-813">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-814">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-814">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-815"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-815"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-816">未找到匹配的公共构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-816">No matching public constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-817">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-817"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-818">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-818"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-819">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-819">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-820">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-820">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-821">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-821">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-822"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-822"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-823">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-823">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-824"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-824"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-825">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-825">-or-</span></span> 
<span data-ttu-id="6cc05-826">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-826">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-827">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-827">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-828">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-828">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-829">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-829">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-830">允许搜索目录路径并读取其内容。</span><span class="sxs-lookup"><span data-stu-id="6cc05-830">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="6cc05-831">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-831">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-832">用于访问非公共类型，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-832">for accessing nonpublic types regardless of their grant set.</span></span> <span data-ttu-id="6cc05-833">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-833">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="6cc05-834">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-834">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-835">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-835">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-836">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-836"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-837">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-837">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-838">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-838">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-839">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-839">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-840">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-840">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-841">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-841">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-842">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-842">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-843">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-843">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-844">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-844">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-845">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-845">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-846">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-846">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-847">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-847">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-848">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-848">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-849">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-849">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-850">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-850">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-851">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-851">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-852">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-852">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-853">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-853">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-854"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-854"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-855">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-855">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-856">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-856"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-857">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-857"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-858">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-858">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-859">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-859">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-860">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-860">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-861">调用方没有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-861">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-862"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-862"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-863"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-863"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-864">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-864">-or-</span></span> 
<span data-ttu-id="6cc05-865">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-865">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-866">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-866">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-867">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-867">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-868">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-868">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-869">允许搜索目录路径并读取其内容。</span><span class="sxs-lookup"><span data-stu-id="6cc05-869">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="6cc05-870">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-870">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-871">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-871">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-872">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-872">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="6cc05-873">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="6cc05-873">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="6cc05-874">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-874">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-875">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-875">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-876">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-876"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-877">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-877">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-878">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-878">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-879">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-879">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-880">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-880">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-881">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-881">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-882">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-882">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-883">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-883">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-884">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-884">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-885">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-885">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-886">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-886">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-887">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-887">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-888">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-888">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-889">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-889">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="6cc05-890">使用命名的程序集文件和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-890">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-891">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-891">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-892">当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用 <xref:System.Activator.CreateInstanceFrom%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-892">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="6cc05-893">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-893">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-894">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的异常部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-894">For information about other exceptions that can be thrown by invoked methods, see the Exceptions sections of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-895"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-895"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-896">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-896">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-897">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-897"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-898">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-898"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-899">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-899">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-900">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-900">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-901">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-901">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-902">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-902">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-903"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-903"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-904"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-904"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-905">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-905">-or-</span></span> 
 <span data-ttu-id="6cc05-906"><paramref name="assemblyName" /> 是针对晚于当前加载版本的公共语言运行时版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-906"><paramref name="assemblyName" /> was compiled for a version of the common language runtime that is later than the version that is currently loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-907">用于提供证据。</span><span class="sxs-lookup"><span data-stu-id="6cc05-907">for supplying evidence.</span></span> <span data-ttu-id="6cc05-908">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-908">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-909">允许搜索目录路径并读取其内容。</span><span class="sxs-lookup"><span data-stu-id="6cc05-909">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="6cc05-910">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-910">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-911">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-911">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-912">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-912">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-913">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-913">requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-914">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-914">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityInfo);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" Index="8" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="6cc05-915">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-915">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-916">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-916">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-917">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-917"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-918">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-918">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-919">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-919">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-920">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-920">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-921">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-921">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-922">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-922">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-923">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-923">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-924">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-924">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-925">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-925">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-926">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-926">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-927">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-927">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-928">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-928">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-929">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-929">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-930">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-930">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityInfo"><span data-ttu-id="6cc05-931">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-931">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="6cc05-932">使用指定的程序集文件和与指定参数匹配程度最高的构造函数来创建指定名称的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-932">Creates an instance of the type whose name is specified, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-933">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-933">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-934">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-934">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
 <span data-ttu-id="6cc05-935">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-935">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-936"><paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-936"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-937">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-937">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-938">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-938"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-939">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-939"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-940">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-940">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-941">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-941">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-942">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-942">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-943">调用方没有所要求的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-943">The caller does not have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-944"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-944"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-945"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-945"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-946">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-946">-or-</span></span> 
<span data-ttu-id="6cc05-947">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-947">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-948">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-948">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-949">用于在创建委托的实例时调用非托管代码的能力。</span><span class="sxs-lookup"><span data-stu-id="6cc05-949">for the ability to call unmanaged code when creating an instance of a delegate.</span></span> <span data-ttu-id="6cc05-950">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-950">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-951">允许搜索目录路径并读取其内容。</span><span class="sxs-lookup"><span data-stu-id="6cc05-951">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="6cc05-952">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-952">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-953">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-953">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-954">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-954">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceFrom">
      <MemberSignature Language="C#" Value="public static System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.Remoting.ObjectHandle CreateInstanceFrom(class System.AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes, class System.Security.Policy.Evidence securityAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::Remoting::ObjectHandle ^ CreateInstanceFrom(AppDomain ^ domain, System::String ^ assemblyFile, System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes, System::Security::Policy::Evidence ^ securityAttributes);" />
      <MemberSignature Language="F#" Value="static member CreateInstanceFrom : AppDomain * string * string * bool * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo * obj[] * System.Security.Policy.Evidence -&gt; System.Runtime.Remoting.ObjectHandle" Usage="System.Activator.CreateInstanceFrom (domain, assemblyFile, typeName, ignoreCase, bindingAttr, binder, args, culture, activationAttributes, securityAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Methods which use Evidence to sandbox are obsolete and will be removed in a future release of the .NET Framework. Please use an overload of CreateInstanceFrom which does not take an Evidence parameter. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="domain" Type="System.AppDomain" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyFile" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="typeName" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="6" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="7" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="activationAttributes" Type="System.Object[]" Index="8" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" Index="9" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="domain"><span data-ttu-id="6cc05-955">在其中创建名为 <paramref name="typeName" /> 的类型的远程域。</span><span class="sxs-lookup"><span data-stu-id="6cc05-955">The remote domain where the type named <paramref name="typeName" /> is created.</span></span></param>
        <param name="assemblyFile"><span data-ttu-id="6cc05-956">包含某程序集的文件的名称，将在该程序集内查找名为 <paramref name="typeName" /> 的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-956">The name of a file that contains an assembly where the type named <paramref name="typeName" /> is sought.</span></span></param>
        <param name="typeName"><span data-ttu-id="6cc05-957">要为其创建实例的类型的名称。</span><span class="sxs-lookup"><span data-stu-id="6cc05-957">The name of the type to create an instance of.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="6cc05-958">使用 <see langword="true" /> 指定对 <paramref name="typeName" /> 的搜索不区分大小写；使用 <see langword="false" /> 则指定搜索区分大小写。</span><span class="sxs-lookup"><span data-stu-id="6cc05-958"><see langword="true" /> to specify that the search for <paramref name="typeName" /> is not case-sensitive; <see langword="false" /> to specify that the search is case-sensitive.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="6cc05-959">影响 <paramref name="typeName" /> 构造函数搜索的零个或多个位标志的组合。</span><span class="sxs-lookup"><span data-stu-id="6cc05-959">A combination of zero or more bit flags that affect the search for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-960">如果 <paramref name="bindingAttr" /> 为零，则对公共构造函数进行区分大小写的搜索。</span><span class="sxs-lookup"><span data-stu-id="6cc05-960">If <paramref name="bindingAttr" /> is zero, a case-sensitive search for public constructors is conducted.</span></span></param>
        <param name="binder"><span data-ttu-id="6cc05-961">使用 <paramref name="bindingAttr" /> 和 <paramref name="args" /> 来查找和标识 <paramref name="typeName" /> 构造函数的对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-961">An object that uses <paramref name="bindingAttr" /> and <paramref name="args" /> to seek and identify the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-962">如果 <paramref name="binder" /> 为 <see langword="null" />，则使用默认联编程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-962">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="6cc05-963">与要调用构造函数的参数数量、顺序和类型匹配的参数数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-963">An array of arguments that match in number, order, and type the parameters of the constructor to invoke.</span></span> <span data-ttu-id="6cc05-964">如果 <paramref name="args" /> 为空数组或 <see langword="null" />，则调用不带任何参数的构造函数（无参数构造函数）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-964">If <paramref name="args" /> is an empty array or <see langword="null" />, the constructor that takes no parameters (the parameterless constructor) is invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="6cc05-965">区域性特定的信息，这些信息控制将 <paramref name="args" /> 强制转换为 <paramref name="typeName" /> 构造函数所声明的正式类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-965">Culture-specific information that governs the coercion of <paramref name="args" /> to the formal types declared for the <paramref name="typeName" /> constructor.</span></span> <span data-ttu-id="6cc05-966">如果 <paramref name="culture" /> 为 <see langword="null" />，则使用当前线程的 <see cref="T:System.Globalization.CultureInfo" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-966">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="6cc05-967">包含一个或多个可以参与激活的特性的数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-967">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="6cc05-968">这通常为包含单个 <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> 对象的数组，该对象指定激活远程对象所需的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-968">This is typically an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  
  
<span data-ttu-id="6cc05-969">此参数与客户端激活的对象相关。</span><span class="sxs-lookup"><span data-stu-id="6cc05-969">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="6cc05-970">客户端激活是一项传统技术，保留用于向后兼容，但不建议用于新的开发。</span><span class="sxs-lookup"><span data-stu-id="6cc05-970">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="6cc05-971">应改用 Windows Communication Foundation 来开发分布式应用程序。</span><span class="sxs-lookup"><span data-stu-id="6cc05-971">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <param name="securityAttributes"><span data-ttu-id="6cc05-972">用于做出安全策略决策和授予代码权限的信息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-972">Information used to make security policy decisions and grant code permissions.</span></span></param>
        <summary><span data-ttu-id="6cc05-973">使用命名的程序集文件和最匹配所指定参数的构造函数，来创建其名称在指定的远程域中指定的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="6cc05-973">Creates an instance of the type whose name is specified in the specified remote domain, using the named assembly file and the constructor that best matches the specified parameters.</span></span></summary>
        <returns><span data-ttu-id="6cc05-974">要访问新创建的实例则必须解包的句柄。</span><span class="sxs-lookup"><span data-stu-id="6cc05-974">A handle that must be unwrapped to access the newly created instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-975">当主机需要在具有受限安全权限的应用程序域中执行代码时，请使用 <xref:System.Activator.CreateInstanceFrom%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cc05-975">Use <xref:System.Activator.CreateInstanceFrom%2A> when a host needs to execute code in an application domain that has restricted security permissions.</span></span>  
  
 <span data-ttu-id="6cc05-976">使用 <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> 方法将返回值解包。</span><span class="sxs-lookup"><span data-stu-id="6cc05-976">Use the <xref:System.Runtime.Remoting.ObjectHandle.Unwrap%2A?displayProperty=nameWithType> method to unwrap the return value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6cc05-977">此方法使用 <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> 要求直接调用方具有完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-977">This method uses <xref:System.Security.Permissions.SecurityAction.LinkDemand?displayProperty=nameWithType> to require the immediate caller to have full trust.</span></span>  
  
 <span data-ttu-id="6cc05-978">有关可通过调用方法引发的其他异常的信息，请参阅 <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> 和 <xref:System.Activator.CreateInstance%2A> 方法的 "异常" 部分。</span><span class="sxs-lookup"><span data-stu-id="6cc05-978">For information about other exceptions that can be thrown by invoked methods, see the Exceptions section of the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> and <xref:System.Activator.CreateInstance%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-979"><paramref name="domain" /> 或 <paramref name="typeName" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-979"><paramref name="domain" /> or <paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="6cc05-980">未找到匹配的构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-980">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="6cc05-981">在 <paramref name="assemblyFile" /> 中未找到 <paramref name="typename" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-981"><paramref name="typename" /> was not found in <paramref name="assemblyFile" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="6cc05-982">未找到 <paramref name="assemblyFile" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-982"><paramref name="assemblyFile" /> was not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="6cc05-983">调用方没有权限调用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-983">The caller does not have permission to call this constructor.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-984">无法创建抽象类的实例，或者此成员是使用晚期绑定机制调用的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-984">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="6cc05-985">通过反射调用的构造函数引发异常。</span><span class="sxs-lookup"><span data-stu-id="6cc05-985">The constructor, which was invoked through reflection, threw an exception.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="6cc05-986">调用方确实具有所需的 <see cref="T:System.Security.Permissions.FileIOPermission" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-986">The caller does have the required <see cref="T:System.Security.Permissions.FileIOPermission" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="6cc05-987"><paramref name="activationAttributes" /> 不是空数组，且正在创建的类型不是从 <see cref="T:System.MarshalByRefObject" /> 派生得来的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-987"><paramref name="activationAttributes" /> is not an empty array, and the type being created does not derive from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="6cc05-988"><paramref name="assemblyFile" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-988"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="6cc05-989">- 或 -</span><span class="sxs-lookup"><span data-stu-id="6cc05-989">-or-</span></span> 
<span data-ttu-id="6cc05-990">当前已加载公共语言运行时 (CLR) 2.0 或更新版本，但 <paramref name="assemblyName" /> 是使用比当前加载版本更新的 CLR 版本编译的。</span><span class="sxs-lookup"><span data-stu-id="6cc05-990">The common language runtime (CLR) version 2.0 or later is currently loaded, and <paramref name="assemblyName" /> was compiled for a version of the CLR that is later than the currently loaded version.</span></span> <span data-ttu-id="6cc05-991">请注意，.NET Framework 2.0、3.0 和 3.5 都使用 CLR 2.0。</span><span class="sxs-lookup"><span data-stu-id="6cc05-991">Note that the .NET Framework versions 2.0, 3.0, and 3.5 all use CLR version 2.0.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cc05-992">用于提供证据。</span><span class="sxs-lookup"><span data-stu-id="6cc05-992">for supplying evidence.</span></span> <span data-ttu-id="6cc05-993">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-993">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="6cc05-994">允许搜索目录路径并读取其内容。</span><span class="sxs-lookup"><span data-stu-id="6cc05-994">for the ability to search directory paths and read their contents.</span></span> <span data-ttu-id="6cc05-995">关联的枚举： <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> 和 <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-995">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="6cc05-996">用于访问非公共类型和成员，而不考虑其授予集。</span><span class="sxs-lookup"><span data-stu-id="6cc05-996">for accessing nonpublic types and members regardless of their grant set.</span></span> <span data-ttu-id="6cc05-997">关联的枚举： <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="6cc05-997">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-998">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-998">requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-999">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-999">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6cc05-1000">为已知对象或 XML Web services 创建一个代理。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1000">Creates a proxy for a well-known object or XML Web service.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string -&gt; obj" Usage="System.Activator.GetObject (type, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-1001">希望连接到的已知对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1001">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="6cc05-1002">已知对象的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1002">The URL of the well-known object.</span></span></param>
        <summary><span data-ttu-id="6cc05-1003">为指定类型和 URL 所指示的已知对象创建一个代理。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1003">Creates a proxy for the well-known object indicated by the specified type and URL.</span></span></summary>
        <returns><span data-ttu-id="6cc05-1004">一个代理，它指向由所请求的已知对象服务的终结点。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1004">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-1005">调用代理以将消息发送到远程对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1005">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="6cc05-1006">在代理上调用方法之前，不会通过网络发送消息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1006">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-1007"><paramref name="type" /> 或 <paramref name="url" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1007"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="6cc05-1008"><paramref name="type" /> 不会通过参考封送并且并非接口。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1008"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-1009">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1009">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-1010">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1010">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-1011">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1011">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public static object GetObject (Type type, string url, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetObject(class System.Type type, string url, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.GetObject(System.Type,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetObject(Type ^ type, System::String ^ url, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="static member GetObject : Type * string * obj -&gt; obj" Usage="System.Activator.GetObject (type, url, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="url" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="6cc05-1012">希望连接到的已知对象的类型。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1012">The type of the well-known object to which you want to connect.</span></span></param>
        <param name="url"><span data-ttu-id="6cc05-1013">已知对象的 URL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1013">The URL of the well-known object.</span></span></param>
        <param name="state"><span data-ttu-id="6cc05-1014">通道特定的数据或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1014">Channel-specific data or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="6cc05-1015">为指定类型、URL 和通道数据所指示的已知对象创建一个代理。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1015">Creates a proxy for the well-known object indicated by the specified type, URL, and channel data.</span></span></summary>
        <returns><span data-ttu-id="6cc05-1016">一个代理，它指向由所请求的已知对象服务的终结点。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1016">A proxy that points to an endpoint served by the requested well-known object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-1017">调用代理以将消息发送到远程对象。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1017">Call the proxy to send messages to the remote object.</span></span> <span data-ttu-id="6cc05-1018">在代理上调用方法之前，不会通过网络发送消息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1018">No messages are sent over the network until a method is called on the proxy.</span></span>  
  
 <span data-ttu-id="6cc05-1019">`state` 参数将信息传递给通道，并将其传递给 <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1019">The `state` parameter communicates information to the channel, and is passed to the <xref:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6cc05-1020"><paramref name="type" /> 或 <paramref name="url" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1020"><paramref name="type" /> or <paramref name="url" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="6cc05-1021"><paramref name="type" /> 不会通过参考封送并且并非接口。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1021"><paramref name="type" /> is not marshaled by reference and is not an interface.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="6cc05-1022">使用晚期绑定机制调用了此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1022">This member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="6cc05-1023">需要对直接调用方的完全信任。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1023">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="6cc05-1024">部分受信任的或透明的代码不能使用此成员。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1024">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Remoting.WellKnownObjectMode" />
        <altmember cref="T:System.Runtime.Remoting.RemotingConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _Activator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _Activator.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_Activator::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="6cc05-1025">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1025">Reserved for future use.</span></span> <span data-ttu-id="6cc05-1026">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1026">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="6cc05-1027">要映射的名称的传入数组。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1027">The passed-in array of names to map.</span></span></param>
        <param name="cNames"><span data-ttu-id="6cc05-1028">要映射的名称的计数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1028">The count of the names to map.</span></span></param>
        <param name="lcid"><span data-ttu-id="6cc05-1029">要在其中解释名称的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1029">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="6cc05-1030">调用方分配的数组，用于接收与名称对应的 ID。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1030">The caller-allocated array that receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="6cc05-1031">将一组名称映射为对应的一组调度标识符。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1031">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-1032">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1032">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="6cc05-1033">有关 `IDispatch::GetIDsOfNames`的详细信息，请参阅 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1033">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="6cc05-1034">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1034">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _Activator.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="6cc05-1035">要返回的类型信息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1035">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="6cc05-1036">类型信息的区域设置标识符。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1036">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="6cc05-1037">一个对象，该对象接收指向请求的类型信息对象的指针。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1037">An object that receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="6cc05-1038">检索对象的类型信息，然后可以使用该信息获取接口的类型信息。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1038">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-1039">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1039">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="6cc05-1040">有关 `IDispatch::GetTypeInfo`的详细信息，请参阅 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1040">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="6cc05-1041">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1041">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _Activator.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _Activator.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_Activator::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="6cc05-1042">此方法返回时包含一个用于接收对象提供的类型信息接口数量的位置指针。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1042">When this method returns, contains a pointer to a location that receives the number of type information interfaces provided by the object.</span></span> <span data-ttu-id="6cc05-1043">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1043">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="6cc05-1044">检索对象提供的类型信息接口的数量（0 或 1）。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1044">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-1045">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1045">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="6cc05-1046">有关 `IDispatch::GetTypeInfoCount`的详细信息，请参阅 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1046">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="6cc05-1047">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1047">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Activator.Invoke">
      <MemberSignature Language="C#" Value="void _Activator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._Activator.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activator.System#Runtime#InteropServices#_Activator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _Activator.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._Activator.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_Activator::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Activator.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="6cc05-1048">一个用于标识成员的调度标识符。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1048">A dispatch identifier that identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="6cc05-1049">留待将来使用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1049">Reserved for future use.</span></span> <span data-ttu-id="6cc05-1050">必须为 IID_NULL。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1050">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="6cc05-1051">要在其中解释自变量的区域设置上下文。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1051">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="6cc05-1052">描述调用的上下文的标志。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1052">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="6cc05-1053">指向一个结构的指针，该结构包含一个自变量数组、一个命名自变量的 DISPID 自变量数组和数组元素的计数。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1053">A pointer to a structure that contains an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="6cc05-1054">指向要存储结果的位置的指针。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1054">A pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="6cc05-1055">指向一个包含异常信息的结构的指针。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1055">A pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="6cc05-1056">第一个出错参数的索引。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1056">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="6cc05-1057">提供对某一对象公开的属性和方法的访问。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1057">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cc05-1058">此方法用于从非托管代码访问托管类，不应从托管代码调用。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1058">This method is used to access managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="6cc05-1059">有关 `IDispatch::Invoke`的详细信息，请参阅 MSDN Library。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1059">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="6cc05-1060">不支持使用 COM <c>IDispatch</c> 接口的后期绑定访问。</span><span class="sxs-lookup"><span data-stu-id="6cc05-1060">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
