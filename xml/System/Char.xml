<Type Name="Char" FullName="System.Char">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69ad361476e439895946fa8b32fe5436da3a5498" /><Meta Name="ms.sourcegitcommit" Value="8dc7427b3f8ede13c290b671feeb1dc33978e582" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/06/2020" /><Meta Name="ms.locfileid" Value="77040759" /></Metadata><TypeSignature Language="C#" Value="public struct Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit char extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;char&gt;, class System.IConvertible, class System.IEquatable`1&lt;char&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Char" />
  <TypeSignature Language="VB.NET" Value="Public Structure Char&#xA;Implements IComparable, IComparable(Of Char), IConvertible, IEquatable(Of Char)" />
  <TypeSignature Language="C++ CLI" Value="public value class Char : IComparable, IComparable&lt;char&gt;, IConvertible, IEquatable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type char = struct&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Char&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3e762-101">将字符表示为 UTF-16 代码单位。</span><span class="sxs-lookup"><span data-stu-id="3e762-101">Represents a character as a UTF-16 code unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-102">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 使用 <xref:System.Char> 结构来表示 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-102">The [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] uses the <xref:System.Char> structure to represent a Unicode character.</span></span> <span data-ttu-id="3e762-103">Unicode 标准标识每个 Unicode 字符，其中包含一个名为 "代码点" 的唯一21位标量数字，并定义了指定如何将码位编码为一个或多个16位值序列的 UTF-16 编码格式。</span><span class="sxs-lookup"><span data-stu-id="3e762-103">The Unicode Standard identifies each Unicode character with a unique 21-bit scalar number called a code point, and defines the UTF-16 encoding form that specifies how a code point is encoded into a sequence of one or more 16-bit values.</span></span> <span data-ttu-id="3e762-104">每个16位值范围从十六进制0x0000 到0xFFFF，并存储在 <xref:System.Char> 结构中。</span><span class="sxs-lookup"><span data-stu-id="3e762-104">Each 16-bit value ranges from hexadecimal 0x0000 through 0xFFFF and is stored in a <xref:System.Char> structure.</span></span>  <span data-ttu-id="3e762-105"><xref:System.Char> 对象的值是它的16位数字（序号）值。</span><span class="sxs-lookup"><span data-stu-id="3e762-105">The value of a <xref:System.Char> object is its 16-bit numeric (ordinal) value.</span></span>

 <span data-ttu-id="3e762-106">以下各节检查 <xref:System.Char> 对象与字符之间的关系，并讨论使用 <xref:System.Char> 实例执行的一些常见任务。</span><span class="sxs-lookup"><span data-stu-id="3e762-106">The following sections examine the relationship between a <xref:System.Char> object and a character and discuss some common tasks performed with <xref:System.Char> instances.</span></span>

- [<span data-ttu-id="3e762-107">Char 对象、Unicode 字符和字符串</span><span class="sxs-lookup"><span data-stu-id="3e762-107">Char objects, Unicode characters, and strings</span></span>](#Relationship)
- [<span data-ttu-id="3e762-108">字符和字符类别</span><span class="sxs-lookup"><span data-stu-id="3e762-108">Characters and character categories</span></span>](#Categories)
- [<span data-ttu-id="3e762-109">字符和文本元素</span><span class="sxs-lookup"><span data-stu-id="3e762-109">Characters and text elements</span></span>](#Elements)
- [<span data-ttu-id="3e762-110">常见操作</span><span class="sxs-lookup"><span data-stu-id="3e762-110">Common operations</span></span>](#Operations)
- [<span data-ttu-id="3e762-111">Char 值和互操作</span><span class="sxs-lookup"><span data-stu-id="3e762-111">Char values and interop</span></span>](#Interop)

<a name="Relationship"></a>
## <a name="char-objects-unicode-characters-and-strings"></a><span data-ttu-id="3e762-112">Char 对象、Unicode 字符和字符串</span><span class="sxs-lookup"><span data-stu-id="3e762-112">Char objects, Unicode characters, and strings</span></span>
 <span data-ttu-id="3e762-113"><xref:System.String> 对象是表示文本字符串的 <xref:System.Char> 结构的有序集合。</span><span class="sxs-lookup"><span data-stu-id="3e762-113">A <xref:System.String> object is a sequential collection of <xref:System.Char> structures that represents a string of text.</span></span> <span data-ttu-id="3e762-114">大多数 Unicode 字符可以由单个 <xref:System.Char> 对象表示，但是编码为基字符、代理项对和/或组合字符序列的字符由多个 <xref:System.Char> 对象表示。</span><span class="sxs-lookup"><span data-stu-id="3e762-114">Most Unicode characters can be represented by a single <xref:System.Char> object, but a character that is encoded as a base character, surrogate pair, and/or combining character sequence is represented by multiple <xref:System.Char> objects.</span></span> <span data-ttu-id="3e762-115">出于此原因，<xref:System.String> 对象中的 <xref:System.Char> 结构不一定等效于单个 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-115">For this reason, a <xref:System.Char> structure in a <xref:System.String> object is not necessarily equivalent to a single Unicode character.</span></span>

 <span data-ttu-id="3e762-116">在以下情况下，多个16位代码单元用于表示单个 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="3e762-116">Multiple 16-bit code units are used to represent single Unicode characters in the following cases:</span></span>

-   <span data-ttu-id="3e762-117">字形，可能包含单个字符或后跟一个或多个组合字符的基本字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-117">Glyphs, which may consist of a single character or of a base character followed by one or more combining characters.</span></span> <span data-ttu-id="3e762-118">例如，字符ä由一个 <xref:System.Char> 对象表示，其代码单元为 U + 0061，后跟一个其代码单元为 U + 0308 的 <xref:System.Char> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-118">For example, the character ä is represented by a <xref:System.Char> object whose code unit is U+0061 followed by a <xref:System.Char> object whose code unit is U+0308.</span></span> <span data-ttu-id="3e762-119">（字符ä还可以由具有 U + 00E4 的代码单位的单个 <xref:System.Char> 对象定义。）下面的示例说明字符ä由两个 <xref:System.Char> 对象组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-119">(The character ä can also be defined by a single <xref:System.Char> object that has a code unit of U+00E4.) The following example illustrates that the character ä consists of two <xref:System.Char> objects.</span></span>

     [!code-csharp[System.Char.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/grapheme1.cs#1)]
     [!code-vb[System.Char.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/grapheme1.vb#1)]

-   <span data-ttu-id="3e762-120">Unicode 基本多语言平面（BMP）以外的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-120">Characters outside the Unicode Basic Multilingual Plane (BMP).</span></span> <span data-ttu-id="3e762-121">Unicode 除了支持表示平面0的 BMP 外，还支持十六个平面。</span><span class="sxs-lookup"><span data-stu-id="3e762-121">Unicode supports sixteen planes in addition to the BMP, which represents plane 0.</span></span> <span data-ttu-id="3e762-122">Unicode 码位由包含平面的21位值用 UTF-32 表示。</span><span class="sxs-lookup"><span data-stu-id="3e762-122">A Unicode code point is represented in UTF-32 by a 21-bit value that includes the plane.</span></span> <span data-ttu-id="3e762-123">例如，U + 1D160 表示音乐符号第8说明字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-123">For example, U+1D160 represents the MUSICAL SYMBOL EIGHTH NOTE character.</span></span> <span data-ttu-id="3e762-124">由于 UTF-16 编码只有16位，因此 BMP 外的字符由 UTF-16 中的代理项对表示。</span><span class="sxs-lookup"><span data-stu-id="3e762-124">Because UTF-16 encoding has only 16 bits, characters outside the BMP are represented by surrogate pairs in UTF-16.</span></span> <span data-ttu-id="3e762-125">下面的示例说明了32等效于 U + 1D160，即音乐符号第8注释字符，为 U + D834 U + DD60。</span><span class="sxs-lookup"><span data-stu-id="3e762-125">The following example illustrates that the UTF-32 equivalent of U+1D160, the MUSICAL SYMBOL EIGHTH NOTE character, is U+D834 U+DD60.</span></span> <span data-ttu-id="3e762-126">U + D834 为高代理项;高代理项范围是从 U + D800 到 U + DBFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-126">U+D834 is the high surrogate; high surrogates range from U+D800 through U+DBFF.</span></span> <span data-ttu-id="3e762-127">U + DD60 是低代理项;低代理项范围是从 U + DC00 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-127">U+DD60 is the low surrogate; low surrogates range from U+DC00 through U+DFFF.</span></span>

     [!code-csharp[System.Char.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/surrogate1.cs#2)]
     [!code-vb[System.Char.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/surrogate1.vb#2)]

<a name="Categories"></a>
## <a name="characters-and-character-categories"></a><span data-ttu-id="3e762-128">字符和字符类别</span><span class="sxs-lookup"><span data-stu-id="3e762-128">Characters and character categories</span></span>
 <span data-ttu-id="3e762-129">每个 Unicode 字符或有效代理项对属于一个 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-129">Each Unicode character or valid surrogate pair belongs to a Unicode category.</span></span> <span data-ttu-id="3e762-130">在 .NET Framework 中，Unicode 类别由 <xref:System.Globalization.UnicodeCategory> 枚举的成员表示，并包含诸如 <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>、<xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>和 <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>的值，例如。</span><span class="sxs-lookup"><span data-stu-id="3e762-130">In the .NET Framework, Unicode categories are represented by members of the <xref:System.Globalization.UnicodeCategory> enumeration and include values such as <xref:System.Globalization.UnicodeCategory.CurrencySymbol?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType>, and <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType>, for example.</span></span>

 <span data-ttu-id="3e762-131">若要确定字符的 Unicode 类别，请调用 <xref:System.Char.GetUnicodeCategory%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-131">To determine the Unicode category of a character, you call the <xref:System.Char.GetUnicodeCategory%2A> method.</span></span> <span data-ttu-id="3e762-132">例如，下面的示例调用 <xref:System.Char.GetUnicodeCategory%2A> 以显示字符串中每个字符的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-132">For example, the following example calls the <xref:System.Char.GetUnicodeCategory%2A> to display the Unicode category of each character in a string.</span></span>

 [!code-csharp[System.Char.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/GetUnicodeCategory3.cs#6)]
 [!code-vb[System.Char.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/GetUnicodeCategory3.vb#6)]

 <span data-ttu-id="3e762-133">在内部，对于 ASCII 范围外的字符（U + 0000 到 U + 00FF），<xref:System.Char.GetUnicodeCategory%2A> 方法取决于 <xref:System.Globalization.CharUnicodeInfo> 类报告的 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-133">Internally, for characters outside the ASCII range (U+0000 through U+00FF), the <xref:System.Char.GetUnicodeCategory%2A> method depends on Unicode categories reported by the <xref:System.Globalization.CharUnicodeInfo> class.</span></span> <span data-ttu-id="3e762-134">从 [!INCLUDE[net_v462](~/includes/net-v462-md.md)]开始，将根据[Unicode 标准版本 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)对 unicode 字符进行分类。</span><span class="sxs-lookup"><span data-stu-id="3e762-134">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="3e762-135">在从 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 到 [!INCLUDE[net_v461](~/includes/net-v461-md.md)]的 .NET Framework 版本中，将根据[Unicode 标准版本 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)进行分类。</span><span class="sxs-lookup"><span data-stu-id="3e762-135">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>

<a name="Elements"></a>
## <a name="characters-and-text-elements"></a><span data-ttu-id="3e762-136">字符和文本元素</span><span class="sxs-lookup"><span data-stu-id="3e762-136">Characters and text elements</span></span>
 <span data-ttu-id="3e762-137">因为单个字符可由多个 <xref:System.Char> 对象表示，所以，处理单个 <xref:System.Char> 对象并不总是有意义的。</span><span class="sxs-lookup"><span data-stu-id="3e762-137">Because a single character can be represented by multiple <xref:System.Char> objects, it is not always meaningful to work with individual <xref:System.Char> objects.</span></span> <span data-ttu-id="3e762-138">例如，下面的示例将表示爱琴大学数字0到9的 Unicode 码位转换为 UTF-16 编码的代码单元。</span><span class="sxs-lookup"><span data-stu-id="3e762-138">For instance, the following example converts the Unicode code points that represent the Aegean numbers zero through 9 to UTF-16 encoded code units.</span></span> <span data-ttu-id="3e762-139">由于它错误地表示包含字符的 <xref:System.Char> 对象，它会错误地报告生成的字符串具有20个字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-139">Because it erroneously equates <xref:System.Char> objects with characters, it inaccurately reports that the resulting string has 20 characters.</span></span>

 [!code-csharp[System.Char.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2.cs#3)]
 [!code-vb[System.Char.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2.vb#3)]

 <span data-ttu-id="3e762-140">可以执行以下操作，以避免 <xref:System.Char> 对象表示单个字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-140">You can do the following to avoid the assumption that a <xref:System.Char> object represents a single character.</span></span>

-   <span data-ttu-id="3e762-141">您可以完整地处理 <xref:System.String> 对象，而不是使用其各个字符来表示和分析语言内容。</span><span class="sxs-lookup"><span data-stu-id="3e762-141">You can work with a <xref:System.String> object in its entirety instead of working with its individual characters to represent and analyze linguistic content.</span></span>

-   <span data-ttu-id="3e762-142">您可以使用 <xref:System.Globalization.StringInfo> 类来处理文本元素，而不是单个 <xref:System.Char> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-142">You can use the <xref:System.Globalization.StringInfo> class to work with text elements instead of individual <xref:System.Char> objects.</span></span> <span data-ttu-id="3e762-143">下面的示例使用 <xref:System.Globalization.StringInfo> 对象对字符串中的文本元素的数目进行计数，其中包含从零到9的爱琴大学数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-143">The following example uses the <xref:System.Globalization.StringInfo> object to count the number of text elements in a string that consists of the Aegean numbers zero through nine.</span></span> <span data-ttu-id="3e762-144">由于它将代理项对视为单个字符，因此它会正确地报告该字符串包含十个字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-144">Because it considers a surrogate pair a single character, it correctly reports that the string contains ten characters.</span></span>

     [!code-csharp[System.Char.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/textelements2a.cs#4)]
     [!code-vb[System.Char.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/textelements2a.vb#4)]

-   <span data-ttu-id="3e762-145">如果字符串包含具有一个或多个组合字符的基字符，则可以调用 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 方法，将子字符串转换为单个 UTF-16 编码的代码单元。</span><span class="sxs-lookup"><span data-stu-id="3e762-145">If a string contains a base character that has one or more combining characters, you can call the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the substring to a single UTF-16 encoded code unit.</span></span> <span data-ttu-id="3e762-146">下面的示例调用 <xref:System.String.Normalize%2A?displayProperty=nameWithType> 方法，将基字符 U + 0061 （拉丁小写字母 A）和组合字符 U + 0308 （组合分音符）转换为 U + 00E4 （拉丁文小写字母 A，分音符）。</span><span class="sxs-lookup"><span data-stu-id="3e762-146">The following example calls the <xref:System.String.Normalize%2A?displayProperty=nameWithType> method to convert the base character U+0061 (LATIN SMALL LETTER A) and combining character U+0308 (COMBINING DIAERESIS) to U+00E4 (LATIN SMALL LETTER A WITH DIAERESIS).</span></span>

     [!code-csharp[System.Char.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.class/cs/normalized.cs#5)]
     [!code-vb[System.Char.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.class/vb/normalized.vb#5)]

<a name="Operations"></a>
## <a name="common-operations"></a><span data-ttu-id="3e762-147">常见操作</span><span class="sxs-lookup"><span data-stu-id="3e762-147">Common operations</span></span>
 <span data-ttu-id="3e762-148"><xref:System.Char> 结构提供了一些方法来比较 <xref:System.Char> 对象、将当前 <xref:System.Char> 对象的值转换为另一种类型的对象，并确定 <xref:System.Char> 对象的 Unicode 类别：</span><span class="sxs-lookup"><span data-stu-id="3e762-148">The <xref:System.Char> structure provides methods to compare <xref:System.Char> objects, convert the value of the current <xref:System.Char> object to an object of another type, and determine the Unicode category of a <xref:System.Char> object:</span></span>

|<span data-ttu-id="3e762-149">要执行此操作</span><span class="sxs-lookup"><span data-stu-id="3e762-149">To do this</span></span>|<span data-ttu-id="3e762-150">使用这些 `System.Char` 方法</span><span class="sxs-lookup"><span data-stu-id="3e762-150">Use these `System.Char` methods</span></span>|
|----------------|-------------------------------------|
|<span data-ttu-id="3e762-151">比较 <xref:System.Char> 对象</span><span class="sxs-lookup"><span data-stu-id="3e762-151">Compare <xref:System.Char> objects</span></span>|<span data-ttu-id="3e762-152"><xref:System.Char.CompareTo%2A> 和 <xref:System.Char.Equals%2A></span><span class="sxs-lookup"><span data-stu-id="3e762-152"><xref:System.Char.CompareTo%2A> and <xref:System.Char.Equals%2A></span></span>|
|<span data-ttu-id="3e762-153">将码位转换为字符串</span><span class="sxs-lookup"><span data-stu-id="3e762-153">Convert a code point to a string</span></span>|<xref:System.Char.ConvertFromUtf32%2A>|
|<span data-ttu-id="3e762-154">将 <xref:System.Char> 对象或 <xref:System.Char> 对象的代理项对转换为码位</span><span class="sxs-lookup"><span data-stu-id="3e762-154">Convert a <xref:System.Char> object or a surrogate pair of <xref:System.Char> objects to a code point</span></span>|<span data-ttu-id="3e762-155">对于单个字符： <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e762-155">For a single character: <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType></span></span><br /><br /> <span data-ttu-id="3e762-156">对于代理项对或字符串中的字符： <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="3e762-156">For a surrogate pair or a character in a string: <xref:System.Char.ConvertToUtf32%2A?displayProperty=nameWithType></span></span>|
|<span data-ttu-id="3e762-157">获取字符的 Unicode 类别</span><span class="sxs-lookup"><span data-stu-id="3e762-157">Get the Unicode category of a character</span></span>|<xref:System.Char.GetUnicodeCategory%2A>|
|<span data-ttu-id="3e762-158">确定字符是否在特定的 Unicode 类别中，如数字、字母、标点、控制字符等</span><span class="sxs-lookup"><span data-stu-id="3e762-158">Determine whether a character is in a particular Unicode category such as digit, letter, punctuation, control character, and so on</span></span>|<span data-ttu-id="3e762-159"><xref:System.Char.IsControl%2A>、<xref:System.Char.IsDigit%2A>、<xref:System.Char.IsHighSurrogate%2A>、<xref:System.Char.IsLetter%2A>、<xref:System.Char.IsLetterOrDigit%2A>、<xref:System.Char.IsLower%2A>、<xref:System.Char.IsLowSurrogate%2A>、<xref:System.Char.IsNumber%2A>、<xref:System.Char.IsPunctuation%2A>、<xref:System.Char.IsSeparator%2A>、<xref:System.Char.IsSurrogate%2A>、<xref:System.Char.IsSurrogatePair%2A>、<xref:System.Char.IsSymbol%2A>、<xref:System.Char.IsUpper%2A>和 <xref:System.Char.IsWhiteSpace%2A></span><span class="sxs-lookup"><span data-stu-id="3e762-159"><xref:System.Char.IsControl%2A>, <xref:System.Char.IsDigit%2A>, <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLetter%2A>, <xref:System.Char.IsLetterOrDigit%2A>, <xref:System.Char.IsLower%2A>, <xref:System.Char.IsLowSurrogate%2A>, <xref:System.Char.IsNumber%2A>, <xref:System.Char.IsPunctuation%2A>, <xref:System.Char.IsSeparator%2A>, <xref:System.Char.IsSurrogate%2A>, <xref:System.Char.IsSurrogatePair%2A>, <xref:System.Char.IsSymbol%2A>, <xref:System.Char.IsUpper%2A>, and <xref:System.Char.IsWhiteSpace%2A></span></span>|
|<span data-ttu-id="3e762-160">将表示数字的 <xref:System.Char> 对象转换为数值类型</span><span class="sxs-lookup"><span data-stu-id="3e762-160">Convert a <xref:System.Char> object that represents a number to a numeric value type</span></span>|<xref:System.Char.GetNumericValue%2A>|
|<span data-ttu-id="3e762-161">将字符串中的字符转换为 <xref:System.Char> 对象</span><span class="sxs-lookup"><span data-stu-id="3e762-161">Convert a character in a string into a <xref:System.Char> object</span></span>|<span data-ttu-id="3e762-162"><xref:System.Char.Parse%2A> 和 <xref:System.Char.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="3e762-162"><xref:System.Char.Parse%2A> and <xref:System.Char.TryParse%2A></span></span>|
|<span data-ttu-id="3e762-163">将 <xref:System.Char> 对象转换为 <xref:System.String> 对象</span><span class="sxs-lookup"><span data-stu-id="3e762-163">Convert a <xref:System.Char> object to a <xref:System.String> object</span></span>|<xref:System.Char.ToString%2A>|
|<span data-ttu-id="3e762-164">更改 <xref:System.Char> 对象的大小写</span><span class="sxs-lookup"><span data-stu-id="3e762-164">Change the case of a <xref:System.Char> object</span></span>|<span data-ttu-id="3e762-165"><xref:System.Char.ToLower%2A>、<xref:System.Char.ToLowerInvariant%2A>、<xref:System.Char.ToUpper%2A> 和 <xref:System.Char.ToUpperInvariant%2A></span><span class="sxs-lookup"><span data-stu-id="3e762-165"><xref:System.Char.ToLower%2A>, <xref:System.Char.ToLowerInvariant%2A>, <xref:System.Char.ToUpper%2A>, and <xref:System.Char.ToUpperInvariant%2A></span></span>|

<a name="Interop"></a>
## <a name="char-values-and-interop"></a><span data-ttu-id="3e762-166">Char 值和互操作</span><span class="sxs-lookup"><span data-stu-id="3e762-166">Char values and interop</span></span>
<span data-ttu-id="3e762-167">当托管的 <xref:System.Char> 类型（表示为 Unicode UTF-16 编码的代码单元）被传递到非托管代码时，互操作封送拆收器默认情况下将字符集转换为 ANSI。</span><span class="sxs-lookup"><span data-stu-id="3e762-167">When a managed <xref:System.Char> type, which is represented as a Unicode UTF-16 encoded code unit, is passed to unmanaged code, the interop marshaler converts the character set to ANSI by default.</span></span> <span data-ttu-id="3e762-168">可以将 <xref:System.Runtime.InteropServices.DllImportAttribute> 特性应用到平台调用声明，并将 <xref:System.Runtime.InteropServices.StructLayoutAttribute> 特性应用于 COM 互操作声明，以控制 <xref:System.Char> 类型使用的封送字符集。</span><span class="sxs-lookup"><span data-stu-id="3e762-168">You can apply the <xref:System.Runtime.InteropServices.DllImportAttribute> attribute to platform invoke declarations and the <xref:System.Runtime.InteropServices.StructLayoutAttribute> attribute to a COM interop declaration to control which character set a marshaled <xref:System.Char> type uses.</span></span>



## Examples
 <span data-ttu-id="3e762-169">下面的代码示例演示了 <xref:System.Char>中的某些方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-169">The following code example demonstrates some of the methods in <xref:System.Char>.</span></span>

 [!code-cpp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char [Type Level]/CPP/charstructure.cpp#23)]
 [!code-csharp[System.Char &#91;Type Level&#93;#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char [Type Level]/CS/charstructure.cs#23)]
 [!code-vb[System.Char &#91;Type Level&#93;#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char [Type Level]/VB/charstructure.vb#23)]

 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="3e762-170">此类型的所有成员都是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="3e762-170">All members of this type are thread safe.</span></span> <span data-ttu-id="3e762-171">看似修改实例状态的成员实际上返回用新值初始化的新实例。</span><span class="sxs-lookup"><span data-stu-id="3e762-171">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="3e762-172">与任何其他类型一样，读取和写入包含此类型的实例的共享变量时，必须通过锁保护以保证线程安全。</span><span class="sxs-lookup"><span data-stu-id="3e762-172">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-173">将此实例与指定的对象或值类型进行比较，并指示此实例在排序顺序中是位于指定的对象或值类型之前、之后还是与其出现在同一位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-173">Compares this instance to a specified object or value type, and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or value type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(char value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : char -&gt; int&#xA;override this.CompareTo : char -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e762-174">一个要比较的 <see cref="T:System.Char" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-174">A <see cref="T:System.Char" /> object to compare.</span></span></param>
        <summary><span data-ttu-id="3e762-175">将此实例与指定的 <see cref="T:System.Char" /> 对象进行比较，并指示此实例在排序顺序中是位于指定的 <see cref="T:System.Char" /> 对象之前、之后还是与其出现在同一位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-175">Compares this instance to a specified <see cref="T:System.Char" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns><span data-ttu-id="3e762-176">一个有符号数字，指示此实例在排序顺序中相对于 <paramref name="value" /> 参数的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-176">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="3e762-177">返回值</span><span class="sxs-lookup"><span data-stu-id="3e762-177">Return Value</span></span>

 </term><description> <span data-ttu-id="3e762-178">说明</span><span class="sxs-lookup"><span data-stu-id="3e762-178">Description</span></span>

 </description></listheader><item><term> <span data-ttu-id="3e762-179">小于零</span><span class="sxs-lookup"><span data-stu-id="3e762-179">Less than zero</span></span>

 </term><description> <span data-ttu-id="3e762-180">此实例位于 <paramref name="value" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="3e762-180">This instance precedes <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="3e762-181">零</span><span class="sxs-lookup"><span data-stu-id="3e762-181">Zero</span></span>

 </term><description> <span data-ttu-id="3e762-182">此实例在排序顺序中的位置与 <paramref name="value" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="3e762-182">This instance has the same position in the sort order as <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="3e762-183">大于零</span><span class="sxs-lookup"><span data-stu-id="3e762-183">Greater than zero</span></span>

 </term><description> <span data-ttu-id="3e762-184">此实例位于 <paramref name="value" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="3e762-184">This instance follows <paramref name="value" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-185">此方法实现 <xref:System.IComparable%601?displayProperty=nameWithType> 接口，并比 <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> 方法稍微好些，因为它不必将 `value` 参数转换为对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-185">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Char.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>

 <span data-ttu-id="3e762-186">此方法执行的比较基于此实例的编码值和 `value`，而不是其字典特性。</span><span class="sxs-lookup"><span data-stu-id="3e762-186">The comparison performed by this method is based on the encoded values of this instance and `value`, not their lexicographical characteristics.</span></span>

 <span data-ttu-id="3e762-187">如果 <xref:System.Char.CompareTo%2A> 方法参数类型的位数（比实例类型更少），则某些编程语言会执行隐式的扩大转换，该转换将参数的值转换为具有更多位数的值。</span><span class="sxs-lookup"><span data-stu-id="3e762-187">If the <xref:System.Char.CompareTo%2A> method parameter type has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.</span></span>

 <span data-ttu-id="3e762-188">例如，假设实例类型为 <xref:System.Int32> 并且参数类型为 <xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="3e762-188">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="3e762-189">Microsoft C#编译器生成说明，以将参数的值表示为 <xref:System.Int32> 对象，然后生成 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> 方法来比较 <xref:System.Int32> 实例的值和 <xref:System.Int32> 参数表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-189">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>

 <span data-ttu-id="3e762-190">通常，对数值类型执行隐式扩大转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-190">Typically, implicit widening conversions are performed on numeric types.</span></span> <span data-ttu-id="3e762-191">请查阅编程语言的文档，以确定其编译器是否执行扩大转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-191">Consult your programming language's documentation to determine if its compiler performs widening conversions.</span></span> <span data-ttu-id="3e762-192">如果实例和参数类型不匹配且适当的转换不可用，则编译器将生成指示参数的指令，并调用采用 <xref:System.Object> 参数的 <xref:System.Char.CompareTo%2A> 重载。</span><span class="sxs-lookup"><span data-stu-id="3e762-192">If the instance and parameter types mismatch and a suitable conversion is not available, the compiler generates instructions to box the parameter and invoke the <xref:System.Char.CompareTo%2A> overload that takes an <xref:System.Object> parameter.</span></span>



## Examples
 <span data-ttu-id="3e762-193">下面的代码示例演示了多个值和引用类型的 `CompareTo` 方法的泛型和非泛型版本。</span><span class="sxs-lookup"><span data-stu-id="3e762-193">The following code example demonstrates generic and non-generic versions of the `CompareTo` method for several value and reference types.</span></span>

 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="char.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3e762-194">要与此实例比较的对象，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-194">An object to compare this instance to, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3e762-195">将此实例与指定的对象进行比较，并指示此实例在排序顺序中是位于指定的 <see cref="T:System.Object" /> 之前、之后还是与其出现在同一位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-195">Compares this instance to a specified object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-196">一个有符号数字，指示此实例在排序顺序中相对于 <paramref name="value" /> 参数的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-196">A signed number indicating the position of this instance in the sort order in relation to the <paramref name="value" /> parameter.</span></span>

 <list type="table"><listheader><term> <span data-ttu-id="3e762-197">返回值</span><span class="sxs-lookup"><span data-stu-id="3e762-197">Return Value</span></span>

 </term><description> <span data-ttu-id="3e762-198">说明</span><span class="sxs-lookup"><span data-stu-id="3e762-198">Description</span></span>

 </description></listheader><item><term> <span data-ttu-id="3e762-199">小于零</span><span class="sxs-lookup"><span data-stu-id="3e762-199">Less than zero</span></span>

 </term><description> <span data-ttu-id="3e762-200">此实例位于 <paramref name="value" /> 之前。</span><span class="sxs-lookup"><span data-stu-id="3e762-200">This instance precedes <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="3e762-201">零</span><span class="sxs-lookup"><span data-stu-id="3e762-201">Zero</span></span>

 </term><description> <span data-ttu-id="3e762-202">此实例在排序顺序中的位置与 <paramref name="value" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="3e762-202">This instance has the same position in the sort order as <paramref name="value" />.</span></span>

 </description></item><item><term> <span data-ttu-id="3e762-203">大于零</span><span class="sxs-lookup"><span data-stu-id="3e762-203">Greater than zero</span></span>

 </term><description> <span data-ttu-id="3e762-204">此实例位于 <paramref name="value" /> 之后。</span><span class="sxs-lookup"><span data-stu-id="3e762-204">This instance follows <paramref name="value" />.</span></span>

<span data-ttu-id="3e762-205">-或-</span><span class="sxs-lookup"><span data-stu-id="3e762-205">-or-</span></span>

 <span data-ttu-id="3e762-206"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-206"><paramref name="value" /> is <see langword="null" />.</span></span>

 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-207"><xref:System.Char.CompareTo%2A> 方法实现 <xref:System.IComparable> 接口。</span><span class="sxs-lookup"><span data-stu-id="3e762-207">The <xref:System.Char.CompareTo%2A> method implements the <xref:System.IComparable> interface.</span></span>

 <span data-ttu-id="3e762-208">`value` 参数必须 `null` 或 <xref:System.Char>的实例;否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="3e762-208">The `value` parameter must be `null` or an instance of <xref:System.Char>; otherwise, an exception is thrown.</span></span>

 <span data-ttu-id="3e762-209">此方法所执行的比较基于此实例的编码值并 `value`，而不一定是其字典中的特征。</span><span class="sxs-lookup"><span data-stu-id="3e762-209">The comparison performed by this method is based on the encoded values of this instance and `value`, not necessarily their lexicographical characteristics.</span></span> <span data-ttu-id="3e762-210">无论其值如何，<xref:System.Char>的任何实例都视为大于 `null`。</span><span class="sxs-lookup"><span data-stu-id="3e762-210">Any instance of <xref:System.Char>, regardless of its value, is considered greater than `null`.</span></span>



## Examples
 <span data-ttu-id="3e762-211">下面的代码示例演示 <xref:System.Char.CompareTo%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-211">The following code example demonstrates <xref:System.Char.CompareTo%2A>.</span></span>

 [!code-cpp[System.Char.CompareTo#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.CompareTo/CPP/compareto.cpp#19)]
 [!code-csharp[System.Char.CompareTo#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.CompareTo/CS/compareto.cs#19)]
 [!code-vb[System.Char.CompareTo#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.CompareTo/VB/compareto.vb#19)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e762-212"><paramref name="value" /> 不是 <see cref="T:System.Char" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-212"><paramref name="value" /> is not a <see cref="T:System.Char" /> object.</span></span></exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromUtf32">
      <MemberSignature Language="C#" Value="public static string ConvertFromUtf32 (int utf32);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ConvertFromUtf32(int32 utf32) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertFromUtf32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertFromUtf32 (utf32 As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ConvertFromUtf32(int utf32);" />
      <MemberSignature Language="F#" Value="static member ConvertFromUtf32 : int -&gt; string" Usage="System.char.ConvertFromUtf32 utf32" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf32" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="utf32"><span data-ttu-id="3e762-213">21 位 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-213">A 21-bit Unicode code point.</span></span></param>
        <summary><span data-ttu-id="3e762-214">将指定的 Unicode 码位转换为 UTF-16 编码字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-214">Converts the specified Unicode code point into a UTF-16 encoded string.</span></span></summary>
        <returns><span data-ttu-id="3e762-215">由一个 <see cref="T:System.Char" /> 对象或一个 <see cref="T:System.Char" /> 对象的代理项对组成的字符串，等效于 <paramref name="utf32" /> 参数所指定的码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-215">A string consisting of one <see cref="T:System.Char" /> object or a surrogate pair of <see cref="T:System.Char" /> objects equivalent to the code point specified by the <paramref name="utf32" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-216">使用此方法可以在使用 <xref:System.Char.IsLowSurrogate%28System.Char%29> 和 <xref:System.Char.IsHighSurrogate%28System.Char%29>等方法测试字符串之前，将21位 Unicode 码位转换为 UTF-16 编码字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-216">Use this method to convert a 21-bit Unicode code point to a UTF-16 encoded string before testing the string with methods such as <xref:System.Char.IsLowSurrogate%28System.Char%29> and <xref:System.Char.IsHighSurrogate%28System.Char%29>.</span></span>

 <span data-ttu-id="3e762-217">基本多语言平面（BMP）外的有效码位始终产生有效的代理项对。</span><span class="sxs-lookup"><span data-stu-id="3e762-217">A valid code point outside the Basic Multilingual Plane (BMP) always yields a valid surrogate pair.</span></span> <span data-ttu-id="3e762-218">但是，根据 Unicode 标准，BMP 内的有效码位可能不会生成有效的结果，因为在转换中未使用任何语言处理。</span><span class="sxs-lookup"><span data-stu-id="3e762-218">However, a valid code point within the BMP might not yield a valid result according to the Unicode standard because no linguistic processing is used in the conversion.</span></span> <span data-ttu-id="3e762-219">出于此原因，请使用 <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> 类将大容量 UTF-16 32 数据转换为大容量 UTF-16 数据。</span><span class="sxs-lookup"><span data-stu-id="3e762-219">For that reason, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class to convert bulk UTF-32 data into bulk UTF-16 data.</span></span>



## Examples
 <span data-ttu-id="3e762-220">下面的代码示例演示 <xref:System.Char.ConvertToUtf32%2A> 和 <xref:System.Char.ConvertFromUtf32%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-220">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>

 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-221"><paramref name="utf32" /> 不是一个从 U+0 到 U+10FFFF 范围内的有效 21 位 Unicode 码位（从 U+D800 到 U+DFFF 范围的代理项对除外）。</span><span class="sxs-lookup"><span data-stu-id="3e762-221"><paramref name="utf32" /> is not a valid 21-bit Unicode code point ranging from U+0 through U+10FFFF, excluding the surrogate pair range from U+D800 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToUtf32">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-222">将 UTF-16 编码的代理项对的值转换为 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-222">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (highSurrogate As Char, lowSurrogate As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : char * char -&gt; int" Usage="System.char.ConvertToUtf32 (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lowSurrogate" Type="System.Char" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="3e762-223">高代理项代码单位（即代码单位从 U+D800 到 U+DBFF）。</span><span class="sxs-lookup"><span data-stu-id="3e762-223">A high surrogate code unit (that is, a code unit ranging from U+D800 through U+DBFF).</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="3e762-224">低代理项代码单位（即代码单位从 U+DC00 到 U+DFFF）。</span><span class="sxs-lookup"><span data-stu-id="3e762-224">A low surrogate code unit (that is, a code unit ranging from U+DC00 through U+DFFF).</span></span></param>
        <summary><span data-ttu-id="3e762-225">将 UTF-16 编码的代理项对的值转换为 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-225">Converts the value of a UTF-16 encoded surrogate pair into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="3e762-226"><paramref name="highSurrogate" /> 和 <paramref name="lowSurrogate" /> 参数表示的 21 位 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-226">The 21-bit Unicode code point represented by the <paramref name="highSurrogate" /> and <paramref name="lowSurrogate" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-227">使用此方法将代理项对转换为21位 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-227">Use this method to convert a surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="3e762-228">若要将 UTF-16 数据转换为32数据，请使用 <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="3e762-228">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>

 <span data-ttu-id="3e762-229">通常，UTF-16 编码表示一个 Unicode 字符作为16位代码单元。</span><span class="sxs-lookup"><span data-stu-id="3e762-229">Ordinarily, UTF-16 encoding represents a single Unicode character as a 16-bit code unit.</span></span> <span data-ttu-id="3e762-230">但是，它还支持代理项对，这允许将单个抽象字符表示为 2 16 位代码单元。</span><span class="sxs-lookup"><span data-stu-id="3e762-230">However, it also supports surrogate pairs, which allow a single abstract character to be represented as two 16-bit code units.</span></span> <span data-ttu-id="3e762-231">这两个 <xref:System.Char> 对象的代码单位必须是从 U + D800 到 U + DBFF （对于第一个（高）代理）以及从 U + DC00 到 U + DFFF （对于第二个（低）代理）。</span><span class="sxs-lookup"><span data-stu-id="3e762-231">These two <xref:System.Char> objects must have code units that range from U+D800 to U+DBFF for the first (high) surrogate and from U+DC00 to U+DFFF for the second (low) surrogate.</span></span> <span data-ttu-id="3e762-232">仅 UTF-16 编码支持代理项对。</span><span class="sxs-lookup"><span data-stu-id="3e762-232">Surrogate pairs are supported only by UTF-16 encoding.</span></span> <span data-ttu-id="3e762-233">此方法允许将 UTF-16 代理项对所表示的字符转换为使用 32 UTF-16 编码的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-233">This method allows a character represented by a UTF-16 surrogate pair to be converted to a character using UTF-32 encoding.</span></span>



## Examples
 <span data-ttu-id="3e762-234">下面的代码示例演示 <xref:System.Char.ConvertToUtf32%2A> 和 <xref:System.Char.ConvertFromUtf32%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-234">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>

 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-235"><paramref name="highSurrogate" /> 不在 U + D800 到 U + DBFF 的范围内，或者 <paramref name="lowSurrogate" /> 不在 U + DC00 到 U+DFFF 的范围内。</span><span class="sxs-lookup"><span data-stu-id="3e762-235"><paramref name="highSurrogate" /> is not in the range U+D800 through U+DBFF, or <paramref name="lowSurrogate" /> is not in the range U+DC00 through U+DFFF.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToUtf32">
      <MemberSignature Language="C#" Value="public static int ConvertToUtf32 (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ConvertToUtf32(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ConvertToUtf32(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertToUtf32 (s As String, index As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ConvertToUtf32(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member ConvertToUtf32 : string * int -&gt; int" Usage="System.char.ConvertToUtf32 (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-236">包含字符或代理项对的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-236">A string that contains a character or surrogate pair.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-237">字符或代理项对在 <paramref name="s" /> 中的索引位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-237">The index position of the character or surrogate pair in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-238">将字符串中指定位置的 UTF-16 编码字符或代理项对的值转换为 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-238">Converts the value of a UTF-16 encoded character or surrogate pair at a specified position in a string into a Unicode code point.</span></span></summary>
        <returns><span data-ttu-id="3e762-239">字符或代理项对表示的 21 位 Unicode 码位，该字符或代理项对在 <paramref name="s" /> 参数中的位置由 <paramref name="index" /> 参数指定。</span><span class="sxs-lookup"><span data-stu-id="3e762-239">The 21-bit Unicode code point represented by the character or surrogate pair at the position in the <paramref name="s" /> parameter specified by the <paramref name="index" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-240">使用此方法将字符或代理项对转换为21位 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-240">Use this method to convert a character or surrogate pair into a 21-bit Unicode code point.</span></span> <span data-ttu-id="3e762-241">若要将 UTF-16 数据转换为32数据，请使用 <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> 类。</span><span class="sxs-lookup"><span data-stu-id="3e762-241">To convert UTF-16 data into UTF-32 data, use the <xref:System.Text.UTF32Encoding?displayProperty=nameWithType> class.</span></span>



## Examples
 <span data-ttu-id="3e762-242">下面的代码示例演示 <xref:System.Char.ConvertToUtf32%2A> 和 <xref:System.Char.ConvertFromUtf32%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-242">The following code example demonstrates the <xref:System.Char.ConvertToUtf32%2A> and <xref:System.Char.ConvertFromUtf32%2A> methods.</span></span>

 [!code-cpp[char.cvtutf32#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.cvtutf32/CPP/utf.cpp#1)]
 [!code-csharp[char.cvtutf32#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.cvtutf32/CS/utf.cs#1)]
 [!code-vb[char.cvtutf32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.cvtutf32/VB/utf.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-243"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-243"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-244"><paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-244"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3e762-245">指定的索引位置包含代理项对，且对中的第一个字符不是有效的高代理项或对中的第二个字符不是有效的低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-245">The specified index position contains a surrogate pair, and either the first character in the pair is not a valid high surrogate or the second character in the pair is not a valid low surrogate.</span></span></exception>
        <altmember cref="M:System.Char.ConvertFromUtf32(System.Int32)" />
        <altmember cref="T:System.Text.UTF32Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-246">返回一个值，该值指示此实例是否与指定的对象或 <see cref="T:System.Char" /> 值相等。</span><span class="sxs-lookup"><span data-stu-id="3e762-246">Returns a value that indicates whether this instance is equal to a specified object or <see cref="T:System.Char" /> value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (char obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(char obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(char obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : char -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3e762-247">要与此实例进行比较的对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-247">An object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="3e762-248">返回一个值，该值指示此实例是否等于指定的 <see cref="T:System.Char" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-248">Returns a value that indicates whether this instance is equal to the specified <see cref="T:System.Char" /> object.</span></span></summary>
        <returns><span data-ttu-id="3e762-249">如果 <see langword="true" /> 参数与此实例的值相等，则为 <paramref name="obj" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-249"><see langword="true" /> if the <paramref name="obj" /> parameter equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-250">此方法实现 <xref:System.IEquatable%601?displayProperty=nameWithType> 接口，并比 <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> 略好，因为它不需要取消装箱 `obj` 参数。</span><span class="sxs-lookup"><span data-stu-id="3e762-250">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Char.Equals%28System.Object%29?displayProperty=nameWithType> because it does not need to unbox the `obj` parameter.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="char.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="3e762-251">要与此示例比较的对象，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-251">An object to compare with this instance or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3e762-252">返回一个值，该值指示此实例是否与指定的对象相等。</span><span class="sxs-lookup"><span data-stu-id="3e762-252">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="3e762-253">如果 <see langword="true" /> 是 <paramref name="obj" /> 的实例并且等于此实例的值，则为 <see cref="T:System.Char" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-253"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.Char" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-254">此方法所执行的比较基于此实例的编码值并 `obj`，而不一定是其字典中的特征。</span><span class="sxs-lookup"><span data-stu-id="3e762-254">The comparison performed by this method is based on the encoded values of this instance and `obj`, not necessarily their lexicographical characteristics.</span></span>



## Examples
 <span data-ttu-id="3e762-255">下面的代码示例演示 <xref:System.Char.Equals%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-255">The following code example demonstrates <xref:System.Char.Equals%2A>.</span></span>

 [!code-cpp[System.Char.Equals#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Equals/CPP/equals.cpp#20)]
 [!code-csharp[System.Char.Equals#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Equals/CS/equals.cs#20)]
 [!code-vb[System.Char.Equals#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Equals/VB/equals.vb#20)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="char.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e762-256">返回此实例的哈希代码。</span><span class="sxs-lookup"><span data-stu-id="3e762-256">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="3e762-257">32 位有符号整数哈希代码。</span><span class="sxs-lookup"><span data-stu-id="3e762-257">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetNumericValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-258">将指定的数字 Unicode 字符转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="3e762-258">Converts a specified numeric Unicode character to a double-precision floating-point number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (c As Char) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(char c);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : char -&gt; double" Usage="System.char.GetNumericValue c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-259">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-259">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="3e762-260">将指定的数字 Unicode 字符转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="3e762-260">Converts the specified numeric Unicode character to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="3e762-261">如果该字符表示数字，则数值为 <paramref name="c" />；否则为 -1.0。</span><span class="sxs-lookup"><span data-stu-id="3e762-261">The numeric value of <paramref name="c" /> if that character represents a number; otherwise, -1.0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-262">`c` 参数必须是数字值的 <xref:System.Char> 表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-262">The `c` parameter must be the <xref:System.Char> representation of a numeric value.</span></span> <span data-ttu-id="3e762-263">例如，如果 `c` 为 "5"，则返回值为5。</span><span class="sxs-lookup"><span data-stu-id="3e762-263">For example, if `c` is "5", the return value is 5.</span></span> <span data-ttu-id="3e762-264">但是，如果 `c` 为 "z"，则返回值为-1.0。</span><span class="sxs-lookup"><span data-stu-id="3e762-264">However, if `c` is "z", the return value is -1.0.</span></span>

 <span data-ttu-id="3e762-265">当且仅当字符是以下 <xref:System.Globalization.UnicodeCategory> 类别之一的成员时，它具有关联的数值： `DecimalDigitNumber`、`LetterNumber`或 `OtherNumber`。</span><span class="sxs-lookup"><span data-stu-id="3e762-265">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>

 <span data-ttu-id="3e762-266"><xref:System.Char.GetNumericValue%2A> 方法假定 `c` 对应于单个语言字符，并检查是否可以将该字符转换为十进制数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-266">The <xref:System.Char.GetNumericValue%2A> method assumes that `c` corresponds to a single linguistic character and checks whether that character can be converted to a decimal digit.</span></span> <span data-ttu-id="3e762-267">但 Unicode 标准中的一些数字由两个构成代理项对的 <xref:System.Char> 对象表示。</span><span class="sxs-lookup"><span data-stu-id="3e762-267">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="3e762-268">例如，爱琴大学编号系统由代码点 U + 10107 到 U + 10133 组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-268">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="3e762-269">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法来实例化表示爱琴大学1的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-269">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="3e762-270">如示例的输出所示，如果传递给此字符的高代理项或低代理项，则 <xref:System.Char.GetNumericValue%28System.Char%29> 方法返回-1。</span><span class="sxs-lookup"><span data-stu-id="3e762-270">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.Char%29> method returns -1 if it is passed either a high surrogate or a low surrogate of this character.</span></span>

 [!code-csharp[System.Char.GetNumericValue#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#2)]
 [!code-vb[System.Char.GetNumericValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#2)]



## Examples
 <span data-ttu-id="3e762-271">下面的示例演示 <xref:System.Char.GetNumericValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-271">The following example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>

 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetNumericValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (s As String, index As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : string * int -&gt; double" Usage="System.char.GetNumericValue (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-272">一个 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-272">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-273"><paramref name="s" /> 中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-273">The character position in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-274">将指定字符串中位于指定位置的数字 Unicode 字符转换为双精度浮点数。</span><span class="sxs-lookup"><span data-stu-id="3e762-274">Converts the numeric Unicode character at the specified position in a specified string to a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="3e762-275">如果 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符表示数字，则为该字符的数值；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="3e762-275">The numeric value of the character at position <paramref name="index" /> in <paramref name="s" /> if that character represents a number; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-276">`s` 参数必须是数字值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-276">The `s` parameter must be the string representation of a numeric value.</span></span> <span data-ttu-id="3e762-277">例如，如果中位于 `index` `s` 的字符为 "5"，则返回值为5。</span><span class="sxs-lookup"><span data-stu-id="3e762-277">For example, if the character at position `index` in `s` is "5", the return value is 5.</span></span> <span data-ttu-id="3e762-278">但是，如果位于 `s` 中位置 `index` 的字符为 "z"，则返回值为-1。</span><span class="sxs-lookup"><span data-stu-id="3e762-278">However, if the character at position `index` in `s` is "z", the return value is -1.</span></span>

 <span data-ttu-id="3e762-279">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-279">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-280">当且仅当字符是以下 <xref:System.Globalization.UnicodeCategory> 类别之一的成员时，它具有关联的数值： `DecimalDigitNumber`、`LetterNumber`或 `OtherNumber`。</span><span class="sxs-lookup"><span data-stu-id="3e762-280">A character has an associated numeric value if and only if it is a member of one of the following <xref:System.Globalization.UnicodeCategory> categories: `DecimalDigitNumber`, `LetterNumber`, or `OtherNumber`.</span></span>

 <span data-ttu-id="3e762-281">如果位置 `index` 的 <xref:System.Char> 对象是有效代理项对中的第一个字符，则 <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> 方法将确定代理项对是否构成数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-281">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="3e762-282">例如，爱琴大学编号系统由代码点 U + 10107 到 U + 10133 组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-282">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="3e762-283">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法来实例化表示每个爱琴大学数的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-283">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents each Aegean number.</span></span> <span data-ttu-id="3e762-284">如示例中的输出所示，如果向传递了爱琴大学数字的高代理项，则 <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> 方法将返回正确的数字值。</span><span class="sxs-lookup"><span data-stu-id="3e762-284">As the output from the example shows, the <xref:System.Char.GetNumericValue%28System.String%2CSystem.Int32%29> method returns the correct numeric value if it is passed the high surrogate of an Aegean number.</span></span> <span data-ttu-id="3e762-285">但是，如果将其传递到低代理项，则它仅考虑隔离中的低代理项，并返回-1。</span><span class="sxs-lookup"><span data-stu-id="3e762-285">However, if it is passed the low surrogate, it considers only the low surrogate in isolation and returns -1.</span></span>

 [!code-csharp[System.Char.GetNumericValue#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue1.cs#3)]
 [!code-vb[System.Char.GetNumericValue#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue1.vb#3)]



## Examples
 <span data-ttu-id="3e762-286">下面的代码示例演示 <xref:System.Char.GetNumericValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-286">The following code example demonstrates <xref:System.Char.GetNumericValue%2A>.</span></span>

 [!code-cpp[System.Char.GetNumericValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CPP/getnumericvalue.cpp#1)]
 [!code-csharp[System.Char.GetNumericValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetNumericValue/CS/getnumericvalue.cs#1)]
 [!code-vb[System.Char.GetNumericValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetNumericValue/VB/getnumericvalue.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-287"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-287"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-288"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-288"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="char.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e762-289">返回值类型 <see cref="T:System.TypeCode" /> 的 <see cref="T:System.Char" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-289">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Char" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-290">枚举常数 <see cref="F:System.TypeCode.Char" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-290">The enumerated constant, <see cref="F:System.TypeCode.Char" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUnicodeCategory">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-291">将 Unicode 字符分类到由一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值标识的组中。</span><span class="sxs-lookup"><span data-stu-id="3e762-291">Categorizes a Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (c As Char) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(char c);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : char -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-292">要分类的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-292">The Unicode character to categorize.</span></span></param>
        <summary><span data-ttu-id="3e762-293">将指定的 Unicode 字符分类到由一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值标识的组中。</span><span class="sxs-lookup"><span data-stu-id="3e762-293">Categorizes a specified Unicode character into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="3e762-294">一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值，它标识包含 <paramref name="c" /> 的组。</span><span class="sxs-lookup"><span data-stu-id="3e762-294">A <see cref="T:System.Globalization.UnicodeCategory" /> value that identifies the group that contains <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-295">将特定字符作为参数传递时，<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 方法不会始终返回与 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> 方法相同的 <xref:System.Globalization.UnicodeCategory> 值。</span><span class="sxs-lookup"><span data-stu-id="3e762-295">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="3e762-296"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> 方法旨在反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="3e762-296">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="3e762-297">相反，尽管 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 方法通常反映 Unicode 标准的当前版本，但它可能会根据标准版的以前版本返回字符类别，或返回与当前标准不同的类别，以便保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="3e762-297">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="3e762-298">因此，建议使用 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> 方法，而不是 <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3e762-298">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="3e762-299">从 [!INCLUDE[net_v462](~/includes/net-v462-md.md)]开始，将根据[Unicode 标准版本 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)对 unicode 字符进行分类。</span><span class="sxs-lookup"><span data-stu-id="3e762-299">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="3e762-300">在从 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 到 [!INCLUDE[net_v461](~/includes/net-v461-md.md)]的 .NET Framework 版本中，将根据[Unicode 标准版本 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)进行分类。</span><span class="sxs-lookup"><span data-stu-id="3e762-300">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>



## Examples
 <span data-ttu-id="3e762-301">下面的代码示例演示 <xref:System.Char.GetUnicodeCategory%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-301">The following code example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>

 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.GetUnicodeCategory(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (s As String, index As Integer) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : string * int -&gt; System.Globalization.UnicodeCategory" Usage="System.char.GetUnicodeCategory (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-302">一个 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-302">A <see cref="T:System.String" />.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-303"><paramref name="s" /> 中的字符位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-303">The character position in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-304">将指定字符串中位于指定位置的字符分类到由一个 <see cref="T:System.Globalization.UnicodeCategory" /> 值标识的组中。</span><span class="sxs-lookup"><span data-stu-id="3e762-304">Categorizes the character at the specified position in a specified string into a group identified by one of the <see cref="T:System.Globalization.UnicodeCategory" /> values.</span></span></summary>
        <returns><span data-ttu-id="3e762-305">一个 <see cref="T:System.Globalization.UnicodeCategory" /> 枚举常数，标识包含 <paramref name="index" /> 中位于 <paramref name="s" /> 处的字符的组。</span><span class="sxs-lookup"><span data-stu-id="3e762-305">A <see cref="T:System.Globalization.UnicodeCategory" /> enumerated constant that identifies the group that contains the character at position <paramref name="index" /> in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-306">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-306">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-307">将特定字符作为参数传递时，<xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 方法不会始终返回与 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> 方法相同的 <xref:System.Globalization.UnicodeCategory> 值。</span><span class="sxs-lookup"><span data-stu-id="3e762-307">The <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method does not always return the same <xref:System.Globalization.UnicodeCategory> value as the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method when it is passed a particular character as a parameter.</span></span> <span data-ttu-id="3e762-308"><xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> 方法旨在反映 Unicode 标准的当前版本。</span><span class="sxs-lookup"><span data-stu-id="3e762-308">The <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType> method is designed to reflect the current version of the Unicode standard.</span></span> <span data-ttu-id="3e762-309">相反，尽管 <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> 方法通常反映 Unicode 标准的当前版本，但它可能会根据标准版的以前版本返回字符类别，或返回与当前标准不同的类别，以便保留向后兼容性。</span><span class="sxs-lookup"><span data-stu-id="3e762-309">In contrast, although the <xref:System.Char.GetUnicodeCategory%2A?displayProperty=nameWithType> method usually reflects the current version of the Unicode standard, it may return a character's category based on a previous version of the standard or it may return a category that differs from the current standard in order to preserve backward compatibility.</span></span> <span data-ttu-id="3e762-310">因此，建议使用 <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> 方法，而不是 <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3e762-310">As a result, we recommend that you use the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%28System.Char%29?displayProperty=nameWithType> method instead of <xref:System.Char.GetUnicodeCategory%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="3e762-311">从 [!INCLUDE[net_v462](~/includes/net-v462-md.md)]开始，将根据[Unicode 标准版本 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/)对 unicode 字符进行分类。</span><span class="sxs-lookup"><span data-stu-id="3e762-311">Starting with the [!INCLUDE[net_v462](~/includes/net-v462-md.md)], Unicode characters are classified based on [The Unicode Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span></span> <span data-ttu-id="3e762-312">在从 [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] 到 [!INCLUDE[net_v461](~/includes/net-v461-md.md)]的 .NET Framework 版本中，将根据[Unicode 标准版本 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/)进行分类。</span><span class="sxs-lookup"><span data-stu-id="3e762-312">In versions of the .NET Framework from the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] to  the [!INCLUDE[net_v461](~/includes/net-v461-md.md)], they are classified based on [The Unicode Standard, Version 6.3.0](https://www.unicode.org/versions/Unicode6.3.0/).</span></span>



## Examples
 <span data-ttu-id="3e762-313">下面的示例演示 <xref:System.Char.GetUnicodeCategory%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-313">The following example demonstrates <xref:System.Char.GetUnicodeCategory%2A>.</span></span>

 [!code-cpp[System.Char.GetUnicodeCategory#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CPP/getunicodecategory.cpp#1)]
 [!code-csharp[System.Char.GetUnicodeCategory#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/CS/getunicodecategory.cs#1)]
 [!code-vb[System.Char.GetUnicodeCategory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.GetUnicodeCategory/VB/getunicodecategory.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-314"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-314"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-315"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-315"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Globalization.CharUnicodeInfo.GetUnicodeCategory(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsControl">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-316">指示指定的 Unicode 字符是否属于控制字符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-316">Indicates whether a specified Unicode character is categorized as a control character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-317">控制字符是格式设置和其他非打印字符，如 ACK、BELOW、CR、FF、LF 和 VT。</span><span class="sxs-lookup"><span data-stu-id="3e762-317">Control characters are formatting and other non-printing characters, such as ACK, BEL, CR, FF, LF, and VT.</span></span> <span data-ttu-id="3e762-318">Unicode 标准将从 \U0000 到 \U001F、\U007F 和从 \U0080 到 \U009F 的代码点分配给控制字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-318">The Unicode standard assigns code points from \U0000 to \U001F, \U007F, and from \U0080 to \U009F to control characters.</span></span> <span data-ttu-id="3e762-319">根据 Unicode 标准，这些值将被解释为控制字符，除非应用程序使用它们。</span><span class="sxs-lookup"><span data-stu-id="3e762-319">According to the Unicode standard, these values are to be interpreted as control characters unless their use is otherwise defined by an application.</span></span> <span data-ttu-id="3e762-320">有效控制字符是 <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-320">Valid control characters are members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(char c);" />
      <MemberSignature Language="F#" Value="static member IsControl : char -&gt; bool" Usage="System.char.IsControl c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-321">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-321">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-322">指示指定的 Unicode 字符是否属于控制字符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-322">Indicates whether the specified Unicode character is categorized as a control character.</span></span></summary>
        <returns><span data-ttu-id="3e762-323">如果 <see langword="true" /> 是控制字符，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-323"><see langword="true" /> if <paramref name="c" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[


## Examples
 <span data-ttu-id="3e762-324">下面的示例列出了每个控制字符的 Unicode 码位。</span><span class="sxs-lookup"><span data-stu-id="3e762-324">The following example lists the Unicode code point of each of the control characters.</span></span>

 [!code-cpp[System.Char.IsControl#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol1.cpp#1)]
 [!code-csharp[System.Char.IsControl#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl1.cs#1)]
 [!code-vb[System.Char.IsControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsControl(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsControl : string * int -&gt; bool" Usage="System.char.IsControl (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-325">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-325">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-326"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-326">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-327">指示指定字符串中位于指定位置处的字符是否属于控制字符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-327">Indicates whether the character at the specified position in a specified string is categorized as a control character.</span></span></summary>
        <returns><span data-ttu-id="3e762-328">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个控制字符，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-328"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[


## Examples
 <span data-ttu-id="3e762-329">下面的示例对字符串中的字符进行枚举，并确定是否有任何控件字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-329">The following example enumerates the characters in a string and determines whether any are control characters.</span></span>

 [!code-cpp[System.Char.IsControl#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsControl/CPP/iscontrol2.cpp#2)]
 [!code-csharp[System.Char.IsControl#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsControl/CS/IsControl2.cs#2)]
 [!code-vb[System.Char.IsControl#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsControl/VB/IsControl2.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-330"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-330"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-331"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-331"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-332">指示 Unicode 字符是否属于十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-332">Indicates whether a Unicode character is categorized as a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-333">有效数字是 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-333">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsDigit : char -&gt; bool" Usage="System.char.IsDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-334">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-334">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-335">指示指定的 Unicode 字符是否属于十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-335">Indicates whether the specified Unicode character is categorized as a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="3e762-336">如果 <see langword="true" /> 是十进制数，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-336"><see langword="true" /> if <paramref name="c" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-337">此方法确定 <xref:System.Char> 是否为10基数数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-337">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="3e762-338">这与 <xref:System.Char.IsNumber%2A>的对比，后者确定 `Char` 是否为任何数值 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-338">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a `Char` is of any numeric Unicode category.</span></span> <span data-ttu-id="3e762-339">数字包含字符，如分数、下标、上标、罗马数字、货币分子、encircled 数和特定于脚本的数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-339">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>

 <span data-ttu-id="3e762-340">有效数字是 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-340">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>



## Examples
 <span data-ttu-id="3e762-341">下面的代码示例演示 <xref:System.Char.IsDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-341">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>

 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsDigit : string * int -&gt; bool" Usage="System.char.IsDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-342">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-342">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-343"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-343">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-344">指示指定字符串中位于指定位置处的字符是否属于十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-344">Indicates whether the character at the specified position in a specified string is categorized as a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="3e762-345">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个十进制数，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-345"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-346">此方法确定 <xref:System.Char> 是否为10基数数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-346">This method determines whether a <xref:System.Char> is a radix-10 digit.</span></span> <span data-ttu-id="3e762-347">这与 <xref:System.Char.IsNumber%2A>的对比，后者确定 <xref:System.Char> 是否为任何数值 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-347">This contrasts with <xref:System.Char.IsNumber%2A>, which determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="3e762-348">数字包含字符，如分数、下标、上标、罗马数字、货币分子、encircled 数和特定于脚本的数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-348">Numbers include characters such as fractions, subscripts, superscripts, Roman numerals, currency numerators, encircled numbers, and script-specific digits.</span></span>

 <span data-ttu-id="3e762-349">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-349">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-350">有效数字是 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-350">Valid digits are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType> category.</span></span>



## Examples
 <span data-ttu-id="3e762-351">下面的代码示例演示 <xref:System.Char.IsDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-351">The following code example demonstrates <xref:System.Char.IsDigit%2A>.</span></span>

 [!code-cpp[System.Char.IsDigit#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsDigit/CPP/isdigit.cpp#4)]
 [!code-csharp[System.Char.IsDigit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsDigit/CS/isdigit.cs#4)]
 [!code-vb[System.Char.IsDigit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsDigit/VB/isdigit.vb#4)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-352"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-352"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-353"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-353"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsNumber(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsHighSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-354">指示指定的 <see cref="T:System.Char" /> 对象是否是一个高代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-354">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : char -&gt; bool" Usage="System.char.IsHighSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-355">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-355">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-356">指示指定的 <see cref="T:System.Char" /> 对象是否是一个高代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-356">Indicates whether the specified <see cref="T:System.Char" /> object is a high surrogate.</span></span></summary>
        <returns><span data-ttu-id="3e762-357">如果 <see langword="true" /> 参数的数值范围是从 U+D800 到 U+DBFF，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-357"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-358">除了使用16位码位来表示单个字符之外，UTF-16 编码还允许使用 2 16 位码位（称为代理项对）表示抽象字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-358">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="3e762-359">此对中的第一个元素为高代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-359">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="3e762-360">其码位的范围可以是从 U + D800 到 U + DBFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-360">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="3e762-361">单个代理项本身不具有任何解释;仅当用作代理项对的一部分时，它才有意义。</span><span class="sxs-lookup"><span data-stu-id="3e762-361">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>



## Examples
 <span data-ttu-id="3e762-362">下面的代码示例演示 <xref:System.Char.IsHighSurrogate%2A>、<xref:System.Char.IsLowSurrogate%2A>和 <xref:System.Char.IsSurrogatePair%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-362">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>

 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsHighSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsHighSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsHighSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHighSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHighSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsHighSurrogate : string * int -&gt; bool" Usage="System.char.IsHighSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-363">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-363">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-364"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-364">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-365">指示字符串中指定位置处的 <see cref="T:System.Char" /> 对象是否为高代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-365">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a high surrogate.</span></span></summary>
        <returns><span data-ttu-id="3e762-366">如果 <see langword="true" /> 中指定字符的数值范围是从 U+D800 到 U+DBFF，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-366"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+D800 through U+DBFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-367">`index` 参数是从零开始的。</span><span class="sxs-lookup"><span data-stu-id="3e762-367">The `index` parameter is zero-based.</span></span>

 <span data-ttu-id="3e762-368">除了使用16位码位来表示单个字符之外，UTF-16 编码还允许使用 2 16 位码位（称为代理项对）表示抽象字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-368">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="3e762-369">此对中的第一个元素为高代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-369">The first element in this pair is the high surrogate.</span></span> <span data-ttu-id="3e762-370">其码位的范围可以是从 U + D800 到 U + DBFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-370">Its code point can range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="3e762-371">单个代理项本身不具有任何解释;仅当用作代理项对的一部分时，它才有意义。</span><span class="sxs-lookup"><span data-stu-id="3e762-371">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>



## Examples
 <span data-ttu-id="3e762-372">下面的代码示例演示 <xref:System.Char.IsHighSurrogate%2A>、<xref:System.Char.IsLowSurrogate%2A>和 <xref:System.Char.IsSurrogatePair%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-372">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>

 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-373"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-373"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-374"><paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-374"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetter">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-375">指示 Unicode 字符是否属于 Unicode 字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-375">Indicates whether a Unicode character is categorized as a Unicode letter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-376">此方法确定 <xref:System.Char> 是否为 Unicode 字母的任何类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-376">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="3e762-377">Unicode 字母包括：</span><span class="sxs-lookup"><span data-stu-id="3e762-377">Unicode letters include the following:</span></span>

-   <span data-ttu-id="3e762-378">大写字母，如 U + 0041 （拉丁文大写字母 A）到 U + 005A （拉丁文大写字母 Z）或 U + 0400 （西里尔文大写字母 IE WITH 抑音符）到 U + 042F （西里尔文大写字母 YA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-378">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="3e762-379">这些字符是 <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-379">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-380">小写字母，如 U + 0061 （拉丁小写字母 A）到 U + 007A （拉丁文小写字母 Z）或 U + 03AC （带 TONOS 的希腊文小写字母 ALPHA）到 U + 03CE （带 TONOS 的希腊文小写字母 OMEGA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-380">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="3e762-381">这些字符是 <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-381">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-382">词首字母大写，例如 U + 01C5 （带有小写字母 Z 和抑扬符的拉丁文大写字母 D）或 U + 1FFC （带 PROSGEGRAMMENI 的希腊文大写字母 OMEGA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-382">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="3e762-383">这些字符是 <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-383">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-384">修饰符，如 U + 02B0 （修饰符字母小型 H）到 U + 02C1 （修饰符号反向喉塞音符停止）或 U + 1D2C （修饰符字母大写 A）到 U + 1D61 （修饰符字母小写 CHI）。</span><span class="sxs-lookup"><span data-stu-id="3e762-384">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="3e762-385">这些字符是 <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-385">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-386">其他字母，如 U + 05D0 （希伯来语字母 ALEF）到 U + 05EA （希伯来语字母 TAV）、U + 0621 （阿拉伯文字母喉塞音符）到 U + 063A （阿拉伯字母 GHAIN）或 U + 4E00 （\<CJK 象形字，First >）到 U + 9FC3 （\<CJK 表意字符，最后 >）。</span><span class="sxs-lookup"><span data-stu-id="3e762-386">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="3e762-387">这些字符是 <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-387">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetter : char -&gt; bool" Usage="System.char.IsLetter c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-388">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-388">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-389">指示指定的 Unicode 字符是否属于 Unicode 字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-389">Indicates whether the specified Unicode character is categorized as a Unicode letter.</span></span></summary>
        <returns><span data-ttu-id="3e762-390">如果 <see langword="true" /> 是一个字母，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-390"><see langword="true" /> if <paramref name="c" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-391">此方法确定 <xref:System.Char> 是否为 Unicode 字母的任何类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-391">This method determines whether a <xref:System.Char> is a member of any category of Unicode letter.</span></span> <span data-ttu-id="3e762-392">Unicode 字母包括：</span><span class="sxs-lookup"><span data-stu-id="3e762-392">Unicode letters include the following:</span></span>

-   <span data-ttu-id="3e762-393">大写字母，如 U + 0041 （拉丁文大写字母 A）到 U + 005A （拉丁文大写字母 Z）或 U + 0400 （西里尔文大写字母 IE WITH 抑音符）到 U + 042F （西里尔文大写字母 YA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-393">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="3e762-394">这些字符是 <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-394">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-395">小写字母，如 U + 0061 （拉丁小写字母 A）到 U + 007A （拉丁文小写字母 Z）或 U + 03AC （带 TONOS 的希腊文小写字母 ALPHA）到 U + 03CE （带 TONOS 的希腊文小写字母 OMEGA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-395">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="3e762-396">这些字符是 <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-396">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-397">词首字母大写，例如 U + 01C5 （带有小写字母 Z 和抑扬符的拉丁文大写字母 D）或 U + 1FFC （带 PROSGEGRAMMENI 的希腊文大写字母 OMEGA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-397">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="3e762-398">这些字符是 <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-398">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-399">修饰符，如 U + 02B0 （修饰符字母小型 H）到 U + 02C1 （修饰符号反向喉塞音符停止）或 U + 1D2C （修饰符字母大写 A）到 U + 1D61 （修饰符字母小写 CHI）。</span><span class="sxs-lookup"><span data-stu-id="3e762-399">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="3e762-400">这些字符是 <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-400">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-401">其他字母，如 U + 05D0 （希伯来语字母 ALEF）到 U + 05EA （希伯来语字母 TAV）、U + 0621 （阿拉伯文字母喉塞音符）到 U + 063A （阿拉伯字母 GHAIN）或 U + 4E00 （\<CJK 象形字，First >）到 U + 9FC3 （\<CJK 表意字符，最后 >）。</span><span class="sxs-lookup"><span data-stu-id="3e762-401">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="3e762-402">这些字符是 <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-402">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>



## Examples
 <span data-ttu-id="3e762-403">下面的代码示例演示 <xref:System.Char.IsLetter%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-403">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>

 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetter(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetter : string * int -&gt; bool" Usage="System.char.IsLetter (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-404">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-404">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-405"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-405">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-406">指示指定字符串中位于指定位置处的指定字符串是否属于 Unicode 字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-406">Indicates whether the character at the specified position in a specified string is categorized as a Unicode letter.</span></span></summary>
        <returns><span data-ttu-id="3e762-407">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个字母，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-407"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-408">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-408">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-409">此方法确定字符串中位于指定索引位置处的字符是否为 Unicode 字母的任何类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-409">This method determines whether the character at a specified index position in a string is a member of any category of Unicode letter.</span></span> <span data-ttu-id="3e762-410">Unicode 字母包括：</span><span class="sxs-lookup"><span data-stu-id="3e762-410">Unicode letters include the following:</span></span>

-   <span data-ttu-id="3e762-411">大写字母，如 U + 0041 （拉丁文大写字母 A）到 U + 005A （拉丁文大写字母 Z）或 U + 0400 （西里尔文大写字母 IE WITH 抑音符）到 U + 042F （西里尔文大写字母 YA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-411">Uppercase letters, such as U+0041 (LATIN CAPITAL LETTER A) through U+005A (LATIN CAPITAL LETTER Z), or U+0400 (CYRILLIC CAPITAL LETTER IE WITH GRAVE) through U+042F (CYRILLIC CAPITAL LETTER YA).</span></span> <span data-ttu-id="3e762-412">这些字符是 <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-412">These characters are members of the <xref:System.Globalization.UnicodeCategory.UppercaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-413">小写字母，如 U + 0061 （拉丁小写字母 A）到 U + 007A （拉丁文小写字母 Z）或 U + 03AC （带 TONOS 的希腊文小写字母 ALPHA）到 U + 03CE （带 TONOS 的希腊文小写字母 OMEGA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-413">Lowercase letters, such as U+0061 (LATIN SMALL LETTER A) through U+007A (LATIN SMALL LETTER Z), or U+03AC (GREEK SMALL LETTER ALPHA WITH TONOS) through U+03CE (GREEK SMALL LETTER OMEGA WITH TONOS).</span></span> <span data-ttu-id="3e762-414">这些字符是 <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-414">These characters are members of the <xref:System.Globalization.UnicodeCategory.LowercaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-415">词首字母大写，例如 U + 01C5 （带有小写字母 Z 和抑扬符的拉丁文大写字母 D）或 U + 1FFC （带 PROSGEGRAMMENI 的希腊文大写字母 OMEGA）。</span><span class="sxs-lookup"><span data-stu-id="3e762-415">Title case letters, such as U+01C5 (LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON) or U+1FFC (GREEK CAPITAL LETTER OMEGA WITH PROSGEGRAMMENI).</span></span> <span data-ttu-id="3e762-416">这些字符是 <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-416">These characters are members of the <xref:System.Globalization.UnicodeCategory.TitlecaseLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-417">修饰符，如 U + 02B0 （修饰符字母小型 H）到 U + 02C1 （修饰符号反向喉塞音符停止）或 U + 1D2C （修饰符字母大写 A）到 U + 1D61 （修饰符字母小写 CHI）。</span><span class="sxs-lookup"><span data-stu-id="3e762-417">Modifiers, such as U+02B0 (MODIFIER LETTER SMALL H) through U+02C1 (MODIFIER LETTER REVERSED GLOTTAL STOP), or U+1D2C (MODIFIER LETTER CAPITAL A) through U+1D61 (MODIFIER LETTER SMALL CHI).</span></span> <span data-ttu-id="3e762-418">这些字符是 <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-418">These characters are members of the <xref:System.Globalization.UnicodeCategory.ModifierLetter?displayProperty=nameWithType> category.</span></span>

-   <span data-ttu-id="3e762-419">其他字母，如 U + 05D0 （希伯来语字母 ALEF）到 U + 05EA （希伯来语字母 TAV）、U + 0621 （阿拉伯文字母喉塞音符）到 U + 063A （阿拉伯字母 GHAIN）或 U + 4E00 （\<CJK 象形字，First >）到 U + 9FC3 （\<CJK 表意字符，最后 >）。</span><span class="sxs-lookup"><span data-stu-id="3e762-419">Other letters, such as U+05D0 (HEBREW LETTER ALEF) through U+05EA (HEBREW LETTER TAV), U+0621 (ARABIC LETTER HAMZA) through U+063A (ARABIC LETTER GHAIN), or U+4E00 (\<CJK Ideograph, First>) through U+9FC3 (\<CJK Ideograph, Last>).</span></span> <span data-ttu-id="3e762-420">这些字符是 <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-420">These characters are members of the <xref:System.Globalization.UnicodeCategory.OtherLetter?displayProperty=nameWithType> category.</span></span>



## Examples
 <span data-ttu-id="3e762-421">下面的代码示例演示 <xref:System.Char.IsLetter%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-421">The following code example demonstrates <xref:System.Char.IsLetter%2A>.</span></span>

 [!code-cpp[System.Char.IsLetter#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetter/CPP/isletter.cpp#5)]
 [!code-csharp[System.Char.IsLetter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetter/CS/isletter.cs#5)]
 [!code-vb[System.Char.IsLetter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetter/VB/isletter.vb#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-422"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-422"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-423"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-423"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLetterOrDigit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-424">指示 Unicode 字符是否属于字母或十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-424">Indicates whether a Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-425">有效字母和十进制数字是 <xref:System.Globalization.UnicodeCategory>： `UppercaseLetter`、`LowercaseLetter`、`TitlecaseLetter`、`ModifierLetter`、`OtherLetter`或 `DecimalDigitNumber`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-425">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(char c);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : char -&gt; bool" Usage="System.char.IsLetterOrDigit c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-426">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-426">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-427">指示指定的 Unicode 字符是否属于字母或十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-427">Indicates whether the specified Unicode character is categorized as a letter or a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="3e762-428">如果 <see langword="true" /> 是字母或十进制数，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-428"><see langword="true" /> if <paramref name="c" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-429">有效字母和十进制数字是 <xref:System.Globalization.UnicodeCategory>： `UppercaseLetter`、`LowercaseLetter`、`TitlecaseLetter`、`ModifierLetter`、`OtherLetter`或 `DecimalDigitNumber`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-429">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>



## Examples
 <span data-ttu-id="3e762-430">下面的代码示例演示 <xref:System.Char.IsLetterOrDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-430">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>

 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLetterOrDigit(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : string * int -&gt; bool" Usage="System.char.IsLetterOrDigit (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-431">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-431">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-432"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-432">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-433">指示指定字符串中位于指定位置处的字符是否属于字母或十进制数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-433">Indicates whether the character at the specified position in a specified string is categorized as a letter or a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="3e762-434">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个字母或十进制数，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-434"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-435">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-435">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-436">有效字母和十进制数字是 <xref:System.Globalization.UnicodeCategory>： `UppercaseLetter`、`LowercaseLetter`、`TitlecaseLetter`、`ModifierLetter`、`OtherLetter`或 `DecimalDigitNumber`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-436">Valid letters and decimal digits are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`, `LowercaseLetter`, `TitlecaseLetter`, `ModifierLetter`, `OtherLetter`, or `DecimalDigitNumber`.</span></span>



## Examples
 <span data-ttu-id="3e762-437">下面的代码示例演示 <xref:System.Char.IsLetterOrDigit%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-437">The following code example demonstrates <xref:System.Char.IsLetterOrDigit%2A>.</span></span>

 [!code-cpp[System.Char.IsLetterOrDigit#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CPP/isletterordigit.cpp#6)]
 [!code-csharp[System.Char.IsLetterOrDigit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/CS/isletterordigit.cs#6)]
 [!code-vb[System.Char.IsLetterOrDigit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLetterOrDigit/VB/isletterordigit.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-438"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-438"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-439"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-439"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-440">指示 Unicode 字符是否属于小写字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-440">Indicates whether a Unicode character is categorized as a lowercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(char c);" />
      <MemberSignature Language="F#" Value="static member IsLower : char -&gt; bool" Usage="System.char.IsLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-441">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-441">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-442">指示指定的 Unicode 字符是否属于小写字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-442">Indicates whether the specified Unicode character is categorized as a lowercase letter.</span></span></summary>
        <returns><span data-ttu-id="3e762-443">如果 <see langword="true" /> 是一个小写字母，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-443"><see langword="true" /> if <paramref name="c" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-444">有效的小写字母是 <xref:System.Globalization.UnicodeCategory>： `LowercaseLetter`中以下类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-444">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>



## Examples
 <span data-ttu-id="3e762-445">下面的代码示例演示 <xref:System.Char.IsLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-445">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>

 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLower(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLower : string * int -&gt; bool" Usage="System.char.IsLower (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-446">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-446">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-447"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-447">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-448">指示指定字符串中位于指定位置处的字符是否属于小写字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-448">Indicates whether the character at the specified position in a specified string is categorized as a lowercase letter.</span></span></summary>
        <returns><span data-ttu-id="3e762-449">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个小写字母，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-449"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-450">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-450">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-451">有效的小写字母是 <xref:System.Globalization.UnicodeCategory>： `LowercaseLetter`中以下类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-451">Valid lowercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `LowercaseLetter`.</span></span>



## Examples
 <span data-ttu-id="3e762-452">下面的代码示例演示 <xref:System.Char.IsLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-452">The following code example demonstrates <xref:System.Char.IsLower%2A>.</span></span>

 [!code-cpp[System.Char.IsLower#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsLower/CPP/islower.cpp#7)]
 [!code-csharp[System.Char.IsLower#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsLower/CS/islower.cs#7)]
 [!code-vb[System.Char.IsLower#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsLower/VB/islower.vb#7)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-453"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-453"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-454"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-454"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsUpper(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsLowSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-455">指示指定的 <see cref="T:System.Char" /> 对象是否是一个低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-455">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : char -&gt; bool" Usage="System.char.IsLowSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-456">要计算的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-456">The character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-457">指示指定的 <see cref="T:System.Char" /> 对象是否是一个低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-457">Indicates whether the specified <see cref="T:System.Char" /> object is a low surrogate.</span></span></summary>
        <returns><span data-ttu-id="3e762-458">如果 <see langword="true" /> 参数的数值范围是从 U+DC00 到 U+DFFF，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-458"><see langword="true" /> if the numeric value of the <paramref name="c" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-459">除了使用16位码位来表示单个字符之外，UTF-16 编码还允许使用 2 16 位码位（称为代理项对）表示抽象字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-459">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="3e762-460">此对中的第二个元素是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-460">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="3e762-461">其码位的范围可以是从 U + DC00 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-461">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="3e762-462">单个代理项本身不具有任何解释;仅当用作代理项对的一部分时，它才有意义。</span><span class="sxs-lookup"><span data-stu-id="3e762-462">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>



## Examples
 <span data-ttu-id="3e762-463">下面的代码示例演示 <xref:System.Char.IsHighSurrogate%2A>、<xref:System.Char.IsLowSurrogate%2A>和 <xref:System.Char.IsSurrogatePair%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-463">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>

 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLowSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsLowSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLowSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsLowSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLowSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLowSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsLowSurrogate : string * int -&gt; bool" Usage="System.char.IsLowSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-464">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-464">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-465"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-465">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-466">指示字符串中指定位置处的 <see cref="T:System.Char" /> 对象是否为低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-466">Indicates whether the <see cref="T:System.Char" /> object at the specified position in a string is a low surrogate.</span></span></summary>
        <returns><span data-ttu-id="3e762-467">如果 <see langword="true" /> 中指定字符的数值范围是从 U+DC00 到 U+DFFF，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-467"><see langword="true" /> if the numeric value of the specified character in the <paramref name="s" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-468">`index` 参数是从零开始的。</span><span class="sxs-lookup"><span data-stu-id="3e762-468">The `index` parameter is zero-based.</span></span>

 <span data-ttu-id="3e762-469">除了使用16位码位来表示单个字符之外，UTF-16 编码还允许使用 2 16 位码位（称为代理项对）表示抽象字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-469">In addition to representing single characters using a 16-bit code point, UTF-16 encoding allows abstract characters to be represented using two 16-bit code points, which is known as a surrogate pair.</span></span> <span data-ttu-id="3e762-470">此对中的第二个元素是低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-470">The second element in this pair is the low surrogate.</span></span> <span data-ttu-id="3e762-471">其码位的范围可以是从 U + DC00 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-471">Its code point can range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="3e762-472">单个代理项本身不具有任何解释;仅当用作代理项对的一部分时，它才有意义。</span><span class="sxs-lookup"><span data-stu-id="3e762-472">An individual surrogate has no interpretation of its own; it is meaningful only when used as part of a surrogate pair.</span></span>



## Examples
 <span data-ttu-id="3e762-473">下面的代码示例演示 <xref:System.Char.IsHighSurrogate%2A>、<xref:System.Char.IsLowSurrogate%2A>和 <xref:System.Char.IsSurrogatePair%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-473">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>

 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-474"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-474"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-475"><paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-475"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNumber">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-476">指示 Unicode 字符是否属于数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-476">Indicates whether a Unicode character is categorized as a number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(char c);" />
      <MemberSignature Language="F#" Value="static member IsNumber : char -&gt; bool" Usage="System.char.IsNumber c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-477">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-477">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-478">指示指定的 Unicode 字符是否属于数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-478">Indicates whether the specified Unicode character is categorized as a number.</span></span></summary>
        <returns><span data-ttu-id="3e762-479">如果 <see langword="true" /> 是一个数字，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-479"><see langword="true" /> if <paramref name="c" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-480">此方法确定 <xref:System.Char> 是否是任何数值 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-480">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="3e762-481">除了包含数字以外，数字还包括字符、分数、下标、上标、罗马数字、货币分子和 encircled 数。</span><span class="sxs-lookup"><span data-stu-id="3e762-481">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="3e762-482">此方法与 <xref:System.Char.IsDigit%2A> 方法进行了对比，后者确定 <xref:System.Char> 是否为10基数数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-482">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="3e762-483"><xref:System.Char.IsNumber%28System.Char%29> 方法不用于确定字符串是否包含数字字符（例如，通过对字符串中的每个字符调用方法）。</span><span class="sxs-lookup"><span data-stu-id="3e762-483">The <xref:System.Char.IsNumber%28System.Char%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="3e762-484">若要确定字符串是否包含数字字符，请调用 `TryParse` 方法的重载之一（如 <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> 或整数或浮点类型的 <xref:System.Double.TryParse%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3e762-484">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>

 <span data-ttu-id="3e762-485">有效数字是 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>、<xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>或 <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-485">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>

 <span data-ttu-id="3e762-486"><xref:System.Char.IsNumber%28System.Char%29> 方法假定 `c` 对应于单个语言字符，并检查该字符是否表示数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-486">The <xref:System.Char.IsNumber%28System.Char%29> method assumes that `c` corresponds to a single linguistic character and checks whether that character represents a number.</span></span> <span data-ttu-id="3e762-487">但 Unicode 标准中的一些数字由两个构成代理项对的 <xref:System.Char> 对象表示。</span><span class="sxs-lookup"><span data-stu-id="3e762-487">However, some numbers in the Unicode standard are represented by two <xref:System.Char> objects that form a surrogate pair.</span></span> <span data-ttu-id="3e762-488">例如，爱琴大学编号系统由代码点 U + 10107 到 U + 10133 组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-488">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="3e762-489">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法来实例化表示爱琴大学1的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-489">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="3e762-490">如示例的输出所示，如果传递给此字符的高代理项或低代理项，则 <xref:System.Char.IsNumber%28System.Char%29> 方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="3e762-490">As the output from the example shows, the <xref:System.Char.IsNumber%28System.Char%29> method returns `false` if it is passed either a high surrogate or a low surrogate of this character.</span></span>

 [!code-csharp[System.Char.IsNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#1)]
 [!code-vb[System.Char.IsNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#1)]



## Examples
 <span data-ttu-id="3e762-491">下面的示例演示 <xref:System.Char.IsNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-491">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>

 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsNumber(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsNumber : string * int -&gt; bool" Usage="System.char.IsNumber (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-492">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-492">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-493"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-493">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-494">指示指定字符串中位于指定位置的字符是否属于数字类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-494">Indicates whether the character at the specified position in a specified string is categorized as a number.</span></span></summary>
        <returns><span data-ttu-id="3e762-495">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个数字，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-495"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-496">此方法确定 <xref:System.Char> 是否是任何数值 Unicode 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-496">This method determines whether a <xref:System.Char> is of any numeric Unicode category.</span></span> <span data-ttu-id="3e762-497">除了包含数字以外，数字还包括字符、分数、下标、上标、罗马数字、货币分子和 encircled 数。</span><span class="sxs-lookup"><span data-stu-id="3e762-497">In addition to including digits, numbers include characters, fractions, subscripts, superscripts, Roman numerals, currency numerators, and encircled numbers.</span></span> <span data-ttu-id="3e762-498">此方法与 <xref:System.Char.IsDigit%2A> 方法进行了对比，后者确定 <xref:System.Char> 是否为10基数数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-498">This method contrasts with the <xref:System.Char.IsDigit%2A> method, which determines whether a <xref:System.Char> is a radix-10 digit.</span></span>

 <span data-ttu-id="3e762-499">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-499">Character positions in a string are indexed starting from zero.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="3e762-500"><xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> 方法不用于确定字符串是否包含数字字符（例如，通过对字符串中的每个字符调用方法）。</span><span class="sxs-lookup"><span data-stu-id="3e762-500">The <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method is not intended to determine whether a string consists of numeric characters (for example, by calling the method for each character in a string).</span></span> <span data-ttu-id="3e762-501">若要确定字符串是否包含数字字符，请调用 `TryParse` 方法的重载之一（如 <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> 或整数或浮点类型的 <xref:System.Double.TryParse%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3e762-501">To determine whether a string consists of numeric characters, call one of the overloads of the `TryParse` method (such as <xref:System.Int32.TryParse%2A?displayProperty=nameWithType> or <xref:System.Double.TryParse%2A?displayProperty=nameWithType> of an integral or floating point type.</span></span>

 <span data-ttu-id="3e762-502">有效数字是 <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>、<xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>或 <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> 类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-502">Valid numbers are members of the <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, <xref:System.Globalization.UnicodeCategory.LetterNumber?displayProperty=nameWithType>, or <xref:System.Globalization.UnicodeCategory.OtherNumber?displayProperty=nameWithType> category.</span></span>

 <span data-ttu-id="3e762-503">如果位置 `index` 的 <xref:System.Char> 对象是有效代理项对中的第一个字符，则 <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> 方法将确定代理项对是否构成数字。</span><span class="sxs-lookup"><span data-stu-id="3e762-503">If the <xref:System.Char> object at position `index` is the first character of a valid surrogate pair, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method determines whether the surrogate pair forms a numeric digit.</span></span> <span data-ttu-id="3e762-504">例如，爱琴大学编号系统由代码点 U + 10107 到 U + 10133 组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-504">For example, the Aegean numbering system consists of code points U+10107 through U+10133.</span></span> <span data-ttu-id="3e762-505">下面的示例使用 <xref:System.Char.ConvertFromUtf32%2A> 方法来实例化表示爱琴大学1的字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-505">The following example uses the <xref:System.Char.ConvertFromUtf32%2A> method to instantiate a string that represents AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="3e762-506">如示例的输出所示，如果向传递了爱琴大学 NUMBER ONE 的高代理项，则 <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> 方法返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="3e762-506">As the output from the example shows, the <xref:System.Char.IsNumber%28System.String%2CSystem.Int32%29> method returns `true` if it is passed the high surrogate of AEGEAN NUMBER ONE.</span></span> <span data-ttu-id="3e762-507">但是，如果将其传递到低代理项，则只考虑低代理项的类别，并返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="3e762-507">However, if it is passed the low surrogate, it considers only the category of the low surrogate and returns `false`.</span></span>

 [!code-csharp[System.Char.IsNumber#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber1.cs#2)]
 [!code-vb[System.Char.IsNumber#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber1.vb#2)]



## Examples
 <span data-ttu-id="3e762-508">下面的示例演示 <xref:System.Char.IsNumber%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-508">The following example demonstrates <xref:System.Char.IsNumber%2A>.</span></span>

 [!code-cpp[System.Char.IsNumber#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsNumber/CPP/isnumber.cpp#8)]
 [!code-csharp[System.Char.IsNumber#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsNumber/CS/isnumber.cs#8)]
 [!code-vb[System.Char.IsNumber#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsNumber/VB/isnumber.vb#8)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-509"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-509"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-510"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-510"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="M:System.Char.IsDigit(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsPunctuation">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-511">指示 Unicode 字符是否属于标点符号类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-511">Indicates whether a Unicode character is categorized as a punctuation mark.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-512">有效的标点符号是 <xref:System.Globalization.UnicodeCategory>： `ConnectorPunctuation`、`DashPunctuation`、`OpenPunctuation`、`ClosePunctuation`、`InitialQuotePunctuation`、`FinalQuotePunctuation`或 `OtherPunctuation`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-512">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InitialQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="3e762-513">其中包含下表中列出的 Unicode 码位的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-513">They include characters with the Unicode code points listed in the following table.</span></span>

|||||
|-|-|-|-|
|<span data-ttu-id="3e762-514">U + 0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="3e762-514">U+0021 to U+0023</span></span>|<span data-ttu-id="3e762-515">U + 060C 和 U + 060D</span><span class="sxs-lookup"><span data-stu-id="3e762-515">U+060C and U+060D</span></span>|<span data-ttu-id="3e762-516">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="3e762-516">U+1800 to U+180A</span></span>|<span data-ttu-id="3e762-517">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="3e762-517">U+3014 to U+301F</span></span>|
|<span data-ttu-id="3e762-518">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="3e762-518">U+0025 to U+002A</span></span>|<span data-ttu-id="3e762-519">U+061B</span><span class="sxs-lookup"><span data-stu-id="3e762-519">U+061B</span></span>|<span data-ttu-id="3e762-520">U + 1944 和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="3e762-520">U+1944 and U+1945</span></span>|<span data-ttu-id="3e762-521">U+3030</span><span class="sxs-lookup"><span data-stu-id="3e762-521">U+3030</span></span>|
|<span data-ttu-id="3e762-522">U + 002C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="3e762-522">U+002C to U+002F</span></span>|<span data-ttu-id="3e762-523">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="3e762-523">U+061E and U+061F</span></span>|<span data-ttu-id="3e762-524">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="3e762-524">U+19DE and U+19DF</span></span>|<span data-ttu-id="3e762-525">U+303D</span><span class="sxs-lookup"><span data-stu-id="3e762-525">U+303D</span></span>|
|<span data-ttu-id="3e762-526">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="3e762-526">U+003A and U+003B</span></span>|<span data-ttu-id="3e762-527">U + 066A 到 U + 066D</span><span class="sxs-lookup"><span data-stu-id="3e762-527">U+066A to U+066D</span></span>|<span data-ttu-id="3e762-528">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="3e762-528">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="3e762-529">U+30A0</span><span class="sxs-lookup"><span data-stu-id="3e762-529">U+30A0</span></span>|
|<span data-ttu-id="3e762-530">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="3e762-530">U+003F and U+0040</span></span>|<span data-ttu-id="3e762-531">U+06D4</span><span class="sxs-lookup"><span data-stu-id="3e762-531">U+06D4</span></span>|<span data-ttu-id="3e762-532">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="3e762-532">U+1B5A to U+1B60</span></span>|<span data-ttu-id="3e762-533">U+30FB</span><span class="sxs-lookup"><span data-stu-id="3e762-533">U+30FB</span></span>|
|<span data-ttu-id="3e762-534">U + 005B 到 U + 005D</span><span class="sxs-lookup"><span data-stu-id="3e762-534">U+005B to U+005D</span></span>|<span data-ttu-id="3e762-535">U + 0700 到 U + 070D</span><span class="sxs-lookup"><span data-stu-id="3e762-535">U+0700 to U+070D</span></span>|<span data-ttu-id="3e762-536">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="3e762-536">U+2010 to U+2027</span></span>|<span data-ttu-id="3e762-537">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="3e762-537">U+A874 to U+A877</span></span>|
|<span data-ttu-id="3e762-538">U+005F</span><span class="sxs-lookup"><span data-stu-id="3e762-538">U+005F</span></span>|<span data-ttu-id="3e762-539">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="3e762-539">U+07F7 to U+07F9</span></span>|<span data-ttu-id="3e762-540">U + 2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="3e762-540">U+2030 to U+2043</span></span>|<span data-ttu-id="3e762-541">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="3e762-541">U+FD3E and U+FD3F</span></span>|
|<span data-ttu-id="3e762-542">U+007B</span><span class="sxs-lookup"><span data-stu-id="3e762-542">U+007B</span></span>|<span data-ttu-id="3e762-543">U + 0964 和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="3e762-543">U+0964 and U+0965</span></span>|<span data-ttu-id="3e762-544">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="3e762-544">U+2045 to U+2051</span></span>|<span data-ttu-id="3e762-545">U + FE10 到 U + FE19</span><span class="sxs-lookup"><span data-stu-id="3e762-545">U+FE10 to U+FE19</span></span>|
|<span data-ttu-id="3e762-546">U+007D</span><span class="sxs-lookup"><span data-stu-id="3e762-546">U+007D</span></span>|<span data-ttu-id="3e762-547">U+0970</span><span class="sxs-lookup"><span data-stu-id="3e762-547">U+0970</span></span>|<span data-ttu-id="3e762-548">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="3e762-548">U+2053 to U+205E</span></span>|<span data-ttu-id="3e762-549">U + FE30 到 U + FE52</span><span class="sxs-lookup"><span data-stu-id="3e762-549">U+FE30 to U+FE52</span></span>|
|<span data-ttu-id="3e762-550">U+00A1</span><span class="sxs-lookup"><span data-stu-id="3e762-550">U+00A1</span></span>|<span data-ttu-id="3e762-551">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="3e762-551">U+0DF4</span></span>|<span data-ttu-id="3e762-552">U + 207D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="3e762-552">U+207D and  U+207E</span></span>|<span data-ttu-id="3e762-553">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="3e762-553">U+FE54 to U+FE61</span></span>|
|<span data-ttu-id="3e762-554">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="3e762-554">U+00AB</span></span>|<span data-ttu-id="3e762-555">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="3e762-555">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="3e762-556">U + 208D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="3e762-556">U+208D and U+208E</span></span>|<span data-ttu-id="3e762-557">U+FE63</span><span class="sxs-lookup"><span data-stu-id="3e762-557">U+FE63</span></span>|
|<span data-ttu-id="3e762-558">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="3e762-558">U+00AD</span></span>|<span data-ttu-id="3e762-559">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="3e762-559">U+0F04 to U+0F12</span></span>|<span data-ttu-id="3e762-560">U + 2329 和 U + 232A</span><span class="sxs-lookup"><span data-stu-id="3e762-560">U+2329 and U+232A</span></span>|<span data-ttu-id="3e762-561">U+FE68</span><span class="sxs-lookup"><span data-stu-id="3e762-561">U+FE68</span></span>|
|<span data-ttu-id="3e762-562">U+00B7</span><span class="sxs-lookup"><span data-stu-id="3e762-562">U+00B7</span></span>|<span data-ttu-id="3e762-563">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="3e762-563">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="3e762-564">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="3e762-564">U+2768 to U+2775</span></span>|<span data-ttu-id="3e762-565">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="3e762-565">U+FE6A and U+FE6B</span></span>|
|<span data-ttu-id="3e762-566">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="3e762-566">U+00BB</span></span>|<span data-ttu-id="3e762-567">U+0F85</span><span class="sxs-lookup"><span data-stu-id="3e762-567">U+0F85</span></span>|<span data-ttu-id="3e762-568">U + 27C5 到 U + 27C6</span><span class="sxs-lookup"><span data-stu-id="3e762-568">U+27C5 to U+27C6</span></span>|<span data-ttu-id="3e762-569">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="3e762-569">U+FF01 to U+FF03</span></span>|
|<span data-ttu-id="3e762-570">U+00BF</span><span class="sxs-lookup"><span data-stu-id="3e762-570">U+00BF</span></span>|<span data-ttu-id="3e762-571">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="3e762-571">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="3e762-572">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="3e762-572">U+27E6 to U+27EB</span></span>|<span data-ttu-id="3e762-573">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="3e762-573">U+FF05 to U+FF0A</span></span>|
|<span data-ttu-id="3e762-574">U+037E</span><span class="sxs-lookup"><span data-stu-id="3e762-574">U+037E</span></span>|<span data-ttu-id="3e762-575">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="3e762-575">U+104A to U+104F</span></span>|<span data-ttu-id="3e762-576">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="3e762-576">U+2983 to U+2998</span></span>|<span data-ttu-id="3e762-577">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="3e762-577">U+FF0C to U+FF0F</span></span>|
|<span data-ttu-id="3e762-578">U+0387</span><span class="sxs-lookup"><span data-stu-id="3e762-578">U+0387</span></span>|<span data-ttu-id="3e762-579">U+10FB</span><span class="sxs-lookup"><span data-stu-id="3e762-579">U+10FB</span></span>|<span data-ttu-id="3e762-580">U + 29D8 到 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="3e762-580">U+29D8 to U+29DB</span></span>|<span data-ttu-id="3e762-581">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="3e762-581">U+FF1A and U+FF1B</span></span>|
|<span data-ttu-id="3e762-582">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="3e762-582">U+055A to U+055F</span></span>|<span data-ttu-id="3e762-583">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="3e762-583">U+1361 to U+1368</span></span>|<span data-ttu-id="3e762-584">U + 29FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="3e762-584">U+29FC and U+29FD</span></span>|<span data-ttu-id="3e762-585">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="3e762-585">U+FF1F and U+FF20</span></span>|
|<span data-ttu-id="3e762-586">U + 0589 和 U + 058A</span><span class="sxs-lookup"><span data-stu-id="3e762-586">U+0589 and U+058A</span></span>|<span data-ttu-id="3e762-587">U + 166D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="3e762-587">U+166D and U+166E</span></span>|<span data-ttu-id="3e762-588">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="3e762-588">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="3e762-589">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="3e762-589">U+FF3B to U+FF3D</span></span>|
|<span data-ttu-id="3e762-590">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="3e762-590">U+05BE</span></span>|<span data-ttu-id="3e762-591">U + 169B 和 U + 169C</span><span class="sxs-lookup"><span data-stu-id="3e762-591">U+169B and U+169C</span></span>|<span data-ttu-id="3e762-592">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="3e762-592">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="3e762-593">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="3e762-593">U+FF3F</span></span>|
|<span data-ttu-id="3e762-594">U+05C0</span><span class="sxs-lookup"><span data-stu-id="3e762-594">U+05C0</span></span>|<span data-ttu-id="3e762-595">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="3e762-595">U+16EB to U+16ED</span></span>|<span data-ttu-id="3e762-596">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="3e762-596">U+2E00 to U+2E17</span></span>|<span data-ttu-id="3e762-597">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="3e762-597">U+FF5B</span></span>|
|<span data-ttu-id="3e762-598">U+05C3</span><span class="sxs-lookup"><span data-stu-id="3e762-598">U+05C3</span></span>|<span data-ttu-id="3e762-599">U + 1735 和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="3e762-599">U+1735 and U+1736</span></span>|<span data-ttu-id="3e762-600">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="3e762-600">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="3e762-601">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="3e762-601">U+FF5D</span></span>|
|<span data-ttu-id="3e762-602">U+05C6</span><span class="sxs-lookup"><span data-stu-id="3e762-602">U+05C6</span></span>|<span data-ttu-id="3e762-603">U + 17D4 到 U + 17D6</span><span class="sxs-lookup"><span data-stu-id="3e762-603">U+17D4 to U+17D6</span></span>|<span data-ttu-id="3e762-604">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="3e762-604">U+3001 to U+3003</span></span>|<span data-ttu-id="3e762-605">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="3e762-605">U+FF5F to U+FF65</span></span>|
|<span data-ttu-id="3e762-606">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="3e762-606">U+05F3 and U+05F4</span></span>|<span data-ttu-id="3e762-607">U + 17D8 到 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="3e762-607">U+17D8 to U+17DA</span></span>|<span data-ttu-id="3e762-608">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="3e762-608">U+3008 to U+3011</span></span>||

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(char c);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : char -&gt; bool" Usage="System.char.IsPunctuation c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-609">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-609">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-610">指示指定的 Unicode 字符是否属于标点符号类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-610">Indicates whether the specified Unicode character is categorized as a punctuation mark.</span></span></summary>
        <returns><span data-ttu-id="3e762-611">如果 <see langword="true" /> 是一个标点符号，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-611"><see langword="true" /> if <paramref name="c" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-612">有效的标点符号是 <xref:System.Globalization.UnicodeCategory>： `ConnectorPunctuation`、`DashPunctuation`、`OpenPunctuation`、`ClosePunctuation`、`InitialQuotePunctuation`、`FinalQuotePunctuation`或 `OtherPunctuation`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-612">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InitialQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="3e762-613">其中包含下表中列出的 Unicode 码位的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-613">They include characters with the Unicode code points listed in the following table.</span></span>

|||||
|-|-|-|-|
|<span data-ttu-id="3e762-614">U + 0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="3e762-614">U+0021 to U+0023</span></span>|<span data-ttu-id="3e762-615">U + 060C 和 U + 060D</span><span class="sxs-lookup"><span data-stu-id="3e762-615">U+060C and U+060D</span></span>|<span data-ttu-id="3e762-616">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="3e762-616">U+1800 to U+180A</span></span>|<span data-ttu-id="3e762-617">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="3e762-617">U+3014 to U+301F</span></span>|
|<span data-ttu-id="3e762-618">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="3e762-618">U+0025 to U+002A</span></span>|<span data-ttu-id="3e762-619">U+061B</span><span class="sxs-lookup"><span data-stu-id="3e762-619">U+061B</span></span>|<span data-ttu-id="3e762-620">U + 1944 和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="3e762-620">U+1944 and U+1945</span></span>|<span data-ttu-id="3e762-621">U+3030</span><span class="sxs-lookup"><span data-stu-id="3e762-621">U+3030</span></span>|
|<span data-ttu-id="3e762-622">U + 002C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="3e762-622">U+002C to U+002F</span></span>|<span data-ttu-id="3e762-623">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="3e762-623">U+061E and U+061F</span></span>|<span data-ttu-id="3e762-624">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="3e762-624">U+19DE and U+19DF</span></span>|<span data-ttu-id="3e762-625">U+303D</span><span class="sxs-lookup"><span data-stu-id="3e762-625">U+303D</span></span>|
|<span data-ttu-id="3e762-626">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="3e762-626">U+003A and U+003B</span></span>|<span data-ttu-id="3e762-627">U + 066A 到 U + 066D</span><span class="sxs-lookup"><span data-stu-id="3e762-627">U+066A to U+066D</span></span>|<span data-ttu-id="3e762-628">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="3e762-628">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="3e762-629">U+30A0</span><span class="sxs-lookup"><span data-stu-id="3e762-629">U+30A0</span></span>|
|<span data-ttu-id="3e762-630">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="3e762-630">U+003F and U+0040</span></span>|<span data-ttu-id="3e762-631">U+06D4</span><span class="sxs-lookup"><span data-stu-id="3e762-631">U+06D4</span></span>|<span data-ttu-id="3e762-632">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="3e762-632">U+1B5A to U+1B60</span></span>|<span data-ttu-id="3e762-633">U+30FB</span><span class="sxs-lookup"><span data-stu-id="3e762-633">U+30FB</span></span>|
|<span data-ttu-id="3e762-634">U + 005B 到 U + 005D</span><span class="sxs-lookup"><span data-stu-id="3e762-634">U+005B to U+005D</span></span>|<span data-ttu-id="3e762-635">U + 0700 到 U + 070D</span><span class="sxs-lookup"><span data-stu-id="3e762-635">U+0700 to U+070D</span></span>|<span data-ttu-id="3e762-636">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="3e762-636">U+2010 to U+2027</span></span>|<span data-ttu-id="3e762-637">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="3e762-637">U+A874 to U+A877</span></span>|
|<span data-ttu-id="3e762-638">U+005F</span><span class="sxs-lookup"><span data-stu-id="3e762-638">U+005F</span></span>|<span data-ttu-id="3e762-639">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="3e762-639">U+07F7 to U+07F9</span></span>|<span data-ttu-id="3e762-640">U + 2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="3e762-640">U+2030 to U+2043</span></span>|<span data-ttu-id="3e762-641">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="3e762-641">U+FD3E and U+FD3F</span></span>|
|<span data-ttu-id="3e762-642">U+007B</span><span class="sxs-lookup"><span data-stu-id="3e762-642">U+007B</span></span>|<span data-ttu-id="3e762-643">U + 0964 和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="3e762-643">U+0964 and U+0965</span></span>|<span data-ttu-id="3e762-644">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="3e762-644">U+2045 to U+2051</span></span>|<span data-ttu-id="3e762-645">U + FE10 到 U + FE19</span><span class="sxs-lookup"><span data-stu-id="3e762-645">U+FE10 to U+FE19</span></span>|
|<span data-ttu-id="3e762-646">U+007D</span><span class="sxs-lookup"><span data-stu-id="3e762-646">U+007D</span></span>|<span data-ttu-id="3e762-647">U+0970</span><span class="sxs-lookup"><span data-stu-id="3e762-647">U+0970</span></span>|<span data-ttu-id="3e762-648">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="3e762-648">U+2053 to U+205E</span></span>|<span data-ttu-id="3e762-649">U + FE30 到 U + FE52</span><span class="sxs-lookup"><span data-stu-id="3e762-649">U+FE30 to U+FE52</span></span>|
|<span data-ttu-id="3e762-650">U+00A1</span><span class="sxs-lookup"><span data-stu-id="3e762-650">U+00A1</span></span>|<span data-ttu-id="3e762-651">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="3e762-651">U+0DF4</span></span>|<span data-ttu-id="3e762-652">U + 207D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="3e762-652">U+207D and  U+207E</span></span>|<span data-ttu-id="3e762-653">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="3e762-653">U+FE54 to U+FE61</span></span>|
|<span data-ttu-id="3e762-654">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="3e762-654">U+00AB</span></span>|<span data-ttu-id="3e762-655">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="3e762-655">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="3e762-656">U + 208D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="3e762-656">U+208D and U+208E</span></span>|<span data-ttu-id="3e762-657">U+FE63</span><span class="sxs-lookup"><span data-stu-id="3e762-657">U+FE63</span></span>|
|<span data-ttu-id="3e762-658">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="3e762-658">U+00AD</span></span>|<span data-ttu-id="3e762-659">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="3e762-659">U+0F04 to U+0F12</span></span>|<span data-ttu-id="3e762-660">U + 2329 和 U + 232A</span><span class="sxs-lookup"><span data-stu-id="3e762-660">U+2329 and U+232A</span></span>|<span data-ttu-id="3e762-661">U+FE68</span><span class="sxs-lookup"><span data-stu-id="3e762-661">U+FE68</span></span>|
|<span data-ttu-id="3e762-662">U+00B7</span><span class="sxs-lookup"><span data-stu-id="3e762-662">U+00B7</span></span>|<span data-ttu-id="3e762-663">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="3e762-663">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="3e762-664">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="3e762-664">U+2768 to U+2775</span></span>|<span data-ttu-id="3e762-665">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="3e762-665">U+FE6A and U+FE6B</span></span>|
|<span data-ttu-id="3e762-666">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="3e762-666">U+00BB</span></span>|<span data-ttu-id="3e762-667">U+0F85</span><span class="sxs-lookup"><span data-stu-id="3e762-667">U+0F85</span></span>|<span data-ttu-id="3e762-668">U + 27C5 到 U + 27C6</span><span class="sxs-lookup"><span data-stu-id="3e762-668">U+27C5 to U+27C6</span></span>|<span data-ttu-id="3e762-669">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="3e762-669">U+FF01 to U+FF03</span></span>|
|<span data-ttu-id="3e762-670">U+00BF</span><span class="sxs-lookup"><span data-stu-id="3e762-670">U+00BF</span></span>|<span data-ttu-id="3e762-671">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="3e762-671">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="3e762-672">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="3e762-672">U+27E6 to U+27EB</span></span>|<span data-ttu-id="3e762-673">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="3e762-673">U+FF05 to U+FF0A</span></span>|
|<span data-ttu-id="3e762-674">U+037E</span><span class="sxs-lookup"><span data-stu-id="3e762-674">U+037E</span></span>|<span data-ttu-id="3e762-675">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="3e762-675">U+104A to U+104F</span></span>|<span data-ttu-id="3e762-676">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="3e762-676">U+2983 to U+2998</span></span>|<span data-ttu-id="3e762-677">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="3e762-677">U+FF0C to U+FF0F</span></span>|
|<span data-ttu-id="3e762-678">U+0387</span><span class="sxs-lookup"><span data-stu-id="3e762-678">U+0387</span></span>|<span data-ttu-id="3e762-679">U+10FB</span><span class="sxs-lookup"><span data-stu-id="3e762-679">U+10FB</span></span>|<span data-ttu-id="3e762-680">U + 29D8 到 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="3e762-680">U+29D8 to U+29DB</span></span>|<span data-ttu-id="3e762-681">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="3e762-681">U+FF1A and U+FF1B</span></span>|
|<span data-ttu-id="3e762-682">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="3e762-682">U+055A to U+055F</span></span>|<span data-ttu-id="3e762-683">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="3e762-683">U+1361 to U+1368</span></span>|<span data-ttu-id="3e762-684">U + 29FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="3e762-684">U+29FC and U+29FD</span></span>|<span data-ttu-id="3e762-685">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="3e762-685">U+FF1F and U+FF20</span></span>|
|<span data-ttu-id="3e762-686">U + 0589 和 U + 058A</span><span class="sxs-lookup"><span data-stu-id="3e762-686">U+0589 and U+058A</span></span>|<span data-ttu-id="3e762-687">U + 166D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="3e762-687">U+166D and U+166E</span></span>|<span data-ttu-id="3e762-688">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="3e762-688">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="3e762-689">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="3e762-689">U+FF3B to U+FF3D</span></span>|
|<span data-ttu-id="3e762-690">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="3e762-690">U+05BE</span></span>|<span data-ttu-id="3e762-691">U + 169B 和 U + 169C</span><span class="sxs-lookup"><span data-stu-id="3e762-691">U+169B and U+169C</span></span>|<span data-ttu-id="3e762-692">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="3e762-692">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="3e762-693">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="3e762-693">U+FF3F</span></span>|
|<span data-ttu-id="3e762-694">U+05C0</span><span class="sxs-lookup"><span data-stu-id="3e762-694">U+05C0</span></span>|<span data-ttu-id="3e762-695">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="3e762-695">U+16EB to U+16ED</span></span>|<span data-ttu-id="3e762-696">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="3e762-696">U+2E00 to U+2E17</span></span>|<span data-ttu-id="3e762-697">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="3e762-697">U+FF5B</span></span>|
|<span data-ttu-id="3e762-698">U+05C3</span><span class="sxs-lookup"><span data-stu-id="3e762-698">U+05C3</span></span>|<span data-ttu-id="3e762-699">U + 1735 和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="3e762-699">U+1735 and U+1736</span></span>|<span data-ttu-id="3e762-700">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="3e762-700">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="3e762-701">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="3e762-701">U+FF5D</span></span>|
|<span data-ttu-id="3e762-702">U+05C6</span><span class="sxs-lookup"><span data-stu-id="3e762-702">U+05C6</span></span>|<span data-ttu-id="3e762-703">U + 17D4 到 U + 17D6</span><span class="sxs-lookup"><span data-stu-id="3e762-703">U+17D4 to U+17D6</span></span>|<span data-ttu-id="3e762-704">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="3e762-704">U+3001 to U+3003</span></span>|<span data-ttu-id="3e762-705">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="3e762-705">U+FF5F to U+FF65</span></span>|
|<span data-ttu-id="3e762-706">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="3e762-706">U+05F3 and U+05F4</span></span>|<span data-ttu-id="3e762-707">U + 17D8 到 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="3e762-707">U+17D8 to U+17DA</span></span>|<span data-ttu-id="3e762-708">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="3e762-708">U+3008 to U+3011</span></span>||



## Examples
 <span data-ttu-id="3e762-709">下面的代码示例演示 <xref:System.Char.IsPunctuation%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-709">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>

 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsPunctuation(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : string * int -&gt; bool" Usage="System.char.IsPunctuation (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-710">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-710">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-711"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-711">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-712">指示指定字符串中位于指定位置处的字符是否属于标点符号类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-712">Indicates whether the character at the specified position in a specified string is categorized as a punctuation mark.</span></span></summary>
        <returns><span data-ttu-id="3e762-713">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个标点符号，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-713"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-714">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-714">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-715">有效的标点符号是 <xref:System.Globalization.UnicodeCategory>： `ConnectorPunctuation`、`DashPunctuation`、`OpenPunctuation`、`ClosePunctuation`、`InitialQuotePunctuation`、`FinalQuotePunctuation`或 `OtherPunctuation`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-715">Valid punctuation marks are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `ConnectorPunctuation`, `DashPunctuation`, `OpenPunctuation`, `ClosePunctuation`, `InitialQuotePunctuation`, `FinalQuotePunctuation`, or `OtherPunctuation`.</span></span> <span data-ttu-id="3e762-716">其中包含下表中列出的 Unicode 码位的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-716">They include characters with the Unicode code points listed in the following table.</span></span>

|||||
|-|-|-|-|
|<span data-ttu-id="3e762-717">U + 0021 到 U + 0023</span><span class="sxs-lookup"><span data-stu-id="3e762-717">U+0021 to U+0023</span></span>|<span data-ttu-id="3e762-718">U + 060C 和 U + 060D</span><span class="sxs-lookup"><span data-stu-id="3e762-718">U+060C and U+060D</span></span>|<span data-ttu-id="3e762-719">U + 1800 到 U + 180A</span><span class="sxs-lookup"><span data-stu-id="3e762-719">U+1800 to U+180A</span></span>|<span data-ttu-id="3e762-720">U + 3014 到 U + 301F</span><span class="sxs-lookup"><span data-stu-id="3e762-720">U+3014 to U+301F</span></span>|
|<span data-ttu-id="3e762-721">U + 0025 到 U + 002A</span><span class="sxs-lookup"><span data-stu-id="3e762-721">U+0025 to U+002A</span></span>|<span data-ttu-id="3e762-722">U+061B</span><span class="sxs-lookup"><span data-stu-id="3e762-722">U+061B</span></span>|<span data-ttu-id="3e762-723">U + 1944 和 U + 1945</span><span class="sxs-lookup"><span data-stu-id="3e762-723">U+1944 and U+1945</span></span>|<span data-ttu-id="3e762-724">U+3030</span><span class="sxs-lookup"><span data-stu-id="3e762-724">U+3030</span></span>|
|<span data-ttu-id="3e762-725">U + 002C 到 U + 002F</span><span class="sxs-lookup"><span data-stu-id="3e762-725">U+002C to U+002F</span></span>|<span data-ttu-id="3e762-726">U + 061E 和 U + 061F</span><span class="sxs-lookup"><span data-stu-id="3e762-726">U+061E and U+061F</span></span>|<span data-ttu-id="3e762-727">U + 19DE 和 U + 19DF</span><span class="sxs-lookup"><span data-stu-id="3e762-727">U+19DE and U+19DF</span></span>|<span data-ttu-id="3e762-728">U+303D</span><span class="sxs-lookup"><span data-stu-id="3e762-728">U+303D</span></span>|
|<span data-ttu-id="3e762-729">U + 003A 和 U + 003B</span><span class="sxs-lookup"><span data-stu-id="3e762-729">U+003A and U+003B</span></span>|<span data-ttu-id="3e762-730">U + 066A 到 U + 066D</span><span class="sxs-lookup"><span data-stu-id="3e762-730">U+066A to U+066D</span></span>|<span data-ttu-id="3e762-731">U + 1A1E 和 U + 1A1F</span><span class="sxs-lookup"><span data-stu-id="3e762-731">U+1A1E and U+1A1F</span></span>|<span data-ttu-id="3e762-732">U+30A0</span><span class="sxs-lookup"><span data-stu-id="3e762-732">U+30A0</span></span>|
|<span data-ttu-id="3e762-733">U + 003F 和 U + 0040</span><span class="sxs-lookup"><span data-stu-id="3e762-733">U+003F and U+0040</span></span>|<span data-ttu-id="3e762-734">U+06D4</span><span class="sxs-lookup"><span data-stu-id="3e762-734">U+06D4</span></span>|<span data-ttu-id="3e762-735">U + 1B5A 到 U + 1B60</span><span class="sxs-lookup"><span data-stu-id="3e762-735">U+1B5A to U+1B60</span></span>|<span data-ttu-id="3e762-736">U+30FB</span><span class="sxs-lookup"><span data-stu-id="3e762-736">U+30FB</span></span>|
|<span data-ttu-id="3e762-737">U + 005B 到 U + 005D</span><span class="sxs-lookup"><span data-stu-id="3e762-737">U+005B to U+005D</span></span>|<span data-ttu-id="3e762-738">U + 0700 到 U + 070D</span><span class="sxs-lookup"><span data-stu-id="3e762-738">U+0700 to U+070D</span></span>|<span data-ttu-id="3e762-739">U + 2010 到 U + 2027</span><span class="sxs-lookup"><span data-stu-id="3e762-739">U+2010 to U+2027</span></span>|<span data-ttu-id="3e762-740">U + A874 到 U + A877</span><span class="sxs-lookup"><span data-stu-id="3e762-740">U+A874 to U+A877</span></span>|
|<span data-ttu-id="3e762-741">U+005F</span><span class="sxs-lookup"><span data-stu-id="3e762-741">U+005F</span></span>|<span data-ttu-id="3e762-742">U + 07F7 到 U + 07F9</span><span class="sxs-lookup"><span data-stu-id="3e762-742">U+07F7 to U+07F9</span></span>|<span data-ttu-id="3e762-743">U + 2030 到 U + 2043</span><span class="sxs-lookup"><span data-stu-id="3e762-743">U+2030 to U+2043</span></span>|<span data-ttu-id="3e762-744">U + FD3E 和 U + FD3F</span><span class="sxs-lookup"><span data-stu-id="3e762-744">U+FD3E and U+FD3F</span></span>|
|<span data-ttu-id="3e762-745">U+007B</span><span class="sxs-lookup"><span data-stu-id="3e762-745">U+007B</span></span>|<span data-ttu-id="3e762-746">U + 0964 和 U + 0965</span><span class="sxs-lookup"><span data-stu-id="3e762-746">U+0964 and U+0965</span></span>|<span data-ttu-id="3e762-747">U + 2045 到 U + 2051</span><span class="sxs-lookup"><span data-stu-id="3e762-747">U+2045 to U+2051</span></span>|<span data-ttu-id="3e762-748">U + FE10 到 U + FE19</span><span class="sxs-lookup"><span data-stu-id="3e762-748">U+FE10 to U+FE19</span></span>|
|<span data-ttu-id="3e762-749">U+007D</span><span class="sxs-lookup"><span data-stu-id="3e762-749">U+007D</span></span>|<span data-ttu-id="3e762-750">U+0970</span><span class="sxs-lookup"><span data-stu-id="3e762-750">U+0970</span></span>|<span data-ttu-id="3e762-751">U + 2053 到 U + 205E</span><span class="sxs-lookup"><span data-stu-id="3e762-751">U+2053 to U+205E</span></span>|<span data-ttu-id="3e762-752">U + FE30 到 U + FE52</span><span class="sxs-lookup"><span data-stu-id="3e762-752">U+FE30 to U+FE52</span></span>|
|<span data-ttu-id="3e762-753">U+00A1</span><span class="sxs-lookup"><span data-stu-id="3e762-753">U+00A1</span></span>|<span data-ttu-id="3e762-754">U+0DF4</span><span class="sxs-lookup"><span data-stu-id="3e762-754">U+0DF4</span></span>|<span data-ttu-id="3e762-755">U + 207D 和 U + 207E</span><span class="sxs-lookup"><span data-stu-id="3e762-755">U+207D and  U+207E</span></span>|<span data-ttu-id="3e762-756">U + FE54 到 U + FE61</span><span class="sxs-lookup"><span data-stu-id="3e762-756">U+FE54 to U+FE61</span></span>|
|<span data-ttu-id="3e762-757">U + 00AB</span><span class="sxs-lookup"><span data-stu-id="3e762-757">U+00AB</span></span>|<span data-ttu-id="3e762-758">U + 0E4F 到 U + 0E5B</span><span class="sxs-lookup"><span data-stu-id="3e762-758">U+0E4F to U+0E5B</span></span>|<span data-ttu-id="3e762-759">U + 208D 和 U + 208E</span><span class="sxs-lookup"><span data-stu-id="3e762-759">U+208D and U+208E</span></span>|<span data-ttu-id="3e762-760">U+FE63</span><span class="sxs-lookup"><span data-stu-id="3e762-760">U+FE63</span></span>|
|<span data-ttu-id="3e762-761">U + 00AD</span><span class="sxs-lookup"><span data-stu-id="3e762-761">U+00AD</span></span>|<span data-ttu-id="3e762-762">U + 0F04 到 U + 0F12</span><span class="sxs-lookup"><span data-stu-id="3e762-762">U+0F04 to U+0F12</span></span>|<span data-ttu-id="3e762-763">U + 2329 和 U + 232A</span><span class="sxs-lookup"><span data-stu-id="3e762-763">U+2329 and U+232A</span></span>|<span data-ttu-id="3e762-764">U+FE68</span><span class="sxs-lookup"><span data-stu-id="3e762-764">U+FE68</span></span>|
|<span data-ttu-id="3e762-765">U+00B7</span><span class="sxs-lookup"><span data-stu-id="3e762-765">U+00B7</span></span>|<span data-ttu-id="3e762-766">U + 0F3A 到 U + 0F3D</span><span class="sxs-lookup"><span data-stu-id="3e762-766">U+0F3A to U+0F3D</span></span>|<span data-ttu-id="3e762-767">U + 2768 到 U + 2775</span><span class="sxs-lookup"><span data-stu-id="3e762-767">U+2768 to U+2775</span></span>|<span data-ttu-id="3e762-768">U + FE6A 和 U + FE6B</span><span class="sxs-lookup"><span data-stu-id="3e762-768">U+FE6A and U+FE6B</span></span>|
|<span data-ttu-id="3e762-769">U + 00BB</span><span class="sxs-lookup"><span data-stu-id="3e762-769">U+00BB</span></span>|<span data-ttu-id="3e762-770">U+0F85</span><span class="sxs-lookup"><span data-stu-id="3e762-770">U+0F85</span></span>|<span data-ttu-id="3e762-771">U + 27C5 到 U + 27C6</span><span class="sxs-lookup"><span data-stu-id="3e762-771">U+27C5 to U+27C6</span></span>|<span data-ttu-id="3e762-772">U + FF01 到 U + FF03</span><span class="sxs-lookup"><span data-stu-id="3e762-772">U+FF01 to U+FF03</span></span>|
|<span data-ttu-id="3e762-773">U+00BF</span><span class="sxs-lookup"><span data-stu-id="3e762-773">U+00BF</span></span>|<span data-ttu-id="3e762-774">U + 0FD0 和 U + 0FD1</span><span class="sxs-lookup"><span data-stu-id="3e762-774">U+0FD0 and U+0FD1</span></span>|<span data-ttu-id="3e762-775">U + 27E6 到 U + 27EB</span><span class="sxs-lookup"><span data-stu-id="3e762-775">U+27E6 to U+27EB</span></span>|<span data-ttu-id="3e762-776">U + FF05 到 U + FF0A</span><span class="sxs-lookup"><span data-stu-id="3e762-776">U+FF05 to U+FF0A</span></span>|
|<span data-ttu-id="3e762-777">U+037E</span><span class="sxs-lookup"><span data-stu-id="3e762-777">U+037E</span></span>|<span data-ttu-id="3e762-778">U + 104A 到 U + 104F</span><span class="sxs-lookup"><span data-stu-id="3e762-778">U+104A to U+104F</span></span>|<span data-ttu-id="3e762-779">U + 2983 到 U + 2998</span><span class="sxs-lookup"><span data-stu-id="3e762-779">U+2983 to U+2998</span></span>|<span data-ttu-id="3e762-780">U + FF0C 到 U + FF0F</span><span class="sxs-lookup"><span data-stu-id="3e762-780">U+FF0C to U+FF0F</span></span>|
|<span data-ttu-id="3e762-781">U+0387</span><span class="sxs-lookup"><span data-stu-id="3e762-781">U+0387</span></span>|<span data-ttu-id="3e762-782">U+10FB</span><span class="sxs-lookup"><span data-stu-id="3e762-782">U+10FB</span></span>|<span data-ttu-id="3e762-783">U + 29D8 到 U + 29DB</span><span class="sxs-lookup"><span data-stu-id="3e762-783">U+29D8 to U+29DB</span></span>|<span data-ttu-id="3e762-784">U + FF1A 和 U + FF1B</span><span class="sxs-lookup"><span data-stu-id="3e762-784">U+FF1A and U+FF1B</span></span>|
|<span data-ttu-id="3e762-785">U + 055A 到 U + 055F</span><span class="sxs-lookup"><span data-stu-id="3e762-785">U+055A to U+055F</span></span>|<span data-ttu-id="3e762-786">U + 1361 到 U + 1368</span><span class="sxs-lookup"><span data-stu-id="3e762-786">U+1361 to U+1368</span></span>|<span data-ttu-id="3e762-787">U + 29FC 和 U + 29FD</span><span class="sxs-lookup"><span data-stu-id="3e762-787">U+29FC and U+29FD</span></span>|<span data-ttu-id="3e762-788">U + FF1F 和 U + FF20</span><span class="sxs-lookup"><span data-stu-id="3e762-788">U+FF1F and U+FF20</span></span>|
|<span data-ttu-id="3e762-789">U + 0589 和 U + 058A</span><span class="sxs-lookup"><span data-stu-id="3e762-789">U+0589 and U+058A</span></span>|<span data-ttu-id="3e762-790">U + 166D 和 U + 166E</span><span class="sxs-lookup"><span data-stu-id="3e762-790">U+166D and U+166E</span></span>|<span data-ttu-id="3e762-791">U + 2CF9 到 U + 2CFC</span><span class="sxs-lookup"><span data-stu-id="3e762-791">U+2CF9 to U+2CFC</span></span>|<span data-ttu-id="3e762-792">U + FF3B 到 U + FF3D</span><span class="sxs-lookup"><span data-stu-id="3e762-792">U+FF3B to U+FF3D</span></span>|
|<span data-ttu-id="3e762-793">U + 05BE</span><span class="sxs-lookup"><span data-stu-id="3e762-793">U+05BE</span></span>|<span data-ttu-id="3e762-794">U + 169B 和 U + 169C</span><span class="sxs-lookup"><span data-stu-id="3e762-794">U+169B and U+169C</span></span>|<span data-ttu-id="3e762-795">U + 2CFE 和 U + 2CFF</span><span class="sxs-lookup"><span data-stu-id="3e762-795">U+2CFE and U+2CFF</span></span>|<span data-ttu-id="3e762-796">U+FF3F</span><span class="sxs-lookup"><span data-stu-id="3e762-796">U+FF3F</span></span>|
|<span data-ttu-id="3e762-797">U+05C0</span><span class="sxs-lookup"><span data-stu-id="3e762-797">U+05C0</span></span>|<span data-ttu-id="3e762-798">U + 16EB 到 U + 16ED</span><span class="sxs-lookup"><span data-stu-id="3e762-798">U+16EB to U+16ED</span></span>|<span data-ttu-id="3e762-799">U + 2E00 到 U + 2E17</span><span class="sxs-lookup"><span data-stu-id="3e762-799">U+2E00 to U+2E17</span></span>|<span data-ttu-id="3e762-800">U+FF5B</span><span class="sxs-lookup"><span data-stu-id="3e762-800">U+FF5B</span></span>|
|<span data-ttu-id="3e762-801">U+05C3</span><span class="sxs-lookup"><span data-stu-id="3e762-801">U+05C3</span></span>|<span data-ttu-id="3e762-802">U + 1735 和 U + 1736</span><span class="sxs-lookup"><span data-stu-id="3e762-802">U+1735 and U+1736</span></span>|<span data-ttu-id="3e762-803">U + 2E1C 和 U + 2E1D</span><span class="sxs-lookup"><span data-stu-id="3e762-803">U+2E1C and U+2E1D</span></span>|<span data-ttu-id="3e762-804">U+FF5D</span><span class="sxs-lookup"><span data-stu-id="3e762-804">U+FF5D</span></span>|
|<span data-ttu-id="3e762-805">U+05C6</span><span class="sxs-lookup"><span data-stu-id="3e762-805">U+05C6</span></span>|<span data-ttu-id="3e762-806">U + 17D4 到 U + 17D6</span><span class="sxs-lookup"><span data-stu-id="3e762-806">U+17D4 to U+17D6</span></span>|<span data-ttu-id="3e762-807">U + 3001 到 U + 3003</span><span class="sxs-lookup"><span data-stu-id="3e762-807">U+3001 to U+3003</span></span>|<span data-ttu-id="3e762-808">U + FF5F 到 U + FF65</span><span class="sxs-lookup"><span data-stu-id="3e762-808">U+FF5F to U+FF65</span></span>|
|<span data-ttu-id="3e762-809">U + 05F3 和 U + 05F4</span><span class="sxs-lookup"><span data-stu-id="3e762-809">U+05F3 and U+05F4</span></span>|<span data-ttu-id="3e762-810">U + 17D8 到 U + 17DA</span><span class="sxs-lookup"><span data-stu-id="3e762-810">U+17D8 to U+17DA</span></span>|<span data-ttu-id="3e762-811">U + 3008 到 U + 3011</span><span class="sxs-lookup"><span data-stu-id="3e762-811">U+3008 to U+3011</span></span>||



## Examples
 <span data-ttu-id="3e762-812">下面的代码示例演示 <xref:System.Char.IsPunctuation%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-812">The following code example demonstrates <xref:System.Char.IsPunctuation%2A>.</span></span>

 [!code-cpp[System.Char.IsPunctuation#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CPP/ispunctuation.cpp#9)]
 [!code-csharp[System.Char.IsPunctuation#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsPunctuation/CS/ispunctuation.cs#9)]
 [!code-vb[System.Char.IsPunctuation#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsPunctuation/VB/ispunctuation.vb#9)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-813"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-813"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-814"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-814"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSeparator">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-815">指示 Unicode 字符是否属于分隔符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-815">Indicates whether a Unicode character is categorized as a separator character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-816">Unicode 标准可识别三个子类别的分隔符：</span><span class="sxs-lookup"><span data-stu-id="3e762-816">The Unicode standard recognizes three subcategories of separators:</span></span>

-   <span data-ttu-id="3e762-817">空格分隔符（<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> 类别），其中包含字符，如 \u0020。</span><span class="sxs-lookup"><span data-stu-id="3e762-817">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>

-   <span data-ttu-id="3e762-818">行分隔符（<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> 类别），其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="3e762-818">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>

-   <span data-ttu-id="3e762-819">段落分隔符（<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> 类别），其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="3e762-819">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>

> [!NOTE]
>  <span data-ttu-id="3e762-820">Unicode 标准将字符 \u000A （LF）、\u000C （FF）和 \u000D （CR）归类为控制字符（<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> 类别的成员），而不是作为分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-820">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(char c);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : char -&gt; bool" Usage="System.char.IsSeparator c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-821">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-821">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-822">指示指定的 Unicode 字符是否属于分隔符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-822">Indicates whether the specified Unicode character is categorized as a separator character.</span></span></summary>
        <returns><span data-ttu-id="3e762-823">如果 <see langword="true" /> 是分隔符，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-823"><see langword="true" /> if <paramref name="c" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-824">Unicode 标准可识别三个子类别的分隔符：</span><span class="sxs-lookup"><span data-stu-id="3e762-824">The Unicode standard recognizes three subcategories of separators:</span></span>

-   <span data-ttu-id="3e762-825">空格分隔符（<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> 类别），其中包含字符，如 \u0020。</span><span class="sxs-lookup"><span data-stu-id="3e762-825">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>

-   <span data-ttu-id="3e762-826">行分隔符（<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> 类别），其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="3e762-826">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>

-   <span data-ttu-id="3e762-827">段落分隔符（<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> 类别），其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="3e762-827">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>

> [!NOTE]
>  <span data-ttu-id="3e762-828">Unicode 标准将字符 \u000A （LF）、\u000C （FF）和 \u000D （CR）归类为控制字符（<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> 类别的成员），而不是作为分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-828">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>



## Examples
 <span data-ttu-id="3e762-829">下面的示例列出归类为分隔符的 <xref:System.Char> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-829">The following example lists the <xref:System.Char> objects that are classified as separator characters.</span></span>

 [!code-cpp[System.Char.IsSeparator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator1.cpp#1)]
 [!code-csharp[System.Char.IsSeparator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator1.cs#1)]
 [!code-vb[System.Char.IsSeparator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator1.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSeparator(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : string * int -&gt; bool" Usage="System.char.IsSeparator (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-830">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-830">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-831"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-831">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-832">指示指定字符串中位于指定位置处的字符是否属于分隔符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-832">Indicates whether the character at the specified position in a specified string is categorized as a separator character.</span></span></summary>
        <returns><span data-ttu-id="3e762-833">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个分隔符，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-833"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-834">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-834">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-835">Unicode 标准可识别三个子类别的分隔符：</span><span class="sxs-lookup"><span data-stu-id="3e762-835">The Unicode standard recognizes three subcategories of separators:</span></span>

-   <span data-ttu-id="3e762-836">空格分隔符（<xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> 类别），其中包含字符，如 \u0020。</span><span class="sxs-lookup"><span data-stu-id="3e762-836">Space separators (the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category), which includes characters such as \u0020.</span></span>

-   <span data-ttu-id="3e762-837">行分隔符（<xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> 类别），其中包括 \u2028。</span><span class="sxs-lookup"><span data-stu-id="3e762-837">Line separators (the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category), which includes \u2028.</span></span>

-   <span data-ttu-id="3e762-838">段落分隔符（<xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> 类别），其中包括 \u2029。</span><span class="sxs-lookup"><span data-stu-id="3e762-838">Paragraph separators (the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category), which includes \u2029.</span></span>

> [!NOTE]
>  <span data-ttu-id="3e762-839">Unicode 标准将字符 \u000A （LF）、\u000C （FF）和 \u000D （CR）归类为控制字符（<xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> 类别的成员），而不是作为分隔符字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-839">The Unicode standard classifies the characters \u000A (LF), \u000C (FF), and \u000D (CR) as control characters (members of the <xref:System.Globalization.UnicodeCategory.Control?displayProperty=nameWithType> category), not as separator characters.</span></span>



## Examples
 <span data-ttu-id="3e762-840">下面的示例演示 <xref:System.Char.IsSeparator%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-840">The following example demonstrates <xref:System.Char.IsSeparator%2A>.</span></span>

 [!code-cpp[System.Char.IsSeparator#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSeparator/CPP/isseparator.cpp#10)]
 [!code-csharp[System.Char.IsSeparator#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSeparator/CS/isseparator.cs#10)]
 [!code-vb[System.Char.IsSeparator#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSeparator/VB/isseparator.vb#10)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-841"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-841"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-842"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-842"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogate">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-843">指示字符是否具有代理项代码单位。</span><span class="sxs-lookup"><span data-stu-id="3e762-843">Indicates whether a character has a surrogate code unit.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(char c);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : char -&gt; bool" Usage="System.char.IsSurrogate c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-844">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-844">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-845">指示指定的字符是否具有指定的代理项代码单位。</span><span class="sxs-lookup"><span data-stu-id="3e762-845">Indicates whether the specified character has a surrogate code unit.</span></span></summary>
        <returns><span data-ttu-id="3e762-846">如果 <see langword="true" /> 为高代理项或低代理项，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-846"><see langword="true" /> if <paramref name="c" /> is either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-847">代理项是一个具有 UTF-16 代码单元的 <xref:System.Char> 对象，范围是从 U + D800 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-847">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="3e762-848">此范围内具有代码单元的每个字符都属于 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-848">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="3e762-849">单个代理项代码单元没有自身的解释，但只有在用作代理项对的一部分时才有意义。</span><span class="sxs-lookup"><span data-stu-id="3e762-849">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="3e762-850">有关代理项对的详细信息，请参阅[unicode 主页](https://go.microsoft.com/fwlink/?linkid=37123)上的 unicode 标准。</span><span class="sxs-lookup"><span data-stu-id="3e762-850">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>



## Examples
 <span data-ttu-id="3e762-851">下面的示例演示 <xref:System.Char.IsSurrogate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-851">The following example demonstrates the <xref:System.Char.IsSurrogate%2A> method.</span></span>

 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogate">
      <MemberSignature Language="C#" Value="public static bool IsSurrogate (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogate(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogate(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogate (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogate(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogate : string * int -&gt; bool" Usage="System.char.IsSurrogate (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-852">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-852">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-853"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-853">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-854">指示指定字符串中位于指定位置的字符是否具有代理项代码单位。</span><span class="sxs-lookup"><span data-stu-id="3e762-854">Indicates whether the character at the specified position in a specified string has a surrogate code unit.</span></span></summary>
        <returns><span data-ttu-id="3e762-855">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个高代理项或低代理项，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-855"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a either a high surrogate or a low surrogate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-856">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-856">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-857">代理项是一个具有 UTF-16 代码单元的 <xref:System.Char> 对象，范围是从 U + D800 到 U + DFFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-857">A surrogate is a <xref:System.Char> object with a UTF-16 code unit in the range from U+D800 to U+DFFF.</span></span> <span data-ttu-id="3e762-858">此范围内具有代码单元的每个字符都属于 <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> 类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-858">Each character with a code unit in this range belongs to the <xref:System.Globalization.UnicodeCategory.Surrogate?displayProperty=nameWithType> category.</span></span> <span data-ttu-id="3e762-859">单个代理项代码单元没有自身的解释，但只有在用作代理项对的一部分时才有意义。</span><span class="sxs-lookup"><span data-stu-id="3e762-859">The individual surrogate code unit has no interpretation of its own, but has meaning only when used as part of a surrogate pair.</span></span> <span data-ttu-id="3e762-860">有关代理项对的详细信息，请参阅[unicode 主页](https://go.microsoft.com/fwlink/?linkid=37123)上的 unicode 标准。</span><span class="sxs-lookup"><span data-stu-id="3e762-860">For more information about surrogate pairs, see the Unicode Standard at the [Unicode home page](https://go.microsoft.com/fwlink/?linkid=37123).</span></span>



## Examples
 <span data-ttu-id="3e762-861">下面的代码示例演示 <xref:System.Char.IsSurrogate%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-861">The following code example demonstrates <xref:System.Char.IsSurrogate%2A>.</span></span>

 [!code-cpp[System.Char.IsSurrogate#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CPP/issurrogate.cpp#11)]
 [!code-csharp[System.Char.IsSurrogate#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSurrogate/CS/issurrogate.cs#11)]
 [!code-vb[System.Char.IsSurrogate#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSurrogate/VB/issurrogate.vb#11)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-862"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-862"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-863"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-863"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="Overload:System.Char.IsHighSurrogate" />
        <altmember cref="Overload:System.Char.IsLowSurrogate" />
        <altmember cref="Overload:System.Char.IsSurrogatePair" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSurrogatePair">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-864">指示两个指定的 <see cref="T:System.Char" /> 对象是否形成一个代理项对。</span><span class="sxs-lookup"><span data-stu-id="3e762-864">Indicates whether two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (highSurrogate As Char, lowSurrogate As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : char * char -&gt; bool" Usage="System.char.IsSurrogatePair (highSurrogate, lowSurrogate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lowSurrogate" Type="System.Char" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="3e762-865">要作为代理项对的高代理项进行计算的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-865">The character to evaluate as the high surrogate of a surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="3e762-866">要作为代理项对的低代理项进行计算的字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-866">The character to evaluate as the low surrogate of a surrogate pair.</span></span></param>
        <summary><span data-ttu-id="3e762-867">指示两个指定的 <see cref="T:System.Char" /> 对象是否形成一个代理项对。</span><span class="sxs-lookup"><span data-stu-id="3e762-867">Indicates whether the two specified <see cref="T:System.Char" /> objects form a surrogate pair.</span></span></summary>
        <returns><span data-ttu-id="3e762-868">如果 <see langword="true" /> 参数的数值范围是从 U+D800 到 U+DBFF，且 <paramref name="highSurrogate" /> 参数的数值是从 U+DC00 到 U+DFFF，则为 <paramref name="lowSurrogate" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-868"><see langword="true" /> if the numeric value of the <paramref name="highSurrogate" /> parameter ranges from U+D800 through U+DBFF, and the numeric value of the <paramref name="lowSurrogate" /> parameter ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-869">通常，单个字符由单个16位 Unicode 代码单元表示。</span><span class="sxs-lookup"><span data-stu-id="3e762-869">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="3e762-870">UTF-16 编码还支持代理项对，这允许由 2 16 位代码单元表示单个抽象字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-870">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="3e762-871">其值可以从 U + D800 到 U + DBFF 范围内的第一个代码单元为高代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-871">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="3e762-872">第二个代码单位（其值可以从 U + DC00 到 U + DFFF）为低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-872">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="3e762-873">单个代理项码位不具有自己的解释。</span><span class="sxs-lookup"><span data-stu-id="3e762-873">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="3e762-874">有关代理项和 Unicode 标准的详细信息，请参阅[unicode 主页](https://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="3e762-874">For more information about surrogates and the Unicode Standard, see the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>



## Examples
 <span data-ttu-id="3e762-875">下面的代码示例演示 <xref:System.Char.IsHighSurrogate%2A>、<xref:System.Char.IsLowSurrogate%2A>和 <xref:System.Char.IsSurrogatePair%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-875">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>

 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsSurrogatePair (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSurrogatePair(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSurrogatePair(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSurrogatePair (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSurrogatePair(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSurrogatePair : string * int -&gt; bool" Usage="System.char.IsSurrogatePair (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-876">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-876">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-877"><paramref name="s" /> 中要计算的字符对的开始位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-877">The starting position of the pair of characters to evaluate within <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-878">指示字符串中指定位置处的两个相邻 <see cref="T:System.Char" /> 对象是否形成一个代理项对。</span><span class="sxs-lookup"><span data-stu-id="3e762-878">Indicates whether two adjacent <see cref="T:System.Char" /> objects at a specified position in a string form a surrogate pair.</span></span></summary>
        <returns><span data-ttu-id="3e762-879">如果 <see langword="true" /> 参数包括 <paramref name="s" /> 和 <paramref name="index" /> + 1 位置处的相邻字符，并且 <paramref name="index" /> 位置处字符的数值范围从 U+D800 到 U+DBFF，<paramref name="index" />+1 位置处字符的数值范围从 U+DC00 到 U+DFFF，则为 <paramref name="index" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-879"><see langword="true" /> if the <paramref name="s" /> parameter includes adjacent characters at positions <paramref name="index" /> and <paramref name="index" /> + 1, and the numeric value of the character at position <paramref name="index" /> ranges from U+D800 through U+DBFF, and the numeric value of the character at position <paramref name="index" />+1 ranges from U+DC00 through U+DFFF; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-880">通常，单个字符由单个16位 Unicode 代码单元表示。</span><span class="sxs-lookup"><span data-stu-id="3e762-880">Ordinarily, a single character is represented by a single 16-bit Unicode code unit.</span></span> <span data-ttu-id="3e762-881">UTF-16 编码还支持代理项对，这允许由 2 16 位代码单元表示单个抽象字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-881">UTF-16 encoding also supports surrogate pairs, which allow a single abstract character to be represented by two 16-bit code units.</span></span> <span data-ttu-id="3e762-882">其值可以从 U + D800 到 U + DBFF 范围内的第一个代码单元为高代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-882">The first code unit, whose value can range from U+D800 to U+DBFF, is the high surrogate.</span></span> <span data-ttu-id="3e762-883">第二个代码单位（其值可以从 U + DC00 到 U + DFFF）为低代理项。</span><span class="sxs-lookup"><span data-stu-id="3e762-883">The second code unit, whose value can range from U+DC00 to U+DFFF, is the low surrogate.</span></span> <span data-ttu-id="3e762-884">单个代理项码位不具有自己的解释。</span><span class="sxs-lookup"><span data-stu-id="3e762-884">Individual surrogate code points have no interpretation of their own.</span></span> <span data-ttu-id="3e762-885">有关代理项和 Unicode 标准的详细信息，请参阅[unicode 主页](https://go.microsoft.com/fwlink/?LinkId=37123)。</span><span class="sxs-lookup"><span data-stu-id="3e762-885">For more information about surrogates and the Unicode Standard, see the [Unicode home page](https://go.microsoft.com/fwlink/?LinkId=37123).</span></span>



## Examples
 <span data-ttu-id="3e762-886">下面的代码示例演示 <xref:System.Char.IsHighSurrogate%2A>、<xref:System.Char.IsLowSurrogate%2A>和 <xref:System.Char.IsSurrogatePair%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-886">The following code example demonstrates the <xref:System.Char.IsHighSurrogate%2A>, <xref:System.Char.IsLowSurrogate%2A>, and <xref:System.Char.IsSurrogatePair%2A> methods.</span></span>

 [!code-cpp[char.surrogate#1](~/samples/snippets/cpp/VS_Snippets_CLR/char.surrogate/CPP/sur.cpp#1)]
 [!code-csharp[char.surrogate#1](~/samples/snippets/csharp/VS_Snippets_CLR/char.surrogate/CS/sur.cs#1)]
 [!code-vb[char.surrogate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/char.surrogate/VB/sur.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-887"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-887"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-888"><paramref name="index" /> 不是 <paramref name="s" /> 内的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-888"><paramref name="index" /> is not a position within <paramref name="s" />.</span></span></exception>
        <altmember cref="M:System.Char.IsHighSurrogate(System.Char)" />
        <altmember cref="M:System.Char.IsLowSurrogate(System.Char)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsSymbol">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-889">指示 Unicode 字符是否属于符号字符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-889">Indicates whether a Unicode character is categorized as a symbol character.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-890">有效符号是 <xref:System.Globalization.UnicodeCategory>： `MathSymbol`、`CurrencySymbol`、`ModifierSymbol`和 `OtherSymbol`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-890">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>

 <span data-ttu-id="3e762-891">Unicode 标准中的符号是一组松散定义的字符，包括以下内容：</span><span class="sxs-lookup"><span data-stu-id="3e762-891">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>

-   <span data-ttu-id="3e762-892">货币符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-892">Currency symbols.</span></span>

-   <span data-ttu-id="3e762-893">Letterlike 符号，其中包含一组数学字母数字符号以及符号，如 c/o、No 和™。</span><span class="sxs-lookup"><span data-stu-id="3e762-893">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>

-   <span data-ttu-id="3e762-894">数字形式，例如下标和上标。</span><span class="sxs-lookup"><span data-stu-id="3e762-894">Number forms, such as subscripts and superscripts.</span></span>

-   <span data-ttu-id="3e762-895">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="3e762-895">Mathematical operators and arrows.</span></span>

-   <span data-ttu-id="3e762-896">几何符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-896">Geometric symbols.</span></span>

-   <span data-ttu-id="3e762-897">技术符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-897">Technical symbols.</span></span>

-   <span data-ttu-id="3e762-898">盲文模式。</span><span class="sxs-lookup"><span data-stu-id="3e762-898">Braille patterns.</span></span>

-   <span data-ttu-id="3e762-899">丁贝符.</span><span class="sxs-lookup"><span data-stu-id="3e762-899">Dingbats.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(char c);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : char -&gt; bool" Usage="System.char.IsSymbol c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-900">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-900">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-901">指示指定的 Unicode 字符是否属于符号字符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-901">Indicates whether the specified Unicode character is categorized as a symbol character.</span></span></summary>
        <returns><span data-ttu-id="3e762-902">如果 <see langword="true" /> 是符号字符，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-902"><see langword="true" /> if <paramref name="c" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-903">有效符号是 <xref:System.Globalization.UnicodeCategory>： `MathSymbol`、`CurrencySymbol`、`ModifierSymbol`和 `OtherSymbol`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-903">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>

 <span data-ttu-id="3e762-904">Unicode 标准中的符号是一组松散定义的字符，包括以下内容：</span><span class="sxs-lookup"><span data-stu-id="3e762-904">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>

-   <span data-ttu-id="3e762-905">货币符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-905">Currency symbols.</span></span>

-   <span data-ttu-id="3e762-906">Letterlike 符号，其中包含一组数学字母数字符号以及符号，如 c/o、No 和™。</span><span class="sxs-lookup"><span data-stu-id="3e762-906">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>

-   <span data-ttu-id="3e762-907">数字形式，例如下标和上标。</span><span class="sxs-lookup"><span data-stu-id="3e762-907">Number forms, such as subscripts and superscripts.</span></span>

-   <span data-ttu-id="3e762-908">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="3e762-908">Mathematical operators and arrows.</span></span>

-   <span data-ttu-id="3e762-909">几何符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-909">Geometric symbols.</span></span>

-   <span data-ttu-id="3e762-910">技术符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-910">Technical symbols.</span></span>

-   <span data-ttu-id="3e762-911">盲文模式。</span><span class="sxs-lookup"><span data-stu-id="3e762-911">Braille patterns.</span></span>

-   <span data-ttu-id="3e762-912">丁贝符.</span><span class="sxs-lookup"><span data-stu-id="3e762-912">Dingbats.</span></span>



## Examples
 <span data-ttu-id="3e762-913">下面的代码示例演示 <xref:System.Char.IsSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-913">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>

 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsSymbol(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : string * int -&gt; bool" Usage="System.char.IsSymbol (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-914">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-914">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-915"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-915">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-916">指示指定字符串中位于指定位置处的字符是否属于符号字符类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-916">Indicates whether the character at the specified position in a specified string is categorized as a symbol character.</span></span></summary>
        <returns><span data-ttu-id="3e762-917">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个符号字符，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-917"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-918">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-918">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-919">有效符号是 <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>： `MathSymbol`、`CurrencySymbol`、`ModifierSymbol`和 `OtherSymbol`中下列类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-919">Valid symbols are members of the following categories in <xref:System.Globalization.UnicodeCategory?displayProperty=nameWithType>: `MathSymbol`, `CurrencySymbol`, `ModifierSymbol`, and `OtherSymbol`.</span></span>

 <span data-ttu-id="3e762-920">Unicode 标准中的符号是一组松散定义的字符，包括以下内容：</span><span class="sxs-lookup"><span data-stu-id="3e762-920">Symbols in the Unicode standard are a loosely defined set of characters that include the following:</span></span>

-   <span data-ttu-id="3e762-921">货币符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-921">Currency symbols.</span></span>

-   <span data-ttu-id="3e762-922">Letterlike 符号，其中包含一组数学字母数字符号以及符号，如 c/o、No 和™。</span><span class="sxs-lookup"><span data-stu-id="3e762-922">Letterlike symbols, which include a set of mathematical alphanumeric symbols as well as symbols such as ℅, №, and ™.</span></span>

-   <span data-ttu-id="3e762-923">数字形式，例如下标和上标。</span><span class="sxs-lookup"><span data-stu-id="3e762-923">Number forms, such as subscripts and superscripts.</span></span>

-   <span data-ttu-id="3e762-924">数学运算符和箭头。</span><span class="sxs-lookup"><span data-stu-id="3e762-924">Mathematical operators and arrows.</span></span>

-   <span data-ttu-id="3e762-925">几何符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-925">Geometric symbols.</span></span>

-   <span data-ttu-id="3e762-926">技术符号。</span><span class="sxs-lookup"><span data-stu-id="3e762-926">Technical symbols.</span></span>

-   <span data-ttu-id="3e762-927">盲文模式。</span><span class="sxs-lookup"><span data-stu-id="3e762-927">Braille patterns.</span></span>

-   <span data-ttu-id="3e762-928">丁贝符.</span><span class="sxs-lookup"><span data-stu-id="3e762-928">Dingbats.</span></span>



## Examples
 <span data-ttu-id="3e762-929">下面的代码示例演示 <xref:System.Char.IsSymbol%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-929">The following code example demonstrates <xref:System.Char.IsSymbol%2A>.</span></span>

 [!code-cpp[System.Char.IsSymbol#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsSymbol/CPP/issymbol.cpp#12)]
 [!code-csharp[System.Char.IsSymbol#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsSymbol/CS/issymbol.cs#12)]
 [!code-vb[System.Char.IsSymbol#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsSymbol/VB/issymbol.vb#12)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-930"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-930"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-931"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-931"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-932">指示 Unicode 字符是否属于大写字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-932">Indicates whether a Unicode character is categorized as an uppercase letter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(char c);" />
      <MemberSignature Language="F#" Value="static member IsUpper : char -&gt; bool" Usage="System.char.IsUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-933">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-933">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-934">指示指定的 Unicode 字符是否属于大写字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-934">Indicates whether the specified Unicode character is categorized as an uppercase letter.</span></span></summary>
        <returns><span data-ttu-id="3e762-935">如果 <see langword="true" /> 是一个大写字母，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-935"><see langword="true" /> if <paramref name="c" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-936">有效的大写字母是 <xref:System.Globalization.UnicodeCategory>： `UppercaseLetter`中以下类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-936">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="M:System.Char.IsLower(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsUpper(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsUpper : string * int -&gt; bool" Usage="System.char.IsUpper (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-937">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-937">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-938"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-938">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-939">指示指定字符串中位于指定位置处的字符是否属于大写字母类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-939">Indicates whether the character at the specified position in a specified string is categorized as an uppercase letter.</span></span></summary>
        <returns><span data-ttu-id="3e762-940">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是一个大写字母，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-940"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is an uppercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-941">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-941">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-942">有效的大写字母是 <xref:System.Globalization.UnicodeCategory>： `UppercaseLetter`中以下类别的成员。</span><span class="sxs-lookup"><span data-stu-id="3e762-942">Valid uppercase letters are members of the following category in <xref:System.Globalization.UnicodeCategory>: `UppercaseLetter`.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-943"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-943"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-944"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-944"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsWhiteSpace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-945">指示 Unicode 字符是否属于空格类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-945">Indicates whether a Unicode character is categorized as white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-946">空白字符是以下 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="3e762-946">White space characters are the following Unicode characters:</span></span>

-   <span data-ttu-id="3e762-947"><xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> 类别的成员，包括字符空间（U + 0020）、无间断空格（U + 00A0）、欧甘空格标记（U + 1680）、EN 四（U + 2000）、EM 四（U + 2001）、半角空格（u + 2002）、EM 空间（U + 2003）、每半 em 空间（u + 2004）、四个每 EM 空格（u + 2005）、六个每全身空间（U + 2006）、图 SPACE （U + 2007）、标点空间（u + 2008）、细空间（U + 2009）、头发空间（U + 200A）、窄无间断空格（u + 202F）、中数学空间（u + 205F）和表意空间（U + 3000）。</span><span class="sxs-lookup"><span data-stu-id="3e762-947">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>

-   <span data-ttu-id="3e762-948"><xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> 类别的成员，仅包含行分隔符（U + 2028）。</span><span class="sxs-lookup"><span data-stu-id="3e762-948">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>

-   <span data-ttu-id="3e762-949"><xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> 类别的成员，仅由段落分隔符（U + 2029）组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-949">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>

-   <span data-ttu-id="3e762-950">字符表（U + 0009）、换行符（U + 000A）、行表（U + 000B）、换行（U + 000C）、回车符（u + 000D）和下一行（U + 0085）。</span><span class="sxs-lookup"><span data-stu-id="3e762-950">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (c As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(char c);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : char -&gt; bool" Usage="System.char.IsWhiteSpace c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-951">要计算的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-951">The Unicode character to evaluate.</span></span></param>
        <summary><span data-ttu-id="3e762-952">指示指定的 Unicode 字符是否属于空格类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-952">Indicates whether the specified Unicode character is categorized as white space.</span></span></summary>
        <returns><span data-ttu-id="3e762-953">如果 <see langword="true" /> 是空格，则为 <paramref name="c" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-953"><see langword="true" /> if <paramref name="c" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-954">空白字符是以下 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="3e762-954">White space characters are the following Unicode characters:</span></span>

-   <span data-ttu-id="3e762-955"><xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> 类别的成员，包括字符空间（U + 0020）、无间断空格（U + 00A0）、欧甘空格标记（U + 1680）、EN 四（U + 2000）、EM 四（U + 2001）、半角空格（u + 2002）、EM 空间（U + 2003）、每半 em 空间（u + 2004）、四个每 EM 空格（u + 2005）、六个每全身空间（U + 2006）、图 SPACE （U + 2007）、标点空间（u + 2008）、细空间（U + 2009）、头发空间（U + 200A）、窄无间断空格（u + 202F）、中数学空间（u + 205F）和表意空间（U + 3000）。</span><span class="sxs-lookup"><span data-stu-id="3e762-955">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>

-   <span data-ttu-id="3e762-956"><xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> 类别的成员，仅包含行分隔符（U + 2028）。</span><span class="sxs-lookup"><span data-stu-id="3e762-956">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>

-   <span data-ttu-id="3e762-957"><xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> 类别的成员，仅由段落分隔符（U + 2029）组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-957">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>

-   <span data-ttu-id="3e762-958">字符表（U + 0009）、换行符（U + 000A）、行表（U + 000B）、换行（U + 000C）、回车符（u + 000D）和下一行（U + 0085）。</span><span class="sxs-lookup"><span data-stu-id="3e762-958">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>



## Examples
 <span data-ttu-id="3e762-959">下面的示例演示 <xref:System.Char.IsWhiteSpace%28System.Char%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-959">The following example demonstrates the <xref:System.Char.IsWhiteSpace%28System.Char%29> method.</span></span>

 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (string s, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(string s, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.IsWhiteSpace(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (s As String, index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::String ^ s, int index);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : string * int -&gt; bool" Usage="System.char.IsWhiteSpace (s, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-960">一个字符串。</span><span class="sxs-lookup"><span data-stu-id="3e762-960">A string.</span></span></param>
        <param name="index"><span data-ttu-id="3e762-961"><paramref name="s" /> 中要计算的字符的位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-961">The position of the character to evaluate in <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="3e762-962">指示指定字符串中位于指定位置处的字符是否属于空格类别。</span><span class="sxs-lookup"><span data-stu-id="3e762-962">Indicates whether the character at the specified position in a specified string is categorized as white space.</span></span></summary>
        <returns><span data-ttu-id="3e762-963">如果 <see langword="true" /> 中位于 <paramref name="index" /> 的字符是空格，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-963"><see langword="true" /> if the character at position <paramref name="index" /> in <paramref name="s" /> is white space; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-964">字符串中的字符位置从零开始索引。</span><span class="sxs-lookup"><span data-stu-id="3e762-964">Character positions in a string are indexed starting from zero.</span></span>

 <span data-ttu-id="3e762-965">空白字符是以下 Unicode 字符：</span><span class="sxs-lookup"><span data-stu-id="3e762-965">White space characters are the following Unicode characters:</span></span>

-   <span data-ttu-id="3e762-966"><xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> 类别的成员，包括字符空间（U + 0020）、无间断空格（U + 00A0）、欧甘空格标记（U + 1680）、EN 四（U + 2000）、EM 四（U + 2001）、半角空格（u + 2002）、EM 空间（U + 2003）、每半 em 空间（u + 2004）、四个每 EM 空格（u + 2005）、六个每全身空间（U + 2006）、图 SPACE （U + 2007）、标点空间（u + 2008）、细空间（U + 2009）、头发空间（U + 200A）、窄无间断空格（u + 202F）、中数学空间（u + 205F）和表意空间（U + 3000）。</span><span class="sxs-lookup"><span data-stu-id="3e762-966">Members of the <xref:System.Globalization.UnicodeCategory.SpaceSeparator?displayProperty=nameWithType> category, which includes the characters SPACE (U+0020), NO-BREAK SPACE (U+00A0), OGHAM SPACE MARK (U+1680), EN QUAD (U+2000), EM QUAD (U+2001), EN SPACE (U+2002), EM SPACE (U+2003), THREE-PER-EM SPACE (U+2004), FOUR-PER-EM SPACE (U+2005), SIX-PER-EM SPACE (U+2006), FIGURE SPACE (U+2007), PUNCTUATION SPACE (U+2008), THIN SPACE (U+2009), HAIR SPACE (U+200A), NARROW NO-BREAK SPACE (U+202F), MEDIUM MATHEMATICAL SPACE (U+205F), and IDEOGRAPHIC SPACE (U+3000).</span></span>

-   <span data-ttu-id="3e762-967"><xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> 类别的成员，仅包含行分隔符（U + 2028）。</span><span class="sxs-lookup"><span data-stu-id="3e762-967">Members of the <xref:System.Globalization.UnicodeCategory.LineSeparator?displayProperty=nameWithType> category, which consists solely of the LINE SEPARATOR character (U+2028).</span></span>

-   <span data-ttu-id="3e762-968"><xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> 类别的成员，仅由段落分隔符（U + 2029）组成。</span><span class="sxs-lookup"><span data-stu-id="3e762-968">Members of the <xref:System.Globalization.UnicodeCategory.ParagraphSeparator?displayProperty=nameWithType> category, which consists solely of the PARAGRAPH SEPARATOR character (U+2029).</span></span>

-   <span data-ttu-id="3e762-969">字符表（U + 0009）、换行符（U + 000A）、行表（U + 000B）、换行（U + 000C）、回车符（u + 000D）和下一行（U + 0085）。</span><span class="sxs-lookup"><span data-stu-id="3e762-969">The characters CHARACTER TABULATION (U+0009), LINE FEED (U+000A), LINE TABULATION (U+000B), FORM FEED (U+000C), CARRIAGE RETURN (U+000D), and NEXT LINE (U+0085).</span></span>



## Examples
 <span data-ttu-id="3e762-970">下面的代码示例演示 <xref:System.Char.IsWhiteSpace%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-970">The following code example demonstrates <xref:System.Char.IsWhiteSpace%2A>.</span></span>

 [!code-cpp[System.Char.IsWhiteSpace#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CPP/iswhitespace.cpp#14)]
 [!code-csharp[System.Char.IsWhiteSpace#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/CS/iswhitespace.cs#14)]
 [!code-vb[System.Char.IsWhiteSpace#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.IsWhiteSpace/VB/iswhitespace.vb#14)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-971"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-971"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3e762-972"><paramref name="index" /> 小于零或大于 <paramref name="s" /> 中最后一个位置。</span><span class="sxs-lookup"><span data-stu-id="3e762-972"><paramref name="index" /> is less than zero or greater than the last position in <paramref name="s" />.</span></span></exception>
        <altmember cref="T:System.Boolean" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Globalization.UnicodeCategory" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const char MaxValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MaxValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MaxValue;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : char" Usage="System.char.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e762-973">表示 <see cref="T:System.Char" /> 的最大可能值。</span><span class="sxs-lookup"><span data-stu-id="3e762-973">Represents the largest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="3e762-974">此字段是常量。</span><span class="sxs-lookup"><span data-stu-id="3e762-974">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-975">此常量的值为十六进制0xFFFF。</span><span class="sxs-lookup"><span data-stu-id="3e762-975">The value of this constant is hexadecimal 0xFFFF.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const char MinValue;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char MinValue" />
      <MemberSignature Language="DocId" Value="F:System.Char.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char MinValue;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : char" Usage="System.char.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3e762-976">表示 <see cref="T:System.Char" /> 的最小可能值。</span><span class="sxs-lookup"><span data-stu-id="3e762-976">Represents the smallest possible value of a <see cref="T:System.Char" />.</span></span> <span data-ttu-id="3e762-977">此字段是常量。</span><span class="sxs-lookup"><span data-stu-id="3e762-977">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-978">此常量的值为十六进制0x00。</span><span class="sxs-lookup"><span data-stu-id="3e762-978">The value of this constant is hexadecimal 0x00.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="F:System.Char.MaxValue" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static char Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; char" Usage="System.char.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-979">包含单个字符的字符串，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-979">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="3e762-980">将指定字符串的值转换为它的等效 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-980">Converts the value of the specified string to its equivalent Unicode character.</span></span></summary>
        <returns><span data-ttu-id="3e762-981">一个等效于 <paramref name="s" /> 中唯一字符的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-981">A Unicode character equivalent to the sole character in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="3e762-982">下面的代码示例演示 <xref:System.Char.Parse%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-982">The following code example demonstrates <xref:System.Char.Parse%2A>.</span></span>

 [!code-cpp[System.Char.Parse#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.Parse/CPP/parse.cpp#15)]
 [!code-csharp[System.Char.Parse#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.Parse/CS/parse.cs#15)]
 [!code-vb[System.Char.Parse#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.Parse/VB/parse.vb#15)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-983"><paramref name="s" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-983"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="3e762-984"><paramref name="s" /> 的长度不是 1。</span><span class="sxs-lookup"><span data-stu-id="3e762-984">The length of <paramref name="s" /> is not 1.</span></span></exception>
        <altmember cref="M:System.Char.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-other.md"><span data-ttu-id="3e762-985">在 .NET Framework 中分析其他字符串</span><span class="sxs-lookup"><span data-stu-id="3e762-985">Parsing Other Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-986">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-986">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-987">**注意**不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-987">**Note** This conversion is not supported.</span></span> <span data-ttu-id="3e762-988">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-988">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-989">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-989">This conversion is not supported.</span></span> <span data-ttu-id="3e762-990">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="3e762-990">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3e762-991">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-991">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-992">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-992">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-993">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-993">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-994">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-994">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-995">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-995">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-996">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-996">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-997">建议的替代项是改为调用 <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-997">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-998">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-998">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-999">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-999">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1000">当前 <see cref="T:System.Char" /> 对象的值未更改。</span><span class="sxs-lookup"><span data-stu-id="3e762-1000">The value of the current <see cref="T:System.Char" /> object unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1001">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1001">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1002">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1002">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1003">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1003">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1004">**注意**不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1004">**Note** This conversion is not supported.</span></span> <span data-ttu-id="3e762-1005">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1005">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1006">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1006">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3e762-1007">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1007">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1008">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1008">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1009">**注意**不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1009">**Note** This conversion is not supported.</span></span> <span data-ttu-id="3e762-1010">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1010">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1011">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1011">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3e762-1012">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1012">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1013">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1013">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1014">**注意**不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1014">**Note** This conversion is not supported.</span></span> <span data-ttu-id="3e762-1015">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1015">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1016">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1016">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3e762-1017">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1017">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1018">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1018">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1019">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1019">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1020">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1020">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1021">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1021">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1022">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1022">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1023">建议的替代项是改为调用 <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1023">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1024">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1024">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1025">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1025">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1026">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1026">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1027">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1027">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1028">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1028">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1029">建议的替代项是改为调用 <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1029">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1030">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1030">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1031">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1031">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1032">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1032">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1033">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1033">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1034">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1034">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1035">建议的替代项是改为调用 <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1035">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1036">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1036">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1037">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1037">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1038">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1038">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1039">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1039">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1040">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1040">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1041">建议的替代项是改为调用 <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1041">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1042">该参数将被忽略。</span><span class="sxs-lookup"><span data-stu-id="3e762-1042">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="3e762-1043">**注意**不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1043">**Note** This conversion is not supported.</span></span> <span data-ttu-id="3e762-1044">尝试这样做会引发 <see cref="T:System.InvalidCastException" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1044">Attempting to do so throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1045">不返回任何值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1045">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3e762-1046">不支持此转换。</span><span class="sxs-lookup"><span data-stu-id="3e762-1046">This conversion is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="3e762-1047"><see cref="T:System.Type" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-1047">A <see cref="T:System.Type" /> object.</span></span></param>
        <param name="provider"><span data-ttu-id="3e762-1048">一个 <see cref="T:System.IFormatProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-1048">An <see cref="T:System.IFormatProvider" /> object.</span></span></param>
        <summary><span data-ttu-id="3e762-1049">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1049">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1050">指定类型的对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-1050">An object of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1051">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1051">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1052">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1052">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1053">建议的替代项是改为调用 <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1053">The recommended alternative is to call the <xref:System.Convert.ChangeType%28System.Object%2CSystem.Type%2CSystem.IFormatProvider%29> method instead.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-1054"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1054"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="3e762-1055">当前 <see cref="T:System.Char" /> 对象的值不能转换为 <paramref name="type" /> 参数指定的类型。</span><span class="sxs-lookup"><span data-stu-id="3e762-1055">The value of the current <see cref="T:System.Char" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1056">一个 <see cref="T:System.IFormatProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-1056">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="3e762-1057">（由于 <see langword="null" /> 参数已被忽略，因此指定 <paramref name="provider" />。）</span><span class="sxs-lookup"><span data-stu-id="3e762-1057">(Specify <see langword="null" /> because the <paramref name="provider" /> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="3e762-1058">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1058">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1059">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1059">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1060">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1060">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1061">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1061">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1062">建议的替代项是改为调用 <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1062">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1063">一个 <see cref="T:System.IFormatProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-1063">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="3e762-1064">（由于 <see langword="null" /> 参数已被忽略，因此指定 <paramref name="provider" />。）</span><span class="sxs-lookup"><span data-stu-id="3e762-1064">(Specify <see langword="null" /> because the <paramref name="provider" /> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="3e762-1065">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1065">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1066">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1066">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1067">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1067">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1068">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1068">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1069">建议的替代项是改为调用 <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1069">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1070">一个 <see cref="T:System.IFormatProvider" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3e762-1070">An <see cref="T:System.IFormatProvider" /> object.</span></span> <span data-ttu-id="3e762-1071">（由于 <see langword="null" /> 参数已被忽略，因此指定 <paramref name="provider" />。）</span><span class="sxs-lookup"><span data-stu-id="3e762-1071">(Specify <see langword="null" /> because the <paramref name="provider" /> parameter is ignored.)</span></span></param>
        <summary><span data-ttu-id="3e762-1072">有关此成员的说明，请参阅 <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1072">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="3e762-1073">当前 <see cref="T:System.Char" /> 对象的转换值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1073">The converted value of the current <see cref="T:System.Char" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1074">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="3e762-1074">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="3e762-1075">它只能在 <xref:System.Char> 实例被强制转换为 <xref:System.IConvertible> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="3e762-1075">It can be used only when the <xref:System.Char> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="3e762-1076">建议的替代项是改为调用 <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1076">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Char%29?displayProperty=nameWithType> method instead.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-1077">将 Unicode 字符的值转换为它的小写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1077">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c);" />
      <MemberSignature Language="F#" Value="static member ToLower : char -&gt; char" Usage="System.char.ToLower c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-1078">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1078">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="3e762-1079">将 Unicode 字符的值转换为它的小写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1079">Converts the value of a Unicode character to its lowercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="3e762-1080"><paramref name="c" /> 的小写等效项，或者，如果 <paramref name="c" /> 已经是小写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1080">The lowercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1081">大小写规则是从当前区域性获取的。</span><span class="sxs-lookup"><span data-stu-id="3e762-1081">Casing rules are obtained from the current culture.</span></span>

 <span data-ttu-id="3e762-1082">使用 <xref:System.String.ToLower%2A?displayProperty=nameWithType> 将字符串转换为小写。</span><span class="sxs-lookup"><span data-stu-id="3e762-1082">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>



## Examples
 <span data-ttu-id="3e762-1083">下面的示例演示 <xref:System.Char.ToLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-1083">The following example demonstrates <xref:System.Char.ToLower%2A>.</span></span>

 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="3e762-1084">如[使用字符串的最佳做法](~/docs/standard/base-types/best-practices-strings.md)中所述，我们建议避免调用替换默认值的字符大小写方法和字符串大小写方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1084">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="3e762-1085">相反，应调用需要显式指定参数的方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1085">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="3e762-1086">若要使用当前区域性的大小写约定将字符转换为小写，请使用其 <paramref name="culture" /> 参数的值 <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> 调用 <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="3e762-1086">To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para></block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static char ToLower (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLower(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLower(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToLower (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-1087">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1087">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="3e762-1088">一个对象，用于提供区域性特定的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="3e762-1088">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="3e762-1089">使用指定的区域性特定格式设置信息将指定 Unicode 字符的值转换为它的小写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1089">Converts the value of a specified Unicode character to its lowercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="3e762-1090"><paramref name="c" /> 的小写等效项（根据 <paramref name="culture" /> 进行修改），或者，如果 <paramref name="c" /> 已经是小写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1090">The lowercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1091">使用 <xref:System.String.ToLower%2A?displayProperty=nameWithType> 将字符串转换为小写。</span><span class="sxs-lookup"><span data-stu-id="3e762-1091">Use <xref:System.String.ToLower%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>



## Examples
 <span data-ttu-id="3e762-1092">下面的代码示例演示 <xref:System.Char.ToLower%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-1092">The following code example demonstrates <xref:System.Char.ToLower%2A>.</span></span>

 [!code-cpp[System.Char.ToLower#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToLower/CPP/tolower.cpp#16)]
 [!code-csharp[System.Char.ToLower#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToLower/CS/tolower.cs#16)]
 [!code-vb[System.Char.ToLower#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToLower/VB/tolower.vb#16)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-1093"><paramref name="culture" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1093"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static char ToLowerInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToLowerInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToLowerInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToLowerInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : char -&gt; char" Usage="System.char.ToLowerInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-1094">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1094">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="3e762-1095">使用固定区域性的大小写规则，将 Unicode 字符的值转换为其小写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1095">Converts the value of a Unicode character to its lowercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="3e762-1096"><paramref name="c" /> 参数的小写等效项，或者，如果 <paramref name="c" /> 已经是小写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1096">The lowercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already lowercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1097">如果你的应用程序不受当前区域性的影响，并且依赖于以可预测方式更改的字符的大小写，则使用 <xref:System.Char.ToLowerInvariant%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1097">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, then use the <xref:System.Char.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="3e762-1098"><xref:System.Char.ToLowerInvariant%2A> 方法等效于 `ToLower(Char, CultureInfo.InvariantCulture)`。</span><span class="sxs-lookup"><span data-stu-id="3e762-1098">The <xref:System.Char.ToLowerInvariant%2A> method is equivalent to `ToLower(Char, CultureInfo.InvariantCulture)`.</span></span>

 <span data-ttu-id="3e762-1099">使用 <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> 将字符串转换为小写。</span><span class="sxs-lookup"><span data-stu-id="3e762-1099">Use <xref:System.String.ToLowerInvariant%2A?displayProperty=nameWithType> to convert a string to lowercase.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-1100">将此实例的值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-1100">Converts the value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="char.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3e762-1101">将此实例的值转换为其等效的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-1101">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="3e762-1102">此实例的值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-1102">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="3e762-1103">下面的代码示例演示 <xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-1103">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>

 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (c As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char c);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.char.ToString c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-1104">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1104">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="3e762-1105">将指定的 Unicode 字符转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-1105">Converts the specified Unicode character to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="3e762-1106"><paramref name="c" /> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-1106">The string representation of the value of <paramref name="c" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="3e762-1107">下面的代码示例演示 <xref:System.Char.ToString%2A>。</span><span class="sxs-lookup"><span data-stu-id="3e762-1107">The following code example demonstrates <xref:System.Char.ToString%2A>.</span></span>

 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="char.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="3e762-1108">（保留）一个对象，用于提供区域性特定的格式设置信息。</span><span class="sxs-lookup"><span data-stu-id="3e762-1108">(Reserved) An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="3e762-1109">使用指定的区域性特定格式信息将此实例的值转换为它的等效字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3e762-1109">Converts the value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="3e762-1110">此实例的值的字符串表示形式，由 <paramref name="provider" /> 指定。</span><span class="sxs-lookup"><span data-stu-id="3e762-1110">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1111">忽略 `provider` 参数;它不参与此操作。</span><span class="sxs-lookup"><span data-stu-id="3e762-1111">The `provider` parameter is ignored; it does not participate in this operation.</span></span>



## Examples
 <span data-ttu-id="3e762-1112">下面的代码示例演示 <xref:System.Char.ToString%2A>的重载。</span><span class="sxs-lookup"><span data-stu-id="3e762-1112">The following code example demonstrates an overload of <xref:System.Char.ToString%2A>.</span></span>

 [!code-cpp[System.Char.ToString#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Char.ToString/CPP/tostring.cpp#17)]
 [!code-csharp[System.Char.ToString#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Char.ToString/CS/tostring.cs#17)]
 [!code-vb[System.Char.ToString#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Char.ToString/VB/tostring.vb#17)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3e762-1113">将 Unicode 字符的值转换为它的大写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1113">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char -&gt; char" Usage="System.char.ToUpper c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-1114">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1114">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="3e762-1115">将 Unicode 字符的值转换为它的大写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1115">Converts the value of a Unicode character to its uppercase equivalent.</span></span></summary>
        <returns><span data-ttu-id="3e762-1116"><paramref name="c" /> 的大写等效项，或者，如果 <paramref name="c" /> 已经是大写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1116">The uppercase equivalent of <paramref name="c" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1117">大小写规则是从当前区域性获取的。</span><span class="sxs-lookup"><span data-stu-id="3e762-1117">Casing rules are obtained from the current culture.</span></span>

 <span data-ttu-id="3e762-1118">使用 <xref:System.String.ToUpper%2A?displayProperty=nameWithType> 将字符串转换为大写。</span><span class="sxs-lookup"><span data-stu-id="3e762-1118">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>



## Examples
 <span data-ttu-id="3e762-1119">下面的示例将数组中的每个字符转换为其大写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1119">The following example converts each character in an array to its uppercase equivalent.</span></span>

 [!code-csharp[System.Char.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper1.cs#1)]
 [!code-vb[System.Char.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper1.vb#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="3e762-1120">如[使用字符串的最佳做法](~/docs/standard/base-types/best-practices-strings.md)中所述，我们建议避免调用替换默认值的字符大小写方法和字符串大小写方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1120">As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling character-casing and string-casing methods that substitute default values.</span></span> <span data-ttu-id="3e762-1121">相反，应调用需要显式指定参数的方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1121">Instead, you should call methods that require parameters to be explicitly specified.</span></span> <span data-ttu-id="3e762-1122">若要使用当前区域性的大小写约定将字符转换为大写，请使用其 <paramref name="culture" /> 参数的值 <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> 调用 <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> 方法重载。</span><span class="sxs-lookup"><span data-stu-id="3e762-1122">To convert a character to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</span></span></para></block>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static char ToUpper (char c, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpper(char c, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (c As Char, culture As CultureInfo) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpper(char c, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : char * System.Globalization.CultureInfo -&gt; char" Usage="System.char.ToUpper (c, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-1123">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1123">The Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="3e762-1124">一个对象，用于提供区域性特定的大小写规则。</span><span class="sxs-lookup"><span data-stu-id="3e762-1124">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="3e762-1125">使用指定的区域性特定格式设置信息将指定 Unicode 字符的值转换为它的大写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1125">Converts the value of a specified Unicode character to its uppercase equivalent using specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="3e762-1126"><paramref name="c" /> 的大写等效项（根据 <paramref name="culture" /> 进行修改），或者，如果 <paramref name="c" /> 已经是大写字母、没有大写等效项或不是字母，则为 <paramref name="c" /> 的未更改值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1126">The uppercase equivalent of <paramref name="c" />, modified according to <paramref name="culture" />, or the unchanged value of <paramref name="c" /> if <paramref name="c" /> is already uppercase, has no uppercase equivalent, or is not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1127">使用 <xref:System.String.ToUpper%2A?displayProperty=nameWithType> 将字符串转换为大写。</span><span class="sxs-lookup"><span data-stu-id="3e762-1127">Use <xref:System.String.ToUpper%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>



## Examples
 <span data-ttu-id="3e762-1128">下面的示例将数组中的每个字符转换为其对应的 en-us 区域性的大写等效项、固定区域性和 tr。</span><span class="sxs-lookup"><span data-stu-id="3e762-1128">The following example converts each character in an array to its uppercase equivalent for the en-US culture, the invariant culture, and the tr-TR culture.</span></span> <span data-ttu-id="3e762-1129">在此示例中，每个小写字母的大写等效项对于除一种情况外的所有区域性都是相同的。</span><span class="sxs-lookup"><span data-stu-id="3e762-1129">In this example, the uppercase equivalent of each lowercase letter is identical for all cultures except for one case.</span></span> <span data-ttu-id="3e762-1130">小写的 "i" 字符（U + 0069）转换为 en-us 和固定区域性中的 "I" （U + 0049），但不能转换为 tr-TR 区域性中的 "i" （U + 0130）。</span><span class="sxs-lookup"><span data-stu-id="3e762-1130">The lowercase "i" character (U+0069) converts to "I" (U+0049) in the en-US and invariant cultures, but to "İ" (U+0130) in the tr-TR culture.</span></span>

 [!code-csharp[System.Char.ToUpper#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.char.toupper/cs/toupper5.cs#2)]
 [!code-vb[System.Char.ToUpper#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.char.toupper/vb/toupper5.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3e762-1131"><paramref name="culture" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1131"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToLower(System.Char,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static char ToUpperInvariant (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToUpperInvariant(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.ToUpperInvariant(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (c As Char) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToUpperInvariant(char c);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : char -&gt; char" Usage="System.char.ToUpperInvariant c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="3e762-1132">要转换的 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1132">The Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="3e762-1133">使用固定区域性的大小写规则，将 Unicode 字符的值转换为其大写等效项。</span><span class="sxs-lookup"><span data-stu-id="3e762-1133">Converts the value of a Unicode character to its uppercase equivalent using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="3e762-1134"><paramref name="c" /> 参数的小写等效项，或者，如果 <paramref name="c" /> 已经是大写字母或不是字母，则为 <paramref name="c" /> 的未更改值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1134">The uppercase equivalent of the <paramref name="c" /> parameter, or the unchanged value of <paramref name="c" />, if <paramref name="c" /> is already uppercase or not alphabetic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1135">如果你的应用程序不受当前区域性的影响，并且依赖于以可预测方式更改的字符的大小写，请使用 <xref:System.Char.ToUpperInvariant%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1135">If your application is unaffected by the current culture and depends on the case of a character changing in a predictable way, use the <xref:System.Char.ToUpperInvariant%2A> method.</span></span>  <span data-ttu-id="3e762-1136"><xref:System.Char.ToUpperInvariant%2A> 方法等效于 `ToUpper(Char, CultureInfo.InvariantCulture)`。</span><span class="sxs-lookup"><span data-stu-id="3e762-1136">The <xref:System.Char.ToUpperInvariant%2A> method is equivalent to `ToUpper(Char, CultureInfo.InvariantCulture)`.</span></span>

 <span data-ttu-id="3e762-1137">使用 <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> 将字符串转换为大写。</span><span class="sxs-lookup"><span data-stu-id="3e762-1137">Use <xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType> to convert a string to uppercase.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.Char.ToUpper(System.Char,System.Globalization.CultureInfo)" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out char result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] char&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Char.TryParse(System.String,System.Char@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] char % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * char -&gt; bool" Usage="System.char.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Char" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="3e762-1138">包含单个字符的字符串，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1138">A string that contains a single character, or <see langword="null" />.</span></span></param>
        <param name="result"><span data-ttu-id="3e762-1139">此方法返回时，如果转换成功，则包含与 <paramref name="s" /> 中的唯一字符等效的 Unicode 字符；如果转换失败，则包含未定义的值。</span><span class="sxs-lookup"><span data-stu-id="3e762-1139">When this method returns, contains a Unicode character equivalent to the sole character in <paramref name="s" />, if the conversion succeeded, or an undefined value if the conversion failed.</span></span> <span data-ttu-id="3e762-1140">如果 <paramref name="s" /> 参数为 <see langword="null" /> 或 <paramref name="s" /> 的长度不为 1，则转换失败。</span><span class="sxs-lookup"><span data-stu-id="3e762-1140">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or the length of <paramref name="s" /> is not 1.</span></span> <span data-ttu-id="3e762-1141">此参数在传递时尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="3e762-1141">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="3e762-1142">将指定字符串的值转换为它的等效 Unicode 字符。</span><span class="sxs-lookup"><span data-stu-id="3e762-1142">Converts the value of the specified string to its equivalent Unicode character.</span></span> <span data-ttu-id="3e762-1143">一个指示转换是成功还是失败的返回代码。</span><span class="sxs-lookup"><span data-stu-id="3e762-1143">A return code indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="3e762-1144">如果 <see langword="true" /> 参数成功转换，则为 <paramref name="s" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3e762-1144"><see langword="true" /> if the <paramref name="s" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3e762-1145"><xref:System.Char.TryParse%2A> 方法类似于 <xref:System.Char.Parse%2A> 方法，但如果转换失败，则 <xref:System.Char.TryParse%2A> 方法不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="3e762-1145">The <xref:System.Char.TryParse%2A> method is like the <xref:System.Char.Parse%2A> method, except the <xref:System.Char.TryParse%2A> method does not throw an exception if the conversion fails.</span></span>



## Examples
 <span data-ttu-id="3e762-1146">下面的代码示例演示了多个基类型的 <xref:System.Char.TryParse%2A> 方法的重载，以及 <xref:System.DateTime> 基类型的 <xref:System.DateTime.TryParseExact%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3e762-1146">The following code example demonstrates overloads of the <xref:System.Char.TryParse%2A> method for several base types, and the <xref:System.DateTime.TryParseExact%2A> method for the <xref:System.DateTime> base type.</span></span>

 [!code-cpp[T.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.TryParse/CPP/tp.cpp#1)]
 [!code-csharp[T.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.TryParse/CS/tp.cs#1)]
 [!code-vb[T.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.TryParse/VB/tp.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Char.Parse(System.String)" />
        <altmember cref="M:System.Char.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-other.md"><span data-ttu-id="3e762-1147">在 .NET Framework 中分析其他字符串</span><span class="sxs-lookup"><span data-stu-id="3e762-1147">Parsing Other Strings in the .NET Framework</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
