<Type Name="InsufficientMemoryException" FullName="System.InsufficientMemoryException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f003b4d21b6d30e6fd30b33f91041b4187cc2fc" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75172747" /></Metadata><TypeSignature Language="C#" Value="public sealed class InsufficientMemoryException : OutOfMemoryException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit InsufficientMemoryException extends System.OutOfMemoryException" />
  <TypeSignature Language="DocId" Value="T:System.InsufficientMemoryException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InsufficientMemoryException&#xA;Inherits OutOfMemoryException" />
  <TypeSignature Language="C++ CLI" Value="public ref class InsufficientMemoryException sealed : OutOfMemoryException" />
  <TypeSignature Language="F#" Value="type InsufficientMemoryException = class&#xA;    inherit OutOfMemoryException" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.OutOfMemoryException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>当检测到没有足够的可用内存时引发的异常。 无法继承此类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 与 <xref:System.OutOfMemoryException>不同，<xref:System.InsufficientMemoryException> 在启动操作之前引发，因此不表示状态损坏。 应用程序可以捕获此异常、限制其内存使用情况，并避免实际内存不足的情况，并可避免程序状态损坏。  
  
 当指定的预计内存分配大于当前可用内存量时，<xref:System.Runtime.MemoryFailPoint.%23ctor%2A> 构造函数将引发此异常。 您的程序可以捕获异常，延迟需要内存的任务，或在需要较少内存的小步骤中执行该任务。  
  
 有关代码示例，请参阅 <xref:System.Runtime.MemoryFailPoint> 类。  
  
> [!NOTE]
>  [Windows 应用商店应用](https://go.microsoft.com/fwlink/?LinkID=247912)或[可移植类库](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中未包含此异常，但它由某些成员引发。 若要在这种情况下捕获异常，请改为写入 <xref:System.OutOfMemoryException> 的 `catch` 语句。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.MemoryFailPoint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.InsufficientMemoryException" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InsufficientMemoryException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InsufficientMemoryException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InsufficientMemoryException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用由系统提供的用于描述错误的消息初始化 <see cref="T:System.InsufficientMemoryException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此构造函数将新实例的 <xref:System.Exception.Message%2A> 属性初始化为系统提供的描述错误的消息，如 "目前没有足够的可用内存来满足操作的预期要求。 请稍后重试。 " 此消息会考虑当前系统区域性。  
  
 下表显示 <xref:System.InsufficientMemoryException> 的实例的初始属性值。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|本地化的错误消息字符串。|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md">处理和引发异常</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InsufficientMemoryException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InsufficientMemoryException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InsufficientMemoryException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new InsufficientMemoryException : string -&gt; InsufficientMemoryException" Usage="new System.InsufficientMemoryException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">描述异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
        <summary>使用指定的描述错误的消息初始化 <see cref="T:System.InsufficientMemoryException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表显示 <xref:System.InsufficientMemoryException> 的实例的初始属性值。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message` 中指定的错误消息字符串。|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md">处理和引发异常</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InsufficientMemoryException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.InsufficientMemoryException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InsufficientMemoryException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new InsufficientMemoryException : string * Exception -&gt; InsufficientMemoryException" Usage="new System.InsufficientMemoryException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">描述异常的消息。 此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</param>
        <param name="innerException">引起当前异常的异常。 如果 <paramref name="innerException" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</param>
        <summary>使用指定的错误消息和对作为此异常原因的内部异常的引用来初始化 <see cref="T:System.InsufficientMemoryException" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。 <xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。  
  
 下表显示 <xref:System.InsufficientMemoryException> 的实例的初始属性值。  
  
|属性|值|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`|  
|<xref:System.Exception.Message%2A>|`message` 中指定的错误消息字符串。|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md">处理和引发异常</related>
      </Docs>
    </Member>
  </Members>
</Type>
