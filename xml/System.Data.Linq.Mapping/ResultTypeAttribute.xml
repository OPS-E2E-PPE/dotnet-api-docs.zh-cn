<Type Name="ResultTypeAttribute" FullName="System.Data.Linq.Mapping.ResultTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="89f36de63aa22283cda7b9e58b41205f372c81d5" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78813909" /></Metadata><TypeSignature Language="C#" Value="public sealed class ResultTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ResultTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.Mapping.ResultTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ResultTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResultTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ResultTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e7776-101">用于为具有不同结果类型的函数指定每种类型的结果。</span><span class="sxs-lookup"><span data-stu-id="e7776-101">Used to specify each type of result; for functions having various result types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7776-102">此属性适用于返回各种结果类型的函数。</span><span class="sxs-lookup"><span data-stu-id="e7776-102">This attribute applies to functions returning various result types.</span></span> <span data-ttu-id="e7776-103">它用于声明从函数返回的可能的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e7776-103">It is used to declare the possible result types returned from the function.</span></span> <span data-ttu-id="e7776-104">对于继承类型，只需指定继承层次结构的根类型。</span><span class="sxs-lookup"><span data-stu-id="e7776-104">For inheritance types, only the root type of the inheritance hierarchy needs to be specified.</span></span>  
  
 <span data-ttu-id="e7776-105">请参阅<xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e7776-105">See <xref:System.Data.Linq.Mapping.ResultTypeAttribute.Type?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResultTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.Mapping.ResultTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResultTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.Mapping.ResultTypeAttribute : Type -&gt; System.Data.Linq.Mapping.ResultTypeAttribute" Usage="new System.Data.Linq.Mapping.ResultTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e7776-106">具有不同结果类型的函数所返回的结果的类型。</span><span class="sxs-lookup"><span data-stu-id="e7776-106">The type of the result returned by a function having various result types.</span></span></param>
        <summary><span data-ttu-id="e7776-107">初始化 <see cref="T:System.Data.Linq.Mapping.ResultTypeAttribute" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e7776-107">Initializes a new instance of the <see cref="T:System.Data.Linq.Mapping.ResultTypeAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.Mapping.ResultTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Data.Linq.Mapping.ResultTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e7776-108">为具有不同结果类型的函数获取有效的或预期的类型映射。</span><span class="sxs-lookup"><span data-stu-id="e7776-108">Gets the valid or expected type mapping for a function having various result types.</span></span></summary>
        <value><span data-ttu-id="e7776-109">结果的类型 (<see cref="T:System.Type" />)。</span><span class="sxs-lookup"><span data-stu-id="e7776-109">The type of result (<see cref="T:System.Type" />).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e7776-110">此属性适用于返回各种结果类型的函数。</span><span class="sxs-lookup"><span data-stu-id="e7776-110">This attribute applies to functions returning various result types.</span></span> <span data-ttu-id="e7776-111">它用于声明从函数返回的可能的结果类型。</span><span class="sxs-lookup"><span data-stu-id="e7776-111">It is used to declare the possible result types returned from the function.</span></span> <span data-ttu-id="e7776-112">对于继承类型，只需指定继承层次结构的根类型。</span><span class="sxs-lookup"><span data-stu-id="e7776-112">For inheritance types, only the root type of the inheritance hierarchy needs to be specified.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DLinqSprox#4](~/samples/snippets/csharp/VS_Snippets_Data/DLinqSprox/cs/northwind-sprox.cs#4)]
 [!code-vb[DLinqSprox#4](~/samples/snippets/visualbasic/VS_Snippets_Data/DLinqSprox/vb/northwind-sprox.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
