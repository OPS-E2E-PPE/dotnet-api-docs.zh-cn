<Type Name="SerialPort" FullName="System.IO.Ports.SerialPort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbbde236654d25226bade7979e1fbab2ab87242d" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75132538" /></Metadata><TypeSignature Language="C#" Value="public class SerialPort : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SerialPort extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.IO.Ports.SerialPort" />
  <TypeSignature Language="VB.NET" Value="Public Class SerialPort&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerialPort : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type SerialPort = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Ports</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.MonitoringDescription("SerialPortDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8e420-101">表示串行端口资源。</span><span class="sxs-lookup"><span data-stu-id="8e420-101">Represents a serial port resource.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-102">使用此类控制串行端口文件资源。</span><span class="sxs-lookup"><span data-stu-id="8e420-102">Use this class to control a serial port file resource.</span></span> <span data-ttu-id="8e420-103">此类提供同步和事件驱动 i/o、对插针和中断状态的访问以及对串行驱动程序属性的访问。</span><span class="sxs-lookup"><span data-stu-id="8e420-103">This class provides synchronous and event-driven I/O, access to pin and break states, and access to serial driver properties.</span></span> <span data-ttu-id="8e420-104">此外，此类的功能可以包装在内部 <xref:System.IO.Stream> 对象中，可以通过 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性访问该对象，并将其传递给包装或使用流的类。</span><span class="sxs-lookup"><span data-stu-id="8e420-104">Additionally, the functionality of this class can be wrapped in an internal <xref:System.IO.Stream> object, accessible through the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property, and passed to classes that wrap or use streams.</span></span>  
  
 <span data-ttu-id="8e420-105"><xref:System.IO.Ports.SerialPort> 类支持以下编码： <xref:System.Text.ASCIIEncoding>、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、<xref:System.Text.UTF32Encoding>和在 mscorlib.dll 中定义的代码页小于50000的任何编码，或者代码页为54936。</span><span class="sxs-lookup"><span data-stu-id="8e420-105">The <xref:System.IO.Ports.SerialPort> class supports the following encodings: <xref:System.Text.ASCIIEncoding>, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, <xref:System.Text.UTF32Encoding>, and any encoding defined in mscorlib.dll where the code page is less than 50000 or the code page is 54936.</span></span>  <span data-ttu-id="8e420-106">可以使用备用编码，但必须使用 <xref:System.IO.Ports.SerialPort.ReadByte%2A> 或 <xref:System.IO.Ports.SerialPort.Write%2A> 方法并自己执行编码。</span><span class="sxs-lookup"><span data-stu-id="8e420-106">You can use alternate encodings, but you must use the <xref:System.IO.Ports.SerialPort.ReadByte%2A> or <xref:System.IO.Ports.SerialPort.Write%2A> method and perform the encoding yourself.</span></span>  
  
 <span data-ttu-id="8e420-107">使用 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 方法检索当前计算机的有效端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-107">You use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to retrieve the valid ports for the current computer.</span></span>  
  
 <span data-ttu-id="8e420-108">如果在读取操作过程中，<xref:System.IO.Ports.SerialPort> 对象将被阻止，请不要中止线程。</span><span class="sxs-lookup"><span data-stu-id="8e420-108">If a <xref:System.IO.Ports.SerialPort> object becomes blocked during a read operation, do not abort the thread.</span></span> <span data-ttu-id="8e420-109">请改为关闭基础流或释放 <xref:System.IO.Ports.SerialPort> 对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-109">Instead, either close the base stream or dispose of the <xref:System.IO.Ports.SerialPort> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-110">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-110">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-111">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-111">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-112">两台计算机都必须执行该程序才能实现此示例的完整功能。</span><span class="sxs-lookup"><span data-stu-id="8e420-112">Both computers must be executing the program to achieve full functionality of this example.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#10)]
 [!code-csharp[System.IO.Ports.SerialPort#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#10)]
 [!code-vb[System.IO.Ports.SerialPort#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8e420-113">用于调用非托管代码。</span><span class="sxs-lookup"><span data-stu-id="8e420-113">for the ability to call unmanaged code.</span></span> <span data-ttu-id="8e420-114">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="8e420-114">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e420-115">初始化 <see cref="T:System.IO.Ports.SerialPort" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-115">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-116">初始化 <see cref="T:System.IO.Ports.SerialPort" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-116">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-117">当未指定时，此构造函数将使用默认属性值。</span><span class="sxs-lookup"><span data-stu-id="8e420-117">This constructor uses default property values when none are specified.</span></span> <span data-ttu-id="8e420-118">例如，<xref:System.IO.Ports.SerialPort.DataBits%2A> 属性默认为8，<xref:System.IO.Ports.SerialPort.Parity%2A> 属性默认为 `None` 枚举值，<xref:System.IO.Ports.SerialPort.StopBits%2A> 属性默认为1，默认端口名称为 COM1。</span><span class="sxs-lookup"><span data-stu-id="8e420-118">For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-119">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-119">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-120">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-120">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-121">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-121">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : System.ComponentModel.IContainer -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="8e420-122">容器的接口。</span><span class="sxs-lookup"><span data-stu-id="8e420-122">An interface to a container.</span></span></param>
        <summary><span data-ttu-id="8e420-123">使用指定的 <see cref="T:System.IO.Ports.SerialPort" /> 对象初始化 <see cref="T:System.ComponentModel.IContainer" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-123">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class using the specified <see cref="T:System.ComponentModel.IContainer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-124">当未指定时，此构造函数将使用默认属性值。</span><span class="sxs-lookup"><span data-stu-id="8e420-124">This constructor uses default property values when none are specified.</span></span> <span data-ttu-id="8e420-125">例如，<xref:System.IO.Ports.SerialPort.DataBits%2A> 属性默认为8，<xref:System.IO.Ports.SerialPort.Parity%2A> 属性默认为 `None` 枚举值，<xref:System.IO.Ports.SerialPort.StopBits%2A> 属性默认为1，默认端口名称为 COM1。</span><span class="sxs-lookup"><span data-stu-id="8e420-125">For example, the <xref:System.IO.Ports.SerialPort.DataBits%2A> property defaults to 8, the <xref:System.IO.Ports.SerialPort.Parity%2A> property defaults to the `None` enumeration value, the <xref:System.IO.Ports.SerialPort.StopBits%2A> property defaults to 1, and a default port name of COM1.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-126">未能找到或打开指定的端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-126">The specified port could not be found or opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="8e420-127">要使用的端口（例如 COM1）。</span><span class="sxs-lookup"><span data-stu-id="8e420-127">The port to use (for example, COM1).</span></span></param>
        <summary><span data-ttu-id="8e420-128">使用指定的端口名初始化 <see cref="T:System.IO.Ports.SerialPort" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-128">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class using the specified port name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-129">如果要指定端口名称，请使用此构造函数创建 <xref:System.IO.Ports.SerialPort> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-129">Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-130">未能找到或打开指定的端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-130">The specified port could not be found or opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="8e420-131">要使用的端口（例如 COM1）。</span><span class="sxs-lookup"><span data-stu-id="8e420-131">The port to use (for example, COM1).</span></span></param>
        <param name="baudRate"><span data-ttu-id="8e420-132">波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-132">The baud rate.</span></span></param>
        <summary><span data-ttu-id="8e420-133">使用指定的端口名和波特率初始化 <see cref="T:System.IO.Ports.SerialPort" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-133">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class using the specified port name and baud rate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-134">如果要指定端口名称和波特率，请使用此构造函数创建 <xref:System.IO.Ports.SerialPort> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-134">Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name and the baud rate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-135">未能找到或打开指定的端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-135">The specified port could not be found or opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="8e420-136">要使用的端口（例如 COM1）。</span><span class="sxs-lookup"><span data-stu-id="8e420-136">The port to use (for example, COM1).</span></span></param>
        <param name="baudRate"><span data-ttu-id="8e420-137">波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-137">The baud rate.</span></span></param>
        <param name="parity"><span data-ttu-id="8e420-138"><see cref="P:System.IO.Ports.SerialPort.Parity" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-138">One of the <see cref="P:System.IO.Ports.SerialPort.Parity" /> values.</span></span></param>
        <summary><span data-ttu-id="8e420-139">使用指定的端口名、波特率和奇偶校验位初始化 <see cref="T:System.IO.Ports.SerialPort" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-139">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class using the specified port name, baud rate, and parity bit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-140">如果要指定端口名称、波特率和奇偶校验位，请使用此构造函数创建 <xref:System.IO.Ports.SerialPort> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-140">Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, and the parity bit.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-141">未能找到或打开指定的端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-141">The specified port could not be found or opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="8e420-142">要使用的端口（例如 COM1）。</span><span class="sxs-lookup"><span data-stu-id="8e420-142">The port to use (for example, COM1).</span></span></param>
        <param name="baudRate"><span data-ttu-id="8e420-143">波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-143">The baud rate.</span></span></param>
        <param name="parity"><span data-ttu-id="8e420-144"><see cref="P:System.IO.Ports.SerialPort.Parity" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-144">One of the <see cref="P:System.IO.Ports.SerialPort.Parity" /> values.</span></span></param>
        <param name="dataBits"><span data-ttu-id="8e420-145">数据位值。</span><span class="sxs-lookup"><span data-stu-id="8e420-145">The data bits value.</span></span></param>
        <summary><span data-ttu-id="8e420-146">使用指定的端口名、波特率、奇偶校验位和数据位初始化 <see cref="T:System.IO.Ports.SerialPort" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-146">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class using the specified port name, baud rate, parity bit, and data bits.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-147">如果要指定端口名称、波特率、奇偶校验位和数据位，请使用此构造函数创建 <xref:System.IO.Ports.SerialPort> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-147">Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, and data bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-148">未能找到或打开指定的端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-148">The specified port could not be found or opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName"><span data-ttu-id="8e420-149">要使用的端口（例如 COM1）。</span><span class="sxs-lookup"><span data-stu-id="8e420-149">The port to use (for example, COM1).</span></span></param>
        <param name="baudRate"><span data-ttu-id="8e420-150">波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-150">The baud rate.</span></span></param>
        <param name="parity"><span data-ttu-id="8e420-151"><see cref="P:System.IO.Ports.SerialPort.Parity" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-151">One of the <see cref="P:System.IO.Ports.SerialPort.Parity" /> values.</span></span></param>
        <param name="dataBits"><span data-ttu-id="8e420-152">数据位值。</span><span class="sxs-lookup"><span data-stu-id="8e420-152">The data bits value.</span></span></param>
        <param name="stopBits"><span data-ttu-id="8e420-153"><see cref="P:System.IO.Ports.SerialPort.StopBits" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-153">One of the <see cref="P:System.IO.Ports.SerialPort.StopBits" /> values.</span></span></param>
        <summary><span data-ttu-id="8e420-154">使用指定的端口名、波特率、奇偶校验位、数据位和停止位初始化 <see cref="T:System.IO.Ports.SerialPort" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-154">Initializes a new instance of the <see cref="T:System.IO.Ports.SerialPort" /> class using the specified port name, baud rate, parity bit, data bits, and stop bit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-155">如果要指定端口名称、波特率、奇偶校验位、数据位和停止位，请使用此构造函数创建 <xref:System.IO.Ports.SerialPort> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="8e420-155">Use this constructor to create a new instance of the <xref:System.IO.Ports.SerialPort> class when you want to specify the port name, the baud rate, the parity bit, data bits, and stop bit.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-156">未能找到或打开指定的端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-156">The specified port could not be found or opened.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.Ports.SerialPort.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-157">获取 <see cref="T:System.IO.Stream" /> 对象的基础 <see cref="T:System.IO.Ports.SerialPort" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-157">Gets the underlying <see cref="T:System.IO.Stream" /> object for a <see cref="T:System.IO.Ports.SerialPort" /> object.</span></span></summary>
        <value><span data-ttu-id="8e420-158">一个 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-158">A <see cref="T:System.IO.Stream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-159">将此属性用于显式异步 i/o 操作，或将 <xref:System.IO.Ports.SerialPort> 对象传递到 <xref:System.IO.Stream> 包装器类（如 <xref:System.IO.StreamWriter>）。</span><span class="sxs-lookup"><span data-stu-id="8e420-159">Use this property for explicit asynchronous I/O operations or to pass the <xref:System.IO.Ports.SerialPort> object to a <xref:System.IO.Stream> wrapper class such as <xref:System.IO.StreamWriter>.</span></span>  
  
 <span data-ttu-id="8e420-160">任何打开的串行端口 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性都返回派生自抽象 <xref:System.IO.Stream> 类的对象，并使用从 <xref:System.IO.Stream> 类继承的原型来实现读写方法： <xref:System.IO.Stream.BeginRead%2A>、<xref:System.IO.Stream.BeginWrite%2A>、<xref:System.IO.Stream.Read%2A>、<xref:System.IO.Stream.ReadByte%2A>、<xref:System.IO.Stream.Write%2A>和 <xref:System.IO.Stream.WriteByte%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e420-160">Any open serial port's <xref:System.IO.Ports.SerialPort.BaseStream%2A> property returns an object that derives from the abstract <xref:System.IO.Stream> class, and implements read and write methods using the prototypes inherited from the <xref:System.IO.Stream> class: <xref:System.IO.Stream.BeginRead%2A>, <xref:System.IO.Stream.BeginWrite%2A>, <xref:System.IO.Stream.Read%2A>, <xref:System.IO.Stream.ReadByte%2A>, <xref:System.IO.Stream.Write%2A>, and <xref:System.IO.Stream.WriteByte%2A>.</span></span> <span data-ttu-id="8e420-161">将已包装的串行资源传递到 <xref:System.IO.Stream> 包装器类时，这些方法会很有用。</span><span class="sxs-lookup"><span data-stu-id="8e420-161">These methods can be useful when passing a wrapped serial resource to a <xref:System.IO.Stream> wrapper class.</span></span>  
  
 <span data-ttu-id="8e420-162">由于包装的文件句柄的大量无法访问，不支持 <xref:System.IO.Stream.Length%2A> 和 <xref:System.IO.Stream.Position%2A> 属性，并且不支持 <xref:System.IO.Stream.Seek%2A> 和 <xref:System.IO.Stream.SetLength%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8e420-162">Due to the inaccessibility of the wrapped file handle, the <xref:System.IO.Stream.Length%2A> and <xref:System.IO.Stream.Position%2A> properties are not supported, and the <xref:System.IO.Stream.Seek%2A> and <xref:System.IO.Stream.SetLength%2A> methods are not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-163">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-163">The stream is closed.</span></span> <span data-ttu-id="8e420-164">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-164">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8e420-165">该流位于 .NET Compact Framework 应用程序中，并调用了以下方法之一：</span><span class="sxs-lookup"><span data-stu-id="8e420-165">The stream is in a .NET Compact Framework application and one of the following methods was called:</span></span> 
 <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)" /><see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />  
  
<span data-ttu-id="8e420-166">.NET Compact Framework 不支持带有基流的异步模型。</span><span class="sxs-lookup"><span data-stu-id="8e420-166">The .NET Compact Framework does not support the asynchronous model with base streams.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaudRate">
      <MemberSignature Language="C#" Value="public int BaudRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaudRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaudRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BaudRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BaudRate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BaudRate : int with get, set" Usage="System.IO.Ports.SerialPort.BaudRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(9600)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("BaudRate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-167">获取或设置串行波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-167">Gets or sets the serial baud rate.</span></span></summary>
        <value><span data-ttu-id="8e420-168">波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-168">The baud rate.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-169">用户的串行驱动程序必须支持波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-169">The baud rate must be supported by the user's serial driver.</span></span> <span data-ttu-id="8e420-170">默认值为9600位/秒（bps）。</span><span class="sxs-lookup"><span data-stu-id="8e420-170">The default value is 9600 bits per second (bps).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-171">下面的示例演示如何将 <xref:System.IO.Ports.SerialPort.BaudRate%2A> 属性设置为 `9600`。</span><span class="sxs-lookup"><span data-stu-id="8e420-171">The following example shows how to set the <xref:System.IO.Ports.SerialPort.BaudRate%2A> property to `9600`.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 <span data-ttu-id="8e420-172">下面的示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户从通过空调制解调器电缆连接的两台独立计算机聊天。</span><span class="sxs-lookup"><span data-stu-id="8e420-172">The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-173">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-173">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-174">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-174">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-175">指定的波特率小于或等于零，或者大于设备所允许的最大波特率。</span><span class="sxs-lookup"><span data-stu-id="8e420-175">The baud rate specified is less than or equal to zero, or is greater than the maximum allowable baud rate for the device.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-176">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-176">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-177">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-177">-or-</span></span> 
<span data-ttu-id="8e420-178">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-178">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-179">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-179">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BreakState">
      <MemberSignature Language="C#" Value="public bool BreakState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakState" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BreakState" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BreakState : bool with get, set" Usage="System.IO.Ports.SerialPort.BreakState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-180">获取或设置中断信号状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-180">Gets or sets the break signal state.</span></span></summary>
        <value><span data-ttu-id="8e420-181">如果端口处于中断状态，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-181"><see langword="true" /> if the port is in a break state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-182">当传输暂停且线路处于中断状态（所有低、无停止位），直到发布时，中断信号状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-182">The break signal state occurs when a transmission is suspended and the line is placed in a break state (all low, no stop bit) until released.</span></span> <span data-ttu-id="8e420-183">若要进入中断状态，请将此属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="8e420-183">To enter a break state, set this property to `true`.</span></span> <span data-ttu-id="8e420-184">如果端口已处于中断状态，则再次将此属性设置为 `true` 不会导致异常。</span><span class="sxs-lookup"><span data-stu-id="8e420-184">If the port is already in a break state, setting this property again to `true` does not result in an exception.</span></span> <span data-ttu-id="8e420-185">当 <xref:System.IO.Ports.SerialPort.BreakState%2A> `true`时，不能写入 <xref:System.IO.Ports.SerialPort> 的对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-185">It is not possible to write to the <xref:System.IO.Ports.SerialPort> object while <xref:System.IO.Ports.SerialPort.BreakState%2A> is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-186">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-186">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-187">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-187">-or-</span></span> 
<span data-ttu-id="8e420-188">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-188">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-189">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-189">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-190">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-190">The stream is closed.</span></span> <span data-ttu-id="8e420-191">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-191">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToRead">
      <MemberSignature Language="C#" Value="public int BytesToRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToRead As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToRead { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesToRead : int" Usage="System.IO.Ports.SerialPort.BytesToRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-192">获取接收缓冲区中数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-192">Gets the number of bytes of data in the receive buffer.</span></span></summary>
        <value><span data-ttu-id="8e420-193">接收缓冲区中数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-193">The number of bytes of data in the receive buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-194">接收缓冲区包括串行驱动程序的接收缓冲区以及 <xref:System.IO.Ports.SerialPort> 对象本身中的内部缓冲。</span><span class="sxs-lookup"><span data-stu-id="8e420-194">The receive buffer includes the serial driver's receive buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.</span></span>  
  
 <span data-ttu-id="8e420-195">由于 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性表示 <xref:System.IO.Ports.SerialPort> 缓冲区和 Windows 所创建的缓冲区，因此它可以返回比 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> 属性更大的值，该属性只表示 Windows 创建的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8e420-195">Because the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer,  it can return a greater value than the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property, which represents only the Windows-created buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-196">端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-196">The port is not open.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToWrite">
      <MemberSignature Language="C#" Value="public int BytesToWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToWrite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToWrite { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesToWrite : int" Usage="System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-197">获取发送缓冲区中数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-197">Gets the number of bytes of data in the send buffer.</span></span></summary>
        <value><span data-ttu-id="8e420-198">发送缓冲区中数据的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-198">The number of bytes of data in the send buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-199">发送缓冲区包括串行驱动程序的发送缓冲区，以及 <xref:System.IO.Ports.SerialPort> 对象本身中的内部缓冲。</span><span class="sxs-lookup"><span data-stu-id="8e420-199">The send buffer includes the serial driver's send buffer as well as internal buffering in the <xref:System.IO.Ports.SerialPort> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-200">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-200">The port is in an invalid state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-201">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-201">The stream is closed.</span></span> <span data-ttu-id="8e420-202">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-202">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CDHolding">
      <MemberSignature Language="C#" Value="public bool CDHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CDHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDHolding : bool" Usage="System.IO.Ports.SerialPort.CDHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-203">获取端口的载波检测行的状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-203">Gets the state of the Carrier Detect line for the port.</span></span></summary>
        <value><span data-ttu-id="8e420-204">如果检测到载波，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-204"><see langword="true" /> if the carrier is detected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-205">此属性可用于监视端口的载波检测行的状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-205">This property can be used to monitor the state of the carrier detection line for a port.</span></span> <span data-ttu-id="8e420-206">不是任何电信公司通常表明接收方已挂断并且载波已被丢弃。</span><span class="sxs-lookup"><span data-stu-id="8e420-206">No carrier usually indicates that the receiver has hung up and the carrier has been dropped.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-207">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-207">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-208">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-208">-or-</span></span> 
<span data-ttu-id="8e420-209">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-209">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-210">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-210">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-211">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-211">The stream is closed.</span></span> <span data-ttu-id="8e420-212">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-212">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="serialPort.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-213">关闭端口连接，将 <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> 属性设置为 <see langword="false" />，并释放内部 <see cref="T:System.IO.Stream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-213">Closes the port connection, sets the <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> property to <see langword="false" />, and disposes of the internal <see cref="T:System.IO.Stream" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-214">调用此方法会关闭 <xref:System.IO.Ports.SerialPort> 对象并清除接收和传输缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8e420-214">Calling this method closes the <xref:System.IO.Ports.SerialPort> object and clears both the receive and transmit buffers.</span></span> <span data-ttu-id="8e420-215">此方法调用 <xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType> 方法，该方法调用受保护的 <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType> 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="8e420-215">This method calls the <xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType> method, which invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType> method with the `disposing` parameter set to `true`.</span></span>  
  
 <span data-ttu-id="8e420-216">任何应用程序的最佳做法是在调用 <xref:System.IO.Ports.SerialPort.Close%2A> 方法后等待一段时间，然后再尝试调用 <xref:System.IO.Ports.SerialPort.Open%2A> 方法，因为端口可能不会立即关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-216">The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-217">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-217">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-218">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-218">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-219">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-219">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-220">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-220">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-221">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-221">-or-</span></span> 
<span data-ttu-id="8e420-222">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-222">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-223">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-223">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CtsHolding">
      <MemberSignature Language="C#" Value="public bool CtsHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtsHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CtsHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtsHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtsHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtsHolding : bool" Usage="System.IO.Ports.SerialPort.CtsHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-224">获取“可以发送”行的状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-224">Gets the state of the Clear-to-Send line.</span></span></summary>
        <value><span data-ttu-id="8e420-225">如果检测到“可以发送”行，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-225"><see langword="true" /> if the Clear-to-Send line is detected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-226">"明文发送（CTS）" 行用于发送/清除发送（RTS/CTS）硬件握手。</span><span class="sxs-lookup"><span data-stu-id="8e420-226">The Clear-to-Send (CTS) line is used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.</span></span> <span data-ttu-id="8e420-227">在发送数据之前，会通过端口查询 CTS 行。</span><span class="sxs-lookup"><span data-stu-id="8e420-227">The CTS line is queried by a port before data is sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-228">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-228">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-229">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-229">-or-</span></span> 
<span data-ttu-id="8e420-230">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-230">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-231">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-231">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-232">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-232">The stream is closed.</span></span> <span data-ttu-id="8e420-233">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-233">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataBits">
      <MemberSignature Language="C#" Value="public int DataBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DataBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DataBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DataBits : int with get, set" Usage="System.IO.Ports.SerialPort.DataBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DataBits")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-234">获取或设置每个字节的标准数据位长度。</span><span class="sxs-lookup"><span data-stu-id="8e420-234">Gets or sets the standard length of data bits per byte.</span></span></summary>
        <value><span data-ttu-id="8e420-235">数据位长度。</span><span class="sxs-lookup"><span data-stu-id="8e420-235">The data bits length.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-236">此属性的值的范围是从5到8。</span><span class="sxs-lookup"><span data-stu-id="8e420-236">The range of values for this property is from 5 through 8.</span></span> <span data-ttu-id="8e420-237">默认值为8。</span><span class="sxs-lookup"><span data-stu-id="8e420-237">The default value is 8.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-238">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-238">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-239">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-239">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-240">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-240">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-241">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-241">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-242">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-242">-or-</span></span> 
<span data-ttu-id="8e420-243">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-243">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-244">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-244">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-245">数据位的值小于 5 或大于 8。</span><span class="sxs-lookup"><span data-stu-id="8e420-245">The data bits value is less than 5 or more than 8.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DataReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialDataReceivedEventHandler DataReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.DataReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataReceived As SerialDataReceivedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialDataReceivedEventHandler ^ DataReceived;" />
      <MemberSignature Language="F#" Value="member this.DataReceived : System.IO.Ports.SerialDataReceivedEventHandler " Usage="member this.DataReceived : System.IO.Ports.SerialDataReceivedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event DataReceived As SerialDataReceivedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialDataReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialDataReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-246">指示已通过由 <see cref="T:System.IO.Ports.SerialPort" /> 对象表示的端口接收了数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-246">Indicates that data has been received through a port represented by the <see cref="T:System.IO.Ports.SerialPort" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-247">数据事件可能由 <xref:System.IO.Ports.SerialData> 枚举中的任何项导致。</span><span class="sxs-lookup"><span data-stu-id="8e420-247">Data events can be caused by any of the items in the <xref:System.IO.Ports.SerialData> enumeration.</span></span> <span data-ttu-id="8e420-248">由于操作系统确定是否引发此事件，因此不会报告所有奇偶校验错误。</span><span class="sxs-lookup"><span data-stu-id="8e420-248">Because the operating system determines whether to raise this event or not, not all parity errors may be reported.</span></span>  
  
 <span data-ttu-id="8e420-249">如果收到 Eof 字符，则会引发 <xref:System.IO.Ports.SerialPort.DataReceived> 事件，而不考虑内部输入缓冲区中的字节数和 <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="8e420-249">The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an Eof character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.</span></span>  
  
 <span data-ttu-id="8e420-250"><xref:System.IO.Ports.SerialPort.PinChanged>、<xref:System.IO.Ports.SerialPort.DataReceived>和 <xref:System.IO.Ports.SerialPort.ErrorReceived> 事件可能按顺序调用，并且基础流报告错误和执行事件处理程序之间可能会有轻微的延迟。</span><span class="sxs-lookup"><span data-stu-id="8e420-250"><xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed.</span></span> <span data-ttu-id="8e420-251">一次只能执行一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8e420-251">Only one event handler can execute at a time.</span></span>  
  
 <span data-ttu-id="8e420-252">不保证为每个接收的字节引发 <xref:System.IO.Ports.SerialPort.DataReceived> 事件。</span><span class="sxs-lookup"><span data-stu-id="8e420-252">The <xref:System.IO.Ports.SerialPort.DataReceived> event is not guaranteed to be raised for every byte received.</span></span> <span data-ttu-id="8e420-253">使用 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性来确定要在缓冲区中读取的数据量。</span><span class="sxs-lookup"><span data-stu-id="8e420-253">Use the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property to determine how much data is left to be read in the buffer.</span></span>  
  
 <span data-ttu-id="8e420-254">从 <xref:System.IO.Ports.SerialPort> 对象接收数据时，在辅助线程上引发 <xref:System.IO.Ports.SerialPort.DataReceived> 事件。</span><span class="sxs-lookup"><span data-stu-id="8e420-254">The <xref:System.IO.Ports.SerialPort.DataReceived> event is raised on a secondary thread when data is received from the <xref:System.IO.Ports.SerialPort> object.</span></span> <span data-ttu-id="8e420-255">由于此事件是在辅助线程上引发的，而不是在主线程上引发的，因此尝试修改主线程中的某些元素（如 UI 元素）可能会引发线程异常。</span><span class="sxs-lookup"><span data-stu-id="8e420-255">Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.</span></span> <span data-ttu-id="8e420-256">如果需要修改主 <xref:System.Windows.Forms.Form> 或 <xref:System.Windows.Forms.Control>中的元素，请使用 <xref:System.Windows.Forms.Control.Invoke%2A>返回回发请求，这会在适当的线程上执行此操作。</span><span class="sxs-lookup"><span data-stu-id="8e420-256">If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.</span></span>  
  
 <span data-ttu-id="8e420-257">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8e420-257">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-258">此示例将 <xref:System.IO.Ports.SerialDataReceivedEventHandler> 添加到 <xref:System.IO.Ports.SerialPort.DataReceived>，以读取在 COM1 端口上接收到的所有可用数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-258">This example adds a <xref:System.IO.Ports.SerialDataReceivedEventHandler> to <xref:System.IO.Ports.SerialPort.DataReceived> to read all the available data received on the COM1 port.</span></span> <span data-ttu-id="8e420-259">请注意，若要测试此代码，必须将硬件附加到 COM1，以发送数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-259">Note that to test this code it is necessary to have hardware attached to COM1 that will send data.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#06](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#06)]
 [!code-csharp[System.IO.Ports.SerialPort#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#06)]
 [!code-vb[System.IO.Ports.SerialPort#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#06)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardInBuffer">
      <MemberSignature Language="C#" Value="public void DiscardInBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardInBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardInBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardInBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardInBuffer();" />
      <MemberSignature Language="F#" Value="member this.DiscardInBuffer : unit -&gt; unit" Usage="serialPort.DiscardInBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-260">丢弃来自串行驱动程序的接收缓冲区的数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-260">Discards data from the serial driver's receive buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-261">此方法等效于以下 Visual Basic 代码： `MSComm1.InBufferCount = 0`。</span><span class="sxs-lookup"><span data-stu-id="8e420-261">This method is equivalent to the following Visual Basic code: `MSComm1.InBufferCount = 0`.</span></span> <span data-ttu-id="8e420-262">它会清除接收缓冲区，但不会影响传输缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8e420-262">It clears the receive buffer, but does not affect the transmit buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-263">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-263">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-264">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-264">-or-</span></span> 
<span data-ttu-id="8e420-265">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-265">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-266">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-266">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-267">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-267">The stream is closed.</span></span> <span data-ttu-id="8e420-268">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-268">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardNull">
      <MemberSignature Language="C#" Value="public bool DiscardNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscardNull" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DiscardNull" />
      <MemberSignature Language="VB.NET" Value="Public Property DiscardNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DiscardNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DiscardNull : bool with get, set" Usage="System.IO.Ports.SerialPort.DiscardNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DiscardNull")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-269">获取或设置一个值，该值指示 null 字节在端口和接收缓冲区之间传输时是否被忽略。</span><span class="sxs-lookup"><span data-stu-id="8e420-269">Gets or sets a value indicating whether null bytes are ignored when transmitted between the port and the receive buffer.</span></span></summary>
        <value><span data-ttu-id="8e420-270">如果忽略 Null 字节，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-270"><see langword="true" /> if null bytes are ignored; otherwise <see langword="false" />.</span></span> <span data-ttu-id="8e420-271">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-271">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-272">通常应将此值设置为 `false`，尤其是对于二进制传输。</span><span class="sxs-lookup"><span data-stu-id="8e420-272">This value should normally be set to `false`, especially for binary transmissions.</span></span>  <span data-ttu-id="8e420-273">将此属性设置为 `true` 可能会导致 UTF32 和 UTF16 编码字节出现意外的结果。</span><span class="sxs-lookup"><span data-stu-id="8e420-273">Setting this property to `true` can cause unexpected results for UTF32- and UTF16-encoded bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-274">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-274">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-275">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-275">-or-</span></span> 
<span data-ttu-id="8e420-276">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-276">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-277">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-277">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-278">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-278">The stream is closed.</span></span> <span data-ttu-id="8e420-279">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-279">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardOutBuffer">
      <MemberSignature Language="C#" Value="public void DiscardOutBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardOutBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardOutBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardOutBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardOutBuffer();" />
      <MemberSignature Language="F#" Value="member this.DiscardOutBuffer : unit -&gt; unit" Usage="serialPort.DiscardOutBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-280">丢弃来自串行驱动程序的传输缓冲区的数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-280">Discards data from the serial driver's transmit buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-281">此方法等效于以下 Visual Basic 代码： `MSComm1.OutBufferCount = 0`。</span><span class="sxs-lookup"><span data-stu-id="8e420-281">This method is equivalent to the following Visual Basic code: `MSComm1.OutBufferCount = 0`.</span></span> <span data-ttu-id="8e420-282">它清除传输缓冲区，但不影响接收缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8e420-282">It clears the transmit buffer, but does not affect the receive buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-283">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-283">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-284">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-284">-or-</span></span> 
<span data-ttu-id="8e420-285">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-285">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-286">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-286">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-287">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-287">The stream is closed.</span></span> <span data-ttu-id="8e420-288">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-288">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="serialPort.Dispose disposing" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="serialPort.Dispose disposing" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8e420-289">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-289"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8e420-290">释放 <see cref="T:System.IO.Ports.SerialPort" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="8e420-290">Releases the unmanaged resources used by the <see cref="T:System.IO.Ports.SerialPort" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-291">此方法由 public <xref:System.ComponentModel.Component.Dispose%2A> 方法和 <xref:System.Object.Finalize%2A> 方法调用。</span><span class="sxs-lookup"><span data-stu-id="8e420-291">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8e420-292"><xref:System.ComponentModel.Component.Dispose%2A> 调用受保护的 <xref:System.IO.Ports.SerialPort.Dispose%2A> 方法，并将 `disposing` 参数设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="8e420-292"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.Ports.SerialPort.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8e420-293"><xref:System.Object.Finalize%2A> 调用 `disposing` 设置为 `false`的 <xref:System.IO.Ports.SerialPort.Dispose%2A>。</span><span class="sxs-lookup"><span data-stu-id="8e420-293"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.Ports.SerialPort.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8e420-294">当 `disposing` 参数为 `true` 时，此方法释放该 <xref:System.IO.Ports.SerialPort> 引用的、由任何托管对象持有的全部资源。</span><span class="sxs-lookup"><span data-stu-id="8e420-294">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Ports.SerialPort> references.</span></span> <span data-ttu-id="8e420-295">此方法调用每个引用对象的 <xref:System.ComponentModel.Component.Dispose%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8e420-295">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 <span data-ttu-id="8e420-296">此方法刷新和关闭 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中的流对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-296">This method flushes and closes the stream object in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-297">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-297">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-298">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-298">-or-</span></span> 
<span data-ttu-id="8e420-299">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-299">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-300">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-300">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="8e420-301">
            <see cref="M:System.ComponentModel.Component.Dispose" /> 可以由其他对象多次调用。</span><span class="sxs-lookup"><span data-stu-id="8e420-301">
            <see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8e420-302">重写 <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" /> 时，请注意不要引用在以前调用 <see cref="M:System.ComponentModel.Component.Dispose" /> 时已释放的对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-302">When overriding <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="8e420-303">有关如何实现 <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />的详细信息，请参阅[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="8e420-303">For more information about how to implement <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="8e420-304">有关 <see cref="M:System.ComponentModel.Component.Dispose" /> 和 <see cref="M:System.Object.Finalize" />的详细信息，请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="8e420-304">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DsrHolding">
      <MemberSignature Language="C#" Value="public bool DsrHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DsrHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DsrHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DsrHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DsrHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DsrHolding : bool" Usage="System.IO.Ports.SerialPort.DsrHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-305">获取数据设置就绪 (DSR) 信号的状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-305">Gets the state of the Data Set Ready (DSR) signal.</span></span></summary>
        <value><span data-ttu-id="8e420-306">如果“数据设置就绪”信号已发送到端口，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-306"><see langword="true" /> if a Data Set Ready signal has been sent to the port; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-307">此属性在数据集就绪/数据终端就绪（DSR/DTR）握手中使用。</span><span class="sxs-lookup"><span data-stu-id="8e420-307">This property is used in Data Set Ready/Data Terminal Ready (DSR/DTR) handshaking.</span></span> <span data-ttu-id="8e420-308">数据设置就绪（DSR）信号通常由调制解调器发送到端口，以指示它已准备好进行数据传输或数据接收。</span><span class="sxs-lookup"><span data-stu-id="8e420-308">The Data Set Ready (DSR) signal is usually sent by a modem to a port to indicate that it is ready for data transmission or data reception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-309">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-309">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-310">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-310">-or-</span></span> 
<span data-ttu-id="8e420-311">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-311">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-312">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-312">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-313">流已关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-313">The stream is closed.</span></span> <span data-ttu-id="8e420-314">这可能会因为尚未调用 <see cref="M:System.IO.Ports.SerialPort.Open" /> 方法或已调用了 <see cref="M:System.IO.Ports.SerialPort.Close" /> 方法而发生。</span><span class="sxs-lookup"><span data-stu-id="8e420-314">This can occur because the <see cref="M:System.IO.Ports.SerialPort.Open" /> method has not been called or the <see cref="M:System.IO.Ports.SerialPort.Close" /> method has been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DtrEnable">
      <MemberSignature Language="C#" Value="public bool DtrEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtrEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DtrEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property DtrEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtrEnable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DtrEnable : bool with get, set" Usage="System.IO.Ports.SerialPort.DtrEnable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DtrEnable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-315">获取或设置一个值，该值在串行通信过程中启用数据终端就绪 (DTR) 信号。</span><span class="sxs-lookup"><span data-stu-id="8e420-315">Gets or sets a value that enables the Data Terminal Ready (DTR) signal during serial communication.</span></span></summary>
        <value><span data-ttu-id="8e420-316">如果为 <see langword="true" />，则启用数据终端就绪 (DTR)；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-316"><see langword="true" /> to enable Data Terminal Ready (DTR); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e420-317">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-317">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-318">通常在 XON/XOFF 软件握手期间启用数据终端就绪（DTR），并请求发送/清除发送（RTS/CTS）硬件握手和调制解调器通信。</span><span class="sxs-lookup"><span data-stu-id="8e420-318">Data Terminal Ready (DTR) is typically enabled during XON/XOFF software handshaking and Request to Send/Clear to Send (RTS/CTS) hardware handshaking, and modem communications.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-319">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-319">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-320">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-320">-or-</span></span> 
<span data-ttu-id="8e420-321">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-321">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-322">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-322">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.IO.Ports.SerialPort.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Encoding")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-323">获取或设置传输前后文本转换的字节编码。</span><span class="sxs-lookup"><span data-stu-id="8e420-323">Gets or sets the byte encoding for pre- and post-transmission conversion of text.</span></span></summary>
        <value><span data-ttu-id="8e420-324">一个 <see cref="T:System.Text.Encoding" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="8e420-324">An <see cref="T:System.Text.Encoding" /> object.</span></span> <span data-ttu-id="8e420-325">默认值为 <see cref="T:System.Text.ASCIIEncoding" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-325">The default is <see cref="T:System.Text.ASCIIEncoding" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-326"><see cref="P:System.IO.Ports.SerialPort.Encoding" /> 属性已设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-326">The <see cref="P:System.IO.Ports.SerialPort.Encoding" /> property was set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-327"><see cref="P:System.IO.Ports.SerialPort.Encoding" /> 属性被设置为的编码不是 <see cref="T:System.Text.ASCIIEncoding" />、<see cref="T:System.Text.UTF8Encoding" />、<see cref="T:System.Text.UTF32Encoding" />、<see cref="T:System.Text.UnicodeEncoding" />、Windows 单字节编码之一或 Windows 双字节编码之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-327">The <see cref="P:System.IO.Ports.SerialPort.Encoding" /> property was set to an encoding that is not <see cref="T:System.Text.ASCIIEncoding" />, <see cref="T:System.Text.UTF8Encoding" />, <see cref="T:System.Text.UTF32Encoding" />, <see cref="T:System.Text.UnicodeEncoding" />, one of the Windows single byte encodings, or one of the Windows double byte encodings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.ErrorReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ErrorReceived As SerialErrorReceivedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialErrorReceivedEventHandler ^ ErrorReceived;" />
      <MemberSignature Language="F#" Value="member this.ErrorReceived : System.IO.Ports.SerialErrorReceivedEventHandler " Usage="member this.ErrorReceived : System.IO.Ports.SerialErrorReceivedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ErrorReceived As SerialErrorReceivedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialErrorReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialErrorReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-328">指示由 <see cref="T:System.IO.Ports.SerialPort" /> 对象表示的端口上发生了错误。</span><span class="sxs-lookup"><span data-stu-id="8e420-328">Indicates that an error has occurred with a port represented by a <see cref="T:System.IO.Ports.SerialPort" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-329">错误事件可能由 <xref:System.IO.Ports.SerialError> 枚举中的任何项导致。</span><span class="sxs-lookup"><span data-stu-id="8e420-329">Error events can be caused by any of the items in the <xref:System.IO.Ports.SerialError> enumeration.</span></span> <span data-ttu-id="8e420-330">由于操作系统确定是否引发此事件，因此不会报告所有奇偶校验错误。</span><span class="sxs-lookup"><span data-stu-id="8e420-330">Because the operating system determines whether to raise this event or not, not all parity errors may be reported.</span></span>  
  
 <span data-ttu-id="8e420-331">可以按顺序调用 <xref:System.IO.Ports.SerialPort.PinChanged>、<xref:System.IO.Ports.SerialPort.DataReceived>和 <xref:System.IO.Ports.SerialPort.ErrorReceived> 事件，并且在基础流报告错误和执行事件处理程序时，可能会有轻微的延迟。</span><span class="sxs-lookup"><span data-stu-id="8e420-331"><xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when code can when the event handler is executed.</span></span> <span data-ttu-id="8e420-332">一次只能执行一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8e420-332">Only one event handler can execute at a time.</span></span>  
  
 <span data-ttu-id="8e420-333">如果流的尾随字节发生奇偶校验错误，则会将一个额外的字节添加到输入缓冲区，其值为126。</span><span class="sxs-lookup"><span data-stu-id="8e420-333">If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.</span></span>  
  
 <span data-ttu-id="8e420-334">当从 <xref:System.IO.Ports.SerialPort> 对象收到错误时，将在辅助线程上引发 <xref:System.IO.Ports.SerialPort.ErrorReceived> 事件。</span><span class="sxs-lookup"><span data-stu-id="8e420-334">The <xref:System.IO.Ports.SerialPort.ErrorReceived> event is raised on a secondary thread when an error is received from the <xref:System.IO.Ports.SerialPort> object.</span></span> <span data-ttu-id="8e420-335">由于此事件是在辅助线程上引发的，而不是在主线程上引发的，因此尝试修改主线程中的某些元素（如 UI 元素）可能会引发线程异常。</span><span class="sxs-lookup"><span data-stu-id="8e420-335">Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.</span></span> <span data-ttu-id="8e420-336">如果需要修改主 <xref:System.Windows.Forms.Form> 或 <xref:System.Windows.Forms.Control>中的元素，请使用 <xref:System.Windows.Forms.Control.Invoke%2A>返回回发请求，这会在适当的线程上执行此操作。</span><span class="sxs-lookup"><span data-stu-id="8e420-336">If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.</span></span>  
  
 <span data-ttu-id="8e420-337">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8e420-337">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortNames">
      <MemberSignature Language="C#" Value="public static string[] GetPortNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetPortNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.GetPortNames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPortNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetPortNames();" />
      <MemberSignature Language="F#" Value="static member GetPortNames : unit -&gt; string[]" Usage="System.IO.Ports.SerialPort.GetPortNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-338">获取当前计算机的串行端口名的数组。</span><span class="sxs-lookup"><span data-stu-id="8e420-338">Gets an array of serial port names for the current computer.</span></span></summary>
        <returns><span data-ttu-id="8e420-339">当前计算机的串行端口名的数组。</span><span class="sxs-lookup"><span data-stu-id="8e420-339">An array of serial port names for the current computer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-340">未指定从 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 返回的端口名称的顺序。</span><span class="sxs-lookup"><span data-stu-id="8e420-340">The order of port names returned from <xref:System.IO.Ports.SerialPort.GetPortNames%2A> is not specified.</span></span>  
  
 <span data-ttu-id="8e420-341">使用 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 方法可在当前计算机上查询有效串行端口名称的列表。</span><span class="sxs-lookup"><span data-stu-id="8e420-341">Use the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to query the current computer for a list of valid serial port names.</span></span> <span data-ttu-id="8e420-342">例如，你可以使用此方法来确定 COM1 和 COM2 是否为当前计算机的有效串行端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-342">For example, you can use this method to determine whether COM1 and COM2 are valid serial ports for the current computer.</span></span>  
  
 <span data-ttu-id="8e420-343">端口名称是从系统注册表（例如 HKEY_LOCAL_MACHINE \HARDWARE\DEVICEMAP\SERIALCOMM）获取的。</span><span class="sxs-lookup"><span data-stu-id="8e420-343">The port names are obtained from the system registry (for example, HKEY_LOCAL_MACHINE\HARDWARE\DEVICEMAP\SERIALCOMM).</span></span> <span data-ttu-id="8e420-344">如果注册表包含陈旧数据或其他不正确的数据，则 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 方法将返回不正确的数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-344">If the registry contains stale or otherwise incorrect data then the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method will return incorrect data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-345">下面的代码示例使用 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 方法将串行端口名称显示到控制台。</span><span class="sxs-lookup"><span data-stu-id="8e420-345">The following code example uses the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method to display serial port names to the console.</span></span>  
  
 [!code-cpp[IO.Ports.GetPortNames#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Ports.GetPortNames/cpp/example.cpp#1)]
 [!code-csharp[IO.Ports.GetPortNames#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Ports.GetPortNames/CS/example.cs#1)]
 [!code-vb[IO.Ports.GetPortNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Ports.GetPortNames/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="8e420-346">未能查询串行端口名称。</span><span class="sxs-lookup"><span data-stu-id="8e420-346">The serial port names could not be queried.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handshake">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Handshake Handshake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Handshake Handshake" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Handshake" />
      <MemberSignature Language="VB.NET" Value="Public Property Handshake As Handshake" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Handshake Handshake { System::IO::Ports::Handshake get(); void set(System::IO::Ports::Handshake value); };" />
      <MemberSignature Language="F#" Value="member this.Handshake : System.IO.Ports.Handshake with get, set" Usage="System.IO.Ports.SerialPort.Handshake" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Handshake")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-347">使用 <see cref="T:System.IO.Ports.Handshake" /> 中的值获取或设置串行端口数据传输的握手协议。</span><span class="sxs-lookup"><span data-stu-id="8e420-347">Gets or sets the handshaking protocol for serial port transmission of data using a value from <see cref="T:System.IO.Ports.Handshake" />.</span></span></summary>
        <value><span data-ttu-id="8e420-348"><see cref="T:System.IO.Ports.Handshake" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-348">One of the <see cref="T:System.IO.Ports.Handshake" /> values.</span></span> <span data-ttu-id="8e420-349">默认值为 <see langword="None" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-349">The default is <see langword="None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-350">使用 "握手" 时，将指示连接到 <xref:System.IO.Ports.SerialPort> 对象的设备在缓冲区中至少有（<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024）字节时停止发送数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-350">When handshaking is used, the device connected to the <xref:System.IO.Ports.SerialPort> object is instructed to stop sending data when there is at least (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>-1024) bytes in the buffer.</span></span> <span data-ttu-id="8e420-351">当缓冲区中有1024或更少的字节时，将指示设备再次开始发送数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-351">The device is instructed to start sending data again when there are 1024 or fewer bytes in the buffer.</span></span> <span data-ttu-id="8e420-352">如果设备正在以大于1024字节的块发送数据，则可能会导致缓冲区溢出。</span><span class="sxs-lookup"><span data-stu-id="8e420-352">If the device is sending data in blocks that are larger than 1024 bytes, this may cause the buffer to overflow.</span></span>  
  
 <span data-ttu-id="8e420-353">如果 <xref:System.IO.Ports.SerialPort.Handshake%2A> 属性设置为 <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> 并且 <xref:System.IO.Ports.SerialPort.CtsHolding%2A> 设置为 `false`，则不会发送 XOff 字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-353">If the <xref:System.IO.Ports.SerialPort.Handshake%2A> property is set to <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> and <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is set to `false`, the XOff character will not be sent.</span></span> <span data-ttu-id="8e420-354">如果将 <xref:System.IO.Ports.SerialPort.CtsHolding%2A> 设置为 `true`，则必须发送更多数据，然后才能发送 XOff 字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-354">If <xref:System.IO.Ports.SerialPort.CtsHolding%2A> is then set to `true`, more data must be sent before the XOff character will be sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-355">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-355">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-356">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-356">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-357">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-357">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-358">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-358">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-359">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-359">-or-</span></span> 
<span data-ttu-id="8e420-360">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-360">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-361">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-361">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-362">传递的值不是 <see cref="T:System.IO.Ports.Handshake" /> 枚举中的有效值。</span><span class="sxs-lookup"><span data-stu-id="8e420-362">The value passed is not a valid value in the <see cref="T:System.IO.Ports.Handshake" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public const int InfiniteTimeout = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InfiniteTimeout = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const InfiniteTimeout As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int InfiniteTimeout = -1;" />
      <MemberSignature Language="F#" Value="val mutable InfiniteTimeout : int" Usage="System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="8e420-363">指示不应该发生超时。</span><span class="sxs-lookup"><span data-stu-id="8e420-363">Indicates that no time-out should occur.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-364">此值与 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> 和 <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> 属性一起使用。</span><span class="sxs-lookup"><span data-stu-id="8e420-364">This value is used with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> and <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool" Usage="System.IO.Ports.SerialPort.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-365">获取一个值，该值指示 <see cref="T:System.IO.Ports.SerialPort" /> 对象的打开或关闭状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-365">Gets a value indicating the open or closed status of the <see cref="T:System.IO.Ports.SerialPort" /> object.</span></span></summary>
        <value><span data-ttu-id="8e420-366">如果串行端口已打开，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-366"><see langword="true" /> if the serial port is open; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e420-367">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-367">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-368"><xref:System.IO.Ports.SerialPort.IsOpen%2A> 属性跟踪端口是否处于打开状态以供调用方使用，而不跟踪端口是否已由计算机上的任何应用程序打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-368">The <xref:System.IO.Ports.SerialPort.IsOpen%2A> property tracks whether the port is open for use by the caller, not whether the port is open by any application on the machine.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-369">已传递的 <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> 值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-369">The <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> value passed is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-370">已传递的 <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> 值为空字符串。</span><span class="sxs-lookup"><span data-stu-id="8e420-370">The <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> value passed is an empty string ("").</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.IO.Ports.SerialPort.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("\n")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("NewLine")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-371">获取或设置用于解释 <see cref="M:System.IO.Ports.SerialPort.ReadLine" /> 和 <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> 方法调用结束的值。</span><span class="sxs-lookup"><span data-stu-id="8e420-371">Gets or sets the value used to interpret the end of a call to the <see cref="M:System.IO.Ports.SerialPort.ReadLine" /> and <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> methods.</span></span></summary>
        <value><span data-ttu-id="8e420-372">表示行尾的值。</span><span class="sxs-lookup"><span data-stu-id="8e420-372">A value that represents the end of a line.</span></span> <span data-ttu-id="8e420-373">默认值为换行符（在 Visual Basic 中C#为或 <see cref="F:Microsoft.VisualBasic.Constants.vbLf" /> 中的 "\n"）。</span><span class="sxs-lookup"><span data-stu-id="8e420-373">The default is a line feed ("\n" in C# or <see cref="F:Microsoft.VisualBasic.Constants.vbLf" /> in Visual Basic).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-374">此属性确定 <xref:System.IO.Ports.SerialPort.ReadLine%2A> 和 <xref:System.IO.Ports.SerialPort.WriteLine%2A> 方法的值（byte）定义行的末尾。</span><span class="sxs-lookup"><span data-stu-id="8e420-374">This property determines what value (byte) defines the end of a line for the <xref:System.IO.Ports.SerialPort.ReadLine%2A> and <xref:System.IO.Ports.SerialPort.WriteLine%2A> methods.</span></span> <span data-ttu-id="8e420-375">默认情况下，行尾值为换行符（`\n` 在中C#，<xref:Microsoft.VisualBasic.Constants.vbLf?displayProperty=nameWithType> Visual Basic）。</span><span class="sxs-lookup"><span data-stu-id="8e420-375">By default the end-of-line value is a line feed character (`\n` in C#, <xref:Microsoft.VisualBasic.Constants.vbLf?displayProperty=nameWithType> in Visual Basic).</span></span> <span data-ttu-id="8e420-376">如果正在使用的特定串行设备对同一目的使用不同的值，则会将此值更改为其他值。</span><span class="sxs-lookup"><span data-stu-id="8e420-376">You would change this to a different value if the particular serial device you're working with uses a different value for the same purpose.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-377">属性值为空。</span><span class="sxs-lookup"><span data-stu-id="8e420-377">The property value is empty.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-378">属性值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-378">The property value is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="serialPort.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-379">打开一个新的串行端口连接。</span><span class="sxs-lookup"><span data-stu-id="8e420-379">Opens a new serial port connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-380">每个 <xref:System.IO.Ports.SerialPort> 对象只能存在一个打开的连接。</span><span class="sxs-lookup"><span data-stu-id="8e420-380">Only one open connection can exist per <xref:System.IO.Ports.SerialPort> object.</span></span>  
  
 <span data-ttu-id="8e420-381">任何应用程序的最佳做法是在调用 <xref:System.IO.Ports.SerialPort.Close%2A> 方法后等待一段时间，然后再尝试调用 <xref:System.IO.Ports.SerialPort.Open%2A> 方法，因为端口可能不会立即关闭。</span><span class="sxs-lookup"><span data-stu-id="8e420-381">The best practice for any application is to wait for some amount of time after calling the <xref:System.IO.Ports.SerialPort.Close%2A> method before attempting to call the <xref:System.IO.Ports.SerialPort.Open%2A> method, as the port may not be closed instantly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-382">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-382">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-383">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-383">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-384">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-384">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="8e420-385">对端口的访问被拒绝。</span><span class="sxs-lookup"><span data-stu-id="8e420-385">Access is denied to the port.</span></span>  
  
<span data-ttu-id="8e420-386">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-386">-or-</span></span> 
<span data-ttu-id="8e420-387">当前进程或系统上的另一个进程已经打开了指定的 COM 端口（通过 <see cref="T:System.IO.Ports.SerialPort" /> 实例或在非托管代码中）。</span><span class="sxs-lookup"><span data-stu-id="8e420-387">The current process, or another process on the system, already has the specified COM port open either by a <see cref="T:System.IO.Ports.SerialPort" /> instance or in unmanaged code.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-388">此实例的一个或多个属性无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-388">One or more of the properties for this instance are invalid.</span></span> <span data-ttu-id="8e420-389">例如，<see cref="P:System.IO.Ports.SerialPort.Parity" />、<see cref="P:System.IO.Ports.SerialPort.DataBits" /> 或 <see cref="P:System.IO.Ports.SerialPort.Handshake" /> 属性不是有效值；<see cref="P:System.IO.Ports.SerialPort.BaudRate" /> 小于或等于零；<see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /> 或 <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> 属性小于零且不是 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-389">For example, the <see cref="P:System.IO.Ports.SerialPort.Parity" />, <see cref="P:System.IO.Ports.SerialPort.DataBits" />, or <see cref="P:System.IO.Ports.SerialPort.Handshake" /> properties are not valid values; the <see cref="P:System.IO.Ports.SerialPort.BaudRate" /> is less than or equal to zero; the <see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /> or <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> property is less than zero and is not <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-390">端口名称不是以“COM”开始的。</span><span class="sxs-lookup"><span data-stu-id="8e420-390">The port name does not begin with "COM".</span></span>  
  
<span data-ttu-id="8e420-391">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-391">-or-</span></span>
  
 <span data-ttu-id="8e420-392">端口的文件类型不受支持。</span><span class="sxs-lookup"><span data-stu-id="8e420-392">The file type of the port is not supported.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-393">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-393">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-394">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-394">-or-</span></span> 
<span data-ttu-id="8e420-395">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-395">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-396">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-396">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-397"><see cref="T:System.IO.Ports.SerialPort" /> 的当前实例上的指定端口已经打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-397">The specified port on the current instance of the <see cref="T:System.IO.Ports.SerialPort" /> is already open.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="8e420-398">用于调用非托管代码。</span><span class="sxs-lookup"><span data-stu-id="8e420-398">for calling unmanaged code.</span></span> <span data-ttu-id="8e420-399">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> 安全操作： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span><span class="sxs-lookup"><span data-stu-id="8e420-399">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Parity">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Parity Parity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Parity Parity" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Parity" />
      <MemberSignature Language="VB.NET" Value="Public Property Parity As Parity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Parity Parity { System::IO::Ports::Parity get(); void set(System::IO::Ports::Parity value); };" />
      <MemberSignature Language="F#" Value="member this.Parity : System.IO.Ports.Parity with get, set" Usage="System.IO.Ports.SerialPort.Parity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Parity")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Parity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-400">获取或设置奇偶校验检查协议。</span><span class="sxs-lookup"><span data-stu-id="8e420-400">Gets or sets the parity-checking protocol.</span></span></summary>
        <value><span data-ttu-id="8e420-401">表示奇偶校验检查协议的枚举值之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-401">One of the enumeration values that represents the parity-checking protocol.</span></span> <span data-ttu-id="8e420-402">默认值为 <see cref="F:System.IO.Ports.Parity.None" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-402">The default is <see cref="F:System.IO.Ports.Parity.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-403">奇偶校验是一种错误检查过程，在此过程中，1的值必须始终是相同的，无论是在传输时不出错的每个位组。</span><span class="sxs-lookup"><span data-stu-id="8e420-403">Parity is an error-checking procedure in which the number of 1s must always be the same - either even or odd - for each group of bits that is transmitted without error.</span></span> <span data-ttu-id="8e420-404">在调制解调器到调制解调器的通信中，奇偶校验通常是在发送方和接收方必须同意才能进行传输的参数之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-404">In modem-to-modem communications, parity is often one of the parameters that must be agreed upon by sending parties and receiving parties before transmission can take place.</span></span>  
  
 <span data-ttu-id="8e420-405">如果流的尾随字节发生奇偶校验错误，则会将一个额外的字节添加到输入缓冲区，其值为126。</span><span class="sxs-lookup"><span data-stu-id="8e420-405">If a parity error occurs on the trailing byte of a stream, an extra byte will be added to the input buffer with a value of 126.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-406">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-406">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-407">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-407">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-408">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-408">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-409">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-409">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-410">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-410">-or-</span></span> 
<span data-ttu-id="8e420-411">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-411">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-412">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-412">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-413">传递的 <see cref="P:System.IO.Ports.SerialPort.Parity" /> 值不是 <see cref="T:System.IO.Ports.Parity" /> 枚举中的有效值。</span><span class="sxs-lookup"><span data-stu-id="8e420-413">The <see cref="P:System.IO.Ports.SerialPort.Parity" /> value passed is not a valid value in the <see cref="T:System.IO.Ports.Parity" /> enumeration.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParityReplace">
      <MemberSignature Language="C#" Value="public byte ParityReplace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ParityReplace" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ParityReplace" />
      <MemberSignature Language="VB.NET" Value="Public Property ParityReplace As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte ParityReplace { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.ParityReplace : byte with get, set" Usage="System.IO.Ports.SerialPort.ParityReplace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(63)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ParityReplace")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-414">获取或设置一个字节，该字节在发生奇偶校验错误时替换数据流中的无效字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-414">Gets or sets the byte that replaces invalid bytes in a data stream when a parity error occurs.</span></span></summary>
        <value><span data-ttu-id="8e420-415">替换无效字节的字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-415">A byte that replaces invalid bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-416">如果将该值设置为空字符，则将禁用奇偶校验替换。</span><span class="sxs-lookup"><span data-stu-id="8e420-416">If the value is set to the null character, parity replacement is disabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-417">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-417">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-418">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-418">-or-</span></span> 
<span data-ttu-id="8e420-419">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-419">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-420">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-420">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PinChanged">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialPinChangedEventHandler PinChanged" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.PinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PinChanged As SerialPinChangedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialPinChangedEventHandler ^ PinChanged;" />
      <MemberSignature Language="F#" Value="member this.PinChanged : System.IO.Ports.SerialPinChangedEventHandler " Usage="member this.PinChanged : System.IO.Ports.SerialPinChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PinChanged As SerialPinChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialPinChanged")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPinChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-421">指示由 <see cref="T:System.IO.Ports.SerialPort" /> 对象表示的端口上发生了非数据信号事件。</span><span class="sxs-lookup"><span data-stu-id="8e420-421">Indicates that a non-data signal event has occurred on the port represented by the <see cref="T:System.IO.Ports.SerialPort" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-422">串行 pin 更改事件可能由 <xref:System.IO.Ports.SerialPinChange> 枚举中的任何项导致。</span><span class="sxs-lookup"><span data-stu-id="8e420-422">Serial pin changed events can be caused by any of the items in the <xref:System.IO.Ports.SerialPinChange> enumeration.</span></span> <span data-ttu-id="8e420-423">由于操作系统确定是否引发此事件，因此不会报告所有奇偶校验错误。</span><span class="sxs-lookup"><span data-stu-id="8e420-423">Because the operating system determines whether to raise this event or not, not all parity errors may be reported.</span></span> <span data-ttu-id="8e420-424">作为事件的一部分，将设置 pin 的新值。</span><span class="sxs-lookup"><span data-stu-id="8e420-424">As part of the event, the new value of the pin is set.</span></span>  
  
 <span data-ttu-id="8e420-425">当 <xref:System.IO.Ports.SerialPort> 对象进入 <xref:System.IO.Ports.SerialPort.BreakState%2A>时，将引发 <xref:System.IO.Ports.SerialPort.PinChanged> 事件，但当端口退出 <xref:System.IO.Ports.SerialPort.BreakState%2A>时，将引发该事件。</span><span class="sxs-lookup"><span data-stu-id="8e420-425">The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised when a <xref:System.IO.Ports.SerialPort> object enters the <xref:System.IO.Ports.SerialPort.BreakState%2A>, but not when the port exits the <xref:System.IO.Ports.SerialPort.BreakState%2A>.</span></span> <span data-ttu-id="8e420-426">此行为不适用于 <xref:System.IO.Ports.SerialPinChange> 枚举中的其他值。</span><span class="sxs-lookup"><span data-stu-id="8e420-426">This behavior does not apply to other values in the <xref:System.IO.Ports.SerialPinChange> enumeration.</span></span>  
  
 <span data-ttu-id="8e420-427"><xref:System.IO.Ports.SerialPort.PinChanged>、<xref:System.IO.Ports.SerialPort.DataReceived>和 <xref:System.IO.Ports.SerialPort.ErrorReceived> 事件可能按顺序调用，并且基础流报告错误和执行事件处理程序之间可能会有轻微的延迟。</span><span class="sxs-lookup"><span data-stu-id="8e420-427"><xref:System.IO.Ports.SerialPort.PinChanged>, <xref:System.IO.Ports.SerialPort.DataReceived>, and <xref:System.IO.Ports.SerialPort.ErrorReceived> events may be called out of order, and there may be a slight delay between when the underlying stream reports the error and when the event handler is executed.</span></span> <span data-ttu-id="8e420-428">一次只能执行一个事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="8e420-428">Only one event handler can execute at a time.</span></span>  
  
 <span data-ttu-id="8e420-429">在辅助线程上引发 <xref:System.IO.Ports.SerialPort.PinChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="8e420-429">The <xref:System.IO.Ports.SerialPort.PinChanged> event is raised on a secondary thread.</span></span> <span data-ttu-id="8e420-430">由于此事件是在辅助线程上引发的，而不是在主线程上引发的，因此尝试修改主线程中的某些元素（如 UI 元素）可能会引发线程异常。</span><span class="sxs-lookup"><span data-stu-id="8e420-430">Because this event is raised on a secondary thread, and not the main thread, attempting to modify some elements in the main thread, such as UI elements, could raise a threading exception.</span></span> <span data-ttu-id="8e420-431">如果需要修改主 <xref:System.Windows.Forms.Form> 或 <xref:System.Windows.Forms.Control>中的元素，请使用 <xref:System.Windows.Forms.Control.Invoke%2A>返回回发请求，这会在适当的线程上执行此操作。</span><span class="sxs-lookup"><span data-stu-id="8e420-431">If it is necessary to modify elements in the main <xref:System.Windows.Forms.Form> or <xref:System.Windows.Forms.Control>, post change requests back using <xref:System.Windows.Forms.Control.Invoke%2A>, which will do the work on the proper thread.</span></span>  
  
 <span data-ttu-id="8e420-432">有关处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="8e420-432">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortName">
      <MemberSignature Language="C#" Value="public string PortName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PortName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.PortName" />
      <MemberSignature Language="VB.NET" Value="Public Property PortName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PortName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PortName : string with get, set" Usage="System.IO.Ports.SerialPort.PortName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("COM1")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PortName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-433">获取或设置通信端口，包括但不限于所有可用的 COM 端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-433">Gets or sets the port for communications, including but not limited to all available COM ports.</span></span></summary>
        <value><span data-ttu-id="8e420-434">通信端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-434">The communications port.</span></span> <span data-ttu-id="8e420-435">默认值为 COM1。</span><span class="sxs-lookup"><span data-stu-id="8e420-435">The default is COM1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-436">可以使用 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> 方法获取有效端口名称的列表。</span><span class="sxs-lookup"><span data-stu-id="8e420-436">A list of valid port names can be obtained using the <xref:System.IO.Ports.SerialPort.GetPortNames%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-437">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-437">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-438">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-438">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-439">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-439">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-440"><see cref="P:System.IO.Ports.SerialPort.PortName" /> 属性已设置为长度为零的值。</span><span class="sxs-lookup"><span data-stu-id="8e420-440">The <see cref="P:System.IO.Ports.SerialPort.PortName" /> property was set to a value with a length of zero.</span></span>  
  
<span data-ttu-id="8e420-441">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-441">-or-</span></span> 
<span data-ttu-id="8e420-442"><see cref="P:System.IO.Ports.SerialPort.PortName" /> 属性已设置为以“\\\\”开头的值。</span><span class="sxs-lookup"><span data-stu-id="8e420-442">The <see cref="P:System.IO.Ports.SerialPort.PortName" /> property was set to a value that starts with "\\\\".</span></span>  
  
<span data-ttu-id="8e420-443">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-443">-or-</span></span> 
<span data-ttu-id="8e420-444">端口名称无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-444">The port name was not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-445"><see cref="P:System.IO.Ports.SerialPort.PortName" /> 属性已设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-445">The <see cref="P:System.IO.Ports.SerialPort.PortName" /> property was set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-446">指定的端口已打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-446">The specified port is open.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e420-447">从 <see cref="T:System.IO.Ports.SerialPort" /> 输入缓冲区中读取。</span><span class="sxs-lookup"><span data-stu-id="8e420-447">Reads from the <see cref="T:System.IO.Ports.SerialPort" /> input buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Read : byte[] * int * int -&gt; int" Usage="serialPort.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e420-448">将输入写入到其中的字节数组。</span><span class="sxs-lookup"><span data-stu-id="8e420-448">The byte array to write the input to.</span></span></param>
        <param name="offset"><span data-ttu-id="8e420-449">要写入字节的 <paramref name="buffer" /> 中的偏移量。</span><span class="sxs-lookup"><span data-stu-id="8e420-449">The offset in <paramref name="buffer" /> at which to write the bytes.</span></span></param>
        <param name="count"><span data-ttu-id="8e420-450">要读取的最大字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-450">The maximum number of bytes to read.</span></span> <span data-ttu-id="8e420-451">如果 <paramref name="count" /> 大于输入缓冲区中的字节数，则读取较少的字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-451">Fewer bytes are read if <paramref name="count" /> is greater than the number of bytes in the input buffer.</span></span></param>
        <summary><span data-ttu-id="8e420-452">从 <see cref="T:System.IO.Ports.SerialPort" /> 输入缓冲区读取一些字节并将那些字节写入字节数组中指定的偏移量处。</span><span class="sxs-lookup"><span data-stu-id="8e420-452">Reads a number of bytes from the <see cref="T:System.IO.Ports.SerialPort" /> input buffer and writes those bytes into a byte array at the specified offset.</span></span></summary>
        <returns><span data-ttu-id="8e420-453">已读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-453">The number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-454">如果需要在读取文本和从流中读取二进制数据之间进行切换，请选择一个协议，用于仔细定义文本和二进制数据之间的边界，如手动读取字节并对数据进行解码。</span><span class="sxs-lookup"><span data-stu-id="8e420-454">If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</span></span>  
  
 <span data-ttu-id="8e420-455">由于 <xref:System.IO.Ports.SerialPort> 类会缓冲数据，并且 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流不会，这两个可能与可读取的字节数有关。</span><span class="sxs-lookup"><span data-stu-id="8e420-455">Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.</span></span>  <span data-ttu-id="8e420-456"><xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性可以指示存在要读取的字节，但 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流可能无法访问这些字节，因为这些字节已缓冲到 <xref:System.IO.Ports.SerialPort> 类中。</span><span class="sxs-lookup"><span data-stu-id="8e420-456">The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 <span data-ttu-id="8e420-457">读取的字节数 `count` 等于时，<xref:System.IO.Ports.SerialPort.Read%2A> 方法不会阻止其他操作，但串行端口仍有可用的未读字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-457">The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-458">传递的 buffer 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-458">The buffer passed is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-459">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-459">The specified port is not open.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-460"><paramref name="offset" /> 或 <paramref name="count" /> 参数超出了所传递的 <paramref name="buffer" /> 的有效区域。</span><span class="sxs-lookup"><span data-stu-id="8e420-460">The <paramref name="offset" /> or <paramref name="count" /> parameters are outside a valid region of the <paramref name="buffer" /> being passed.</span></span> <span data-ttu-id="8e420-461"><paramref name="offset" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-461">Either <paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-462"><paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="8e420-462"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="8e420-463">没有可以读取的字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-463">No bytes were available to read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Char(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Read : char[] * int * int -&gt; int" Usage="serialPort.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e420-464">将输入写入到其中的字符数组。</span><span class="sxs-lookup"><span data-stu-id="8e420-464">The character array to write the input to.</span></span></param>
        <param name="offset"><span data-ttu-id="8e420-465">要写入字符的 <paramref name="buffer" /> 中的偏移量。</span><span class="sxs-lookup"><span data-stu-id="8e420-465">The offset in <paramref name="buffer" /> at which to write the characters.</span></span></param>
        <param name="count"><span data-ttu-id="8e420-466">要读取的最大字符数。</span><span class="sxs-lookup"><span data-stu-id="8e420-466">The maximum number of characters to read.</span></span> <span data-ttu-id="8e420-467">如果 <paramref name="count" /> 大于输入缓冲区中的字符数，则读取较少的字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-467">Fewer characters are read if <paramref name="count" /> is greater than the number of characters in the input buffer.</span></span></param>
        <summary><span data-ttu-id="8e420-468">从 <see cref="T:System.IO.Ports.SerialPort" /> 输入缓冲区中读取一些字符，然后将这些字符写入字符数组中指定的偏移量处。</span><span class="sxs-lookup"><span data-stu-id="8e420-468">Reads a number of characters from the <see cref="T:System.IO.Ports.SerialPort" /> input buffer and writes them into an array of characters at a given offset.</span></span></summary>
        <returns><span data-ttu-id="8e420-469">读取的字符数。</span><span class="sxs-lookup"><span data-stu-id="8e420-469">The number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-470">使用此方法从串行端口读取字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-470">Use this method for reading characters from the serial port.</span></span>  
  
 <span data-ttu-id="8e420-471">如果需要在读取文本和从流中读取二进制数据之间进行切换，请选择一个协议，用于仔细定义文本和二进制数据之间的边界，如手动读取字节并对数据进行解码。</span><span class="sxs-lookup"><span data-stu-id="8e420-471">If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</span></span>  
  
 <span data-ttu-id="8e420-472">由于 <xref:System.IO.Ports.SerialPort> 类会缓冲数据，并且 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流不会，这两个可能与可读取的字符数有关。</span><span class="sxs-lookup"><span data-stu-id="8e420-472">Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many characters are available to read.</span></span>  <span data-ttu-id="8e420-473"><xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性可以指示存在要读取的字符，但对于 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流，这些字符可能无法访问，因为它们已经缓冲到 <xref:System.IO.Ports.SerialPort> 类中。</span><span class="sxs-lookup"><span data-stu-id="8e420-473">The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are characters to read, but these characters might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 <span data-ttu-id="8e420-474">读取的字节数 `count` 等于时，<xref:System.IO.Ports.SerialPort.Read%2A> 方法不会阻止其他操作，但串行端口仍有可用的未读字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-474">The <xref:System.IO.Ports.SerialPort.Read%2A> method does not block other operations when the number of bytes read equals `count` but there are still unread bytes available on the serial port.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-475"><paramref name="offset" /> 加上 <paramref name="count" /> 大于缓冲区的长度。</span><span class="sxs-lookup"><span data-stu-id="8e420-475"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of the buffer.</span></span>  
  
<span data-ttu-id="8e420-476">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-476">-or-</span></span> 
 <span data-ttu-id="8e420-477"><paramref name="count" /> 为 1 并且缓冲区中有一个代理项字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-477"><paramref name="count" /> is 1 and there is a surrogate character in the buffer.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-478">传递的 <paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-478">The <paramref name="buffer" /> passed is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-479"><paramref name="offset" /> 或 <paramref name="count" /> 参数超出了所传递的 <paramref name="buffer" /> 的有效区域。</span><span class="sxs-lookup"><span data-stu-id="8e420-479">The <paramref name="offset" /> or <paramref name="count" /> parameters are outside a valid region of the <paramref name="buffer" /> being passed.</span></span> <span data-ttu-id="8e420-480"><paramref name="offset" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-480">Either <paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-481">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-481">The specified port is not open.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="8e420-482">没有可以读取的字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-482">No characters were available to read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBufferSize">
      <MemberSignature Language="C#" Value="public int ReadBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadBufferSize : int with get, set" Usage="System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(4096)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReadBufferSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-483">获取或设置 <see cref="T:System.IO.Ports.SerialPort" /> 输入缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="8e420-483">Gets or sets the size of the <see cref="T:System.IO.Ports.SerialPort" /> input buffer.</span></span></summary>
        <value><span data-ttu-id="8e420-484">缓冲区大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="8e420-484">The buffer size, in bytes.</span></span> <span data-ttu-id="8e420-485">默认值为 4096；最大值为正整数，即 2147483647。</span><span class="sxs-lookup"><span data-stu-id="8e420-485">The default value is 4096; the maximum value is that of a positive int, or 2147483647.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-486"><xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> 属性将忽略小于4096的任何值。</span><span class="sxs-lookup"><span data-stu-id="8e420-486">The <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property ignores any value smaller than 4096.</span></span>  
  
 <span data-ttu-id="8e420-487">由于 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> 属性仅表示 Windows 所创建的缓冲区，因此它可以返回比 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性更小的值，该属性表示 <xref:System.IO.Ports.SerialPort> 缓冲区和 Windows 创建的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8e420-487">Because the <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> property represents only the Windows-created buffer, it can return a smaller value than the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property, which represents both the <xref:System.IO.Ports.SerialPort> buffer and the Windows-created buffer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-488">设置的 <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> 值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-488">The <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> value set is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-489">打开流时设置 <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="8e420-489">The <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> property was set while the stream was open.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-490"><see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> 属性已设置为一个奇整数值。</span><span class="sxs-lookup"><span data-stu-id="8e420-490">The <see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> property was set to an odd integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadByte();" />
      <MemberSignature Language="F#" Value="member this.ReadByte : unit -&gt; int" Usage="serialPort.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-491">从 <see cref="T:System.IO.Ports.SerialPort" /> 输入缓冲区中同步读取一个字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-491">Synchronously reads one byte from the <see cref="T:System.IO.Ports.SerialPort" /> input buffer.</span></span></summary>
        <returns><span data-ttu-id="8e420-492">强制转换为 <see cref="T:System.Int32" /> 的字节；或者，如果已读取到流的末尾，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="8e420-492">The byte, cast to an <see cref="T:System.Int32" />, or -1 if the end of the stream has been read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-493">此方法读取一个字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-493">This method reads one byte.</span></span>  
  
 <span data-ttu-id="8e420-494">同时使用 <xref:System.IO.Ports.SerialPort.ReadByte%2A> 和 <xref:System.IO.Ports.SerialPort.ReadChar%2A> 时要格外小心。</span><span class="sxs-lookup"><span data-stu-id="8e420-494">Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together.</span></span> <span data-ttu-id="8e420-495">在读取字节和读取字符之间切换可能会导致读取额外的数据和/或其他意外行为。</span><span class="sxs-lookup"><span data-stu-id="8e420-495">Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior.</span></span> <span data-ttu-id="8e420-496">如果需要在读取文本和从流中读取二进制数据之间进行切换，请选择一个协议，用于仔细定义文本和二进制数据之间的边界，如手动读取字节并对数据进行解码。</span><span class="sxs-lookup"><span data-stu-id="8e420-496">If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e420-497">由于 <xref:System.IO.Ports.SerialPort> 类会缓冲数据，并且 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流不会，这两个可能与可读取的字节数有关。</span><span class="sxs-lookup"><span data-stu-id="8e420-497">Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.</span></span>  <span data-ttu-id="8e420-498"><xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性可以指示存在要读取的字节，但 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流可能无法访问这些字节，因为这些字节已缓冲到 <xref:System.IO.Ports.SerialPort> 类中。</span><span class="sxs-lookup"><span data-stu-id="8e420-498">The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-499">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-499">The specified port is not open.</span></span></exception>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="8e420-500">该操作未在超时时间到期之前完成。</span><span class="sxs-lookup"><span data-stu-id="8e420-500">The operation did not complete before the time-out period ended.</span></span>  
  
<span data-ttu-id="8e420-501">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-501">-or-</span></span>
  
 <span data-ttu-id="8e420-502">未读取任何字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-502">No byte was read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public int ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChar();" />
      <MemberSignature Language="F#" Value="member this.ReadChar : unit -&gt; int" Usage="serialPort.ReadChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-503">从 <see cref="T:System.IO.Ports.SerialPort" /> 输入缓冲区中同步读取一个字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-503">Synchronously reads one character from the <see cref="T:System.IO.Ports.SerialPort" /> input buffer.</span></span></summary>
        <returns><span data-ttu-id="8e420-504">读取的字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-504">The character that was read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-505">此方法基于编码读取一个完整字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-505">This method reads one complete character based on the encoding.</span></span>  
  
 <span data-ttu-id="8e420-506">同时使用 <xref:System.IO.Ports.SerialPort.ReadByte%2A> 和 <xref:System.IO.Ports.SerialPort.ReadChar%2A> 时要格外小心。</span><span class="sxs-lookup"><span data-stu-id="8e420-506">Use caution when using <xref:System.IO.Ports.SerialPort.ReadByte%2A> and <xref:System.IO.Ports.SerialPort.ReadChar%2A> together.</span></span> <span data-ttu-id="8e420-507">在读取字节和读取字符之间切换可能会导致读取额外的数据和/或其他意外行为。</span><span class="sxs-lookup"><span data-stu-id="8e420-507">Switching between reading bytes and reading characters can cause extra data to be read and/or other unintended behavior.</span></span> <span data-ttu-id="8e420-508">如果需要在读取文本和从流中读取二进制数据之间进行切换，请选择一个协议，用于仔细定义文本和二进制数据之间的边界，如手动读取字节并对数据进行解码。</span><span class="sxs-lookup"><span data-stu-id="8e420-508">If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e420-509">由于 <xref:System.IO.Ports.SerialPort> 类会缓冲数据，并且 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流不会，这两个可能与可读取的字节数有关。</span><span class="sxs-lookup"><span data-stu-id="8e420-509">Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.</span></span>  <span data-ttu-id="8e420-510"><xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性可以指示存在要读取的字节，但 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流可能无法访问这些字节，因为这些字节已缓冲到 <xref:System.IO.Ports.SerialPort> 类中。</span><span class="sxs-lookup"><span data-stu-id="8e420-510">The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-511">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-511">The specified port is not open.</span></span></exception>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="8e420-512">该操作未在超时时间到期之前完成。</span><span class="sxs-lookup"><span data-stu-id="8e420-512">The operation did not complete before the time-out period ended.</span></span>  
  
<span data-ttu-id="8e420-513">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-513">-or-</span></span>
  
 <span data-ttu-id="8e420-514">在分配的超时时间内没有可用的字符。</span><span class="sxs-lookup"><span data-stu-id="8e420-514">No character was available in the allotted time-out period.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadExisting">
      <MemberSignature Language="C#" Value="public string ReadExisting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadExisting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadExisting" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadExisting () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadExisting();" />
      <MemberSignature Language="F#" Value="member this.ReadExisting : unit -&gt; string" Usage="serialPort.ReadExisting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-515">在编码的基础上，读取 <see cref="T:System.IO.Ports.SerialPort" /> 对象的流和输入缓冲区中所有立即可用的字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-515">Reads all immediately available bytes, based on the encoding, in both the stream and the input buffer of the <see cref="T:System.IO.Ports.SerialPort" /> object.</span></span></summary>
        <returns><span data-ttu-id="8e420-516"><see cref="T:System.IO.Ports.SerialPort" /> 对象的流和输入缓冲区的内容。</span><span class="sxs-lookup"><span data-stu-id="8e420-516">The contents of the stream and the input buffer of the <see cref="T:System.IO.Ports.SerialPort" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-517">此方法将流和 <xref:System.IO.Ports.SerialPort> 对象的内部缓冲区的内容作为字符串返回。</span><span class="sxs-lookup"><span data-stu-id="8e420-517">This method returns the contents of the stream and internal buffer of the <xref:System.IO.Ports.SerialPort> object as a string.</span></span> <span data-ttu-id="8e420-518">此方法不使用超时。请注意，此方法可以在内部缓冲区中保留尾随前导字节，这会使 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> 值大于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-518">This method does not use a time-out. Note that this method can leave trailing lead bytes in the internal buffer, which makes the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> value greater than zero.</span></span>  
  
 <span data-ttu-id="8e420-519">如果需要在读取文本和从流中读取二进制数据之间进行切换，请选择一个协议，用于仔细定义文本和二进制数据之间的边界，如手动读取字节并对数据进行解码。</span><span class="sxs-lookup"><span data-stu-id="8e420-519">If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e420-520"><xref:System.IO.Ports.SerialPort> 类会缓冲数据，但 <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType> 属性中包含的流对象不会缓冲数据。</span><span class="sxs-lookup"><span data-stu-id="8e420-520">The <xref:System.IO.Ports.SerialPort> class buffers data, but the stream object contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType> property does not.</span></span> <span data-ttu-id="8e420-521">因此，<xref:System.IO.Ports.SerialPort> 对象和流对象可能不同于可读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-521">Therefore, the <xref:System.IO.Ports.SerialPort> object and the stream object might differ on the number of bytes that are available to read.</span></span> <span data-ttu-id="8e420-522">将字节缓冲到 <xref:System.IO.Ports.SerialPort> 对象时，<xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性在其值中包括这些字节;但 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流可能无法访问这些字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-522">When bytes are buffered to the <xref:System.IO.Ports.SerialPort> object, the <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property includes these bytes in its value; however, these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-523">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-523">The specified port is not open.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="member this.ReadLine : unit -&gt; string" Usage="serialPort.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8e420-524">一直读取到输入缓冲区中的 <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 值。</span><span class="sxs-lookup"><span data-stu-id="8e420-524">Reads up to the <see cref="P:System.IO.Ports.SerialPort.NewLine" /> value in the input buffer.</span></span></summary>
        <returns><span data-ttu-id="8e420-525">输入缓冲区中直到首次出现 <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 值的内容。</span><span class="sxs-lookup"><span data-stu-id="8e420-525">The contents of the input buffer up to the first occurrence of a <see cref="P:System.IO.Ports.SerialPort.NewLine" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-526">请注意，尽管此方法不会返回 <xref:System.IO.Ports.SerialPort.NewLine%2A> 值，但 <xref:System.IO.Ports.SerialPort.NewLine%2A> 值将从输入缓冲区中删除。</span><span class="sxs-lookup"><span data-stu-id="8e420-526">Note that while this method does not return the <xref:System.IO.Ports.SerialPort.NewLine%2A> value, the <xref:System.IO.Ports.SerialPort.NewLine%2A> value is removed from the input buffer.</span></span>  
  
 <span data-ttu-id="8e420-527">默认情况下，<xref:System.IO.Ports.SerialPort.ReadLine%2A> 方法将被阻止，直到收到一行。</span><span class="sxs-lookup"><span data-stu-id="8e420-527">By default, the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method will block until a line is received.</span></span> <span data-ttu-id="8e420-528">如果不需要此行为，请将 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> 属性设置为任何非零值，以强制 <xref:System.IO.Ports.SerialPort.ReadLine%2A> 方法在端口上没有可用行时引发 <xref:System.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="8e420-528">If this behavior is undesirable, set the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property to any non-zero value to force the <xref:System.IO.Ports.SerialPort.ReadLine%2A> method to throw a <xref:System.TimeoutException> if a line is not available on the port.</span></span>  
  
 <span data-ttu-id="8e420-529">如果需要在读取文本和从流中读取二进制数据之间进行切换，请选择一个协议，用于仔细定义文本和二进制数据之间的边界，如手动读取字节并对数据进行解码。</span><span class="sxs-lookup"><span data-stu-id="8e420-529">If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e420-530">由于 <xref:System.IO.Ports.SerialPort> 类会缓冲数据，并且 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流不会，这两个可能与可读取的字节数有关。</span><span class="sxs-lookup"><span data-stu-id="8e420-530">Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.</span></span>  <span data-ttu-id="8e420-531"><xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性可以指示存在要读取的字节，但 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流可能无法访问这些字节，因为这些字节已缓冲到 <xref:System.IO.Ports.SerialPort> 类中。</span><span class="sxs-lookup"><span data-stu-id="8e420-531">The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-532">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-532">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-533">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-533">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-534">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-534">The specified port is not open.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="8e420-535">该操作未在超时时间到期之前完成。</span><span class="sxs-lookup"><span data-stu-id="8e420-535">The operation did not complete before the time-out period ended.</span></span>  
  
<span data-ttu-id="8e420-536">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-536">-or-</span></span>
  
 <span data-ttu-id="8e420-537">未读取任何字节。</span><span class="sxs-lookup"><span data-stu-id="8e420-537">No bytes were read.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReadTimeout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-538">获取或设置读取操作未完成时发生超时之前的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="8e420-538">Gets or sets the number of milliseconds before a time-out occurs when a read operation does not finish.</span></span></summary>
        <value><span data-ttu-id="8e420-539">操作未完成时发生超时之前的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="8e420-539">The number of milliseconds before a time-out occurs when a read operation does not finish.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-540">在 Win32 通信 API 中，读取超时值最初设置为500毫秒。</span><span class="sxs-lookup"><span data-stu-id="8e420-540">The read time-out value was originally set at 500 milliseconds in the Win32 Communications API.</span></span> <span data-ttu-id="8e420-541">此属性允许您设置此值。</span><span class="sxs-lookup"><span data-stu-id="8e420-541">This property allows you to set this value.</span></span> <span data-ttu-id="8e420-542">超时值可以设置为大于零的任何值，或设置为 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>，在这种情况下不会发生超时。</span><span class="sxs-lookup"><span data-stu-id="8e420-542">The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs.</span></span> <span data-ttu-id="8e420-543">默认为 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="8e420-543"><xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e420-544">非托管 `COMMTIMEOUTS` 结构的用户可能需要将超时值设置为零，以取消超时。</span><span class="sxs-lookup"><span data-stu-id="8e420-544">Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs.</span></span> <span data-ttu-id="8e420-545">但是，若要取消带有 <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> 属性的超时，则必须指定 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="8e420-545">To suppress time-outs with the <xref:System.IO.Ports.SerialPort.ReadTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="8e420-546">此属性不会影响由 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性返回的流的 <xref:System.IO.Stream.BeginRead%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8e420-546">This property does not affect the <xref:System.IO.Stream.BeginRead%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-547">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-547">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-548">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-548">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-549">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-549">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-550">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-550">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-551">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-551">-or-</span></span> 
<span data-ttu-id="8e420-552">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-552">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-553">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-553">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-554">读取超时值小于零，且不等于 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-554">The read time-out value is less than zero and not equal to <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public string ReadTo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadTo(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTo (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadTo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.ReadTo : string -&gt; string" Usage="serialPort.ReadTo value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8e420-555">指示读取操作停止位置的值。</span><span class="sxs-lookup"><span data-stu-id="8e420-555">A value that indicates where the read operation stops.</span></span></param>
        <summary><span data-ttu-id="8e420-556">一直读取到输入缓冲区中的指定 <paramref name="value" /> 的字符串。</span><span class="sxs-lookup"><span data-stu-id="8e420-556">Reads a string up to the specified <paramref name="value" /> in the input buffer.</span></span></summary>
        <returns><span data-ttu-id="8e420-557">输入缓冲区中直到指定 <paramref name="value" /> 的内容。</span><span class="sxs-lookup"><span data-stu-id="8e420-557">The contents of the input buffer up to the specified <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-558">此方法将读取指定 `value`的字符串。</span><span class="sxs-lookup"><span data-stu-id="8e420-558">This method reads a string up to the specified `value`.</span></span> <span data-ttu-id="8e420-559">如果返回的字符串不包含 `value`，则将从输入缓冲区中删除 `value`。</span><span class="sxs-lookup"><span data-stu-id="8e420-559">While the returned string does not include the `value`, the `value` is removed from the input buffer.</span></span>  
  
 <span data-ttu-id="8e420-560">如果需要在读取文本和从流中读取二进制数据之间进行切换，请选择一个协议，用于仔细定义文本和二进制数据之间的边界，如手动读取字节并对数据进行解码。</span><span class="sxs-lookup"><span data-stu-id="8e420-560">If it is necessary to switch between reading text and reading binary data from the stream, select a protocol that carefully defines the boundary between text and binary data, such as manually reading bytes and decoding the data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e420-561">由于 <xref:System.IO.Ports.SerialPort> 类会缓冲数据，并且 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流不会，这两个可能与可读取的字节数有关。</span><span class="sxs-lookup"><span data-stu-id="8e420-561">Because the <xref:System.IO.Ports.SerialPort> class buffers data, and the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property does not, the two might conflict about how many bytes are available to read.</span></span>  <span data-ttu-id="8e420-562"><xref:System.IO.Ports.SerialPort.BytesToRead%2A> 属性可以指示存在要读取的字节，但 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性中包含的流可能无法访问这些字节，因为这些字节已缓冲到 <xref:System.IO.Ports.SerialPort> 类中。</span><span class="sxs-lookup"><span data-stu-id="8e420-562">The <xref:System.IO.Ports.SerialPort.BytesToRead%2A> property can indicate that there are bytes to read, but these bytes might not be accessible to the stream contained in the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property because they have been buffered to the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-563"><paramref name="value" /> 参数的长度为 0。</span><span class="sxs-lookup"><span data-stu-id="8e420-563">The length of the <paramref name="value" /> parameter is 0.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-564"><paramref name="value" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-564">The <paramref name="value" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-565">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-565">The specified port is not open.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="8e420-566">该操作未在超时时间到期之前完成。</span><span class="sxs-lookup"><span data-stu-id="8e420-566">The operation did not complete before the time-out period ended.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceivedBytesThreshold">
      <MemberSignature Language="C#" Value="public int ReceivedBytesThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceivedBytesThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceivedBytesThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceivedBytesThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceivedBytesThreshold : int with get, set" Usage="System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReceivedBytesThreshold")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-567">获取或设置 <see cref="E:System.IO.Ports.SerialPort.DataReceived" /> 事件发生前内部输入缓冲区中的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-567">Gets or sets the number of bytes in the internal input buffer before a <see cref="E:System.IO.Ports.SerialPort.DataReceived" /> event occurs.</span></span></summary>
        <value><span data-ttu-id="8e420-568"><see cref="E:System.IO.Ports.SerialPort.DataReceived" /> 事件触发前内部输入缓冲区中的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-568">The number of bytes in the internal input buffer before a <see cref="E:System.IO.Ports.SerialPort.DataReceived" /> event is fired.</span></span> <span data-ttu-id="8e420-569">默认值为 1。</span><span class="sxs-lookup"><span data-stu-id="8e420-569">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-570">如果接收到 <xref:System.IO.Ports.SerialData.Eof> 字符，则会引发 <xref:System.IO.Ports.SerialPort.DataReceived> 事件，而不考虑内部输入缓冲区中的字节数和 <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="8e420-570">The <xref:System.IO.Ports.SerialPort.DataReceived> event is also raised if an <xref:System.IO.Ports.SerialData.Eof> character is received, regardless of the number of bytes in the internal input buffer and the value of the <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-571"><see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /> 值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-571">The <see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /> value is less than or equal to zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RtsEnable">
      <MemberSignature Language="C#" Value="public bool RtsEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RtsEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.RtsEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property RtsEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RtsEnable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RtsEnable : bool with get, set" Usage="System.IO.Ports.SerialPort.RtsEnable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("RtsEnable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-572">获取或设置一个值，该值指示在串行通信中是否启用请求发送 (RTS) 信号。</span><span class="sxs-lookup"><span data-stu-id="8e420-572">Gets or sets a value indicating whether the Request to Send (RTS) signal is enabled during serial communication.</span></span></summary>
        <value><span data-ttu-id="8e420-573">如果为 <see langword="true" />，则启用请求发送 (RTS)；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-573"><see langword="true" /> to enable Request to Transmit (RTS); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8e420-574">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-574">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-575">传输（RTS）信号的请求通常用于请求发送/清除发送（RTS/CTS）硬件握手。</span><span class="sxs-lookup"><span data-stu-id="8e420-575">The Request to Transmit (RTS) signal is typically used in Request to Send/Clear to Send (RTS/CTS) hardware handshaking.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-576">在 <see cref="P:System.IO.Ports.SerialPort.RtsEnable" /> 属性设置为 <see cref="P:System.IO.Ports.SerialPort.Handshake" /> 值或 <see cref="F:System.IO.Ports.Handshake.RequestToSend" /> 值时设置或检索 <see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="8e420-576">The value of the <see cref="P:System.IO.Ports.SerialPort.RtsEnable" /> property was set or retrieved while the <see cref="P:System.IO.Ports.SerialPort.Handshake" /> property is set to the <see cref="F:System.IO.Ports.Handshake.RequestToSend" /> value or the <see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" /> value.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-577">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-577">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-578">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-578">-or-</span></span> 
<span data-ttu-id="8e420-579">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-579">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-580">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-580">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StopBits">
      <MemberSignature Language="C#" Value="public System.IO.Ports.StopBits StopBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.StopBits StopBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.StopBits" />
      <MemberSignature Language="VB.NET" Value="Public Property StopBits As StopBits" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::StopBits StopBits { System::IO::Ports::StopBits get(); void set(System::IO::Ports::StopBits value); };" />
      <MemberSignature Language="F#" Value="member this.StopBits : System.IO.Ports.StopBits with get, set" Usage="System.IO.Ports.SerialPort.StopBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("StopBits")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.StopBits</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-581">获取或设置每个字节的标准停止位数。</span><span class="sxs-lookup"><span data-stu-id="8e420-581">Gets or sets the standard number of stopbits per byte.</span></span></summary>
        <value><span data-ttu-id="8e420-582"><see cref="T:System.IO.Ports.StopBits" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="8e420-582">One of the <see cref="T:System.IO.Ports.StopBits" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-583"><xref:System.IO.Ports.SerialPort.StopBits%2A> 的默认值为 <xref:System.IO.Ports.StopBits.One>。</span><span class="sxs-lookup"><span data-stu-id="8e420-583">The default value for <xref:System.IO.Ports.SerialPort.StopBits%2A> is <xref:System.IO.Ports.StopBits.One>.</span></span>  
  
 <span data-ttu-id="8e420-584">不支持 <xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType> 值。</span><span class="sxs-lookup"><span data-stu-id="8e420-584">The <xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType> value is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-585">下面的示例演示如何将 <xref:System.IO.Ports.SerialPort.StopBits%2A> 属性设置为 `One`。</span><span class="sxs-lookup"><span data-stu-id="8e420-585">The following example shows how to set the <xref:System.IO.Ports.SerialPort.StopBits%2A> property to `One`.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 <span data-ttu-id="8e420-586">下面的示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户从通过空调制解调器电缆连接的两台独立计算机聊天。</span><span class="sxs-lookup"><span data-stu-id="8e420-586">The following example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-587">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-587">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-588">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-588">This code example is part of a larger example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-589"><see cref="P:System.IO.Ports.SerialPort.StopBits" /> 值为<see cref="F:System.IO.Ports.StopBits.None" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-589">The <see cref="P:System.IO.Ports.SerialPort.StopBits" /> value is  <see cref="F:System.IO.Ports.StopBits.None" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-590">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-590">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-591">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-591">-or-</span></span> 
<span data-ttu-id="8e420-592">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-592">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-593">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-593">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8e420-594">将数据写入串行端口输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8e420-594">Writes data to the serial port output buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string text) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (text As String)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="serialPort.Write text" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void Write (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="serialPort.Write str" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="8e420-595">输出字符串。</span><span class="sxs-lookup"><span data-stu-id="8e420-595">The string for output.</span></span></param>
        <param name="str">To be added.</param>
        <summary><span data-ttu-id="8e420-596">将指定的字符串写入串行端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-596">Writes the specified string to the serial port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-597">如果要将字符串作为输出写入串行端口，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8e420-597">Use this method when you want to write a string as output to a serial port.</span></span>  
  
 <span data-ttu-id="8e420-598">如果输出缓冲区中的字节过多并且 <xref:System.IO.Ports.SerialPort.Handshake%2A> 设置为 <xref:System.IO.Ports.Handshake.XOnXOff>，则 <xref:System.IO.Ports.SerialPort> 对象在等待设备准备好接受更多数据时，可能会引发 <xref:System.ServiceProcess.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="8e420-598">If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.</span></span>  
  
 <span data-ttu-id="8e420-599">默认情况下，<xref:System.IO.Ports.SerialPort> 使用 <xref:System.Text.ASCIIEncoding> 对字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="8e420-599">By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters.</span></span> <span data-ttu-id="8e420-600"><xref:System.Text.ASCIIEncoding> 将大于127的所有字符编码为（char）63或 '？ '。</span><span class="sxs-lookup"><span data-stu-id="8e420-600"><xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'.</span></span> <span data-ttu-id="8e420-601">若要支持该范围中的其他字符，请将 <xref:System.IO.Ports.SerialPort.Encoding%2A> 设置为 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UTF32Encoding>或 <xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="8e420-601">To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-602">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-602">The specified port is not open.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-603"><paramref name="text" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-603"><paramref name="text" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="8e420-604">该操作未在超时时间到期之前完成。</span><span class="sxs-lookup"><span data-stu-id="8e420-604">The operation did not complete before the time-out period ended.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * int * int -&gt; unit" Usage="serialPort.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e420-605">包含要写入端口的数据的字节数组。</span><span class="sxs-lookup"><span data-stu-id="8e420-605">The byte array that contains the data to write to the port.</span></span></param>
        <param name="offset"><span data-ttu-id="8e420-606"><paramref name="buffer" /> 参数中从零开始的字节偏移量，从此处开始将字节复制到端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-606">The zero-based byte offset in the <paramref name="buffer" /> parameter at which to begin copying bytes to the port.</span></span></param>
        <param name="count"><span data-ttu-id="8e420-607">要写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="8e420-607">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="8e420-608">使用缓冲区中的数据将指定数量的字节写入串行端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-608">Writes a specified number of bytes to the serial port using data from a buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-609">如果要写入字节缓冲区以将输出创建到串行端口，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8e420-609">Use this method when you want to write to a byte buffer to create output to a serial port.</span></span>  
  
 <span data-ttu-id="8e420-610">如果输出缓冲区中的字节过多并且 <xref:System.IO.Ports.SerialPort.Handshake%2A> 设置为 <xref:System.IO.Ports.Handshake.XOnXOff>，则 <xref:System.IO.Ports.SerialPort> 对象在等待设备准备好接受更多数据时，可能会引发 <xref:System.ServiceProcess.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="8e420-610">If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.</span></span>  
  
 <span data-ttu-id="8e420-611">默认情况下，<xref:System.IO.Ports.SerialPort> 使用 <xref:System.Text.ASCIIEncoding> 对字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="8e420-611">By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters.</span></span> <span data-ttu-id="8e420-612"><xref:System.Text.ASCIIEncoding> 将大于127的所有字符编码为（char）63或 '？ '。</span><span class="sxs-lookup"><span data-stu-id="8e420-612"><xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'.</span></span> <span data-ttu-id="8e420-613">若要支持该范围中的其他字符，请将 <xref:System.IO.Ports.SerialPort.Encoding%2A> 设置为 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UTF32Encoding>或 <xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="8e420-613">To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-614">传递的 <paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-614">The <paramref name="buffer" /> passed is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-615">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-615">The specified port is not open.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-616"><paramref name="offset" /> 或 <paramref name="count" /> 参数超出了所传递的 <paramref name="buffer" /> 的有效区域。</span><span class="sxs-lookup"><span data-stu-id="8e420-616">The <paramref name="offset" /> or <paramref name="count" /> parameters are outside a valid region of the <paramref name="buffer" /> being passed.</span></span> <span data-ttu-id="8e420-617"><paramref name="offset" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-617">Either <paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-618"><paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="8e420-618"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="8e420-619">该操作未在超时时间到期之前完成。</span><span class="sxs-lookup"><span data-stu-id="8e420-619">The operation did not complete before the time-out period ended.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : char[] * int * int -&gt; unit" Usage="serialPort.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="8e420-620">包含要写入端口的数据的字符数组。</span><span class="sxs-lookup"><span data-stu-id="8e420-620">The character array that contains the data to write to the port.</span></span></param>
        <param name="offset"><span data-ttu-id="8e420-621"><paramref name="buffer" /> 参数中从零开始的字节偏移量，从此处开始将字节复制到端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-621">The zero-based byte offset in the <paramref name="buffer" /> parameter at which to begin copying bytes to the port.</span></span></param>
        <param name="count"><span data-ttu-id="8e420-622">要写入的字符数。</span><span class="sxs-lookup"><span data-stu-id="8e420-622">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="8e420-623">使用缓冲区中的数据将指定数量的字符写入串行端口。</span><span class="sxs-lookup"><span data-stu-id="8e420-623">Writes a specified number of characters to the serial port using data from a buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-624">如果要写入字符缓冲区以将输出创建到串行端口，请使用此方法。</span><span class="sxs-lookup"><span data-stu-id="8e420-624">Use this method when you want to write to a character buffer to create output to a serial port.</span></span>  
  
 <span data-ttu-id="8e420-625">如果输出缓冲区中的字节过多并且 <xref:System.IO.Ports.SerialPort.Handshake%2A> 设置为 <xref:System.IO.Ports.Handshake.XOnXOff>，则 <xref:System.IO.Ports.SerialPort> 对象在等待设备准备好接受更多数据时，可能会引发 <xref:System.ServiceProcess.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="8e420-625">If there are too many bytes in the output buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.</span></span>  
  
 <span data-ttu-id="8e420-626">默认情况下，<xref:System.IO.Ports.SerialPort> 使用 <xref:System.Text.ASCIIEncoding> 对字符进行编码。</span><span class="sxs-lookup"><span data-stu-id="8e420-626">By default, <xref:System.IO.Ports.SerialPort> uses <xref:System.Text.ASCIIEncoding> to encode the characters.</span></span> <span data-ttu-id="8e420-627"><xref:System.Text.ASCIIEncoding> 将大于127的所有字符编码为（char）63或 '？ '。</span><span class="sxs-lookup"><span data-stu-id="8e420-627"><xref:System.Text.ASCIIEncoding> encodes all characters greater than 127 as (char)63 or '?'.</span></span> <span data-ttu-id="8e420-628">若要支持该范围中的其他字符，请将 <xref:System.IO.Ports.SerialPort.Encoding%2A> 设置为 <xref:System.Text.UTF8Encoding>、<xref:System.Text.UTF32Encoding>或 <xref:System.Text.UnicodeEncoding>。</span><span class="sxs-lookup"><span data-stu-id="8e420-628">To support additional characters in that range, set <xref:System.IO.Ports.SerialPort.Encoding%2A> to <xref:System.Text.UTF8Encoding>, <xref:System.Text.UTF32Encoding>, or <xref:System.Text.UnicodeEncoding>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-629">传递的 <paramref name="buffer" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-629">The <paramref name="buffer" /> passed is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-630">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-630">The specified port is not open.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-631"><paramref name="offset" /> 或 <paramref name="count" /> 参数超出了所传递的 <paramref name="buffer" /> 的有效区域。</span><span class="sxs-lookup"><span data-stu-id="8e420-631">The <paramref name="offset" /> or <paramref name="count" /> parameters are outside a valid region of the <paramref name="buffer" /> being passed.</span></span> <span data-ttu-id="8e420-632"><paramref name="offset" /> 或 <paramref name="count" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-632">Either <paramref name="offset" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8e420-633"><paramref name="offset" /> 加上 <paramref name="count" /> 大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="8e420-633"><paramref name="offset" /> plus <paramref name="count" /> is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.ServiceProcess.TimeoutException"><span data-ttu-id="8e420-634">该操作未在超时时间到期之前完成。</span><span class="sxs-lookup"><span data-stu-id="8e420-634">The operation did not complete before the time-out period ended.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBufferSize">
      <MemberSignature Language="C#" Value="public int WriteBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteBufferSize : int with get, set" Usage="System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(2048)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("WriteBufferSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-635">获取或设置串行端口输出缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="8e420-635">Gets or sets the size of the serial port output buffer.</span></span></summary>
        <value><span data-ttu-id="8e420-636">输出缓冲区的大小。</span><span class="sxs-lookup"><span data-stu-id="8e420-636">The size of the output buffer.</span></span> <span data-ttu-id="8e420-637">默认值为 2048。</span><span class="sxs-lookup"><span data-stu-id="8e420-637">The default is 2048.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-638"><xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> 属性将忽略小于2048的任何值。</span><span class="sxs-lookup"><span data-stu-id="8e420-638">The <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> property ignores any value smaller than 2048.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-639"><see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> 值小于或等于零。</span><span class="sxs-lookup"><span data-stu-id="8e420-639">The <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> value is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-640">打开流时设置 <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="8e420-640">The <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> property was set while the stream was open.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-641"><see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> 属性已设置为一个奇整数值。</span><span class="sxs-lookup"><span data-stu-id="8e420-641">The <see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> property was set to an odd integer value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public void WriteLine (string text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string text) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (text As String)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.WriteLine : string -&gt; unit" Usage="serialPort.WriteLine text" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void WriteLine (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.WriteLine : string -&gt; unit" Usage="serialPort.WriteLine str" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="8e420-642">要写入输出缓冲区的字符串。</span><span class="sxs-lookup"><span data-stu-id="8e420-642">The string to write to the output buffer.</span></span></param>
        <param name="str">To be added.</param>
        <summary><span data-ttu-id="8e420-643">将指定的字符串和 <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 值写入输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="8e420-643">Writes the specified string and the <see cref="P:System.IO.Ports.SerialPort.NewLine" /> value to the output buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-644">如果输入缓冲区中的字节过多并且 <xref:System.IO.Ports.SerialPort.Handshake%2A> 设置为 <xref:System.IO.Ports.Handshake.XOnXOff>，则 <xref:System.IO.Ports.SerialPort> 对象在等待设备准备好接收更多数据时，可能会引发 <xref:System.ServiceProcess.TimeoutException>。</span><span class="sxs-lookup"><span data-stu-id="8e420-644">If there are too many bytes in the input buffer and <xref:System.IO.Ports.SerialPort.Handshake%2A> is set to <xref:System.IO.Ports.Handshake.XOnXOff> then the <xref:System.IO.Ports.SerialPort> object may raise a <xref:System.ServiceProcess.TimeoutException> while it waits for the device to be ready to accept more data.</span></span>  
  
 <span data-ttu-id="8e420-645">写入的输出包含 <xref:System.IO.Ports.SerialPort.NewLine%2A> 字符串。</span><span class="sxs-lookup"><span data-stu-id="8e420-645">The written output includes the <xref:System.IO.Ports.SerialPort.NewLine%2A> string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-646">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-646">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-647">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-647">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8e420-648"><paramref name="text" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-648">The <paramref name="text" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8e420-649">指定的端口未打开。</span><span class="sxs-lookup"><span data-stu-id="8e420-649">The specified port is not open.</span></span></exception>
        <exception cref="T:System.TimeoutException"><span data-ttu-id="8e420-650"><see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> 方法未能写入流。</span><span class="sxs-lookup"><span data-stu-id="8e420-650">The <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> method could not write to the stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("WriteTimeout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8e420-651">获取或设置写入操作未完成时发生超时之前的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="8e420-651">Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.</span></span></summary>
        <value><span data-ttu-id="8e420-652">发生超时之前的毫秒数。</span><span class="sxs-lookup"><span data-stu-id="8e420-652">The number of milliseconds before a time-out occurs.</span></span> <span data-ttu-id="8e420-653">默认值为 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-653">The default is <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8e420-654">在 Win32 通信 API 中，写超时值最初设置为500毫秒。</span><span class="sxs-lookup"><span data-stu-id="8e420-654">The write time-out value was originally set at 500 milliseconds in the Win32 Communications API.</span></span> <span data-ttu-id="8e420-655">此属性允许您设置此值。</span><span class="sxs-lookup"><span data-stu-id="8e420-655">This property allows you to set this value.</span></span> <span data-ttu-id="8e420-656">超时值可以设置为大于零的任何值，或设置为 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>，在这种情况下不会发生超时。</span><span class="sxs-lookup"><span data-stu-id="8e420-656">The time-out can be set to any value greater than zero, or set to <xref:System.IO.Ports.SerialPort.InfiniteTimeout>, in which case no time-out occurs.</span></span> <span data-ttu-id="8e420-657">默认为 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="8e420-657"><xref:System.IO.Ports.SerialPort.InfiniteTimeout> is the default.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8e420-658">非托管 `COMMTIMEOUTS` 结构的用户可能需要将超时值设置为零，以取消超时。</span><span class="sxs-lookup"><span data-stu-id="8e420-658">Users of the unmanaged `COMMTIMEOUTS` structure might expect to set the time-out value to zero to suppress time-outs.</span></span> <span data-ttu-id="8e420-659">但是，若要取消带有 <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> 属性的超时，则必须指定 <xref:System.IO.Ports.SerialPort.InfiniteTimeout>。</span><span class="sxs-lookup"><span data-stu-id="8e420-659">To suppress time-outs with the <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> property, however, you must specify <xref:System.IO.Ports.SerialPort.InfiniteTimeout>.</span></span>  
  
 <span data-ttu-id="8e420-660">此属性不会影响由 <xref:System.IO.Ports.SerialPort.BaseStream%2A> 属性返回的流的 <xref:System.IO.Stream.BeginWrite%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8e420-660">This property does not affect the <xref:System.IO.Stream.BeginWrite%2A> method of the stream returned by the <xref:System.IO.Ports.SerialPort.BaseStream%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8e420-661">下面的代码示例演示如何使用 <xref:System.IO.Ports.SerialPort> 类，以允许两个用户通过空调制解调器电缆连接两台不同的计算机。</span><span class="sxs-lookup"><span data-stu-id="8e420-661">The following code example demonstrates the use of the <xref:System.IO.Ports.SerialPort> class to allow two users to chat from two separate computers connected by a null modem cable.</span></span> <span data-ttu-id="8e420-662">在此示例中，系统会提示用户提供端口设置和在聊天前输入用户名。</span><span class="sxs-lookup"><span data-stu-id="8e420-662">In this example, the users are prompted for the port settings and a username before chatting.</span></span> <span data-ttu-id="8e420-663">此代码示例是为 <xref:System.IO.Ports.SerialPort> 类提供的更大代码示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="8e420-663">This code example is part of a larger code example provided for the <xref:System.IO.Ports.SerialPort> class.</span></span>  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="8e420-664">此端口处于无效状态。</span><span class="sxs-lookup"><span data-stu-id="8e420-664">The port is in an invalid state.</span></span>  
  
<span data-ttu-id="8e420-665">- 或 -</span><span class="sxs-lookup"><span data-stu-id="8e420-665">-or-</span></span> 
<span data-ttu-id="8e420-666">尝试设置基础端口状态失败。</span><span class="sxs-lookup"><span data-stu-id="8e420-666">An attempt to set the state of the underlying port failed.</span></span> <span data-ttu-id="8e420-667">例如，从此 <see cref="T:System.IO.Ports.SerialPort" /> 对象传递的参数无效。</span><span class="sxs-lookup"><span data-stu-id="8e420-667">For example, the parameters passed from this <see cref="T:System.IO.Ports.SerialPort" /> object were invalid.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8e420-668"><see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> 值小于零且不等于 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="8e420-668">The <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> value is less than zero and not equal to <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
