<Type Name="CodeDomDesignerLoader" FullName="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa8b34cbeba76097da341db991492c716432de0c" /><Meta Name="ms.sourcegitcommit" Value="7bf087b9509f080e7a73672bb84fa0bec74bf944" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="01/14/2020" /><Meta Name="ms.locfileid" Value="75939614" /></Metadata><TypeSignature Language="C#" Value="public abstract class CodeDomDesignerLoader : System.ComponentModel.Design.Serialization.BasicDesignerLoader, System.ComponentModel.Design.Serialization.IDesignerSerializationService, System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CodeDomDesignerLoader extends System.ComponentModel.Design.Serialization.BasicDesignerLoader implements class System.ComponentModel.Design.Serialization.IDesignerSerializationService, class System.ComponentModel.Design.Serialization.INameCreationService" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CodeDomDesignerLoader&#xA;Inherits BasicDesignerLoader&#xA;Implements IDesignerSerializationService, INameCreationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDomDesignerLoader abstract : System::ComponentModel::Design::Serialization::BasicDesignerLoader, System::ComponentModel::Design::Serialization::IDesignerSerializationService, System::ComponentModel::Design::Serialization::INameCreationService" />
  <TypeSignature Language="F#" Value="type CodeDomDesignerLoader = class&#xA;    inherit BasicDesignerLoader&#xA;    interface INameCreationService&#xA;    interface IDesignerSerializationService" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.Serialization.BasicDesignerLoader</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationService</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.INameCreationService</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7e775-101">提供用于实现基于 CodeDOM 的设计器加载程序的基类。</span><span class="sxs-lookup"><span data-stu-id="7e775-101">Provides the base class for implementing a CodeDOM-based designer loader.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-102"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 是一个抽象类，它提供基于代码文档对象模型（CodeDOM）的完整设计器加载程序。</span><span class="sxs-lookup"><span data-stu-id="7e775-102"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> is an abstract class that provides a full designer loader based on the Code Document Object Model (CodeDOM).</span></span> <span data-ttu-id="7e775-103">提供 CodeDOM 分析器和生成器以及类型解析服务。</span><span class="sxs-lookup"><span data-stu-id="7e775-103">You provide the CodeDOM parser and generator, and a type resolution service.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="7e775-104">用于完全访问系统资源。</span><span class="sxs-lookup"><span data-stu-id="7e775-104">for full access to system resources.</span></span> <span data-ttu-id="7e775-105">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />，<see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-105">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />, <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="7e775-106">关联状态：</span><span class="sxs-lookup"><span data-stu-id="7e775-106">Associated state:</span></span></permission>
    <altmember cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />
    <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
    <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
    <altmember cref="N:System.CodeDom" />
    <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7e775-107">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7e775-107">Dynamic Source Code Generation and Compilation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CodeDomDesignerLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CodeDomDesignerLoader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e775-108">初始化 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="7e775-108">Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeDomProvider">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeDomProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property CodeDomProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::CodeDom::Compiler::CodeDomProvider ^ CodeDomProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeDomProvider : System.CodeDom.Compiler.CodeDomProvider" Usage="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e775-109">获取此设计器加载程序将使用的 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-109">Gets the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use.</span></span></summary>
        <value><span data-ttu-id="7e775-110">此设计器加载程序将使用的 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /></span><span class="sxs-lookup"><span data-stu-id="7e775-110">The <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-111">设计器加载程序不从返回的 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>分析或生成代码，但它确实使用提供程序来获取可用于验证名称创建服务中的标识符的 <xref:System.CodeDom.Compiler.ICodeGenerator>。</span><span class="sxs-lookup"><span data-stu-id="7e775-111">The designer loader does not parse or generate code from the returned <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>, but it does use the provider to obtain an <xref:System.CodeDom.Compiler.ICodeGenerator> that it can use to validate identifiers in the name-creation service.</span></span> <span data-ttu-id="7e775-112">设计器加载程序还将检查 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> 以查看它是否实现 <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> 接口。</span><span class="sxs-lookup"><span data-stu-id="7e775-112">The designer loader will also check the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A> to see if it implements the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interface.</span></span> <span data-ttu-id="7e775-113">有关分析或生成代码的详细信息，请参阅 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> 和 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7e775-113">For more information on parsing or generating code, see the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> and <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="codeDomDesignerLoader.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e775-114">释放 <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> 类使用的资源。</span><span class="sxs-lookup"><span data-stu-id="7e775-114">Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-115"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> 方法将删除 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> 方法添加的服务。</span><span class="sxs-lookup"><span data-stu-id="7e775-115">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> method removes services added by the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="7e775-116">在完成使用 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> 后，应调用 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>。</span><span class="sxs-lookup"><span data-stu-id="7e775-116">Call <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> when you are finished using the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>.</span></span> <span data-ttu-id="7e775-117"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> 方法使 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="7e775-117">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> method leaves the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> in an unusable state.</span></span> <span data-ttu-id="7e775-118">调用 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>后，必须释放对 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 的所有引用，以便垃圾回收器可以回收 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 占用的内存。</span><span class="sxs-lookup"><span data-stu-id="7e775-118">After calling <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A>, you must release all references to the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> was occupying.</span></span> <span data-ttu-id="7e775-119">有关详细信息，请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="7e775-119">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7e775-120">每次释放对 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> 的最后一个引用前，均应调用 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>。</span><span class="sxs-lookup"><span data-stu-id="7e775-120">Always call <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose%2A> before you release your last reference to the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader>.</span></span> <span data-ttu-id="7e775-121">否则，在垃圾回收器调用 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="7e775-121">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="codeDomDesignerLoader.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e775-122">初始化服务。</span><span class="sxs-lookup"><span data-stu-id="7e775-122">Initializes services.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-123">下表描述了 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 添加到服务容器中的可替换服务。</span><span class="sxs-lookup"><span data-stu-id="7e775-123">The following table describes the replaceable services that the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> adds to the service container.</span></span>  
  
|<span data-ttu-id="7e775-124">术语</span><span class="sxs-lookup"><span data-stu-id="7e775-124">Term</span></span>|<span data-ttu-id="7e775-125">Definition</span><span class="sxs-lookup"><span data-stu-id="7e775-125">Definition</span></span>|  
|----------|----------------|  
|<xref:System.ComponentModel.Design.Serialization.INameCreationService>|<span data-ttu-id="7e775-126">提供创建对象名称的语义。</span><span class="sxs-lookup"><span data-stu-id="7e775-126">Provides semantics for creating names of objects.</span></span> <span data-ttu-id="7e775-127">服务使用 CodeDOM 提供程序的 <xref:System.CodeDom.Compiler.ICodeGenerator> 接口创建作为语言的有效标识符的名称。</span><span class="sxs-lookup"><span data-stu-id="7e775-127">The service uses the CodeDOM provider's <xref:System.CodeDom.Compiler.ICodeGenerator> interface to create names that are valid identifiers for the language.</span></span> <span data-ttu-id="7e775-128">此外，名称创建服务支持空名称。</span><span class="sxs-lookup"><span data-stu-id="7e775-128">In addition, the name creation service supports empty names.</span></span> <span data-ttu-id="7e775-129">序列化期间应将空名称解释为临时局部变量。</span><span class="sxs-lookup"><span data-stu-id="7e775-129">Empty names should be interpreted as temporary local variables during serialization.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>|<span data-ttu-id="7e775-130">允许其他对象将一组组件序列化为二进制对象。</span><span class="sxs-lookup"><span data-stu-id="7e775-130">Allows other objects to serialize a group of components into a binary object.</span></span> <span data-ttu-id="7e775-131">此服务最常用于复制和粘贴或撤消和重做等功能。</span><span class="sxs-lookup"><span data-stu-id="7e775-131">This service is most often used by features such as copy and paste or undo and redo.</span></span> <span data-ttu-id="7e775-132"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 类提供基于为对象创建 CodeDOM 树的设计器序列化服务。</span><span class="sxs-lookup"><span data-stu-id="7e775-132">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> class provides a designer serialization service that is based on creating CodeDOM trees for objects.</span></span>|  
|<xref:System.ComponentModel.Design.Serialization.ComponentSerializationService>|<span data-ttu-id="7e775-133">此服务将 <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> 替换为将组件序列化为二进制对象的方法。</span><span class="sxs-lookup"><span data-stu-id="7e775-133">This service replaces <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService> as a means to serialize components to a binary object.</span></span>|  
  
 <span data-ttu-id="7e775-134">有关可替换服务和不可替换服务的详细信息，请参阅 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>。</span><span class="sxs-lookup"><span data-stu-id="7e775-134">For details on replaceable and non-replaceable services, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e775-135"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> 尚未初始化，或设计器加载程序不支持类型解析服务，该服务是 CodeDom 序列化所必需的。</span><span class="sxs-lookup"><span data-stu-id="7e775-135">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.</span></span></exception>
        <altmember cref="T:System.CodeDom.Compiler.ICodeGenerator" />
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />
        <altmember cref="T:System.ComponentModel.Design.Serialization.INameCreationService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7e775-136">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7e775-136">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsReloadNeeded">
      <MemberSignature Language="C#" Value="protected override bool IsReloadNeeded ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsReloadNeeded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsReloadNeeded () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsReloadNeeded();" />
      <MemberSignature Language="F#" Value="override this.IsReloadNeeded : unit -&gt; bool" Usage="codeDomDesignerLoader.IsReloadNeeded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e775-137">返回一个值，指示重新加载是否是必需的。</span><span class="sxs-lookup"><span data-stu-id="7e775-137">Returns a value indicating whether a reload is required.</span></span></summary>
        <returns><span data-ttu-id="7e775-138">如果 <see langword="true" /> 决定重新加载是必需的，则为 <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-138"><see langword="true" /> if the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> decides a reload is required; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-139"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> 方法检查 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>上是否存在 <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> 接口。</span><span class="sxs-lookup"><span data-stu-id="7e775-139">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded%2A> method checks for the presence of the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload> interface on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider%2A>.</span></span> <span data-ttu-id="7e775-140">提供程序将重新分析 CodeDOM 树，并将生成的分析树传递到 <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7e775-140">The provider will reparse the CodeDOM tree and pass the resulting parse tree to the <xref:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner%2A> method.</span></span> <span data-ttu-id="7e775-141">如果此方法返回 `false`，则不会重新加载设计器。</span><span class="sxs-lookup"><span data-stu-id="7e775-141">If this method returns `false`, the designer will not be reloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e775-142">该语言不为此文件提供代码分析器；此文件类型可能不支持设计器。</span><span class="sxs-lookup"><span data-stu-id="7e775-142">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e775-143">可以设计该类，但它不是文件中的第一个类，否则将无法设计此文件中的任何类，进而导致无法为此文件显示设计器。</span><span class="sxs-lookup"><span data-stu-id="7e775-143">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnBeginLoad">
      <MemberSignature Language="C#" Value="protected override void OnBeginLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginLoad ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginLoad();" />
      <MemberSignature Language="F#" Value="override this.OnBeginLoad : unit -&gt; unit" Usage="codeDomDesignerLoader.OnBeginLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e775-144">通知设计器加载程序加载即将开始。</span><span class="sxs-lookup"><span data-stu-id="7e775-144">Notifies the designer loader that loading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-145">有关 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> 方法的详细信息，请参阅 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7e775-145">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginUnload">
      <MemberSignature Language="C#" Value="protected override void OnBeginUnload ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBeginUnload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBeginUnload ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBeginUnload();" />
      <MemberSignature Language="F#" Value="override this.OnBeginUnload : unit -&gt; unit" Usage="codeDomDesignerLoader.OnBeginUnload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e775-146">通知设计器加载程序卸载即将开始。</span><span class="sxs-lookup"><span data-stu-id="7e775-146">Notifies the designer loader that unloading is about to begin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-147">有关 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> 方法的详细信息，请参阅 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7e775-147">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComponentRename">
      <MemberSignature Language="C#" Value="protected virtual void OnComponentRename (object component, string oldName, string newName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComponentRename(object component, string oldName, string newName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnComponentRename (component As Object, oldName As String, newName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnComponentRename(System::Object ^ component, System::String ^ oldName, System::String ^ newName);" />
      <MemberSignature Language="F#" Value="abstract member OnComponentRename : obj * string * string -&gt; unit&#xA;override this.OnComponentRename : obj * string * string -&gt; unit" Usage="codeDomDesignerLoader.OnComponentRename (component, oldName, newName)" FrameworkAlternate="netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.OnComponentRename : obj * string * string -&gt; unit" Usage="codeDomDesignerLoader.OnComponentRename (component, oldName, newName)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="oldName" Type="System.String" />
        <Parameter Name="newName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="7e775-148">要重命名的组件。</span><span class="sxs-lookup"><span data-stu-id="7e775-148">The component to rename.</span></span></param>
        <param name="oldName"><span data-ttu-id="7e775-149">组件的原始名称。</span><span class="sxs-lookup"><span data-stu-id="7e775-149">The original name of the component.</span></span></param>
        <param name="newName"><span data-ttu-id="7e775-150">组件的新名称。</span><span class="sxs-lookup"><span data-stu-id="7e775-150">The new name of the component.</span></span></param>
        <summary><span data-ttu-id="7e775-151">引发 <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="7e775-151">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndLoad">
      <MemberSignature Language="C#" Value="protected override void OnEndLoad (bool successful, System.Collections.ICollection errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndLoad(bool successful, class System.Collections.ICollection errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndLoad (successful As Boolean, errors As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndLoad(bool successful, System::Collections::ICollection ^ errors);" />
      <MemberSignature Language="F#" Value="override this.OnEndLoad : bool * System.Collections.ICollection -&gt; unit" Usage="codeDomDesignerLoader.OnEndLoad (successful, errors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="successful" Type="System.Boolean" />
        <Parameter Name="errors" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="successful"><span data-ttu-id="7e775-152">为 <see langword="true" /> 则指示加载已成功完成；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-152"><see langword="true" /> to indicate that the load completed successfully; otherwise, <see langword="false" />.</span></span></param>
        <param name="errors"><span data-ttu-id="7e775-153">被报告为错误的对象（通常为异常）的 <see cref="T:System.Collections.ICollection" /></span><span class="sxs-lookup"><span data-stu-id="7e775-153">An <see cref="T:System.Collections.ICollection" /> of objects (usually exceptions) that were reported as errors.</span></span></param>
        <summary><span data-ttu-id="7e775-154">通知设计器加载程序加载已完成。</span><span class="sxs-lookup"><span data-stu-id="7e775-154">Notifies the designer loader that loading is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-155">有关 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> 方法的详细信息，请参阅 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="7e775-155">For more information on the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad%2A> method, see <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="protected abstract System.CodeDom.CodeCompileUnit Parse ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit Parse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function Parse () As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::CodeDom::CodeCompileUnit ^ Parse();" />
      <MemberSignature Language="F#" Value="abstract member Parse : unit -&gt; System.CodeDom.CodeCompileUnit" Usage="codeDomDesignerLoader.Parse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e775-156">分析文本或其他永久存储区并返回 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-156">Parses the text or other persistent storage and returns a <see cref="T:System.CodeDom.CodeCompileUnit" />.</span></span></summary>
        <returns><span data-ttu-id="7e775-157">从分析操作生成的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-157">A <see cref="T:System.CodeDom.CodeCompileUnit" /> resulting from a parse operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-158">当 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 需要分析源代码时，将调用 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7e775-158">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A> method is called when the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> needs to parse the source code.</span></span> <span data-ttu-id="7e775-159">必须通过派生类指定源代码位置和格式。</span><span class="sxs-lookup"><span data-stu-id="7e775-159">The source code location and format must be specified by deriving classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7e775-160">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7e775-160">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PerformFlush">
      <MemberSignature Language="C#" Value="protected override void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformFlush(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformFlush (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformFlush(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="override this.PerformFlush : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="codeDomDesignerLoader.PerformFlush manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7e775-161">要从中请求序列化程序的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-161">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</span></span></param>
        <summary><span data-ttu-id="7e775-162">请求设计器的根组件的序列化。</span><span class="sxs-lookup"><span data-stu-id="7e775-162">Requests serialization of the root component of the designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-163"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 方法获取设计器根组件的根 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>，并调用序列化程序来序列化组件。</span><span class="sxs-lookup"><span data-stu-id="7e775-163">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> method obtains the root <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> for the root component of the designer and invokes the serializer to serialize the component.</span></span> <span data-ttu-id="7e775-164">如果此操作的结果是 <xref:System.CodeDom.CodeTypeDeclaration>，则 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 将 <xref:System.CodeDom.CodeTypeDeclaration> 与现有的 CodeDOM 树集成。</span><span class="sxs-lookup"><span data-stu-id="7e775-164">If the result of this operation is a <xref:System.CodeDom.CodeTypeDeclaration>, then <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> integrates the <xref:System.CodeDom.CodeTypeDeclaration> with the existing CodeDOM tree.</span></span> <span data-ttu-id="7e775-165">结果是具有匹配成员和已替换的语句的原始 CodeDOM 树。</span><span class="sxs-lookup"><span data-stu-id="7e775-165">The result is the original CodeDOM tree with matching members and statements replaced.</span></span> <span data-ttu-id="7e775-166">最后，<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 调用 abstract <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 方法来保存此 CodeDOM 树。</span><span class="sxs-lookup"><span data-stu-id="7e775-166">Finally, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> calls the abstract <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method to save this CodeDOM tree.</span></span>  
  
 <span data-ttu-id="7e775-167">如果根设计器组件的序列化未导致 <xref:System.CodeDom.CodeTypeDeclaration>，则 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> 不会执行任何进一步操作。</span><span class="sxs-lookup"><span data-stu-id="7e775-167">If the serialization of the root designer component does not result in a <xref:System.CodeDom.CodeTypeDeclaration>, then <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush%2A> does nothing further.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e775-168">调用方负责确保 CodeDOM 源自受信任的源。</span><span class="sxs-lookup"><span data-stu-id="7e775-168">It is the responsibility of the caller to ensure that a CodeDOM originates from a trusted source.</span></span> <span data-ttu-id="7e775-169">接受来自不受信任方的 CodeDOM 对象可能允许该参与方运行恶意代码。</span><span class="sxs-lookup"><span data-stu-id="7e775-169">Accepting a CodeDOM object from an untrusted party could allow that party to run malicious code.</span></span> <span data-ttu-id="7e775-170">将 CodeDOM 刷新到文件中时，框架将运行由 CodeDOM 对象表示的代码，并按所提供的方式运行对象的序列化内容。</span><span class="sxs-lookup"><span data-stu-id="7e775-170">When flushing a CodeDOM into a file, the framework will run code represented by the CodeDOM object and the serialized content of the object as provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e775-171">该语言不为此文件提供代码分析器；此文件类型可能不支持设计器。</span><span class="sxs-lookup"><span data-stu-id="7e775-171">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e775-172">可以设计该类，但它不是文件中的第一个类，否则将无法设计此文件中的任何类，进而导致无法为此文件显示设计器。</span><span class="sxs-lookup"><span data-stu-id="7e775-172">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PerformLoad">
      <MemberSignature Language="C#" Value="protected override void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PerformLoad(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PerformLoad (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PerformLoad(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="override this.PerformLoad : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; unit" Usage="codeDomDesignerLoader.PerformLoad manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="7e775-173">要从中请求序列化程序的 <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-173">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</span></span></param>
        <summary><span data-ttu-id="7e775-174">分析来自 CodeDOM 提供程序的代码。</span><span class="sxs-lookup"><span data-stu-id="7e775-174">Parses code from a CodeDOM provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-175"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 方法从 CodeDOM 提供程序获取 <xref:System.CodeDom.Compiler.ICodeParser> 并对代码进行分析。</span><span class="sxs-lookup"><span data-stu-id="7e775-175">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> method obtains an <xref:System.CodeDom.Compiler.ICodeParser> from the CodeDOM provider and parses the code.</span></span> <span data-ttu-id="7e775-176"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 查找文件中的第一个类，获取该数据类型的根 <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>，然后调用序列化程序以反序列化该数据类型。</span><span class="sxs-lookup"><span data-stu-id="7e775-176"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> locates the first class in the file, obtains a root <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> for the data type, and then invokes the serializer to deserialize the data type.</span></span> <span data-ttu-id="7e775-177"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 假设此过程将创建 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> 属性的 <xref:System.ComponentModel.IContainer> 中的所有必需组件。</span><span class="sxs-lookup"><span data-stu-id="7e775-177"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> assumes that this process will create all necessary components in the <xref:System.ComponentModel.IContainer> of the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> property.</span></span> <span data-ttu-id="7e775-178">最后，<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> 用传递到 CodeDOM 序列化程序的类型的完全限定名调用 <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="7e775-178">Finally, <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad%2A> calls the <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName%2A> method with the fully qualified name of the type it passed to the CodeDOM serializer.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7e775-179">调用方负责确保 CodeDOM 源自受信任的源。</span><span class="sxs-lookup"><span data-stu-id="7e775-179">It is the responsibility of the caller to ensure that a CodeDOM originates from a trusted source.</span></span> <span data-ttu-id="7e775-180">接受来自不受信任方的 CodeDOM 对象可能允许该参与方运行恶意代码。</span><span class="sxs-lookup"><span data-stu-id="7e775-180">Accepting a CodeDOM object from an untrusted party could allow that party to run malicious code.</span></span> <span data-ttu-id="7e775-181">将 CodeDOM 加载到设计图面时，框架将运行由 CodeDOM 对象表示的代码，并按所提供的方式运行对象的序列化内容。</span><span class="sxs-lookup"><span data-stu-id="7e775-181">When loading a CodeDOM into the design surface, the framework will run code represented by the CodeDOM object and the serialized content of the object as provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7e775-182">该语言不为此文件提供代码分析器；此文件类型可能不支持设计器。</span><span class="sxs-lookup"><span data-stu-id="7e775-182">The language did not provide a code parser for this file; this file type may not support a designer.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e775-183">可以设计该类，但它不是文件中的第一个类，否则将无法设计此文件中的任何类，进而导致无法为此文件显示设计器。</span><span class="sxs-lookup"><span data-stu-id="7e775-183">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7e775-184">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7e775-184">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDesignerSerializationService.Deserialize (object serializationData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(object serializationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Deserialize (serializationData As Object) As ICollection Implements IDesignerSerializationService.Deserialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System::Object ^ serializationData) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Deserialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Deserialize(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serializationData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serializationData"><span data-ttu-id="7e775-185">包含序列化的数据的对象。</span><span class="sxs-lookup"><span data-stu-id="7e775-185">An object consisting of serialized data.</span></span></param>
        <summary><span data-ttu-id="7e775-186">反序列化指定的序列化数据对象并返回由这些数据表示的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="7e775-186">Deserializes the specified serialization data object and returns a collection of objects represented by that data.</span></span></summary>
        <returns><span data-ttu-id="7e775-187">由 <paramref name="serializationData" /> 表示的对象集合。</span><span class="sxs-lookup"><span data-stu-id="7e775-187">A collection of objects represented by <paramref name="serializationData" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e775-188"><paramref name="serializationData" /> 不是 <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-188"><paramref name="serializationData" /> is not a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize">
      <MemberSignature Language="C#" Value="object IDesignerSerializationService.Serialize (System.Collections.ICollection objects);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(class System.Collections.ICollection objects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Function Serialize (objects As ICollection) As Object Implements IDesignerSerializationService.Serialize" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System::Collections::ICollection ^ objects) = System::ComponentModel::Design::Serialization::IDesignerSerializationService::Serialize;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize(System.Collections.ICollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objects" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="objects"><span data-ttu-id="7e775-189">要序列化的对象的集合。</span><span class="sxs-lookup"><span data-stu-id="7e775-189">A collection of objects to serialize.</span></span></param>
        <summary><span data-ttu-id="7e775-190">序列化指定的对象集合并将其存储在序列化数据对象中。</span><span class="sxs-lookup"><span data-stu-id="7e775-190">Serializes the specified collection of objects and stores them in a serialization data object.</span></span></summary>
        <returns><span data-ttu-id="7e775-191">包含指定的对象集合的序列化状态的对象。</span><span class="sxs-lookup"><span data-stu-id="7e775-191">An object that contains the serialized state of the specified collection of objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e775-192">未找到 <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-192">The <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.CreateName">
      <MemberSignature Language="C#" Value="string INameCreationService.CreateName (System.ComponentModel.IContainer container, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.INameCreationService.CreateName(class System.ComponentModel.IContainer container, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function CreateName (container As IContainer, dataType As Type) As String Implements INameCreationService.CreateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System::ComponentModel::IContainer ^ container, Type ^ dataType) = System::ComponentModel::Design::Serialization::INameCreationService::CreateName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.INameCreationService.CreateName(System.ComponentModel.IContainer,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="7e775-193">将新对象添加到的容器。</span><span class="sxs-lookup"><span data-stu-id="7e775-193">The container where the new object is added.</span></span></param>
        <param name="dataType"><span data-ttu-id="7e775-194">接收该名称的对象的数据类型。</span><span class="sxs-lookup"><span data-stu-id="7e775-194">The data type of the object that receives the name.</span></span></param>
        <summary><span data-ttu-id="7e775-195">创建一个新名称，该名称对于指定容器中的所有组件来说是唯一的。</span><span class="sxs-lookup"><span data-stu-id="7e775-195">Creates a new name that is unique to all components in the specified container.</span></span></summary>
        <returns><span data-ttu-id="7e775-196">数据类型的唯一名称。</span><span class="sxs-lookup"><span data-stu-id="7e775-196">A unique name for the data type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e775-197"><paramref name="dataType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-197"><paramref name="dataType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.IsValidName">
      <MemberSignature Language="C#" Value="bool INameCreationService.IsValidName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsValidName (name As String) As Boolean Implements INameCreationService.IsValidName" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::IsValidName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.INameCreationService.IsValidName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7e775-198">要验证的名称。</span><span class="sxs-lookup"><span data-stu-id="7e775-198">The name to validate.</span></span></param>
        <summary><span data-ttu-id="7e775-199">获取一个值，该值指示指定的名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="7e775-199">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <returns><span data-ttu-id="7e775-200">如果该名称有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-200"><see langword="true" /> if the name is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e775-201"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-201"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.INameCreationService.ValidateName">
      <MemberSignature Language="C#" Value="void INameCreationService.ValidateName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub ValidateName (name As String) Implements INameCreationService.ValidateName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System::String ^ name) = System::ComponentModel::Design::Serialization::INameCreationService::ValidateName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.INameCreationService.ValidateName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7e775-202">要验证的名称。</span><span class="sxs-lookup"><span data-stu-id="7e775-202">The name to validate.</span></span></param>
        <summary><span data-ttu-id="7e775-203">获取一个值，该值指示指定的名称是否有效。</span><span class="sxs-lookup"><span data-stu-id="7e775-203">Gets a value indicating whether the specified name is valid.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e775-204"><paramref name="name" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-204"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7e775-205"><paramref name="name" /> 不是有效标识符，或者已经存在具有相同名称的组件。</span><span class="sxs-lookup"><span data-stu-id="7e775-205"><paramref name="name" /> is not a valid identifier, or there is already a component with the same name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TypeResolutionService">
      <MemberSignature Language="C#" Value="protected abstract System.ComponentModel.Design.ITypeResolutionService TypeResolutionService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.ITypeResolutionService TypeResolutionService" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property TypeResolutionService As ITypeResolutionService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::ComponentModel::Design::ITypeResolutionService ^ TypeResolutionService { System::ComponentModel::Design::ITypeResolutionService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeResolutionService : System.ComponentModel.Design.ITypeResolutionService" Usage="System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.ITypeResolutionService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e775-206">获取要与此设计器加载程序一起使用的类型解析服务。</span><span class="sxs-lookup"><span data-stu-id="7e775-206">Gets the type resolution service to be used with this designer loader.</span></span></summary>
        <value><span data-ttu-id="7e775-207">CodeDOM 序列化程序在解析类型时将使用的 <see cref="T:System.ComponentModel.Design.ITypeResolutionService" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-207">An <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> that the CodeDOM serializers will use when resolving types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-208">调用 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> 方法时，<xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 会自动将此 <xref:System.ComponentModel.Design.ITypeResolutionService> 添加到服务容器。</span><span class="sxs-lookup"><span data-stu-id="7e775-208">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> automatically adds this <xref:System.ComponentModel.Design.ITypeResolutionService> to the service container when the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize%2A> method is invoked.</span></span> <span data-ttu-id="7e775-209">尽管类型解析服务在许多方案中是可选的，但它是代码解释所必需的，因为源代码包含类型名称，但没有程序集引用。</span><span class="sxs-lookup"><span data-stu-id="7e775-209">While the type resolution service is optional in many scenarios, it is required for code interpretation because source code contains type names, but no assembly references.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.ITypeResolutionService" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7e775-210">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7e775-210">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="protected abstract void Write (System.CodeDom.CodeCompileUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Write(class System.CodeDom.CodeCompileUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub Write (unit As CodeCompileUnit)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void Write(System::CodeDom::CodeCompileUnit ^ unit);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.CodeDom.CodeCompileUnit -&gt; unit" Usage="codeDomDesignerLoader.Write unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.CodeDom.CodeCompileUnit" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="7e775-211">要保持的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="7e775-211">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be persisted.</span></span></param>
        <summary><span data-ttu-id="7e775-212">将编译单元更改写入永久存储区。</span><span class="sxs-lookup"><span data-stu-id="7e775-212">Writes compile-unit changes to persistent storage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e775-213"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 方法将 <xref:System.CodeDom.CodeCompileUnit> 保存到永久性存储。</span><span class="sxs-lookup"><span data-stu-id="7e775-213">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method saves a <xref:System.CodeDom.CodeCompileUnit> to persistent storage.</span></span> <span data-ttu-id="7e775-214">派生类负责对适当的文本编写器调用 <xref:System.CodeDom.Compiler.ICodeGenerator> 以保存代码。</span><span class="sxs-lookup"><span data-stu-id="7e775-214">The deriving class is responsible for invoking the <xref:System.CodeDom.Compiler.ICodeGenerator> on the appropriate text writer to save the code.</span></span> <span data-ttu-id="7e775-215"><xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> 确保传递到 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 的 CodeDOM 对象与从 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>检索的对象的实例相同，在序列化过程必须对代码进行更改的情况除外。</span><span class="sxs-lookup"><span data-stu-id="7e775-215">The <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader> ensures that the CodeDOM objects that are passed to <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> are the same instances of objects that were retrieved from <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse%2A>, except in cases where the serialization process had to make changes to the code.</span></span> <span data-ttu-id="7e775-216">这允许经过优化的设计器加载程序将其他数据存储在代码元素的 <xref:System.CodeDom.CodeObject.UserData%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="7e775-216">This allows an optimized designer loader to store additional data in the <xref:System.CodeDom.CodeObject.UserData%2A> property of code elements.</span></span> <span data-ttu-id="7e775-217">在 <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> 方法中，此数据将可用于序列化过程未替换的任何元素。</span><span class="sxs-lookup"><span data-stu-id="7e775-217">This data will be available during the <xref:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write%2A> method for any elements that were not replaced by the serialization process.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeCompileUnit" />
        <related type="Article" href="https://msdn.microsoft.com/library/d077a3e8-bd81-4bdf-b6a3-323857ea30fb"><span data-ttu-id="7e775-218">动态源代码生成和编译</span><span class="sxs-lookup"><span data-stu-id="7e775-218">Dynamic Source Code Generation and Compilation</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
