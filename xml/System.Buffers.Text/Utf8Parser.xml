<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7c97aa30b0f66ba4914fa5689ce6b625e6eab97" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83485403" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Memory" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dcd83-101">提供用于将 Utf8 字符串分析为常见数据类型的静态方法。</span><span class="sxs-lookup"><span data-stu-id="dcd83-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * bool * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-102">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-103">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-104">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-105">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-106">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-107">分析 Utf8 字符串开头的 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-108">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-109">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-109">Formats supported:</span></span> 

|<span data-ttu-id="dcd83-110">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-110">Format string</span></span>|<span data-ttu-id="dcd83-111">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-112">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-112">G (default)</span></span>|<span data-ttu-id="dcd83-113">True/False</span><span class="sxs-lookup"><span data-stu-id="dcd83-113">True/False</span></span>|
|<span data-ttu-id="dcd83-114">l</span><span class="sxs-lookup"><span data-stu-id="dcd83-114">l</span></span>|<span data-ttu-id="dcd83-115">true/false</span><span class="sxs-lookup"><span data-stu-id="dcd83-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * byte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-116">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-117">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-118">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-119">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-120">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-121">分析 Utf8 字符串开头的 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-122">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-123">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-123">Formats supported:</span></span> 

|<span data-ttu-id="dcd83-124">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-124">Format string</span></span>|<span data-ttu-id="dcd83-125">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-126">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-126">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-127">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-127">D/d</span></span>|<span data-ttu-id="dcd83-128">122</span><span class="sxs-lookup"><span data-stu-id="dcd83-128">122</span></span>|
|<span data-ttu-id="dcd83-129">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-129">N/n</span></span>|<span data-ttu-id="dcd83-130">122</span><span class="sxs-lookup"><span data-stu-id="dcd83-130">122</span></span>|       
|<span data-ttu-id="dcd83-131">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-131">X/x</span></span>|<span data-ttu-id="dcd83-132">7a</span><span class="sxs-lookup"><span data-stu-id="dcd83-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTime * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-133">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-134">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-135">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-136">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-137">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-138">分析 Utf8 字符串开头的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-139">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-140">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-140">Formats supported:</span></span>

|<span data-ttu-id="dcd83-141">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-141">Format string</span></span>|<span data-ttu-id="dcd83-142">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-142">Example expected format</span></span>|<span data-ttu-id="dcd83-143">Comments</span><span class="sxs-lookup"><span data-stu-id="dcd83-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="dcd83-144">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-144">G  (default)</span></span>|<span data-ttu-id="dcd83-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="dcd83-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="dcd83-146">R</span><span class="sxs-lookup"><span data-stu-id="dcd83-146">R</span></span>|<span data-ttu-id="dcd83-147">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="dcd83-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="dcd83-148">（RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="dcd83-148">(RFC 1123)</span></span>|
|<span data-ttu-id="dcd83-149">l</span><span class="sxs-lookup"><span data-stu-id="dcd83-149">l</span></span>|<span data-ttu-id="dcd83-150">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="dcd83-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="dcd83-151">（小写 RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="dcd83-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="dcd83-152">O</span><span class="sxs-lookup"><span data-stu-id="dcd83-152">O</span></span>|<span data-ttu-id="dcd83-153">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="dcd83-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="dcd83-154">（往返）</span><span class="sxs-lookup"><span data-stu-id="dcd83-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTimeOffset * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-155">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-156">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-157">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-158">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-159">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-160">分析 Utf8 字符串开头的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-161">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-162">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-162">Formats supported:</span></span>

|<span data-ttu-id="dcd83-163">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-163">Format string</span></span>|<span data-ttu-id="dcd83-164">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-164">Example expected format</span></span>|<span data-ttu-id="dcd83-165">Comments</span><span class="sxs-lookup"><span data-stu-id="dcd83-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="dcd83-166">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-166">G  (default)</span></span>|<span data-ttu-id="dcd83-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="dcd83-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="dcd83-168">R</span><span class="sxs-lookup"><span data-stu-id="dcd83-168">R</span></span>|<span data-ttu-id="dcd83-169">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="dcd83-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="dcd83-170">（RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="dcd83-170">(RFC 1123)</span></span>|
|<span data-ttu-id="dcd83-171">l</span><span class="sxs-lookup"><span data-stu-id="dcd83-171">l</span></span>|<span data-ttu-id="dcd83-172">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="dcd83-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="dcd83-173">（小写 RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="dcd83-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="dcd83-174">O</span><span class="sxs-lookup"><span data-stu-id="dcd83-174">O</span></span>|<span data-ttu-id="dcd83-175">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="dcd83-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="dcd83-176">（往返）</span><span class="sxs-lookup"><span data-stu-id="dcd83-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * decimal * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-177">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-178">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-179">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-180">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-181">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-182">分析 Utf8 字符串开头的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-183">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-184">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-184">Formats supported:</span></span>

|<span data-ttu-id="dcd83-185">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-185">Format string</span></span>|<span data-ttu-id="dcd83-186">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-186">Example expected format</span></span>|<span data-ttu-id="dcd83-187">Comments</span><span class="sxs-lookup"><span data-stu-id="dcd83-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="dcd83-188">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="dcd83-189">F/f</span><span class="sxs-lookup"><span data-stu-id="dcd83-189">F/f</span></span>|<span data-ttu-id="dcd83-190">12.45</span><span class="sxs-lookup"><span data-stu-id="dcd83-190">12.45</span></span>|<span data-ttu-id="dcd83-191">固定点</span><span class="sxs-lookup"><span data-stu-id="dcd83-191">Fixed point</span></span>|
|<span data-ttu-id="dcd83-192">E/e</span><span class="sxs-lookup"><span data-stu-id="dcd83-192">E/e</span></span>|<span data-ttu-id="dcd83-193">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="dcd83-193">1.245000e1</span></span>|<span data-ttu-id="dcd83-194">指数</span><span class="sxs-lookup"><span data-stu-id="dcd83-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * double * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-195">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-196">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-197">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-198">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-199">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-200">分析 Utf8 字符串开头的 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-201">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-202">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-202">Formats supported:</span></span>

|<span data-ttu-id="dcd83-203">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-203">Format string</span></span>|<span data-ttu-id="dcd83-204">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-204">Example expected format</span></span>|<span data-ttu-id="dcd83-205">Comments</span><span class="sxs-lookup"><span data-stu-id="dcd83-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="dcd83-206">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="dcd83-207">F/f</span><span class="sxs-lookup"><span data-stu-id="dcd83-207">F/f</span></span>|<span data-ttu-id="dcd83-208">12.45</span><span class="sxs-lookup"><span data-stu-id="dcd83-208">12.45</span></span>|<span data-ttu-id="dcd83-209">固定点</span><span class="sxs-lookup"><span data-stu-id="dcd83-209">Fixed point</span></span>|
|<span data-ttu-id="dcd83-210">E/e</span><span class="sxs-lookup"><span data-stu-id="dcd83-210">E/e</span></span>|<span data-ttu-id="dcd83-211">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="dcd83-211">1.245000e1</span></span>|<span data-ttu-id="dcd83-212">指数</span><span class="sxs-lookup"><span data-stu-id="dcd83-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * Guid * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-213">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-214">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-215">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-216">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-217">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-218">分析 Utf8 字符串开头的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-219">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-220">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-220">Formats supported:</span></span>

|<span data-ttu-id="dcd83-221">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-221">Format string</span></span>|<span data-ttu-id="dcd83-222">预期格式</span><span class="sxs-lookup"><span data-stu-id="dcd83-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-223">D （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-223">D (default)</span></span>|<span data-ttu-id="dcd83-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="dcd83-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="dcd83-225">B</span><span class="sxs-lookup"><span data-stu-id="dcd83-225">B</span></span>|<span data-ttu-id="dcd83-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="dcd83-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="dcd83-227">P</span><span class="sxs-lookup"><span data-stu-id="dcd83-227">P</span></span>|<span data-ttu-id="dcd83-228">（nnnnnnnn-nnnn-nnnnnnnnnnnn）</span><span class="sxs-lookup"><span data-stu-id="dcd83-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="dcd83-229">N</span><span class="sxs-lookup"><span data-stu-id="dcd83-229">N</span></span>|<span data-ttu-id="dcd83-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="dcd83-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-231">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-232">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-233">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-234">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-235">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-236">分析 Utf8 字符串开头的 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-237">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-238">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-238">Formats supported:</span></span>

|<span data-ttu-id="dcd83-239">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-239">Format string</span></span>|<span data-ttu-id="dcd83-240">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-241">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-241">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-242">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-242">D/d</span></span>|<span data-ttu-id="dcd83-243">32767</span><span class="sxs-lookup"><span data-stu-id="dcd83-243">32767</span></span>|
|<span data-ttu-id="dcd83-244">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-244">N/n</span></span>|<span data-ttu-id="dcd83-245">32,767</span><span class="sxs-lookup"><span data-stu-id="dcd83-245">32,767</span></span>|       
|<span data-ttu-id="dcd83-246">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-246">X/x</span></span>|<span data-ttu-id="dcd83-247">7fff</span><span class="sxs-lookup"><span data-stu-id="dcd83-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-248">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-249">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-250">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-251">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-252">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-253">分析 Utf8 字符串开头的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-254">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-255">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-255">Formats supported:</span></span>

|<span data-ttu-id="dcd83-256">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-256">Format string</span></span>|<span data-ttu-id="dcd83-257">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-258">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-258">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-259">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-259">D/d</span></span>|<span data-ttu-id="dcd83-260">32767</span><span class="sxs-lookup"><span data-stu-id="dcd83-260">32767</span></span>|
|<span data-ttu-id="dcd83-261">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-261">N/n</span></span>|<span data-ttu-id="dcd83-262">32,767</span><span class="sxs-lookup"><span data-stu-id="dcd83-262">32,767</span></span>|       
|<span data-ttu-id="dcd83-263">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-263">X/x</span></span>|<span data-ttu-id="dcd83-264">7fff</span><span class="sxs-lookup"><span data-stu-id="dcd83-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-265">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-266">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-267">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-268">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-269">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-270">分析 Utf8 字符串开头的 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-271">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-272">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-272">Formats supported:</span></span>

|<span data-ttu-id="dcd83-273">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-273">Format string</span></span>|<span data-ttu-id="dcd83-274">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-275">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-275">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-276">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-276">D/d</span></span>|<span data-ttu-id="dcd83-277">32767</span><span class="sxs-lookup"><span data-stu-id="dcd83-277">32767</span></span>|
|<span data-ttu-id="dcd83-278">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-278">N/n</span></span>|<span data-ttu-id="dcd83-279">32,767</span><span class="sxs-lookup"><span data-stu-id="dcd83-279">32,767</span></span>|       
|<span data-ttu-id="dcd83-280">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-280">X/x</span></span>|<span data-ttu-id="dcd83-281">7fff</span><span class="sxs-lookup"><span data-stu-id="dcd83-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * sbyte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-282">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-283">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-284">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-285">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-286">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-287">分析 Utf8 字符串开头的 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-288">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-289">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-289">Formats supported:</span></span> 

|<span data-ttu-id="dcd83-290">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-290">Format string</span></span>|<span data-ttu-id="dcd83-291">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-292">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-292">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-293">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-293">D/d</span></span>|<span data-ttu-id="dcd83-294">122</span><span class="sxs-lookup"><span data-stu-id="dcd83-294">122</span></span>|
|<span data-ttu-id="dcd83-295">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-295">N/n</span></span>|<span data-ttu-id="dcd83-296">122</span><span class="sxs-lookup"><span data-stu-id="dcd83-296">122</span></span>|       
|<span data-ttu-id="dcd83-297">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-297">X/x</span></span>|<span data-ttu-id="dcd83-298">7a</span><span class="sxs-lookup"><span data-stu-id="dcd83-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * single * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-299">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-300">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-301">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-302">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-303">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-304">分析 Utf8 字符串开头的 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-305">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-306">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-306">Formats supported:</span></span> 

<span data-ttu-id="dcd83-307">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-307">Format string</span></span>|<span data-ttu-id="dcd83-308">示例应为 fornmat</span><span class="sxs-lookup"><span data-stu-id="dcd83-308">Example expected fornmat</span></span>|<span data-ttu-id="dcd83-309">Comments</span><span class="sxs-lookup"><span data-stu-id="dcd83-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="dcd83-310">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="dcd83-311">F/f</span><span class="sxs-lookup"><span data-stu-id="dcd83-311">F/f</span></span>|<span data-ttu-id="dcd83-312">12.45</span><span class="sxs-lookup"><span data-stu-id="dcd83-312">12.45</span></span>|<span data-ttu-id="dcd83-313">固定点</span><span class="sxs-lookup"><span data-stu-id="dcd83-313">Fixed point</span></span>|
|<span data-ttu-id="dcd83-314">E/e</span><span class="sxs-lookup"><span data-stu-id="dcd83-314">E/e</span></span>|<span data-ttu-id="dcd83-315">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="dcd83-315">1.245000e1</span></span>|<span data-ttu-id="dcd83-316">指数</span><span class="sxs-lookup"><span data-stu-id="dcd83-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * TimeSpan * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-317">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-318">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-319">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-320">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-321">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-322">分析 Utf8 字符串开头的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-323">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-324">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-324">Formats supported:</span></span> 

|<span data-ttu-id="dcd83-325">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-325">Format string</span></span>|<span data-ttu-id="dcd83-326">预期格式</span><span class="sxs-lookup"><span data-stu-id="dcd83-326">Expected format</span></span>|<span data-ttu-id="dcd83-327">Comments</span><span class="sxs-lookup"><span data-stu-id="dcd83-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="dcd83-328">c/t/T （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-328">c/t/T (default)</span></span>|<span data-ttu-id="dcd83-329">[-][d.]hh： mm： ss [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="dcd83-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="dcd83-330">（常量格式）</span><span class="sxs-lookup"><span data-stu-id="dcd83-330">(constant format)</span></span>|
|<span data-ttu-id="dcd83-331">G</span><span class="sxs-lookup"><span data-stu-id="dcd83-331">G</span></span>|<span data-ttu-id="dcd83-332">[-] d:hh： mm： ss. fffffff</span><span class="sxs-lookup"><span data-stu-id="dcd83-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="dcd83-333">（常规长）</span><span class="sxs-lookup"><span data-stu-id="dcd83-333">(general long)</span></span>|
|<span data-ttu-id="dcd83-334">g</span><span class="sxs-lookup"><span data-stu-id="dcd83-334">g</span></span>|<span data-ttu-id="dcd83-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="dcd83-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="dcd83-336">（一般简称）</span><span class="sxs-lookup"><span data-stu-id="dcd83-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-337">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-338">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-339">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-340">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-341">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-342">分析 Utf8 字符串开头的 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-343">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-344">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-344">Formats supported:</span></span>

|<span data-ttu-id="dcd83-345">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-345">Format string</span></span>|<span data-ttu-id="dcd83-346">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-347">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-347">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-348">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-348">D/d</span></span>|<span data-ttu-id="dcd83-349">32767</span><span class="sxs-lookup"><span data-stu-id="dcd83-349">32767</span></span>|
|<span data-ttu-id="dcd83-350">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-350">N/n</span></span>|<span data-ttu-id="dcd83-351">32,767</span><span class="sxs-lookup"><span data-stu-id="dcd83-351">32,767</span></span>|       
|<span data-ttu-id="dcd83-352">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-352">X/x</span></span>|<span data-ttu-id="dcd83-353">7fff</span><span class="sxs-lookup"><span data-stu-id="dcd83-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint32 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-354">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-355">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-356">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-357">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-358">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-359">分析 Utf8 字符串开头的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-360">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-361">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-361">Formats supported:</span></span>

|<span data-ttu-id="dcd83-362">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-362">Format string</span></span>|<span data-ttu-id="dcd83-363">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-364">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-364">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-365">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-365">D/d</span></span>|<span data-ttu-id="dcd83-366">32767</span><span class="sxs-lookup"><span data-stu-id="dcd83-366">32767</span></span>|
|<span data-ttu-id="dcd83-367">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-367">N/n</span></span>|<span data-ttu-id="dcd83-368">32,767</span><span class="sxs-lookup"><span data-stu-id="dcd83-368">32,767</span></span>|       
|<span data-ttu-id="dcd83-369">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-369">X/x</span></span>|<span data-ttu-id="dcd83-370">7fff</span><span class="sxs-lookup"><span data-stu-id="dcd83-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="dcd83-371">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="dcd83-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="dcd83-372">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="dcd83-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="dcd83-373">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="dcd83-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="dcd83-374">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="dcd83-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="dcd83-375">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="dcd83-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="dcd83-376">分析 Utf8 字符串开头的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="dcd83-377">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="dcd83-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="dcd83-378">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="dcd83-378">Formats supported:</span></span>

|<span data-ttu-id="dcd83-379">格式字符串</span><span class="sxs-lookup"><span data-stu-id="dcd83-379">Format string</span></span>|<span data-ttu-id="dcd83-380">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="dcd83-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="dcd83-381">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="dcd83-381">G/g (default)</span></span>| |
|<span data-ttu-id="dcd83-382">D/d</span><span class="sxs-lookup"><span data-stu-id="dcd83-382">D/d</span></span>|<span data-ttu-id="dcd83-383">32767</span><span class="sxs-lookup"><span data-stu-id="dcd83-383">32767</span></span>|
|<span data-ttu-id="dcd83-384">N/n</span><span class="sxs-lookup"><span data-stu-id="dcd83-384">N/n</span></span>|<span data-ttu-id="dcd83-385">32,767</span><span class="sxs-lookup"><span data-stu-id="dcd83-385">32,767</span></span>|       
|<span data-ttu-id="dcd83-386">X/x</span><span class="sxs-lookup"><span data-stu-id="dcd83-386">X/x</span></span>|<span data-ttu-id="dcd83-387">7fff</span><span class="sxs-lookup"><span data-stu-id="dcd83-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
