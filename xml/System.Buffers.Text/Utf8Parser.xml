<Type Name="Utf8Parser" FullName="System.Buffers.Text.Utf8Parser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ef3183a25526c8efa1b01d85971f693a0781a99" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82470912" /></Metadata><TypeSignature Language="C#" Value="public static class Utf8Parser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Utf8Parser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.Text.Utf8Parser" />
  <TypeSignature Language="VB.NET" Value="Public Class Utf8Parser" />
  <TypeSignature Language="C++ CLI" Value="public ref class Utf8Parser abstract sealed" />
  <TypeSignature Language="F#" Value="type Utf8Parser = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="83641-101">提供用于将 Utf8 字符串分析为常见数据类型的静态方法。</span><span class="sxs-lookup"><span data-stu-id="83641-101">Provides static methods to parse Utf8 strings to common data types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out bool value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] bool&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Boolean@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Boolean, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * bool * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Boolean" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-102">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-102">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-103">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-103">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-104">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-104">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-105">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-105">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-106">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-106">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-107">分析 Utf8 字符串开头的 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="83641-107">Parses a <see cref="T:System.Boolean" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-108">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-108"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-109">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-109">Formats supported:</span></span> 

|<span data-ttu-id="83641-110">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-110">Format string</span></span>|<span data-ttu-id="83641-111">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-111">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-112">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-112">G (default)</span></span>|<span data-ttu-id="83641-113">True/False</span><span class="sxs-lookup"><span data-stu-id="83641-113">True/False</span></span>|
|<span data-ttu-id="83641-114">l</span><span class="sxs-lookup"><span data-stu-id="83641-114">l</span></span>|<span data-ttu-id="83641-115">true/false</span><span class="sxs-lookup"><span data-stu-id="83641-115">true/false</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out byte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Byte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Byte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * byte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Byte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-116">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-116">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-117">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-117">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-118">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-118">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-119">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-119">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-120">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-120">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-121">分析 Utf8 字符串开头的 <see cref="T:System.Byte" />。</span><span class="sxs-lookup"><span data-stu-id="83641-121">Parses a <see cref="T:System.Byte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-122">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-122"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-123">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-123">Formats supported:</span></span> 

|<span data-ttu-id="83641-124">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-124">Format string</span></span>|<span data-ttu-id="83641-125">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-125">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-126">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-126">G/g (default)</span></span>| |
|<span data-ttu-id="83641-127">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-127">D/d</span></span>|<span data-ttu-id="83641-128">122</span><span class="sxs-lookup"><span data-stu-id="83641-128">122</span></span>|
|<span data-ttu-id="83641-129">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-129">N/n</span></span>|<span data-ttu-id="83641-130">122</span><span class="sxs-lookup"><span data-stu-id="83641-130">122</span></span>|       
|<span data-ttu-id="83641-131">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-131">X/x</span></span>|<span data-ttu-id="83641-132">7a</span><span class="sxs-lookup"><span data-stu-id="83641-132">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTime value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTime&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTime@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTime, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTime * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTime" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-133">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-133">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-134">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-134">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-135">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-135">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-136">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-136">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-137">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-137">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-138">分析 Utf8 字符串开头的 <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="83641-138">Parses a <see cref="T:System.DateTime" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-139">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-139"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-140">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-140">Formats supported:</span></span>

|<span data-ttu-id="83641-141">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-141">Format string</span></span>|<span data-ttu-id="83641-142">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-142">Example expected format</span></span>|<span data-ttu-id="83641-143">注释</span><span class="sxs-lookup"><span data-stu-id="83641-143">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="83641-144">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-144">G  (default)</span></span>|<span data-ttu-id="83641-145">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="83641-145">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="83641-146">R</span><span class="sxs-lookup"><span data-stu-id="83641-146">R</span></span>|<span data-ttu-id="83641-147">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="83641-147">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="83641-148">（RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="83641-148">(RFC 1123)</span></span>|
|<span data-ttu-id="83641-149">l</span><span class="sxs-lookup"><span data-stu-id="83641-149">l</span></span>|<span data-ttu-id="83641-150">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="83641-150">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="83641-151">（小写 RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="83641-151">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="83641-152">O</span><span class="sxs-lookup"><span data-stu-id="83641-152">O</span></span>|<span data-ttu-id="83641-153">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="83641-153">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="83641-154">（往返）</span><span class="sxs-lookup"><span data-stu-id="83641-154">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out DateTimeOffset value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.DateTimeOffset&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.DateTimeOffset@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As DateTimeOffset, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * DateTimeOffset * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.DateTimeOffset" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-155">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-155">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-156">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-156">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-157">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-157">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-158">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-158">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-159">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-159">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-160">分析 Utf8 字符串开头的 <see cref="T:System.DateTimeOffset" />。</span><span class="sxs-lookup"><span data-stu-id="83641-160">Parses a <see cref="T:System.DateTimeOffset" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-161">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-161"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-162">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-162">Formats supported:</span></span>

|<span data-ttu-id="83641-163">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-163">Format string</span></span>|<span data-ttu-id="83641-164">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-164">Example expected format</span></span>|<span data-ttu-id="83641-165">注释</span><span class="sxs-lookup"><span data-stu-id="83641-165">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="83641-166">G （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-166">G  (default)</span></span>|<span data-ttu-id="83641-167">05/25/2017 10:30:15</span><span class="sxs-lookup"><span data-stu-id="83641-167">05/25/2017 10:30:15</span></span>| |
|<span data-ttu-id="83641-168">R</span><span class="sxs-lookup"><span data-stu-id="83641-168">R</span></span>|<span data-ttu-id="83641-169">周二，03月 2017 08:08:05 GMT</span><span class="sxs-lookup"><span data-stu-id="83641-169">Tue, 03 Jan 2017 08:08:05 GMT</span></span>|<span data-ttu-id="83641-170">（RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="83641-170">(RFC 1123)</span></span>|
|<span data-ttu-id="83641-171">l</span><span class="sxs-lookup"><span data-stu-id="83641-171">l</span></span>|<span data-ttu-id="83641-172">周二，03月 2017 08:08:05 gmt</span><span class="sxs-lookup"><span data-stu-id="83641-172">tue, 03 jan 2017 08:08:05 gmt</span></span>|<span data-ttu-id="83641-173">（小写 RFC 1123）</span><span class="sxs-lookup"><span data-stu-id="83641-173">(Lowercase RFC 1123)</span></span>|
|<span data-ttu-id="83641-174">O</span><span class="sxs-lookup"><span data-stu-id="83641-174">O</span></span>|<span data-ttu-id="83641-175">2017-06-12T05:30:45.7680000-07:00</span><span class="sxs-lookup"><span data-stu-id="83641-175">2017-06-12T05:30:45.7680000-07:00</span></span>|<span data-ttu-id="83641-176">（往返）</span><span class="sxs-lookup"><span data-stu-id="83641-176">(Round-trippable)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out decimal value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Decimal&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Decimal@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Decimal, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * decimal * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Decimal" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-177">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-177">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-178">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-178">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-179">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-179">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-180">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-180">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-181">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-181">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-182">分析 Utf8 字符串开头的 <see cref="T:System.Decimal" />。</span><span class="sxs-lookup"><span data-stu-id="83641-182">Parses a <see cref="T:System.Decimal" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-183">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-183"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-184">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-184">Formats supported:</span></span>

|<span data-ttu-id="83641-185">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-185">Format string</span></span>|<span data-ttu-id="83641-186">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-186">Example expected format</span></span>|<span data-ttu-id="83641-187">注释</span><span class="sxs-lookup"><span data-stu-id="83641-187">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="83641-188">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-188">G/g  (default)</span></span>| |  
|<span data-ttu-id="83641-189">F/f</span><span class="sxs-lookup"><span data-stu-id="83641-189">F/f</span></span>|<span data-ttu-id="83641-190">12.45</span><span class="sxs-lookup"><span data-stu-id="83641-190">12.45</span></span>|<span data-ttu-id="83641-191">固定点</span><span class="sxs-lookup"><span data-stu-id="83641-191">Fixed point</span></span>|
|<span data-ttu-id="83641-192">E/e</span><span class="sxs-lookup"><span data-stu-id="83641-192">E/e</span></span>|<span data-ttu-id="83641-193">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="83641-193">1.245000e1</span></span>|<span data-ttu-id="83641-194">指数</span><span class="sxs-lookup"><span data-stu-id="83641-194">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out double value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Double@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Double, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * double * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Double" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-195">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-195">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-196">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-196">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-197">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-197">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-198">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-198">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-199">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-199">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-200">分析 Utf8 字符串开头的 <see cref="T:System.Double" />。</span><span class="sxs-lookup"><span data-stu-id="83641-200">Parses a <see cref="T:System.Double" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-201">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-201"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-202">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-202">Formats supported:</span></span>

|<span data-ttu-id="83641-203">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-203">Format string</span></span>|<span data-ttu-id="83641-204">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-204">Example expected format</span></span>|<span data-ttu-id="83641-205">注释</span><span class="sxs-lookup"><span data-stu-id="83641-205">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="83641-206">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-206">G/g  (default)</span></span>| |  
|<span data-ttu-id="83641-207">F/f</span><span class="sxs-lookup"><span data-stu-id="83641-207">F/f</span></span>|<span data-ttu-id="83641-208">12.45</span><span class="sxs-lookup"><span data-stu-id="83641-208">12.45</span></span>|<span data-ttu-id="83641-209">固定点</span><span class="sxs-lookup"><span data-stu-id="83641-209">Fixed point</span></span>|
|<span data-ttu-id="83641-210">E/e</span><span class="sxs-lookup"><span data-stu-id="83641-210">E/e</span></span>|<span data-ttu-id="83641-211">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="83641-211">1.245000e1</span></span>|<span data-ttu-id="83641-212">指数</span><span class="sxs-lookup"><span data-stu-id="83641-212">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out Guid value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Guid&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Guid@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Guid, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * Guid * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Guid" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-213">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-213">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-214">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-214">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-215">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-215">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-216">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-216">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-217">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-217">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-218">分析 Utf8 字符串开头的 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="83641-218">Parses a <see cref="T:System.Guid" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-219">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-219"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-220">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-220">Formats supported:</span></span>

|<span data-ttu-id="83641-221">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-221">Format string</span></span>|<span data-ttu-id="83641-222">预期格式</span><span class="sxs-lookup"><span data-stu-id="83641-222">Expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-223">D （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-223">D (default)</span></span>|<span data-ttu-id="83641-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="83641-224">nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn</span></span>|
|<span data-ttu-id="83641-225">B</span><span class="sxs-lookup"><span data-stu-id="83641-225">B</span></span>|<span data-ttu-id="83641-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span><span class="sxs-lookup"><span data-stu-id="83641-226">{nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn}</span></span>|
|<span data-ttu-id="83641-227">P</span><span class="sxs-lookup"><span data-stu-id="83641-227">P</span></span>|<span data-ttu-id="83641-228">（nnnnnnnn-nnnn-nnnnnnnnnnnn）</span><span class="sxs-lookup"><span data-stu-id="83641-228">(nnnnnnnn-nnnn-nnnn-nnnn-nnnnnnnnnnnn)</span></span>|
|<span data-ttu-id="83641-229">N</span><span class="sxs-lookup"><span data-stu-id="83641-229">N</span></span>|<span data-ttu-id="83641-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span><span class="sxs-lookup"><span data-stu-id="83641-230">nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out short value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Short, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-231">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-231">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-232">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-232">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-233">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-233">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-234">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-234">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-235">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-235">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-236">分析 Utf8 字符串开头的 <see cref="T:System.Int16" />。</span><span class="sxs-lookup"><span data-stu-id="83641-236">Parses an <see cref="T:System.Int16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-237">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-237"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-238">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-238">Formats supported:</span></span>

|<span data-ttu-id="83641-239">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-239">Format string</span></span>|<span data-ttu-id="83641-240">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-240">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-241">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-241">G/g (default)</span></span>| |
|<span data-ttu-id="83641-242">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-242">D/d</span></span>|<span data-ttu-id="83641-243">32767</span><span class="sxs-lookup"><span data-stu-id="83641-243">32767</span></span>|
|<span data-ttu-id="83641-244">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-244">N/n</span></span>|<span data-ttu-id="83641-245">32,767</span><span class="sxs-lookup"><span data-stu-id="83641-245">32,767</span></span>|       
|<span data-ttu-id="83641-246">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-246">X/x</span></span>|<span data-ttu-id="83641-247">7fff</span><span class="sxs-lookup"><span data-stu-id="83641-247">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out int value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Integer, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-248">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-248">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-249">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-249">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-250">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-250">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-251">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-251">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-252">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-252">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-253">分析 Utf8 字符串开头的 <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="83641-253">Parses an <see cref="T:System.Int32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-254">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-254"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-255">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-255">Formats supported:</span></span>

|<span data-ttu-id="83641-256">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-256">Format string</span></span>|<span data-ttu-id="83641-257">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-257">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-258">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-258">G/g (default)</span></span>| |
|<span data-ttu-id="83641-259">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-259">D/d</span></span>|<span data-ttu-id="83641-260">32767</span><span class="sxs-lookup"><span data-stu-id="83641-260">32767</span></span>|
|<span data-ttu-id="83641-261">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-261">N/n</span></span>|<span data-ttu-id="83641-262">32,767</span><span class="sxs-lookup"><span data-stu-id="83641-262">32,767</span></span>|       
|<span data-ttu-id="83641-263">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-263">X/x</span></span>|<span data-ttu-id="83641-264">7fff</span><span class="sxs-lookup"><span data-stu-id="83641-264">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out long value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Int64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Long, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * int64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-265">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-265">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-266">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-266">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-267">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-267">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-268">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-268">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-269">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-269">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-270">分析 Utf8 字符串开头的 <see cref="T:System.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="83641-270">Parses an <see cref="T:System.Int64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-271">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-271"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-272">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-272">Formats supported:</span></span>

|<span data-ttu-id="83641-273">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-273">Format string</span></span>|<span data-ttu-id="83641-274">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-274">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-275">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-275">G/g (default)</span></span>| |
|<span data-ttu-id="83641-276">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-276">D/d</span></span>|<span data-ttu-id="83641-277">32767</span><span class="sxs-lookup"><span data-stu-id="83641-277">32767</span></span>|
|<span data-ttu-id="83641-278">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-278">N/n</span></span>|<span data-ttu-id="83641-279">32,767</span><span class="sxs-lookup"><span data-stu-id="83641-279">32,767</span></span>|       
|<span data-ttu-id="83641-280">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-280">X/x</span></span>|<span data-ttu-id="83641-281">7fff</span><span class="sxs-lookup"><span data-stu-id="83641-281">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out sbyte value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] int8&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.SByte@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As SByte, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * sbyte * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.SByte" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-282">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-282">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-283">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-283">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-284">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-284">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-285">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-285">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-286">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-286">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-287">分析 Utf8 字符串开头的 <see cref="T:System.SByte" />。</span><span class="sxs-lookup"><span data-stu-id="83641-287">Parses an <see cref="T:System.SByte" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-288">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-288"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-289">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-289">Formats supported:</span></span> 

|<span data-ttu-id="83641-290">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-290">Format string</span></span>|<span data-ttu-id="83641-291">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-291">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-292">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-292">G/g (default)</span></span>| |
|<span data-ttu-id="83641-293">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-293">D/d</span></span>|<span data-ttu-id="83641-294">122</span><span class="sxs-lookup"><span data-stu-id="83641-294">122</span></span>|
|<span data-ttu-id="83641-295">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-295">N/n</span></span>|<span data-ttu-id="83641-296">122</span><span class="sxs-lookup"><span data-stu-id="83641-296">122</span></span>|       
|<span data-ttu-id="83641-297">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-297">X/x</span></span>|<span data-ttu-id="83641-298">7a</span><span class="sxs-lookup"><span data-stu-id="83641-298">7a</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out float value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] float32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.Single@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As Single, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * single * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Single" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-299">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-299">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-300">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-300">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-301">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-301">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-302">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-302">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-303">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-303">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-304">分析 Utf8 字符串开头的 <see cref="T:System.Single" />。</span><span class="sxs-lookup"><span data-stu-id="83641-304">Parses a <see cref="T:System.Single" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-305">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-305"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-306">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-306">Formats supported:</span></span> 

<span data-ttu-id="83641-307">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-307">Format string</span></span>|<span data-ttu-id="83641-308">示例应为 fornmat</span><span class="sxs-lookup"><span data-stu-id="83641-308">Example expected fornmat</span></span>|<span data-ttu-id="83641-309">注释</span><span class="sxs-lookup"><span data-stu-id="83641-309">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="83641-310">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-310">G/g  (default)</span></span>| |  
|<span data-ttu-id="83641-311">F/f</span><span class="sxs-lookup"><span data-stu-id="83641-311">F/f</span></span>|<span data-ttu-id="83641-312">12.45</span><span class="sxs-lookup"><span data-stu-id="83641-312">12.45</span></span>|<span data-ttu-id="83641-313">固定点</span><span class="sxs-lookup"><span data-stu-id="83641-313">Fixed point</span></span>|
|<span data-ttu-id="83641-314">E/e</span><span class="sxs-lookup"><span data-stu-id="83641-314">E/e</span></span>|<span data-ttu-id="83641-315">1.245000e1</span><span class="sxs-lookup"><span data-stu-id="83641-315">1.245000e1</span></span>|<span data-ttu-id="83641-316">指数</span><span class="sxs-lookup"><span data-stu-id="83641-316">Exponential</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out TimeSpan value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.TimeSpan&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.TimeSpan@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As TimeSpan, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * TimeSpan * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-317">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-317">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-318">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-318">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-319">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-319">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-320">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-320">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-321">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-321">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-322">分析 Utf8 字符串开头的 <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="83641-322">Parses a <see cref="T:System.TimeSpan" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-323">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-323"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-324">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-324">Formats supported:</span></span> 

|<span data-ttu-id="83641-325">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-325">Format string</span></span>|<span data-ttu-id="83641-326">预期格式</span><span class="sxs-lookup"><span data-stu-id="83641-326">Expected format</span></span>|<span data-ttu-id="83641-327">注释</span><span class="sxs-lookup"><span data-stu-id="83641-327">Comments</span></span>|
|--|--|--|
|<span data-ttu-id="83641-328">c/t/T （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-328">c/t/T (default)</span></span>|<span data-ttu-id="83641-329">[-][d.]hh： mm： ss [. fffffff]</span><span class="sxs-lookup"><span data-stu-id="83641-329">[-][d.]hh:mm:ss[.fffffff]</span></span>|<span data-ttu-id="83641-330">（常量格式）</span><span class="sxs-lookup"><span data-stu-id="83641-330">(constant format)</span></span>|
|<span data-ttu-id="83641-331">G</span><span class="sxs-lookup"><span data-stu-id="83641-331">G</span></span>|<span data-ttu-id="83641-332">[-] d:hh： mm： ss. fffffff</span><span class="sxs-lookup"><span data-stu-id="83641-332">[-]d:hh:mm:ss.fffffff</span></span>||<span data-ttu-id="83641-333">（常规长）</span><span class="sxs-lookup"><span data-stu-id="83641-333">(general long)</span></span>|
|<span data-ttu-id="83641-334">g</span><span class="sxs-lookup"><span data-stu-id="83641-334">g</span></span>|<span data-ttu-id="83641-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span><span class="sxs-lookup"><span data-stu-id="83641-335">[-][d:][h]h:mm:ss[.f[f[f[f[f[f[f]]]]]]</span></span>|<span data-ttu-id="83641-336">（一般简称）</span><span class="sxs-lookup"><span data-stu-id="83641-336">(general short)</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ushort value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int16&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt16@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UShort, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint16 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt16" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-337">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-337">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-338">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-338">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-339">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-339">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-340">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-340">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-341">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-341">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-342">分析 Utf8 字符串开头的 <see cref="T:System.UInt16" />。</span><span class="sxs-lookup"><span data-stu-id="83641-342">Parses a <see cref="T:System.UInt16" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-343">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-343"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-344">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-344">Formats supported:</span></span>

|<span data-ttu-id="83641-345">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-345">Format string</span></span>|<span data-ttu-id="83641-346">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-346">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-347">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-347">G/g (default)</span></span>| |
|<span data-ttu-id="83641-348">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-348">D/d</span></span>|<span data-ttu-id="83641-349">32767</span><span class="sxs-lookup"><span data-stu-id="83641-349">32767</span></span>|
|<span data-ttu-id="83641-350">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-350">N/n</span></span>|<span data-ttu-id="83641-351">32,767</span><span class="sxs-lookup"><span data-stu-id="83641-351">32,767</span></span>|       
|<span data-ttu-id="83641-352">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-352">X/x</span></span>|<span data-ttu-id="83641-353">7fff</span><span class="sxs-lookup"><span data-stu-id="83641-353">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out uint value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int32&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt32@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As UInteger, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint32 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt32" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-354">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-354">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-355">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-355">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-356">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-356">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-357">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-357">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-358">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-358">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-359">分析 Utf8 字符串开头的 <see cref="T:System.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="83641-359">Parses a <see cref="T:System.UInt32" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-360">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-360"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-361">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-361">Formats supported:</span></span>

|<span data-ttu-id="83641-362">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-362">Format string</span></span>|<span data-ttu-id="83641-363">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-363">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-364">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-364">G/g (default)</span></span>| |
|<span data-ttu-id="83641-365">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-365">D/d</span></span>|<span data-ttu-id="83641-366">32767</span><span class="sxs-lookup"><span data-stu-id="83641-366">32767</span></span>|
|<span data-ttu-id="83641-367">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-367">N/n</span></span>|<span data-ttu-id="83641-368">32,767</span><span class="sxs-lookup"><span data-stu-id="83641-368">32,767</span></span>|       
|<span data-ttu-id="83641-369">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-369">X/x</span></span>|<span data-ttu-id="83641-370">7fff</span><span class="sxs-lookup"><span data-stu-id="83641-370">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;byte&gt; source, out ulong value, out int bytesConsumed, char standardFormat = '\0');" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] unsigned int64&amp; value, [out] int32&amp; bytesConsumed, char standardFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.Text.Utf8Parser.TryParse(System.ReadOnlySpan{System.Byte},System.UInt64@,System.Int32@,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (source As ReadOnlySpan(Of Byte), ByRef value As ULong, ByRef bytesConsumed As Integer, Optional standardFormat As Char = '\0') As Boolean" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;byte&gt; * uint64 * int * char -&gt; bool" Usage="System.Buffers.Text.Utf8Parser.TryParse (source, value, bytesConsumed, standardFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netcore-2.1;netcore-2.2;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.UInt64" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
        <Parameter Name="standardFormat" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="83641-371">要分析的 Utf8 字符串。</span><span class="sxs-lookup"><span data-stu-id="83641-371">The Utf8 string to parse.</span></span></param>
        <param name="value"><span data-ttu-id="83641-372">当方法返回时，如果分析操作成功，则包含从 <paramref name="source" /> 分析的值。</span><span class="sxs-lookup"><span data-stu-id="83641-372">When the method returns, contains the value parsed from <paramref name="source" />, if the parsing operation succeeded.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="83641-373">当方法返回时，如果分析操作成功，则包含已分析的子字符串的字节长度。</span><span class="sxs-lookup"><span data-stu-id="83641-373">If the parsing operation was successful, contains the length in bytes of the parsed substring when the method returns.</span></span> <span data-ttu-id="83641-374">如果方法失败，则 <paramref name="bytesConsumed" /> 设置为 0。</span><span class="sxs-lookup"><span data-stu-id="83641-374">If the method fails, <paramref name="bytesConsumed" /> is set to 0.</span></span></param>
        <param name="standardFormat"><span data-ttu-id="83641-375">Utf8 字符串的预期格式。</span><span class="sxs-lookup"><span data-stu-id="83641-375">The expected format of the Utf8 string.</span></span></param>
        <summary><span data-ttu-id="83641-376">分析 Utf8 字符串开头的 <see cref="T:System.UInt64" />。</span><span class="sxs-lookup"><span data-stu-id="83641-376">Parses a <see cref="T:System.UInt64" /> at the start of a Utf8 string.</span></span></summary>
        <returns><span data-ttu-id="83641-377">如果成功，则为 <see langword="true" />；如果字符串在语法上无效或者出现溢出或下溢，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="83641-377"><see langword="true" /> for success; <see langword="false" /> if the string was not syntactically valid or an overflow or underflow occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="83641-378">支持的格式：</span><span class="sxs-lookup"><span data-stu-id="83641-378">Formats supported:</span></span>

|<span data-ttu-id="83641-379">格式字符串</span><span class="sxs-lookup"><span data-stu-id="83641-379">Format string</span></span>|<span data-ttu-id="83641-380">示例格式应为</span><span class="sxs-lookup"><span data-stu-id="83641-380">Example expected format</span></span>|
|--|--|
|<span data-ttu-id="83641-381">G/g （默认值）</span><span class="sxs-lookup"><span data-stu-id="83641-381">G/g (default)</span></span>| |
|<span data-ttu-id="83641-382">D/d</span><span class="sxs-lookup"><span data-stu-id="83641-382">D/d</span></span>|<span data-ttu-id="83641-383">32767</span><span class="sxs-lookup"><span data-stu-id="83641-383">32767</span></span>|
|<span data-ttu-id="83641-384">N/n</span><span class="sxs-lookup"><span data-stu-id="83641-384">N/n</span></span>|<span data-ttu-id="83641-385">32,767</span><span class="sxs-lookup"><span data-stu-id="83641-385">32,767</span></span>|       
|<span data-ttu-id="83641-386">X/x</span><span class="sxs-lookup"><span data-stu-id="83641-386">X/x</span></span>|<span data-ttu-id="83641-387">7fff</span><span class="sxs-lookup"><span data-stu-id="83641-387">7fff</span></span>|

]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
