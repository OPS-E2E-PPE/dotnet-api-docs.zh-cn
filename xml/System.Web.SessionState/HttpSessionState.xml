<Type Name="HttpSessionState" FullName="System.Web.SessionState.HttpSessionState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfbc0b0226801dd3889986b7cb28476e5f5b6d17" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77102411" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpSessionState : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpSessionState extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.HttpSessionState" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpSessionState&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSessionState sealed : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HttpSessionState = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供对会话状态值以及会话级别设置和生存期管理方法的访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 提供会话状态管理，使你能够存储与跨多个请求的唯一浏览器会话关联的信息。 可以存储由键名称或数字索引引用的值的集合。 可以使用 <xref:System.Web.SessionState.HttpSessionState> 类访问会话值和功能，该类可通过当前 <xref:System.Web.HttpContext>的 <xref:System.Web.HttpContext.Session%2A> 属性或 <xref:System.Web.UI.Page>的 <xref:System.Web.UI.Page.Session%2A> 属性访问。

 会话数据与使用唯一标识符的特定浏览器会话关联。 默认情况下，此标识符存储在浏览器的不过期会话 cookie 中，但你也可以通过将 `cookieless` 特性设置为应用程序配置的[sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100))元素中 `true` 或 <xref:System.Web.HttpCookieMode.UseUri>，将应用程序配置为将会话标识符存储在 URL 中。 你可以通过为 `cookieless` 属性指定值 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 来使 ASP.NET 确定浏览器是否支持 cookie。 还可以通过为 `cookieless` 属性指定值 <xref:System.Web.HttpCookieMode.AutoDetect> 来确定是否为浏览器启用了 cookie。 如果在指定 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 时支持 cookie，或在指定 <xref:System.Web.HttpCookieMode.AutoDetect> 时启用 cookie，则会话标识符将存储在 cookie 中;否则，会话标识符将存储在 URL 中。

 会话在第一次请求期间启动，会话值将一直保持，只要浏览器发出新请求，就 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 属性传递中指定的分钟数。 新会话开始时，将引发会话 <xref:System.Web.SessionState.SessionStateModule.Start> 事件。 在会话开始时，可以使用此事件执行任何其他操作，例如设置默认会话值。 当会话超时时，将调用 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 方法，或关闭 ASP.NET 应用程序，将引发会话 <xref:System.Web.SessionState.SessionStateModule.End> 事件。 可以使用此事件执行任何必要的清理。 仅当会话状态 `mode` 设置为 <xref:System.Web.SessionState.SessionStateMode.InProc>时，才引发 <xref:System.Web.SessionState.SessionStateModule.End> 事件。

 若要提高性能，使用 cookie 的会话在数据实际存储在 <xref:System.Web.UI.Page.Session%2A> 对象之前，不会分配会话存储。 有关详细信息，请参阅 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 属性。

 会话状态不会在 ASP.NET 应用程序边界之间保持。 如果浏览器导航到另一个应用程序，则会话信息不可用于新应用程序。

 默认情况下，会话值存储在 Web 服务器的内存中。 你还可以在 SQL Server 数据库、ASP.NET 状态服务器或自定义服务器中存储会话值。 这使您可以在 ASP.NET 或 IIS 进程或 ASP.NET 应用程序重启的情况下保留会话值并使会话值在 Web 场中的所有服务器上可用。 通过将 `mode` 特性设置为应用程序配置的[sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100))元素中的有效 <xref:System.Web.SessionState.SessionStateMode> 值来配置此行为。 有关详细信息，请参阅[会话状态模式](https://docs.microsoft.com/previous-versions/aspnet/ms178586(v=vs.100))。

 会话状态的替代项包括应用程序状态（请参阅 <xref:System.Web.HttpApplication.Application%2A> 属性）和 ASP.NET 缓存（请参阅 <xref:System.Web.Caching> 命名空间），该缓存存储可由 ASP.NET 应用程序的所有用户访问的变量;ASP.NET 配置文件（请参阅 <xref:System.Web.Profile> 命名空间），该配置文件将用户值保留在数据存储中，而不会使用超时值过期;ASP.NET <xref:System.Web.UI.WebControls?displayProperty=nameWithType>，它在 <xref:System.Web.UI.Control.ViewState%2A>中持久保存控制值;<xref:System.Web.HttpResponse.Cookies%2A>;<xref:System.Web.HttpRequest.QueryString%2A> 属性;HTML 窗体上的和字段，可通过 HTTP `POST` 使用 <xref:System.Web.HttpRequest.Form%2A> 集合。 有关会话状态与其他状态管理替代选项之间的差异的详细信息，请参阅[ASP.NET State Management 建议](https://msdn.microsoft.com/library/af79fa0d-4bc8-47a6-9915-d8e355bfb732)。



## Examples
 下面的代码示例设置并从会话状态中检索值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[HttpSessionState#30](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/session2cs.aspx#30)]
 [!code-aspx-vb[HttpSessionState#30](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/session2vb.aspx#30)]

 ]]></format>
    </remarks>
    <altmember cref="N:System.Web.Profile" />
    <altmember cref="N:System.Web.Caching" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">脚本攻击概述</related>
  </Docs>
  <Members>
    <Member MemberName="Abandon">
      <MemberSignature Language="C#" Value="public void Abandon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abandon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Abandon" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abandon ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abandon();" />
      <MemberSignature Language="F#" Value="member this.Abandon : unit -&gt; unit" Usage="httpSessionState.Abandon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消当前会话。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 一旦调用 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 方法，当前会话将不再有效，并且可以启动新的会话。 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 导致引发 <xref:System.Web.SessionState.SessionStateModule.End> 事件。 下一个请求将引发新的 <xref:System.Web.SessionState.SessionStateModule.Start> 事件。

 默认情况下，将回收被放弃或过期会话的会话标识符。 也就是说，如果发出的请求包括已过期或已放弃的会话的会话标识符，则使用相同的会话标识符启动一个新会话。 可以通过将[sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100))配置元素 `regenerateExpiredSessionId` 特性设置为 `true`来禁用此设置。 有关详细信息，请参阅[会话标识符](https://msdn.microsoft.com/library/146ca206-d151-4f2e-a548-bcca05ccf0cb)。

 仅当 <xref:System.Web.SessionState.HttpSessionState.Mode%2A> 属性设置为 <xref:System.Web.SessionState.SessionStateMode.InProc>时，才支持 <xref:System.Web.SessionState.SessionStateModule.End> 事件。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Add : string * obj -&gt; unit" Usage="httpSessionState.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">要添加到会话状态集合的项的名称。</param>
        <param name="value">要添加到会话状态集合的项的值。</param>
        <summary>向会话状态集合添加一个新项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果 `name` 参数引用现有的会话状态项，则将使用指定的 `value`覆盖现有项。



## Examples
 下面的示例演示如何使用 <xref:System.Web.SessionState.HttpSessionState.Add%2A> 方法将值存储在会话状态中。 它还说明了如何使用 <xref:System.Web.SessionState.HttpSessionState.Remove%2A> 方法删除会话状态中的值。 <xref:System.Web.UI.WebControls.Repeater> 控件用于在网页上显示内容会话状态。 <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> 方法用于循环访问会话状态集合并填充 <xref:System.Web.UI.WebControls.Repeater> 控件。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)">脚本攻击概述</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="httpSessionState.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从会话状态集合中删除所有键和值。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CodePage : int with get, set" Usage="System.Web.SessionState.HttpSessionState.CodePage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前会话的字符集标识符。</summary>
        <value>当前会话的字符集标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 字符集（代码页）用于解释多字节字符数据、确定字符值和排序顺序。 代码页设置仅适用于多字节字符数据，不适用于 Unicode 字符数据。

 提供此 <xref:System.Web.SessionState.IHttpSessionState.CodePage%2A> 属性是为了与 ASP 的早期版本兼容。 如果不需要保持与 ASP 页面的向后兼容性，请改用 <xref:System.Web.HttpResponse.ContentEncoding%2A> 属性。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.HttpSessionState Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Contents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contents As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::HttpSessionState ^ Contents { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.SessionState.HttpSessionState" Usage="System.Web.SessionState.HttpSessionState.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对当前会话状态对象的引用。</summary>
        <value>当前 <see cref="T:System.Web.SessionState.HttpSessionState" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 提供 <xref:System.Web.SessionState.HttpSessionState.Contents%2A> 属性是为了与 ASP 的早期版本兼容。



## Examples
 下面的代码示例列出了 <xref:System.Web.SessionState.HttpSessionState.Contents%2A> 属性中的项名称和值。

 [!code-csharp[HttpSessionState#9](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#9)]
 [!code-vb[HttpSessionState#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#9)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.SessionState.HttpSessionState.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否为无 Cookie 会话配置应用程序。</summary>
        <value>指示是否为无 Cookie 会话配置应用程序的其中一个 <see cref="T:System.Web.HttpCookieMode" /> 值。 默认为 <see cref="F:System.Web.HttpCookieMode.UseCookies" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当 `true`<xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 时，<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> 属性返回 <xref:System.Web.HttpCookieMode.UseUri>;否则，<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> 属性返回 <xref:System.Web.HttpCookieMode.UseCookies>。



## Examples
 下面的代码示例将 `cookieless` session 特性设置为 web.config 文件中 `true`。 对于此示例应用程序配置，<xref:System.Web.SessionState.HttpSessionState.CookieMode%2A> 属性将返回 <xref:System.Web.HttpCookieMode.UseUri>。

```
<configuration>
  <system.web>
    <sessionState
      mode="InProc"
      cookieless="true"
      timeout="30" />
  </system.web>
</configuration>
```

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="httpSessionState.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Array" />，它接收会话值。</param>
        <param name="index"><paramref name="array" /> 中从零开始的索引，在此处开始复制。</param>
        <summary>从数组中指定索引处开始，将会话状态值集合复制到一维数组。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.SessionState.HttpSessionState.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取会话状态集合中的项数。</summary>
        <value>集合中的项数。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpSessionState.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回一个枚举器，它可用于读取当前会话中的所有会话状态变量名称。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> 可以循环访问会话状态集合中的变量名称。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的示例演示如何使用 <xref:System.Web.SessionState.HttpSessionState.Add%2A> 方法将值存储在会话状态中。 它还说明了如何使用 <xref:System.Web.SessionState.HttpSessionState.Remove%2A> 方法删除会话状态中的值。 <xref:System.Web.UI.WebControls.Repeater> 控件用于在网页上显示会话状态的内容。 <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> 方法用于循环访问会话状态集合并填充 <xref:System.Web.UI.WebControls.Repeater> 控件。

 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="IsCookieless">
      <MemberSignature Language="C#" Value="public bool IsCookieless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCookieless" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCookieless As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCookieless { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCookieless : bool" Usage="System.Web.SessionState.HttpSessionState.IsCookieless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示会话 ID 是嵌入在 URL 中还是存储在 HTTP Cookie 中。</summary>
        <value>如果会话嵌入在 URL 中，则为 <see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET 通过每个浏览器唯一识别会话。 默认情况下，会话的唯一标识符存储在浏览器中未过期的会话 cookie 中。 您可以通过将 `cookieless` 特性设置为在[sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100))配置元素中 `true` 来指定不在 cookie 中存储会话标识符。

> [!NOTE]
>  若要提高应用程序的安全性，你的应用程序应允许用户注销，此时应调用 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 方法。 这将使用 URL 中的唯一标识符检索存储在用户的会话中的专用数据，从而减少不需要的源的潜在原因。

 ASP.NET 通过自动将唯一会话 ID 插入页面的 URL 来维护无 cookie 会话状态。 例如，ASP.NET 修改了以下 URL 以包含唯一的会话 ID lit3py55t21z5v55vlm25s55：

```
http://www.example.com/(S(4danlfat035muve4g0mvgfrr))/orderform.aspx
```

 ASP.NET 在将每个页面发送到浏览器之前，通过将会话 ID 值嵌入到浏览器中来修改所有请求的页面中包含的链接。 只要用户遵循站点提供的链接路径，就会保持会话状态。 但是，如果用户代理重写 URL，则会话状态实例将丢失。

 会话 ID 嵌入在 URL 中应用程序名称后、任何剩余文件或虚拟目录标识符之前的斜杠之后。 这允许 ASP.NET 在涉及请求中的 <xref:System.Web.SessionState.SessionStateModule> 之前解析应用程序名称。

 默认情况下，将回收无 cookie 会话中使用的会话标识符。 也就是说，如果使用已过期的会话 ID 发出请求，将使用随请求提供的会话 ID 启动一个新会话。 当包含无 cookie 会话 ID 的链接共享多个浏览器（可能通过搜索引擎或其他程序）时，此行为可能导致不必要的会话数据共享。 可以通过禁用会话标识符回收来减少多个客户端共享会话数据的可能性。 为此，请将[sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100))配置元素的 `regenerateExpiredSessionId` 属性设置为 `true`。 当使用过期的会话 ID 发出无 cookie 会话请求时，这将导致生成新的会话 ID。 请注意，如果使用过期的会话 ID 发出的请求使用 HTTP `POST` 方法，则 `regenerateExpiredSessionId` `true`时，任何已发送的数据都将丢失，因为 ASP.NET 会执行重定向以确保浏览器在 URL 中具有新的会话标识符。

> [!NOTE]
>  将 `regenerateExpiredSessionId` 特性设置为 `true` 可以减少不必要的会话数据共享的可能性，而不会通过获取 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值并将其包含在向服务器发出的请求中来防范不需要的源，从而获得对另一个用户会话的访问。 如果在会话状态中存储私有或敏感信息，则建议使用 SSL 对包含 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>的浏览器和服务器之间的任何通信进行加密。



## Examples
 下面的代码示例在 web.config 文件中将 `cookieless` session 特性设置为 true。

```
<configuration>
  <system.web>
    <sessionState
      mode="InProc"
      cookieless="true"
      regenerateExpiredSessionId="true"
      timeout="30" />
  </system.web>
</configuration>
```

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="IsNewSession">
      <MemberSignature Language="C#" Value="public bool IsNewSession { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNewSession" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNewSession As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNewSession { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNewSession : bool" Usage="System.Web.SessionState.HttpSessionState.IsNewSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示会话是否是与当前请求一起创建的。</summary>
        <value>如果会话是与当前请求一起创建的，则为 <see langword="true" />；否则，为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.SessionState.HttpSessionState.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示会话是否为只读。</summary>
        <value>如果会话为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.SessionState.HttpSessionState.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示对会话状态值的集合的访问是否是同步（线程安全）的。</summary>
        <value>如果对集合的访问是同步的（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>获取或设置个别会话值。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">会话值的数字索引。</param>
        <summary>按数字索引获取或设置会话值。</summary>
        <value>存储在指定索引处的会话状态值；如果该项不存在，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.SessionState.HttpSessionState.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">会话值的键名称。</param>
        <summary>按名称获取或设置会话值。</summary>
        <value>具有指定名称的会话状态值；如果该项不存在，则为 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameObjectCollectionBase/KeysCollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ Keys { System::Collections::Specialized::NameObjectCollectionBase::KeysCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" Usage="System.Web.SessionState.HttpSessionState.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameObjectCollectionBase+KeysCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取存储在会话状态集合中所有值的键的集合。</summary>
        <value>包含所有会话键的 <see cref="T:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.LCID" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="System.Web.SessionState.HttpSessionState.LCID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当前会话的区域设置标识符 (LCID)。</summary>
        <value>指定当前会话的区域性的 <see cref="T:System.Globalization.CultureInfo" /> 实例。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 提供 <xref:System.Web.SessionState.HttpSessionState.LCID%2A> 属性是为了与 ASP 的早期版本兼容。 如果不需要保持与 ASP 页面的向后兼容性，请改用 <xref:System.Globalization.CultureInfo.LCID%2A> 属性。

 ASP.NET 不会将区域设置标识符存储在会话状态中。 <xref:System.Web.SessionState.HttpSessionState.LCID%2A> 属性访问 <xref:System.Globalization.CultureInfo.LCID%2A> 属性以获取和设置标识符。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.SessionState.SessionStateMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SessionState.SessionStateMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As SessionStateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SessionState::SessionStateMode Mode { System::Web::SessionState::SessionStateMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.SessionState.SessionStateMode" Usage="System.Web.SessionState.HttpSessionState.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取当前会话状态模式。</summary>
        <value><see cref="T:System.Web.SessionState.SessionStateMode" /> 值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 有关如何为 <xref:System.Web.SessionState.SessionStateMode.StateServer> 或 <xref:System.Web.SessionState.SessionStateMode.SQLServer> 会话状态存储配置服务器的信息，请参阅[ASP.NET 会话状态概述](https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100))。



## Examples
 下面的代码示例将 `mode` session 特性设置为 web.config 文件中 <xref:System.Web.SessionState.SessionStateMode.SQLServer>。 对于 SQL Server 会话模式，还需要 `sqlConnectionString` 特性。

```
<configuration>
  <system.web>
    <sessionState
      mode="SQLServer"
      sqlConnectionString="Data Source=localhost;Integrated Security=SSPI"
      cookieless="true"
      timeout="30" />
  </system.web>
</configuration>
```

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">ASP.NET 会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="httpSessionState.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">要从会话状态集合中删除的项的名称。</param>
        <summary>从会话状态集合中删除某项。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果会话状态集合不包含具有指定 `name`的元素，则集合保持不变。 不引发异常。



## Examples
 下面的示例演示如何使用 <xref:System.Web.SessionState.HttpSessionState.Add%2A> 方法将值存储在会话状态中。 它还说明了如何使用 <xref:System.Web.SessionState.HttpSessionState.Remove%2A> 方法删除会话状态中的值。 <xref:System.Web.UI.WebControls.Repeater> 控件用于在网页上显示会话状态的内容。 <xref:System.Web.SessionState.HttpSessionState.GetEnumerator%2A> 方法用于循环访问会话状态集合并填充 <xref:System.Web.UI.WebControls.Repeater> 控件。

 [!code-aspx-csharp[HttpSessionState#13](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/HttpSessionStateAddCS.aspx#13)]
 [!code-aspx-vb[HttpSessionState#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/HttpSessionStateAddVB.aspx#13)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAll();" />
      <MemberSignature Language="F#" Value="member this.RemoveAll : unit -&gt; unit" Usage="httpSessionState.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>从会话状态集合中删除所有键和值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.SessionState.HttpSessionState.RemoveAll%2A> 执行与 <xref:System.Web.SessionState.HttpSessionState.Clear%2A>相同的功能。

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.HttpSessionState.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="member this.RemoveAt : int -&gt; unit" Usage="httpSessionState.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">要从会话状态集合中删除的项的索引。</param>
        <summary>删除会话状态集合中指定索引处的项。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> 小于零。

-或-

 <paramref name="index" /> 等于或大于 <see cref="P:System.Web.SessionState.HttpSessionState.Count" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="SessionID">
      <MemberSignature Language="C#" Value="public string SessionID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionID" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SessionID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SessionID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionID : string" Usage="System.Web.SessionState.HttpSessionState.SessionID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取会话的唯一标识符。</summary>
        <value>会话的唯一标识符。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 属性用于唯一标识具有服务器上的会话数据的浏览器。 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值由 ASP.NET 随机生成，并存储在浏览器中未过期的会话 cookie 中。 然后，会在每次请求 ASP.NET 应用程序的 cookie 中发送 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值。

 如果要禁止在 ASP.NET 应用程序中使用 cookie 并仍使用会话状态，则可以将应用程序配置为在 URL 而不是 cookie 中存储会话标识符，方法是在应用程序的 web.config 文件中将[sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100))配置元素的 `cookieless` 特性设置为 `true`或 <xref:System.Web.HttpCookieMode.UseUri>。 你可以通过为 `cookieless` 属性指定值 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 来使 ASP.NET 确定浏览器是否支持 cookie。 还可以通过为 `cookieless` 属性指定值 <xref:System.Web.HttpCookieMode.AutoDetect> 来确定是否为浏览器启用了 cookie。 如果在指定 <xref:System.Web.HttpCookieMode.UseDeviceProfile> 时支持 cookie，或在指定 <xref:System.Web.HttpCookieMode.AutoDetect> 时启用 cookie，则会话标识符将存储在 cookie 中;否则，会话标识符将存储在 URL 中。 有关详细信息，请参阅 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 属性。

 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 在服务器和浏览器之间以明文形式发送，无论是在 cookie 中，还是在 URL 中。 因此，不需要的源可以通过获取 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值并将其包含在对服务器的请求中来访问其他用户会话。 如果在会话状态中存储私有或敏感信息，则建议使用 SSL 对包含 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>的浏览器和服务器之间的任何通信进行加密。

 使用基于 cookie 的会话状态时，在使用 <xref:System.Web.UI.Page.Session%2A> 对象之前，ASP.NET 不会为会话数据分配存储空间。 因此，在访问 session 对象之前，会为每个页面请求生成新的会话 ID。 如果你的应用程序需要整个会话的静态会话 ID，你可以在应用程序的 global.asax 文件中实现 `Session_Start` 方法，并将数据存储在 <xref:System.Web.UI.Page.Session%2A> 对象中以修复会话 ID，或者，你可以使用应用程序的另一部分中的代码在 <xref:System.Web.UI.Page.Session%2A> 对象中显式存储数据。

 如果应用程序使用无 cookie 会话状态，则将在第一个页面视图上生成会话 ID，并为整个会话维护该会话 ID。



## Examples
 下面的代码示例演示一个 web.config 文件，该文件将会话状态配置为使用无 cookie 会话标识符。 有关详细信息，请参阅 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 属性。

```
<configuration>
  <system.web>
    <sessionState
      cookieless="true"
      regenerateExpiredSessionId="true"
      timeout="30" />
  </system.web>
</configuration>
```

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public System.Web.HttpStaticObjectsCollection StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollection StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StaticObjects As HttpStaticObjectsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpStaticObjectsCollection ^ StaticObjects { System::Web::HttpStaticObjectsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollection" Usage="System.Web.SessionState.HttpSessionState.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取由 ASP.NET 应用程序文件 Global.asax 中的 <see langword="&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;" /> 标记声明的对象的集合。</summary>
        <value>一个 <see cref="T:System.Web.HttpStaticObjectsCollection" />，它包含在 Global.asax 文件中声明的对象。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果页面上的对象不支持序列化并且 <xref:System.Web.SessionState.HttpSessionState.Mode%2A> 在进程外（<xref:System.Web.SessionState.SessionStateMode.SQLServer> 或 <xref:System.Web.SessionState.SessionStateMode.StateServer>），则将不会创建对象，也不会将其添加到此集合中。

 提供 <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> 属性是为了与 ASP 的早期版本兼容。



## Examples
 下面的代码示例列出了 <xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A> 集合中对象的 `id` 和对象类型。

 [!code-csharp[HttpSessionState#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpSessionState/CS/snippetscs.aspx#10)]
 [!code-vb[HttpSessionState#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpSessionState/VB/snippetsvb.aspx#10)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.SessionState.HttpSessionState.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个对象，可使用该对象同步会话状态值的集合的访问权限。</summary>
        <value>用于同步对集合的访问的对象。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="System.Web.SessionState.HttpSessionState.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置在会话状态提供程序终止会话之前各请求之间所允许的时间（以分钟为单位）。</summary>
        <value>超时时间（以分钟为单位）。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 可以使用[sessionState](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/h6bb9cz9(v%3dvs.100))配置元素的 `timeout` 特性在应用程序的 web.config 文件中设置 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 属性，也可以使用应用程序代码直接设置 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 属性值。

 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 属性的值不能设置为大于525600分钟（1年）。 默认值为20分钟。



## Examples
 下面的代码示例在 web.config 文件中将 `timeout` session 特性设置为30分钟。

```
<configuration>
  <system.web>
    <sessionState
      mode="InProc"
      cookieless="true"
      timeout="30" />
  </system.web>
</configuration>
```

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)">会话状态概述</related>
      </Docs>
    </Member>
  </Members>
</Type>
