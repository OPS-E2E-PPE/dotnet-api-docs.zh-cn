<Type Name="SessionStateStoreProviderBase" FullName="System.Web.SessionState.SessionStateStoreProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8fae76d2720b4d887b269a7b8fde6ff0a892d90b" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77102242" /></Metadata><TypeSignature Language="C#" Value="public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SessionStateStoreProviderBase extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.SessionState.SessionStateStoreProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SessionStateStoreProviderBase&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionStateStoreProviderBase abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type SessionStateStoreProviderBase = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="36eef-101">定义数据存储区的会话状态提供程序所需的成员。</span><span class="sxs-lookup"><span data-stu-id="36eef-101">Defines the required members of a session-state provider for a data store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-102">ASP.NET 会话状态使用会话状态存储提供程序从数据存储区读取会话数据并将其写入数据存储区。</span><span class="sxs-lookup"><span data-stu-id="36eef-102">ASP.NET session state reads and writes session data from and to a data store using a session-state store provider.</span></span> <span data-ttu-id="36eef-103">会话状态存储提供程序是一个类，该类继承 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 抽象类，并使用特定于数据存储的实现重写其成员。</span><span class="sxs-lookup"><span data-stu-id="36eef-103">A session-state store provider is a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class and overrides its members with implementations specific to the data store.</span></span> <span data-ttu-id="36eef-104">会话状态存储提供程序是在 ASP.NET 页处理过程中由 <xref:System.Web.SessionState.SessionStateModule> 类调用的，用于与用于存储和检索会话变量以及相关会话信息（如超时值）的数据存储进行通信。</span><span class="sxs-lookup"><span data-stu-id="36eef-104">The session-state store provider is called by the <xref:System.Web.SessionState.SessionStateModule> class during the processing of an ASP.NET page to communicate with the data store for the storage and retrieval of session variables and related session information such as the time-out value.</span></span>

 <span data-ttu-id="36eef-105">每个 ASP.NET 应用程序中的会话数据分别存储在每个 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="36eef-105">Session data within each ASP.NET application is stored separately for each <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property.</span></span> <span data-ttu-id="36eef-106">ASP.NET 应用程序不共享会话数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-106">ASP.NET applications do not share session data.</span></span>

 <span data-ttu-id="36eef-107">可以通过将 `sessionState` 配置元素的 `mode` 属性设置为 <xref:System.Web.SessionState.SessionStateMode.Custom>，并将 `customProvider` 特性设置为自定义提供程序的名称，为 ASP.NET 应用程序指定自定义 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 实现，如本主题的示例中所示。</span><span class="sxs-lookup"><span data-stu-id="36eef-107">You can specify a custom <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation for an ASP.NET application by setting the `mode` attribute of the `sessionState` configuration element to <xref:System.Web.SessionState.SessionStateMode.Custom> and the `customProvider` attribute to the name of the custom provider, as shown in the example for this topic.</span></span>

## <a name="locking-session-store-data"></a><span data-ttu-id="36eef-108">锁定会话存储数据</span><span class="sxs-lookup"><span data-stu-id="36eef-108">Locking Session Store Data</span></span>
 <span data-ttu-id="36eef-109">由于 ASP.NET 应用程序可进行多线程处理以支持响应并发请求，因此并发请求可能会尝试访问相同的会话信息。</span><span class="sxs-lookup"><span data-stu-id="36eef-109">Because ASP.NET applications are multithreaded to support responding to concurrent requests, it is possible that concurrent requests might attempt to access the same session information.</span></span> <span data-ttu-id="36eef-110">请考虑这样一种情况：框架集中的多个框架都访问同一应用程序。</span><span class="sxs-lookup"><span data-stu-id="36eef-110">Consider a scenario where multiple frames in a frameset all access the same application.</span></span> <span data-ttu-id="36eef-111">可以在不同的线程上同时在 Web 服务器上对框架集中的每个帧执行单独的请求。</span><span class="sxs-lookup"><span data-stu-id="36eef-111">The separate requests for each frame in the frameset can be executed on the Web server concurrently on different threads.</span></span> <span data-ttu-id="36eef-112">如果每个帧源访问会话状态变量的 ASP.NET 页，则可以有多个线程并发访问会话存储。</span><span class="sxs-lookup"><span data-stu-id="36eef-112">If the ASP.NET pages for each frame source access session-state variables, then you could have multiple threads accessing the session store concurrently.</span></span>

 <span data-ttu-id="36eef-113">为了避免会话存储区中的数据冲突和意外的会话状态行为，<xref:System.Web.SessionState.SessionStateModule> 和 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 类包括在执行 ASP.NET 页期间，以独占方式锁定特定会话的会话存储项的锁定功能。</span><span class="sxs-lookup"><span data-stu-id="36eef-113">To avoid data collisions at the session store and unexpected session-state behavior, the <xref:System.Web.SessionState.SessionStateModule> and <xref:System.Web.SessionState.SessionStateStoreProviderBase> classes include lock functionality that exclusively locks the session store item for a particular session for the duration of the execution of an ASP.NET page.</span></span> <span data-ttu-id="36eef-114">请注意，即使 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 特性标记为 `ReadOnly`，同一应用程序中的其他 ASP.NET 页也可能能够写入会话存储，因此，来自存储区的只读会话数据的请求可能仍会等待锁定的数据被释放。</span><span class="sxs-lookup"><span data-stu-id="36eef-114">Note that even if the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is marked as `ReadOnly`, other ASP.NET pages in the same application might be able to write to the session store, so a request for read-only session data from the store might still end up waiting for locked data to be freed.</span></span>

 <span data-ttu-id="36eef-115">在请求开始时，在调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法时对会话存储数据设置锁。</span><span class="sxs-lookup"><span data-stu-id="36eef-115">A lock is set on session-store data at the beginning of the request, in the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method.</span></span> <span data-ttu-id="36eef-116">请求完成后，会在调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> 方法的过程中释放该锁。</span><span class="sxs-lookup"><span data-stu-id="36eef-116">When the request completes, the lock is released during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.</span></span>

 <span data-ttu-id="36eef-117">如果 <xref:System.Web.SessionState.SessionStateModule> 对象在调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 或 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法的过程中遇到锁定的会话数据，则它将以半秒的时间间隔重新请求会话数据，直到锁定被释放或会话数据锁定的时间长度超过 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="36eef-117">If the <xref:System.Web.SessionState.SessionStateModule> object encounters locked session data during the call to either the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> or the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method, it will re-request the session data at half-second intervals until either the lock is released or the amount of time that the session data has been locked exceeds the value of the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> property.</span></span> <span data-ttu-id="36eef-118">如果超过了执行超时时间，则 <xref:System.Web.SessionState.SessionStateModule> 对象将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法来释放会话存储数据，并在此时请求会话存储数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-118">If the execution time out is exceeded, the <xref:System.Web.SessionState.SessionStateModule> object will call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to free the session-store data and request the session-store data at that time.</span></span>

 <span data-ttu-id="36eef-119">由于锁定的会话存储数据可能已通过调用当前响应的 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> 方法之前在单独的线程上调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法来释放，因此可能会尝试设置和发布其他会话已发布和修改的会话状态存储数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-119">Because locked session-store data might have been freed by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method on a separate thread before the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method for the current response, an attempt could be made to set and release session-state store data that has already been released and modified by another session.</span></span> <span data-ttu-id="36eef-120">若要避免这种情况，<xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 和 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法返回一个锁标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-120">To avoid this situation, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods return a lock identifier.</span></span> <span data-ttu-id="36eef-121">此锁定标识符必须包含在每个请求中以修改锁定的会话存储数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-121">This lock identifier must be included with each request to modify locked session-store data.</span></span> <span data-ttu-id="36eef-122">仅当数据存储区中的锁标识符与 <xref:System.Web.SessionState.SessionStateModule>提供的锁标识符相匹配时，才会修改会话存储数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-122">Session-store data is modified only if the lock identifier in the data store matches the lock identifier supplied by the <xref:System.Web.SessionState.SessionStateModule>.</span></span>

## <a name="deleting-expired-session-store-data"></a><span data-ttu-id="36eef-123">删除过期的会话存储数据</span><span class="sxs-lookup"><span data-stu-id="36eef-123">Deleting Expired Session Store Data</span></span>
 <span data-ttu-id="36eef-124">为特定会话调用 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 方法时，将使用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> 方法从数据存储区中删除该会话的数据;否则，数据将保留在会话数据存储中，以便为会话提供服务器未来的请求。</span><span class="sxs-lookup"><span data-stu-id="36eef-124">When the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called for a particular session, the data for that session is deleted from the data store using the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method; otherwise, the data will remain in the session data store to server future requests for the session.</span></span> <span data-ttu-id="36eef-125"><xref:System.Web.SessionState.SessionStateStoreProviderBase> 实现删除过期的会话数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-125">It is up to the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation to delete expired session data.</span></span>



## Examples
 <span data-ttu-id="36eef-126">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-126">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 <span data-ttu-id="36eef-127">下面的代码示例显示了配置为使用自定义会话状态存储提供程序的 ASP.NET 应用程序的 web.config 文件。</span><span class="sxs-lookup"><span data-stu-id="36eef-127">The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.</span></span>

```
<configuration>
  <connectionStrings>
    <add name="OdbcSessionServices" connectionString="DSN=SessionState;" />
  </connectionStrings>

  <system.web>
    <sessionState
      mode="Custom"
      customProvider="OdbcSessionProvider">
      <providers>
        <add name="OdbcSessionProvider"
             type="Samples.AspNet.Session.OdbcSessionStateStore"
             connectionStringName="OdbcSessionServices" />
      </providers>
    </sessionState>
  </system.web>
</configuration>
```

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-128">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-128">ASP.NET Session State Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SessionStateStoreProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SessionStateStoreProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36eef-129">初始化 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="36eef-129">Initializes a new instance of the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-130">不需要为继承 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 抽象类的类实现构造函数。</span><span class="sxs-lookup"><span data-stu-id="36eef-130">You are not required to implement a constructor for a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class.</span></span> <span data-ttu-id="36eef-131"><xref:System.Web.SessionState.SessionStateStoreProviderBase> 实现的初始化值将传递给 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> 方法实现。</span><span class="sxs-lookup"><span data-stu-id="36eef-131">Initialization values for a <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.</span></span>



## Examples
 <span data-ttu-id="36eef-132">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-132">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-133">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-133">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateNewStoreData">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData CreateNewStoreData(class System.Web.HttpContext context, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateNewStoreData (context As HttpContext, timeout As Integer) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ CreateNewStoreData(System::Web::HttpContext ^ context, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateNewStoreData : System.Web.HttpContext * int -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.CreateNewStoreData (context, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-134">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-134">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="timeout"><span data-ttu-id="36eef-135">新 <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> 的会话状态 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 值。</span><span class="sxs-lookup"><span data-stu-id="36eef-135">The session-state <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> value for the new <see cref="T:System.Web.SessionState.SessionStateStoreData" />.</span></span></param>
        <summary><span data-ttu-id="36eef-136">创建要用于当前请求的新 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36eef-136">Creates a new <see cref="T:System.Web.SessionState.SessionStateStoreData" /> object to be used for the current request.</span></span></summary>
        <returns><span data-ttu-id="36eef-137">当前请求的新 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-137">A new <see cref="T:System.Web.SessionState.SessionStateStoreData" /> for the current request.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-138">在 <xref:System.Web.HttpApplication.AcquireRequestState> 事件期间，<xref:System.Web.SessionState.SessionStateModule> 对象在 ASP.NET 页请求开始时调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-138">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method at the beginning of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.AcquireRequestState> event.</span></span> <span data-ttu-id="36eef-139">如果是以下情况，则调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> 方法：</span><span class="sxs-lookup"><span data-stu-id="36eef-139">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method is called if:</span></span>

-   <span data-ttu-id="36eef-140">传入请求没有会话 ID，或</span><span class="sxs-lookup"><span data-stu-id="36eef-140">the incoming request has no session ID, or</span></span>

-   <span data-ttu-id="36eef-141">传入的请求具有会话 ID，但在数据存储中找不到该会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-141">the incoming request has a session ID, but the session is not found in the data store.</span></span>

 <span data-ttu-id="36eef-142"><xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> 方法创建一个新的 <xref:System.Web.SessionState.SessionStateStoreData> 对象，该对象具有空的 <xref:System.Web.SessionState.ISessionStateItemCollection> 对象、<xref:System.Web.HttpStaticObjectsCollection> 集合和指定的 `timeout` 值。</span><span class="sxs-lookup"><span data-stu-id="36eef-142">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method creates a new <xref:System.Web.SessionState.SessionStateStoreData> object with an empty <xref:System.Web.SessionState.ISessionStateItemCollection> object, an <xref:System.Web.HttpStaticObjectsCollection> collection, and the specified `timeout` value.</span></span> <span data-ttu-id="36eef-143">可以使用 <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> 方法检索 ASP.NET 应用程序的 <xref:System.Web.HttpStaticObjectsCollection> 集合。</span><span class="sxs-lookup"><span data-stu-id="36eef-143">The <xref:System.Web.HttpStaticObjectsCollection> collection for the ASP.NET application can be retrieved using the <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> method.</span></span>



## Examples
 <span data-ttu-id="36eef-144">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-144">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-145">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-145">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateUninitializedItem">
      <MemberSignature Language="C#" Value="public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateUninitializedItem(class System.Web.HttpContext context, string id, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateUninitializedItem (context As HttpContext, id As String, timeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateUninitializedItem(System::Web::HttpContext ^ context, System::String ^ id, int timeout);" />
      <MemberSignature Language="F#" Value="abstract member CreateUninitializedItem : System.Web.HttpContext * string * int -&gt; unit" Usage="sessionStateStoreProviderBase.CreateUninitializedItem (context, id, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-146">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-146">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="id"><span data-ttu-id="36eef-147">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-147">The <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> for the current request.</span></span></param>
        <param name="timeout"><span data-ttu-id="36eef-148">当前请求的会话 <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-148">The session <see cref="P:System.Web.SessionState.HttpSessionState.Timeout" /> for the current request.</span></span></param>
        <summary><span data-ttu-id="36eef-149">将新的会话状态项添加到数据存储区中。</span><span class="sxs-lookup"><span data-stu-id="36eef-149">Adds a new session-state item to the data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-150">当 `cookieless` 和 `regenerateExpiredSessionId` 特性均为 `true`时，<xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> 方法用于会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-150">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is used with sessions when the `cookieless` and `regenerateExpiredSessionId` attributes are both `true`.</span></span> <span data-ttu-id="36eef-151">如果将 `regenerateExpiredSessionId attribute` 设置为 `true`，则在遇到过期的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值时，<xref:System.Web.SessionState.SessionStateModule> 对象会生成新的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="36eef-151">Having the `regenerateExpiredSessionId attribute` set to `true` causes the <xref:System.Web.SessionState.SessionStateModule> object to generate a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value when an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is encountered.</span></span>

 <span data-ttu-id="36eef-152">生成新 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值的过程需要将浏览器重定向到包含新生成的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值的 URL。</span><span class="sxs-lookup"><span data-stu-id="36eef-152">The process of generating a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value requires redirecting the browser to a URL that contains the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.</span></span> <span data-ttu-id="36eef-153"><xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> 方法是在初始请求期间调用的，其中包含过期的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值。</span><span class="sxs-lookup"><span data-stu-id="36eef-153">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is called during the initial request that contains an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.</span></span> <span data-ttu-id="36eef-154"><xref:System.Web.SessionState.SessionStateModule> 对象获取了新的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值来替换过期值后，它将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> 方法，将未初始化的项添加到会话状态数据存储区。</span><span class="sxs-lookup"><span data-stu-id="36eef-154">After the <xref:System.Web.SessionState.SessionStateModule> object acquires a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value to replace the expired value, it calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method to add an uninitialized entry to the session-state data store.</span></span> <span data-ttu-id="36eef-155">然后，浏览器将重定向到包含新生成的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值的 URL。</span><span class="sxs-lookup"><span data-stu-id="36eef-155">The browser is then redirected to the URL containing the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.</span></span> <span data-ttu-id="36eef-156">会话数据存储中的未初始化条目的存在确保了包含新生成的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值的重定向请求不会被误认为已过期会话的请求，而是被视为新会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-156">The existence of the uninitialized entry in the session data store ensures that the redirected request that includes the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is not mistaken for a request for an expired session and is, instead, treated as a new session.</span></span>

 <span data-ttu-id="36eef-157">会话数据存储中未初始化的条目与新生成的 <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 值相关联，并且仅包含默认值，包括过期日期和时间，以及与 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 和 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法的 `actionFlags` 参数相对应的值。</span><span class="sxs-lookup"><span data-stu-id="36eef-157">The uninitialized entry in the session data store is associated with the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value and contains only default values, including an expiration date and time and a value that corresponds to the `actionFlags` parameter of the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods.</span></span> <span data-ttu-id="36eef-158">会话状态存储中的未初始化条目应包含等于 <xref:System.Web.SessionState.SessionStateActions.InitializeItem> 枚举值的 `actionFlags` 值。</span><span class="sxs-lookup"><span data-stu-id="36eef-158">The uninitialized entry in the session-state store should include an `actionFlags` value equal to the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value.</span></span> <span data-ttu-id="36eef-159">此值由 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 和 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法传递到 <xref:System.Web.SessionState.SessionStateModule> 对象，并通知 <xref:System.Web.SessionState.SessionStateModule> 对象当前会话是新的但未初始化的会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-159">This value is passed to the <xref:System.Web.SessionState.SessionStateModule> object by the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods, and informs the <xref:System.Web.SessionState.SessionStateModule> object that the current session is a new but uninitialized session.</span></span> <span data-ttu-id="36eef-160">然后，<xref:System.Web.SessionState.SessionStateModule> 对象将初始化新会话并引发 `Session_OnStart` 事件。</span><span class="sxs-lookup"><span data-stu-id="36eef-160">The <xref:System.Web.SessionState.SessionStateModule> object will then initialize the new session and raise the `Session_OnStart` event.</span></span>

 <span data-ttu-id="36eef-161">有关无 cookie 会话的详细信息，请参阅 <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="36eef-161">For more information about cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.</span></span>



## Examples
 <span data-ttu-id="36eef-162">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-162">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-163">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-163">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public abstract void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit" Usage="sessionStateStoreProviderBase.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="36eef-164">释放由 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 实现使用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="36eef-164">Releases all resources used by the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> implementation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-165">当在应用程序域关闭时执行 <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> 方法时，将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-165">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=nameWithType> method is called when the <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=nameWithType> method executes at the closing of the application domain.</span></span> <span data-ttu-id="36eef-166">继承 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 类的类可使用此方法释放不再使用的任何资源。</span><span class="sxs-lookup"><span data-stu-id="36eef-166">Classes that inherit the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class can use this method to free any resources no longer in use.</span></span>



## Examples
 <span data-ttu-id="36eef-167">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-167">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-168">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-168">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public abstract void EndRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.EndRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-169">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-169">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <summary><span data-ttu-id="36eef-170">在请求结束时由 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象调用。</span><span class="sxs-lookup"><span data-stu-id="36eef-170">Called by the <see cref="T:System.Web.SessionState.SessionStateModule" /> object at the end of a request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-171">在 <xref:System.Web.HttpApplication.EndRequest> 事件期间，<xref:System.Web.SessionState.SessionStateModule> 对象在 ASP.NET 页请求结束时调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-171">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method at the end of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.EndRequest> event.</span></span> <span data-ttu-id="36eef-172">您可以使用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> 方法执行会话状态存储提供程序所需的每个请求清理。</span><span class="sxs-lookup"><span data-stu-id="36eef-172">You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method to perform any per-request cleanup required by your session-state store provider.</span></span>



## Examples
 <span data-ttu-id="36eef-173">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-173">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-174">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-174">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItem(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItem (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItem(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItem : System.Web.HttpContext * string * bool * TimeSpan * obj * SessionStateActions -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItem (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-175">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-175">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="id"><span data-ttu-id="36eef-176">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-176">The <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> for the current request.</span></span></param>
        <param name="locked"><span data-ttu-id="36eef-177">当此方法返回时，如果请求的会话项在会话数据存储区被锁定，请包含一个设置为 <see langword="true" /> 的布尔值；否则请包含一个设置为 <see langword="false" /> 的布尔值。</span><span class="sxs-lookup"><span data-stu-id="36eef-177">When this method returns, contains a Boolean value that is set to <see langword="true" /> if the requested session item is locked at the session data store; otherwise, <see langword="false" />.</span></span></param>
        <param name="lockAge"><span data-ttu-id="36eef-178">当此方法返回时，请包含一个设置为会话数据存储区中的项锁定时间的 <see cref="T:System.TimeSpan" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36eef-178">When this method returns, contains a <see cref="T:System.TimeSpan" /> object that is set to the amount of time that an item in the session data store has been locked.</span></span></param>
        <param name="lockId"><span data-ttu-id="36eef-179">当此方法返回时，请包含一个设置为当前请求的锁定标识符的对象。</span><span class="sxs-lookup"><span data-stu-id="36eef-179">When this method returns, contains an object that is set to the lock identifier for the current request.</span></span> <span data-ttu-id="36eef-180">有关锁定标识符的详细信息，请参见 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类摘要中的“锁定会话存储区数据”。</span><span class="sxs-lookup"><span data-stu-id="36eef-180">For details on the lock identifier, see "Locking Session-Store Data" in the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> class summary.</span></span></param>
        <param name="actions"><span data-ttu-id="36eef-181">当此方法返回时，请包含 <see cref="T:System.Web.SessionState.SessionStateActions" /> 值之一，指示当前会话是否为未初始化的无 Cookie 会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-181">When this method returns, contains one of the <see cref="T:System.Web.SessionState.SessionStateActions" /> values, indicating whether the current session is an uninitialized, cookieless session.</span></span></param>
        <summary><span data-ttu-id="36eef-182">从会话数据存储区中返回只读会话状态数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-182">Returns read-only session-state data from the session data store.</span></span></summary>
        <returns><span data-ttu-id="36eef-183">使用会话数据存储区中的会话值和信息填充的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-183">A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> populated with session values and information from the session data store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-184">当 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 特性设置为 `ReadOnly`时 <xref:System.Web.HttpApplication.AcquireRequestState>，<xref:System.Web.SessionState.SessionStateModule> 对象将在请求开始时调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-184">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`.</span></span> <span data-ttu-id="36eef-185">如果 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 特性设置为 `true`，则 <xref:System.Web.SessionState.SessionStateModule> 对象改为调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-185">If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method.</span></span>

 <span data-ttu-id="36eef-186"><xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法返回一个用数据存储区中的会话信息填充的 <xref:System.Web.SessionState.SessionStateStoreData> 对象，并更新会话数据的到期日期。</span><span class="sxs-lookup"><span data-stu-id="36eef-186">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store and updates the expiration date of the session data.</span></span> <span data-ttu-id="36eef-187">如果在数据存储区中找不到任何会话项数据，则 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法会将 `locked` `out` 参数设置为 `false` 并返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="36eef-187">If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `false` and returns `null`.</span></span> <span data-ttu-id="36eef-188">这会导致 <xref:System.Web.SessionState.SessionStateModule> 对象调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> 方法，以便在数据存储中创建新的会话项。</span><span class="sxs-lookup"><span data-stu-id="36eef-188">This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store.</span></span>

 <span data-ttu-id="36eef-189">如果在数据存储区中找到会话项数据，但数据被锁定，则 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法会将 `locked` `out` 参数设置为 `true`，将 `lockAge` `out` 参数设置为当前日期和时间减去该项被锁定的日期和时间（从数据存储中检索到），将 `lockId` `out` 参数设置为从数据存储中检索到的锁标识符，并返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="36eef-189">If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`.</span></span> <span data-ttu-id="36eef-190">这会导致 <xref:System.Web.SessionState.SessionStateModule> 对象在半秒间隔后再次调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法，以尝试检索会话项信息。</span><span class="sxs-lookup"><span data-stu-id="36eef-190">This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again after a half-second interval to attempt to retrieve the session-item information.</span></span>

 <span data-ttu-id="36eef-191">如果 `lockAge` `out` 参数的值设置为超过 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 值，则 <xref:System.Web.SessionState.SessionStateModule> 对象将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法，以清除对会话项数据的锁定，然后再次调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-191">If the value that the `lockAge` `out` parameter is set to exceed the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again.</span></span>

 <span data-ttu-id="36eef-192">当 `cookieless` 和 `regenerateExpiredSessionId` 特性都设置为 `true`时，将使用 `actionFlags` 参数。</span><span class="sxs-lookup"><span data-stu-id="36eef-192">The `actionFlags` parameter is used when both the `cookieless` and `regenerateExpiredSessionId` attributes are set to `true`.</span></span> <span data-ttu-id="36eef-193">`actionFlags` 值设置为 <xref:System.Web.SessionState.SessionStateActions.InitializeItem> 指示会话数据存储中的条目是需要初始化的新会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-193">An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization.</span></span> <span data-ttu-id="36eef-194">会话数据存储中未初始化的条目是通过调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> 方法创建的。</span><span class="sxs-lookup"><span data-stu-id="36eef-194">Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method.</span></span> <span data-ttu-id="36eef-195">如果会话数据存储区中的项不是未初始化的项，则 `actionFlags` 参数将设置为零。</span><span class="sxs-lookup"><span data-stu-id="36eef-195">If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.</span></span>

 <span data-ttu-id="36eef-196">支持无 cookie 会话的自定义会话状态存储实现程序应将 `actionFlags` `out` 参数设置为从当前项的会话数据存储区中返回的值。</span><span class="sxs-lookup"><span data-stu-id="36eef-196">Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item.</span></span> <span data-ttu-id="36eef-197">如果请求的会话存储项的 `actionFlags` 参数值等于 <xref:System.Web.SessionState.SessionStateActions.InitializeItem> 枚举值，则 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法应在设置 `actionFlags` `out` 参数后将数据存储中的值设置为零。</span><span class="sxs-lookup"><span data-stu-id="36eef-197">If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.</span></span>



## Examples
 <span data-ttu-id="36eef-198">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-198">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-199">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-199">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetItemExclusive">
      <MemberSignature Language="C#" Value="public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.SessionState.SessionStateStoreData GetItemExclusive(class System.Web.HttpContext context, string id, [out] bool&amp; locked, [out] valuetype System.TimeSpan&amp; lockAge, [out] object&amp; lockId, [out] valuetype System.Web.SessionState.SessionStateActions&amp; actions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetItemExclusive (context As HttpContext, id As String, ByRef locked As Boolean, ByRef lockAge As TimeSpan, ByRef lockId As Object, ByRef actions As SessionStateActions) As SessionStateStoreData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::SessionState::SessionStateStoreData ^ GetItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, [Runtime::InteropServices::Out] bool % locked, [Runtime::InteropServices::Out] TimeSpan % lockAge, [Runtime::InteropServices::Out] System::Object ^ % lockId, [Runtime::InteropServices::Out] System::Web::SessionState::SessionStateActions % actions);" />
      <MemberSignature Language="F#" Value="abstract member GetItemExclusive : System.Web.HttpContext * string * bool * TimeSpan * obj * SessionStateActions -&gt; System.Web.SessionState.SessionStateStoreData" Usage="sessionStateStoreProviderBase.GetItemExclusive (context, id, locked, lockAge, lockId, actions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.SessionStateStoreData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="locked" Type="System.Boolean" RefType="out" />
        <Parameter Name="lockAge" Type="System.TimeSpan" RefType="out" />
        <Parameter Name="lockId" Type="System.Object" RefType="out" />
        <Parameter Name="actions" Type="System.Web.SessionState.SessionStateActions" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-200">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-200">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="id"><span data-ttu-id="36eef-201">当前请求的 <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-201">The <see cref="P:System.Web.SessionState.HttpSessionState.SessionID" /> for the current request.</span></span></param>
        <param name="locked"><span data-ttu-id="36eef-202">当此方法返回时，如果成功获得锁定，请包含一个设置为 <see langword="true" /> 的布尔值；否则请包含一个设置为 <see langword="false" /> 的布尔值。</span><span class="sxs-lookup"><span data-stu-id="36eef-202">When this method returns, contains a Boolean value that is set to <see langword="true" /> if a lock is successfully obtained; otherwise, <see langword="false" />.</span></span></param>
        <param name="lockAge"><span data-ttu-id="36eef-203">当此方法返回时，请包含一个设置为会话数据存储区中的项锁定时间的 <see cref="T:System.TimeSpan" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36eef-203">When this method returns, contains a <see cref="T:System.TimeSpan" /> object that is set to the amount of time that an item in the session data store has been locked.</span></span></param>
        <param name="lockId"><span data-ttu-id="36eef-204">当此方法返回时，请包含一个设置为当前请求的锁定标识符的对象。</span><span class="sxs-lookup"><span data-stu-id="36eef-204">When this method returns, contains an object that is set to the lock identifier for the current request.</span></span> <span data-ttu-id="36eef-205">有关锁定标识符的详细信息，请参见 <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> 类摘要中的“锁定会话存储区数据”。</span><span class="sxs-lookup"><span data-stu-id="36eef-205">For details on the lock identifier, see "Locking Session-Store Data" in the <see cref="T:System.Web.SessionState.SessionStateStoreProviderBase" /> class summary.</span></span></param>
        <param name="actions"><span data-ttu-id="36eef-206">当此方法返回时，请包含 <see cref="T:System.Web.SessionState.SessionStateActions" /> 值之一，指示当前会话是否为未初始化的无 Cookie 会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-206">When this method returns, contains one of the <see cref="T:System.Web.SessionState.SessionStateActions" /> values, indicating whether the current session is an uninitialized, cookieless session.</span></span></param>
        <summary><span data-ttu-id="36eef-207">从会话数据存储区中返回只读会话状态数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-207">Returns read-only session-state data from the session data store.</span></span></summary>
        <returns><span data-ttu-id="36eef-208">使用会话数据存储区中的会话值和信息填充的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-208">A <see cref="T:System.Web.SessionState.SessionStateStoreData" /> populated with session values and information from the session data store.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-209">当 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 特性设置为 `true`（默认值）时，<xref:System.Web.SessionState.SessionStateModule> 对象将在 <xref:System.Web.HttpApplication.AcquireRequestState> 请求开始时调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-209">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, which is the default.</span></span> <span data-ttu-id="36eef-210">如果 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 特性设置为 `ReadOnly`，则 <xref:System.Web.SessionState.SessionStateModule> 对象改为调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-210">If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method.</span></span>

 <span data-ttu-id="36eef-211"><xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法返回一个用数据存储区中的会话信息填充的 <xref:System.Web.SessionState.SessionStateStoreData> 对象，更新存储数据的到期日期，并在请求期间锁定数据存储区中的会话项数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-211">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store, updates the expiration date of the stored data, and locks the session-item data at the data store for the duration of the request.</span></span> <span data-ttu-id="36eef-212">如果在数据存储区中找不到任何会话项数据，则 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法会将 `locked` `out` 参数设置为 `false` 并返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="36eef-212">If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `false` and returns `null`.</span></span> <span data-ttu-id="36eef-213">这会导致 <xref:System.Web.SessionState.SessionStateModule> 对象调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> 方法，以便在数据存储中创建新的会话项。</span><span class="sxs-lookup"><span data-stu-id="36eef-213">This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store.</span></span> <span data-ttu-id="36eef-214">如果在数据存储区中找到会话项数据，但数据被锁定，则 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法会将 `locked` `out` 参数设置为 `true`，将 `lockAge` `out` 参数设置为当前日期和时间减去该项被锁定的日期和时间（从数据存储中检索到），将 `lockId` `out` 参数设置为从数据存储中检索到的锁标识符，并返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="36eef-214">If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`.</span></span> <span data-ttu-id="36eef-215">这会导致 <xref:System.Web.SessionState.SessionStateModule> 对象在半秒间隔后再次调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法，以尝试检索会话项信息并获取数据锁。</span><span class="sxs-lookup"><span data-stu-id="36eef-215">This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again after a half-second interval to attempt to retrieve the session-item information and obtain a lock on the data.</span></span> <span data-ttu-id="36eef-216">如果 `lockAge` `out` 参数的值设置为超过 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 值，则 <xref:System.Web.SessionState.SessionStateModule> 将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法以清除对会话项数据的锁定，然后再次调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-216">If the value that the `lockAge` `out` parameter is set to exceeds the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again.</span></span>

 <span data-ttu-id="36eef-217">当 `cookieless` 和 `regenerateExpiredSessionId` 特性都设置为 `true`时，将使用 `actionFlags` 参数。</span><span class="sxs-lookup"><span data-stu-id="36eef-217">The `actionFlags` parameter is used when the `cookieless` and `regenerateExpiredSessionId` attributes are both set to `true`.</span></span> <span data-ttu-id="36eef-218">`actionFlags` 值设置为 <xref:System.Web.SessionState.SessionStateActions.InitializeItem> 指示会话数据存储中的条目是需要初始化的新会话。</span><span class="sxs-lookup"><span data-stu-id="36eef-218">An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization.</span></span> <span data-ttu-id="36eef-219">会话数据存储中未初始化的条目是通过调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> 方法创建的。</span><span class="sxs-lookup"><span data-stu-id="36eef-219">Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method.</span></span> <span data-ttu-id="36eef-220">如果会话数据存储区中的项不是未初始化的项，则 `actionFlags` 参数将设置为零。</span><span class="sxs-lookup"><span data-stu-id="36eef-220">If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.</span></span>

 <span data-ttu-id="36eef-221">支持无 cookie 会话的自定义会话状态存储实现程序应将 `actionFlags` `out` 参数设置为从当前项的会话数据存储区中返回的值。</span><span class="sxs-lookup"><span data-stu-id="36eef-221">Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item.</span></span> <span data-ttu-id="36eef-222">如果请求的会话存储项的 `actionFlags` 参数值等于 <xref:System.Web.SessionState.SessionStateActions.InitializeItem> 枚举值，则 <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> 方法应在设置 `actionFlags` `out` 参数后将数据存储中的值设置为零。</span><span class="sxs-lookup"><span data-stu-id="36eef-222">If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.</span></span>



## Examples
 <span data-ttu-id="36eef-223">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-223">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-224">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-224">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public abstract void InitializeRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub InitializeRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void InitializeRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Web.HttpContext -&gt; unit" Usage="sessionStateStoreProviderBase.InitializeRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-225">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-225">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <summary><span data-ttu-id="36eef-226">由 <see cref="T:System.Web.SessionState.SessionStateModule" /> 对象调用，以便进行每次请求初始化。</span><span class="sxs-lookup"><span data-stu-id="36eef-226">Called by the <see cref="T:System.Web.SessionState.SessionStateModule" /> object for per-request initialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-227"><xref:System.Web.SessionState.SessionStateModule> 对象将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> 方法，然后再调用任何其他 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-227">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method before calling any other <xref:System.Web.SessionState.SessionStateStoreProviderBase> method.</span></span> <span data-ttu-id="36eef-228">您可以使用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> 方法执行会话状态存储提供程序所需的每个请求初始化。</span><span class="sxs-lookup"><span data-stu-id="36eef-228">You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method to perform any per-request initialization required by your session-state store provider.</span></span>



## Examples
 <span data-ttu-id="36eef-229">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-229">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-230">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-230">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseItemExclusive(class System.Web.HttpContext context, string id, object lockId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReleaseItemExclusive (context As HttpContext, id As String, lockId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId);" />
      <MemberSignature Language="F#" Value="abstract member ReleaseItemExclusive : System.Web.HttpContext * string * obj -&gt; unit" Usage="sessionStateStoreProviderBase.ReleaseItemExclusive (context, id, lockId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-231">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-231">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="id"><span data-ttu-id="36eef-232">当前请求的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-232">The session identifier for the current request.</span></span></param>
        <param name="lockId"><span data-ttu-id="36eef-233">当前请求的锁定标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-233">The lock identifier for the current request.</span></span></param>
        <summary><span data-ttu-id="36eef-234">释放对会话数据存储区中项的锁定。</span><span class="sxs-lookup"><span data-stu-id="36eef-234">Releases a lock on an item in the session data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-235"><xref:System.Web.SessionState.SessionStateModule> 对象将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法来更新过期日期，并释放对会话数据存储中某个项的锁定。</span><span class="sxs-lookup"><span data-stu-id="36eef-235">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to update the expiration date and release a lock on an item in the session data store.</span></span> <span data-ttu-id="36eef-236">在 <xref:System.Web.HttpApplication.ReleaseRequestState> 事件期间，如果会话值不变，则会在请求结束时调用此方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-236">It is called at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, if session values are unchanged.</span></span> <span data-ttu-id="36eef-237">如果会话值已修改，则 <xref:System.Web.SessionState.SessionStateModule> 对象改为调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-237">If session values have been modified, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.</span></span>

 <span data-ttu-id="36eef-238">如果会话数据存储区中某个项的锁超出了 <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> 值，则 <xref:System.Web.SessionState.SessionStateModule> 对象还会调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-238">The <xref:System.Web.SessionState.SessionStateModule> object also calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method when a lock on an item in the session data store has exceeded the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value.</span></span> <span data-ttu-id="36eef-239">有关锁定的详细信息以及有关锁定标识符的详细信息，请参阅 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 类概述中的 "锁定会话存储数据"。</span><span class="sxs-lookup"><span data-stu-id="36eef-239">For more information about locking and details about the lock identifier, see "Locking Session-Store Data" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.</span></span>

 <span data-ttu-id="36eef-240"><xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法仅从当前应用程序的会话数据存储区中删除与所提供的会话 `id` 和 `lockId` 值相匹配的项的锁。</span><span class="sxs-lookup"><span data-stu-id="36eef-240">The <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method only removes the lock from an item in the session data store for the current application that matches the supplied session `id` and `lockId` values.</span></span> <span data-ttu-id="36eef-241">如果 `lockId` 与数据存储中的不匹配，则 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法不执行任何操作。</span><span class="sxs-lookup"><span data-stu-id="36eef-241">If the `lockId` does not match the one in the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method does nothing.</span></span>



## Examples
 <span data-ttu-id="36eef-242">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-242">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-243">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-243">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveItem(class System.Web.HttpContext context, string id, object lockId, class System.Web.SessionState.SessionStateStoreData item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveItem (context As HttpContext, id As String, lockId As Object, item As SessionStateStoreData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveItem(System::Web::HttpContext ^ context, System::String ^ id, System::Object ^ lockId, System::Web::SessionState::SessionStateStoreData ^ item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveItem : System.Web.HttpContext * string * obj * System.Web.SessionState.SessionStateStoreData -&gt; unit" Usage="sessionStateStoreProviderBase.RemoveItem (context, id, lockId, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-244">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-244">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="id"><span data-ttu-id="36eef-245">当前请求的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-245">The session identifier for the current request.</span></span></param>
        <param name="lockId"><span data-ttu-id="36eef-246">当前请求的锁定标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-246">The lock identifier for the current request.</span></span></param>
        <param name="item"><span data-ttu-id="36eef-247">表示将从数据存储区中删除的项的 <see cref="T:System.Web.SessionState.SessionStateStoreData" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-247">The <see cref="T:System.Web.SessionState.SessionStateStoreData" /> that represents the item to delete from the data store.</span></span></param>
        <summary><span data-ttu-id="36eef-248">删除会话数据存储区中的项数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-248">Deletes item data from the session data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-249">如果调用了 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 方法，则 <xref:System.Web.SessionState.SessionStateModule> 对象将在请求结束时调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> 方法 <xref:System.Web.HttpApplication.ReleaseRequestState>，以便从会话数据存储区中删除会话项的数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-249">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to delete the data for a session item from the session data store if the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called.</span></span> <span data-ttu-id="36eef-250">仅删除当前应用程序中与提供的会话匹配的会话数据 `id` 和 `lockId` 值。</span><span class="sxs-lookup"><span data-stu-id="36eef-250">Only session data for the current application that matches the supplied session `id` and `lockId` values is deleted.</span></span> <span data-ttu-id="36eef-251">有关锁定的详细信息以及有关锁定标识符的详细信息，请参阅 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 类概述中的 "锁定会话存储数据"。</span><span class="sxs-lookup"><span data-stu-id="36eef-251">For more information about locking and details about the lock identifier, see "Locking Session-Store Data" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.</span></span>



## Examples
 <span data-ttu-id="36eef-252">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-252">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-253">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-253">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ResetItemTimeout">
      <MemberSignature Language="C#" Value="public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetItemTimeout(class System.Web.HttpContext context, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetItemTimeout (context As HttpContext, id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetItemTimeout(System::Web::HttpContext ^ context, System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResetItemTimeout : System.Web.HttpContext * string -&gt; unit" Usage="sessionStateStoreProviderBase.ResetItemTimeout (context, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-254">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-254">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="id"><span data-ttu-id="36eef-255">当前请求的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-255">The session identifier for the current request.</span></span></param>
        <summary><span data-ttu-id="36eef-256">更新会话数据存储区中的项的到期日期和时间。</span><span class="sxs-lookup"><span data-stu-id="36eef-256">Updates the expiration date and time of an item in the session data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-257"><xref:System.Web.SessionState.SessionStateModule> 对象将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> 方法，以便在以下任一操作时，将会话的过期日期和时间更新为当前日期和时间加上会话 <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> 值：</span><span class="sxs-lookup"><span data-stu-id="36eef-257">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method to update the expiration date and time for a session to the current date and time plus the session <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> value when either:</span></span>

-   <span data-ttu-id="36eef-258"><xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 属性为 `true`或</span><span class="sxs-lookup"><span data-stu-id="36eef-258">the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is `true`, or</span></span>

-   <span data-ttu-id="36eef-259">由于出现错误，请求未引发 <xref:System.Web.HttpApplication.AcquireRequestState> 和 <xref:System.Web.HttpApplication.ReleaseRequestState> 事件。</span><span class="sxs-lookup"><span data-stu-id="36eef-259">the request did not raise the <xref:System.Web.HttpApplication.AcquireRequestState> and <xref:System.Web.HttpApplication.ReleaseRequestState> events due to an error.</span></span>

 <span data-ttu-id="36eef-260">如果请求 ASP.NET 页并且 <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> 特性设置为 `false`，则仍将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> 方法来更新会话数据存储中数据的到期日期和时间。</span><span class="sxs-lookup"><span data-stu-id="36eef-260">If an ASP.NET page is requested and the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `false`, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method is still called to update the expiration date and time of the data in the session data store.</span></span>



## Examples
 <span data-ttu-id="36eef-261">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-261">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-262">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-262">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAndReleaseItemExclusive">
      <MemberSignature Language="C#" Value="public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAndReleaseItemExclusive(class System.Web.HttpContext context, string id, class System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetAndReleaseItemExclusive (context As HttpContext, id As String, item As SessionStateStoreData, lockId As Object, newItem As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetAndReleaseItemExclusive(System::Web::HttpContext ^ context, System::String ^ id, System::Web::SessionState::SessionStateStoreData ^ item, System::Object ^ lockId, bool newItem);" />
      <MemberSignature Language="F#" Value="abstract member SetAndReleaseItemExclusive : System.Web.HttpContext * string * System.Web.SessionState.SessionStateStoreData * obj * bool -&gt; unit" Usage="sessionStateStoreProviderBase.SetAndReleaseItemExclusive (context, id, item, lockId, newItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="item" Type="System.Web.SessionState.SessionStateStoreData" />
        <Parameter Name="lockId" Type="System.Object" />
        <Parameter Name="newItem" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="36eef-263">当前请求的 <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-263">The <see cref="T:System.Web.HttpContext" /> for the current request.</span></span></param>
        <param name="id"><span data-ttu-id="36eef-264">当前请求的会话标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-264">The session identifier for the current request.</span></span></param>
        <param name="item"><span data-ttu-id="36eef-265">包含要存储的当前会话值的 <see cref="T:System.Web.SessionState.SessionStateStoreData" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="36eef-265">The <see cref="T:System.Web.SessionState.SessionStateStoreData" /> object that contains the current session values to be stored.</span></span></param>
        <param name="lockId"><span data-ttu-id="36eef-266">当前请求的锁定标识符。</span><span class="sxs-lookup"><span data-stu-id="36eef-266">The lock identifier for the current request.</span></span></param>
        <param name="newItem"><span data-ttu-id="36eef-267">如果为 <see langword="true" />，则将会话项标识为新项；如果为 <see langword="false" />，则将会话项标识为现有的项。</span><span class="sxs-lookup"><span data-stu-id="36eef-267"><see langword="true" /> to identify the session item as a new item; <see langword="false" /> to identify the session item as an existing item.</span></span></param>
        <summary><span data-ttu-id="36eef-268">使用当前请求中的值更新会话状态数据存储区中的会话项信息，并清除对数据的锁定。</span><span class="sxs-lookup"><span data-stu-id="36eef-268">Updates the session-item information in the session-state data store with values from the current request, and clears the lock on the data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-269"><xref:System.Web.SessionState.SessionStateModule> 对象将在请求结束时调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> 方法，以便在 <xref:System.Web.HttpApplication.ReleaseRequestState> 事件期间将当前会话项信息插入数据存储区，或者使用当前值更新数据存储区中的现有会话项信息，更新项的过期时间，以及释放对数据的锁定。</span><span class="sxs-lookup"><span data-stu-id="36eef-269">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to insert current session-item information into the data store or update existing session-item information in the data store with current values, to update the expiration time on the item, and to release the lock on the data.</span></span> <span data-ttu-id="36eef-270">仅更新当前应用程序中与提供的会话匹配的会话数据 `id` 和 `lockId` 值。</span><span class="sxs-lookup"><span data-stu-id="36eef-270">Only session data for the current application that matches the supplied session `id` and `lockId` values is updated.</span></span> <span data-ttu-id="36eef-271">有关锁定的详细信息，请参阅 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 类概述中的 "锁定会话存储数据"。</span><span class="sxs-lookup"><span data-stu-id="36eef-271">For more information about locking, see "Locking Session Store Data" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.</span></span>

 <span data-ttu-id="36eef-272">如果尚未修改当前请求的会话值，则不会调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-272">If the session values for the current request have not been modified, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called.</span></span> <span data-ttu-id="36eef-273">相反，将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-273">Instead, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method is called.</span></span>

 <span data-ttu-id="36eef-274">如果已调用 <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> 方法，则不会调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="36eef-274">If the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called.</span></span> <span data-ttu-id="36eef-275">相反，<xref:System.Web.SessionState.SessionStateModule> 对象将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> 方法来从数据源中删除会话项数据。</span><span class="sxs-lookup"><span data-stu-id="36eef-275">Instead, the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method to delete session-item data from the data source.</span></span>



## Examples
 <span data-ttu-id="36eef-276">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-276">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-277">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-277">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetItemExpireCallback">
      <MemberSignature Language="C#" Value="public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetItemExpireCallback(class System.Web.SessionState.SessionStateItemExpireCallback expireCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SetItemExpireCallback (expireCallback As SessionStateItemExpireCallback) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool SetItemExpireCallback(System::Web::SessionState::SessionStateItemExpireCallback ^ expireCallback);" />
      <MemberSignature Language="F#" Value="abstract member SetItemExpireCallback : System.Web.SessionState.SessionStateItemExpireCallback -&gt; bool" Usage="sessionStateStoreProviderBase.SetItemExpireCallback expireCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expireCallback" Type="System.Web.SessionState.SessionStateItemExpireCallback" />
      </Parameters>
      <Docs>
        <param name="expireCallback"><span data-ttu-id="36eef-278">对 Global.asax 文件中定义的 <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> 事件的 <see langword="Session_OnEnd" /> 委托。</span><span class="sxs-lookup"><span data-stu-id="36eef-278">The <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> delegate for the <see langword="Session_OnEnd" /> event defined in the Global.asax file.</span></span></param>
        <summary><span data-ttu-id="36eef-279">设置对 Global.asax 文件中定义的 <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> 事件的 <see langword="Session_OnEnd" /> 委托的引用。</span><span class="sxs-lookup"><span data-stu-id="36eef-279">Sets a reference to the <see cref="T:System.Web.SessionState.SessionStateItemExpireCallback" /> delegate for the <see langword="Session_OnEnd" /> event defined in the Global.asax file.</span></span></summary>
        <returns><span data-ttu-id="36eef-280">如果会话状态存储提供程序支持调用 <see langword="true" /> 事件，则为 <see langword="Session_OnEnd" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="36eef-280"><see langword="true" /> if the session-state store provider supports calling the <see langword="Session_OnEnd" /> event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="36eef-281">初始化模块时，<xref:System.Web.SessionState.SessionStateModule> 对象将调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> 方法，以确定 <xref:System.Web.SessionState.SessionStateStoreProviderBase> 实现是否支持对 `Session_OnEnd` 事件的调用并将 <xref:System.Web.SessionState.SessionStateItemExpireCallback> 委托与 `Session_OnEnd` 事件关联。</span><span class="sxs-lookup"><span data-stu-id="36eef-281">The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method when the module is initialized to determine whether calls to the `Session_OnEnd` event are supported by the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation and to associate the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate with the `Session_OnEnd` event.</span></span>

 <span data-ttu-id="36eef-282">自定义会话状态存储提供程序实现器应使用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> 方法来通知 <xref:System.Web.SessionState.SessionStateModule> 对象是否支持对 `Session_OnEnd` 事件的调用，以及如何设置由 `expireCallback` 参数提供的 <xref:System.Web.SessionState.SessionStateItemExpireCallback> 委托的本地引用。</span><span class="sxs-lookup"><span data-stu-id="36eef-282">Custom session-state store provider implementers should use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method to inform the <xref:System.Web.SessionState.SessionStateModule> object whether calls to the `Session_OnEnd` event are supported and to set a local reference to the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate supplied by the `expireCallback` parameter.</span></span> <span data-ttu-id="36eef-283">自定义实现必须确定何时调用本地 <xref:System.Web.SessionState.SessionStateItemExpireCallback> 委托。</span><span class="sxs-lookup"><span data-stu-id="36eef-283">The custom implementation must decide when the local <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate will be called.</span></span> <span data-ttu-id="36eef-284">例如，可以在调用 <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> 方法期间调用委托，此方法在放弃会话时调用。</span><span class="sxs-lookup"><span data-stu-id="36eef-284">For example, the delegate could be called during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method, which is called when a session is abandoned.</span></span>



## Examples
 <span data-ttu-id="36eef-285">有关会话状态存储提供程序实现的示例，请参阅[实现会话状态存储提供程序](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66)。</span><span class="sxs-lookup"><span data-stu-id="36eef-285">For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](https://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="36eef-286">ASP.NET 会话状态概述</span><span class="sxs-lookup"><span data-stu-id="36eef-286">ASP.NET Session State Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
