<Type Name="TypeReference" FullName="System.Reflection.Metadata.TypeReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e1f4adaafc21ea229cebce84ebafe94b3145356" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75167781" /></Metadata><TypeSignature Language="C#" Value="public struct TypeReference" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit TypeReference extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.TypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Structure TypeReference" />
  <TypeSignature Language="C++ CLI" Value="public value class TypeReference" />
  <TypeSignature Language="F#" Value="type TypeReference = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.0.22.0</AssemblyVersion>
    <AssemblyVersion>1.3.0.0</AssemblyVersion>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Name { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a36e-101">获取目标类型的名称。</span><span class="sxs-lookup"><span data-stu-id="0a36e-101">Gets the name of the target type.</span></span></summary>
        <value><span data-ttu-id="0a36e-102">目标类型的名称。</span><span class="sxs-lookup"><span data-stu-id="0a36e-102">The name of the target type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.StringHandle Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.StringHandle Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As StringHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::StringHandle Namespace { System::Reflection::Metadata::StringHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : System.Reflection.Metadata.StringHandle" Usage="System.Reflection.Metadata.TypeReference.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.StringHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a36e-103">获取在其中定义目标类型的命名空间的全名。</span><span class="sxs-lookup"><span data-stu-id="0a36e-103">Gets the full name of the namespace where the target type is defined.</span></span></summary>
        <value><span data-ttu-id="0a36e-104">定义目标类型的命名空间的完整名称，或者如果在根命名空间中嵌套或定义了该类型，则为其 <see cref="P:System.Reflection.Metadata.StringHandle.IsNil" /> 属性 <see langword="true" /> 的句柄。</span><span class="sxs-lookup"><span data-stu-id="0a36e-104">The full name of the namespace where the target type is defined, or a handle whose the <see cref="P:System.Reflection.Metadata.StringHandle.IsNil" /> property is <see langword="true" /> if the type is nested or defined in a root namespace,</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolutionScope">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.EntityHandle ResolutionScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Metadata.EntityHandle ResolutionScope" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResolutionScope As EntityHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::EntityHandle ResolutionScope { System::Reflection::Metadata::EntityHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.ResolutionScope : System.Reflection.Metadata.EntityHandle" Usage="System.Reflection.Metadata.TypeReference.ResolutionScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.0.22.0</AssemblyVersion>
        <AssemblyVersion>1.3.0.0</AssemblyVersion>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.EntityHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a36e-105">获取解析范围，目标类型在该范围内定义且由指定的 <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> 和 <see cref="P:System.Reflection.Metadata.TypeReference.Name" /> 唯一标识。</span><span class="sxs-lookup"><span data-stu-id="0a36e-105">Gets the resolution scope in which the target type is defined and is uniquely identified by the specified <see cref="P:System.Reflection.Metadata.TypeReference.Namespace" /> and <see cref="P:System.Reflection.Metadata.TypeReference.Name" />.</span></span></summary>
        <value><span data-ttu-id="0a36e-106">用于唯一定义目标类型的解析范围。</span><span class="sxs-lookup"><span data-stu-id="0a36e-106">The resolution scope in which the target type is uniquely defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="0a36e-107">解析范围可以是下列句柄之一：</span><span class="sxs-lookup"><span data-stu-id="0a36e-107">Resolution scope can be one of the following handles:</span></span>

- <span data-ttu-id="0a36e-108">如果目标类型是嵌套类型，则为封闭类型 <xref:System.Reflection.Metadata.TypeReferenceHandle>。</span><span class="sxs-lookup"><span data-stu-id="0a36e-108"><xref:System.Reflection.Metadata.TypeReferenceHandle> of the enclosing type, if the target type is a nested type.</span></span>

- <span data-ttu-id="0a36e-109">如果目标类型在与此相同的程序集内的另一个模块中定义，则 <xref:System.Reflection.Metadata.ModuleReferenceHandle>。</span><span class="sxs-lookup"><span data-stu-id="0a36e-109"><xref:System.Reflection.Metadata.ModuleReferenceHandle>, if the target type is defined in another module within the same assembly as this one.</span></span>

- <span data-ttu-id="0a36e-110">如果在当前模块中定义了目标类型，则 <xref:System.Reflection.Metadata.EntityHandle.ModuleDefinition>。</span><span class="sxs-lookup"><span data-stu-id="0a36e-110"><xref:System.Reflection.Metadata.EntityHandle.ModuleDefinition>, if the target type is defined in the current module.</span></span> <span data-ttu-id="0a36e-111">CLI 压缩的元数据模块不应发生此情况。</span><span class="sxs-lookup"><span data-stu-id="0a36e-111">This should not occur in a CLI compressed metadata module.</span></span>

- <span data-ttu-id="0a36e-112">如果目标类型是在不同于当前模块的程序集中定义的，则 <xref:System.Reflection.Metadata.AssemblyReferenceHandle>。</span><span class="sxs-lookup"><span data-stu-id="0a36e-112"><xref:System.Reflection.Metadata.AssemblyReferenceHandle>, if the target type is defined in a different assembly from the current module.</span></span>

- <span data-ttu-id="0a36e-113">如果必须通过在 <xref:System.Reflection.Metadata.MetadataReader.ExportedTypes> 中搜索匹配的 <xref:System.Reflection.Metadata.TypeReference.Namespace> 和 <xref:System.Reflection.Metadata.TypeReference.Name>来解析目标类型，则 `Nil` 句柄。</span><span class="sxs-lookup"><span data-stu-id="0a36e-113">`Nil` handle if the target type must be resolved by searching the <xref:System.Reflection.Metadata.MetadataReader.ExportedTypes> for a matching <xref:System.Reflection.Metadata.TypeReference.Namespace> and <xref:System.Reflection.Metadata.TypeReference.Name>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
