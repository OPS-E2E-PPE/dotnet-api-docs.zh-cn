<Type Name="TcpClientChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a206a0f86b2ee86f05f75b0975d0404fc8120e2f" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78815222" /></Metadata><TypeSignature Language="C#" Value="public class TcpClientChannel : System.Runtime.Remoting.Channels.IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClientChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClientChannel&#xA;Implements IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClientChannel : System::Runtime::Remoting::Channels::IChannelSender" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type TcpClientChannel = class&#xA;    interface IChannelSender&#xA;    interface IChannel" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class TcpClientChannel : System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClientChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClientChannel&#xA;Implements IChannelSender, ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClientChannel : System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type TcpClientChannel = class&#xA;    interface IChannelSender&#xA;    interface IChannel&#xA;    interface ISecurableChannel" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1e5c9-101">为远程调用实现使用 TCP 协议传输消息的客户端信道。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-101">For remote calls, implements a client channel that uses the TCP protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="1e5c9-102">通道传输跨远程处理边界（例如，计算机或应用程序域）的消息。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-102">Channels transport messages across remoting boundaries (for example, computers or application domains).</span></span> <span data-ttu-id="1e5c9-103"><xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 类使用 TCP 协议传输消息。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-103">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class transports messages using the TCP protocol.</span></span>  
  
 <span data-ttu-id="1e5c9-104">通道由 .NET Framework 远程处理基础结构用于传输远程调用。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-104">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="1e5c9-105">当客户端调用远程对象时，调用将被序列化为客户端通道发送并由服务器通道接收的消息。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-105">When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="1e5c9-106">然后对其进行反序列化和处理。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-106">It is then deserialized and processed.</span></span> <span data-ttu-id="1e5c9-107">任何返回值由服务器通道传输并由客户端通道接收。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-107">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="1e5c9-108">若要在客户端执行额外的消息处理，可以指定 <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> 接口的实现，通过该接口，<xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 所处理的所有消息都通过。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-108">To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> are passed.</span></span>  
  
 <span data-ttu-id="1e5c9-109">默认情况下，<xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 类使用二进制格式化程序对所有消息进行序列化。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-109">By default, the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class uses a binary formatter to serialize all messages.</span></span>  
  
 <span data-ttu-id="1e5c9-110"><xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 对象具有关联的配置属性，这些属性可以在配置文件中（通过调用静态 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> 方法）或以编程方式（通过将 <xref:System.Collections.IDictionary> 集合传递到 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> 构造函数）在运行时设置。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-110">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="1e5c9-111">有关这些配置属性的列表，请参阅 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>的文档。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-111">For a list of these configuration properties, see the documentation for <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.%23ctor%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e5c9-112">下面的代码示例演示如何使用 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 类来调用远程类型。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-112">The following code example shows the use of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class to call a remote type.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#20](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#20)]
 [!code-csharp[Remoting_TcpInfo#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#20)]  
  
 <span data-ttu-id="1e5c9-113">上面示例中调用的远程类型由以下代码定义。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-113">The remote type called in the example above is defined by the following code.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/remotable.cpp#10)]
 [!code-csharp[Remoting_TcpInfo#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/remotable.cs#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e5c9-114">初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-114">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClientChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClientChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e5c9-115">初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-115">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5c9-116">此构造函数返回的 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 实例的配置属性都设置为其默认值。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-116">The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e5c9-117">下面的代码示例演示如何使用此构造函数。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-117">The following code example shows the use of this constructor.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#21)]
 [!code-csharp[Remoting_TcpInfo#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClientChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpClientChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpClientChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="1e5c9-118">一个 <see cref="T:System.Collections.IDictionary" /> 集合，它为信道要使用的配置属性指定值。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-118">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1e5c9-119">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-119">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1e5c9-120">使用指定的配置属性和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-120">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the specified configuration properties and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5c9-121">有关通道配置属性的详细信息，请参阅[通道和格式化程序配置属性](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-121">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="1e5c9-122">如果不需要接收器功能，请将 `sinkProvider` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-122">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e5c9-123">下面的代码示例演示如何使用此构造函数创建具有特定配置属性的 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> 对象。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-123">The following code example shows the use of this constructor to create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> object with specific configuration properties.</span></span>  
  
 [!code-cpp[Remoting_TcpAuth#31](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpAuth/CPP/client.cpp#31)]
 [!code-csharp[Remoting_TcpAuth#31](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpAuth/CS/client.cs#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e5c9-124">配置属性的格式设置不正确。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-124">A configuration property was incorrectly formatted.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="1e5c9-125">通道和格式化程序配置属性</span><span class="sxs-lookup"><span data-stu-id="1e5c9-125">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClientChannel(System::String ^ name, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpClientChannel : string * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpClientChannel (name, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1e5c9-126">信道的名称。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-126">The name of the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="1e5c9-127">信道要使用的 <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> 实现。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-127">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="1e5c9-128">使用指定的名称和接收器初始化 <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-128">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel" /> class with the specified name and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5c9-129">此构造函数使用 `name` 参数设置 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-129">This constructor sets the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="1e5c9-130">如果要注册多个通道，则每个通道都必须具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-130">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="1e5c9-131">如果不需要接收器功能，请将 `sinkProvider` 参数设置为 `null`。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-131">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e5c9-132">下面的代码示例演示如何构造 <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-132">The following code example shows how to construct a <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel>.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CPP/client.cpp#31)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#31](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CS/client.cs#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e5c9-133">获取当前信道的名称。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-133">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="1e5c9-134">包含信道名称的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-134">A <see cref="T:System.String" /> instance that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5c9-135">每个已注册的通道都具有唯一的名称。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-135">Every registered channel has a unique name.</span></span> <span data-ttu-id="1e5c9-136">此名称用于在调用 <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>时检索特定通道。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-136">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e5c9-137">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-137">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#22](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#22)]
 [!code-csharp[Remoting_TcpInfo#22](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e5c9-138">获取当前信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-138">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="1e5c9-139">一个整数，表示分配给该信道的优先级。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-139">An integer that represents the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5c9-140">优先级控制竞争的客户端连接到给定终结点的顺序;优先级较高的通道在较低优先级通道之前连接。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-140">The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels.</span></span> <span data-ttu-id="1e5c9-141">默认优先级为 1;允许负的优先级。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-141">The default priority is 1; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e5c9-142">下面的代码示例演示如何使用此属性。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-142">The following code example shows the use of this property.</span></span>  
  
 [!code-cpp[Remoting_TcpInfo#22](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_TcpInfo/CPP/client.cpp#22)]
 [!code-csharp[Remoting_TcpInfo#22](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_TcpInfo/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="tcpClientChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink(System.String,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1e5c9-143">新接收器应将消息传递到的 URL。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-143">The URL to which the new sink delivers messages.</span></span> <span data-ttu-id="1e5c9-144">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-144">Can be <see langword="null" />.</span></span></param>
        <param name="remoteChannelData"><span data-ttu-id="1e5c9-145">新接收器将把消息传送到的远程主机的信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-145">The channel data object of the remote host to which the new sink will deliver messages.</span></span> <span data-ttu-id="1e5c9-146">可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-146">Can be <see langword="null" />.</span></span></param>
        <param name="objectURI"><span data-ttu-id="1e5c9-147">此方法返回时，包含新信道消息接收器的 URI，该信道消息接收器将消息传送到指定 URL 或信道数据对象。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-147">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span></span> <span data-ttu-id="1e5c9-148">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-148">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="1e5c9-149">返回将消息传送到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-149">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span></span></summary>
        <returns><span data-ttu-id="1e5c9-150">将消息传递给指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-150">A channel message sink that delivers messages to the specified URL or channel data object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e5c9-151"><xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink%2A> 方法返回将消息传递到指定 URL 或信道数据对象的信道消息接收器。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-151">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or the channel data object.</span></span> <span data-ttu-id="1e5c9-152">如果 `uri` 参数 `null`，则 `remoteChannelData` 用作接收器的目标。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-152">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="1e5c9-153">可以 `null``url` 或 `remoteChannelData` 参数，但不能同时为两者。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-153">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e5c9-154">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-154">The following code example shows the use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CPP/client.cpp#32)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#32](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpClientChannel/CS/client.cs#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e5c9-155">获取或设置一个布尔值，该值指示当前信道是否安全。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-155">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="1e5c9-156">一个布尔值，指示当前实例是否安全。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-156">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * string -&gt; string&#xA;override this.Parse : string * string -&gt; string" Usage="tcpClientChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="1e5c9-157">从中提取 URI 的 URL。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-157">The URL from which to extract the URIs.</span></span></param>
        <param name="objectURI"><span data-ttu-id="1e5c9-158">当此方法返回时，包含含有远程已知对象的 URI 的 <see cref="T:System.String" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-158">When this method returns, contains a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="1e5c9-159">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-159">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="1e5c9-160">从指定 URL 提取信道 URI 和远程已知对象 URI。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-160">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="1e5c9-161">信道 URI。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-161">The channel URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e5c9-162">下面的代码示例演示如何使用此方法。</span><span class="sxs-lookup"><span data-stu-id="1e5c9-162">The following code example shows the use this method.</span></span>  
  
 <span data-ttu-id="1e5c9-163">System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#33</span><span class="sxs-lookup"><span data-stu-id="1e5c9-163">System.Runtime.Remoting.Channels.Tcp.TcpClientChannel#33</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
