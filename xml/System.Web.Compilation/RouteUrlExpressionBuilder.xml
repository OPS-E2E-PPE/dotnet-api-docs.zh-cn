<Type Name="RouteUrlExpressionBuilder" FullName="System.Web.Compilation.RouteUrlExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f1af86901524f10c5a8bd7450ec15cdfae82030b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78778549" /></Metadata><TypeSignature Language="C#" Value="public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteUrlExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteUrlExpressionBuilder&#xA;Inherits ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteUrlExpressionBuilder : System::Web::Compilation::ExpressionBuilder" />
  <TypeSignature Language="F#" Value="type RouteUrlExpressionBuilder = class&#xA;    inherit ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionPrefix("Routes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="26c14-101">创建与指定的 URL 参数值对应的 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-101">Creates a URL that corresponds to specified URL parameter values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="26c14-102">利用 <xref:System.Web.Compilation.RouteUrlExpressionBuilder> 类，可以通过提供 URL 参数值的列表，将服务器控件的属性设置为路由的 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-102">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class makes it possible to set the property of a server control to the URL of a route by providing a list of URL parameter values.</span></span>



## Examples
 <span data-ttu-id="26c14-103">下面的示例演示如何创建标记，该标记用于生成包含为路由设置格式的 URL 的超链接。</span><span class="sxs-lookup"><span data-stu-id="26c14-103">The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route.</span></span> <span data-ttu-id="26c14-104">路由是通过使用 `http://www.contoso.com/search/{searchterm}` 作为 URL 模式来定义的。</span><span class="sxs-lookup"><span data-stu-id="26c14-104">The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.</span></span>

```
<asp:HyperLink ID="HyperLink1" runat="server"
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles %>">
  Search for Bicycles
</asp:HyperLink>
```

 <span data-ttu-id="26c14-105">为此超链接生成的 URL 将 `http://www.contoso.com/search/Bicycles`。</span><span class="sxs-lookup"><span data-stu-id="26c14-105">The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.</span></span>

 <span data-ttu-id="26c14-106">如果提供给 `RouteUrl` 表达式的 URL 参数不足以唯一标识路由，则必须包含路由名称。</span><span class="sxs-lookup"><span data-stu-id="26c14-106">If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name.</span></span> <span data-ttu-id="26c14-107">例如，如果 Web 应用程序具有两个 `searchterm` 作为唯一 URL 参数的路由，则必须使用路由名称来定义路由，并且超链接标记将类似于以下示例：</span><span class="sxs-lookup"><span data-stu-id="26c14-107">For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:</span></span>

```
<asp:HyperLink ID="HyperLink1" runat="server"
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles,
               routename=BasicSearchRoute %>">
  Search for Bicycles
</asp:HyperLink>
```

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="26c14-108">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="26c14-108">ASP.NET Routing</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="26c14-109">如何：访问路由页中的 URL 参数</span><span class="sxs-lookup"><span data-stu-id="26c14-109">How to: Access URL Parameters in a Routed Page</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="26c14-110">ASP.NET 表达式概述</span><span class="sxs-lookup"><span data-stu-id="26c14-110">ASP.NET Expressions Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteUrlExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteUrlExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="26c14-111">初始化 <see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="26c14-111">Initializes a new instance of the <see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="26c14-112">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="26c14-112">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="26c14-113">如何：访问路由页中的 URL 参数</span><span class="sxs-lookup"><span data-stu-id="26c14-113">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="26c14-114">ASP.NET 表达式概述</span><span class="sxs-lookup"><span data-stu-id="26c14-114">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="routeUrlExpressionBuilder.EvaluateExpression (target, entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="26c14-115">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="26c14-115">Not used in this implementation.</span></span></param>
        <param name="entry"><span data-ttu-id="26c14-116">表达式绑定到的属性。</span><span class="sxs-lookup"><span data-stu-id="26c14-116">The property that the expression is bound to.</span></span></param>
        <param name="parsedData"><span data-ttu-id="26c14-117">未在此实现中使用。</span><span class="sxs-lookup"><span data-stu-id="26c14-117">Not used in this implementation.</span></span></param>
        <param name="context"><span data-ttu-id="26c14-118">控件或页的属性。</span><span class="sxs-lookup"><span data-stu-id="26c14-118">Properties for the control or page.</span></span></param>
        <summary><span data-ttu-id="26c14-119">创建与指定的 URL 参数值和路由 URL 格式对应的 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-119">Creates a URL that corresponds to specified URL parameter values and to a route URL format.</span></span></summary>
        <returns><span data-ttu-id="26c14-120">与指定的 URL 参数值和所选路由对应的 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-120">The URL that corresponds to the specified URL parameter values and to the selected route.</span></span> <span data-ttu-id="26c14-121">此路由是通过将路由 URL 模式与指定的参数列表相匹配来选择的。</span><span class="sxs-lookup"><span data-stu-id="26c14-121">The route is selected by matching route URL patterns to the specified list of parameters.</span></span> <span data-ttu-id="26c14-122">如果有多个路由与指定的参数列表相匹配，则还可以指定路由名称以指示要选择哪个路由。</span><span class="sxs-lookup"><span data-stu-id="26c14-122">In case more than one route matches a specified list of parameters, a route name can also be specified to indicate which route to select.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="26c14-123">在标记中遇到以下形式的表达式时，ASP.NET 调用此方法：</span><span class="sxs-lookup"><span data-stu-id="26c14-123">ASP.NET calls this method when an expression of the following form is encountered in markup:</span></span>

 `<%$ RouteUrl: urlparameter=value %>`

 <span data-ttu-id="26c14-124">此方法为当前 <xref:System.Web.Routing.Route> 对象的指定路由键值生成相应的 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-124">This method generates the appropriate URL for the specified route-key values for the current <xref:System.Web.Routing.Route> object.</span></span> <span data-ttu-id="26c14-125">此方法将重写 <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="26c14-125">This method overrides the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span> <span data-ttu-id="26c14-126">它从 `entry` 参数获取对表达式绑定到的控件的引用，该参数从 `context` 参数获取要计算的表达式，并调用 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> 方法来生成 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-126">It gets from the `entry` parameter a reference to the control to which the expression is bound, it gets from the `context` parameter the expression to be evaluated, and it calls the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> method to generate the URL.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="26c14-127">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="26c14-127">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="26c14-128">如何：访问路由页中的 URL 参数</span><span class="sxs-lookup"><span data-stu-id="26c14-128">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="26c14-129">ASP.NET 表达式概述</span><span class="sxs-lookup"><span data-stu-id="26c14-129">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCodeExpression : System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; System.CodeDom.CodeExpression" Usage="routeUrlExpressionBuilder.GetCodeExpression (entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="26c14-130">表达式绑定到的属性。</span><span class="sxs-lookup"><span data-stu-id="26c14-130">The property that the expression is bound to.</span></span></param>
        <param name="parsedData"><span data-ttu-id="26c14-131">表示由 <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" /> 返回的已分析数据的对象。</span><span class="sxs-lookup"><span data-stu-id="26c14-131">The object that represents parsed data as returned by <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</span></span></param>
        <param name="context"><span data-ttu-id="26c14-132">控件或页的属性。</span><span class="sxs-lookup"><span data-stu-id="26c14-132">Properties for the control or page.</span></span></param>
        <summary><span data-ttu-id="26c14-133">返回一个代码表达式，该表达式用于在生成的页类中为属性赋值。</span><span class="sxs-lookup"><span data-stu-id="26c14-133">Returns a code expression that is used to perform the property assignment in the generated page class.</span></span></summary>
        <returns><span data-ttu-id="26c14-134">属性赋值中使用的 <see cref="T:System.CodeDom.CodeExpression" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="26c14-134">A <see cref="T:System.CodeDom.CodeExpression" /> instance that is used in the property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="26c14-135">为页或控件创建 CodeDOM 时，将调用此方法。</span><span class="sxs-lookup"><span data-stu-id="26c14-135">This method is called when the CodeDOM is created for a page or control.</span></span> <span data-ttu-id="26c14-136">返回的 <xref:System.CodeDom.CodeExpression> 对象表示要添加到生成的页类中的属性分配的代码表达式。</span><span class="sxs-lookup"><span data-stu-id="26c14-136">The <xref:System.CodeDom.CodeExpression> object that is returned represents the code expression to add to the property assignment in the generated page class.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="26c14-137">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="26c14-137">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="26c14-138">如何：访问路由页中的 URL 参数</span><span class="sxs-lookup"><span data-stu-id="26c14-138">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="26c14-139">ASP.NET 表达式概述</span><span class="sxs-lookup"><span data-stu-id="26c14-139">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public static string GetRouteUrl (System.Web.UI.Control control, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRouteUrl(class System.Web.UI.Control control, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRouteUrl (control As Control, expression As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRouteUrl(System::Web::UI::Control ^ control, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member GetRouteUrl : System.Web.UI.Control * string -&gt; string" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl (control, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="26c14-140">表达式所绑定的控件。</span><span class="sxs-lookup"><span data-stu-id="26c14-140">The control that the expression is bound to.</span></span></param>
        <param name="expression"><span data-ttu-id="26c14-141">标记中指定的表达式。</span><span class="sxs-lookup"><span data-stu-id="26c14-141">The expression as specified in markup.</span></span></param>
        <summary><span data-ttu-id="26c14-142">创建与为路由 URL 格式指定的路由键对应的 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-142">Creates a URL that corresponds to specified route keys for a route URL format.</span></span></summary>
        <returns><span data-ttu-id="26c14-143">与当前 <see cref="T:System.Web.Routing.Route" /> 对象的路由 URL 格式对应的 URL。</span><span class="sxs-lookup"><span data-stu-id="26c14-143">The URL that corresponds to the route URL format of the current <see cref="T:System.Web.Routing.Route" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="26c14-144">此方法通过调用 <xref:System.Web.Routing.RouteCollection> 对象的 <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> 方法为 URL 生成合适的值。</span><span class="sxs-lookup"><span data-stu-id="26c14-144">This method generates the appropriate value for the URL by calling the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="26c14-145">它从 `control` 参数获取 <xref:System.Web.Routing.RequestContext> 对象，并分析 `expression` 参数的路由名称和路由参数。</span><span class="sxs-lookup"><span data-stu-id="26c14-145">It gets the <xref:System.Web.Routing.RequestContext> object from the `control` parameter, and it parses the route name and route parameters from the `expression` parameter.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="26c14-146"><paramref name="control" /> 参数为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="26c14-146">The <paramref name="control" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="26c14-147">该方法无法分析标记中指定的表达式。</span><span class="sxs-lookup"><span data-stu-id="26c14-147">The method was unable to parse the expression that was specified in markup.</span></span> <span data-ttu-id="26c14-148">有关详细信息，请参阅 <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />。</span><span class="sxs-lookup"><span data-stu-id="26c14-148">For more information, see <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="26c14-149">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="26c14-149">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="26c14-150">如何：访问路由页中的 URL 参数</span><span class="sxs-lookup"><span data-stu-id="26c14-150">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="26c14-151">ASP.NET 表达式概述</span><span class="sxs-lookup"><span data-stu-id="26c14-151">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEvaluate : bool" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="26c14-152">获取一个值，该值指示是否可在未编译的页中计算表达式。</span><span class="sxs-lookup"><span data-stu-id="26c14-152">Gets a value that indicates whether an expression can be evaluated in a page that is not compiled.</span></span></summary>
        <value><span data-ttu-id="26c14-153">总是为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="26c14-153">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="26c14-154"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> 属性指示是否已在类中实现 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> 方法，并可以在未编译的页中返回表达式的值。</span><span class="sxs-lookup"><span data-stu-id="26c14-154">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> property indicates whether the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class and can return a value for the expression in a page that is not compiled.</span></span> <span data-ttu-id="26c14-155"><xref:System.Web.Compilation.RouteUrlExpressionBuilder> 类可以在未编译的页中计算表达式。</span><span class="sxs-lookup"><span data-stu-id="26c14-155">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class can evaluate an expression in a page that is not compiled.</span></span> <span data-ttu-id="26c14-156">因此，<xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> 属性总是返回 `true`。</span><span class="sxs-lookup"><span data-stu-id="26c14-156">Therefore, the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> property always returns `true`.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="26c14-157">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="26c14-157">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="26c14-158">如何：访问路由页中的 URL 参数</span><span class="sxs-lookup"><span data-stu-id="26c14-158">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="26c14-159">ASP.NET 表达式概述</span><span class="sxs-lookup"><span data-stu-id="26c14-159">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParseRouteExpression">
      <MemberSignature Language="C#" Value="public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseRouteExpression(string expression, class System.Web.Routing.RouteValueDictionary routeValues, [out] string&amp; routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseRouteExpression (expression As String, routeValues As RouteValueDictionary, ByRef routeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseRouteExpression(System::String ^ expression, System::Web::Routing::RouteValueDictionary ^ routeValues, [Runtime::InteropServices::Out] System::String ^ % routeName);" />
      <MemberSignature Language="F#" Value="static member TryParseRouteExpression : string * System.Web.Routing.RouteValueDictionary * string -&gt; bool" Usage="System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression (expression, routeValues, routeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeName" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="26c14-160">标记中指定的表达式。</span><span class="sxs-lookup"><span data-stu-id="26c14-160">The expression as specified in markup.</span></span></param>
        <param name="routeValues"><span data-ttu-id="26c14-161">路由键及其关联值的集合。</span><span class="sxs-lookup"><span data-stu-id="26c14-161">The collection of route keys and their associated values.</span></span></param>
        <param name="routeName"><span data-ttu-id="26c14-162">此方法返回时，如果 <paramref name="expression" /> 包含名为 <c>RouteName</c> 的路由键，此参数则包含一个表示路由名称的字符串。</span><span class="sxs-lookup"><span data-stu-id="26c14-162">When this method returns, contains a string that represents the name of the route, if <paramref name="expression" /> contains a route key named <c>RouteName</c>.</span></span> <span data-ttu-id="26c14-163">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="26c14-163">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="26c14-164">将表达式分析为路由键和值的集合，还可以分析为路由名称。</span><span class="sxs-lookup"><span data-stu-id="26c14-164">Parses an expression into a collection of route keys and values, and optionally into a route name.</span></span></summary>
        <returns><span data-ttu-id="26c14-165">如果分析成功，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="26c14-165"><see langword="true" /> if parsing was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="26c14-166"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> 方法从表达式中去除前导空格和尾随空格，然后使用逗号作为分隔符将其拆分为键/值对。</span><span class="sxs-lookup"><span data-stu-id="26c14-166">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> method strips leading and trailing spaces from the expression, and then splits it into key/value pairs by using commas as delimiters.</span></span> <span data-ttu-id="26c14-167">如果找到名为 `RouteName` 的路由键，则该值传递回 `routeName` 参数，而不是在 `routeValues`中。</span><span class="sxs-lookup"><span data-stu-id="26c14-167">If the route key named `RouteName` is found, that value is passed back in the `routeName` parameter and not in `routeValues`.</span></span> <span data-ttu-id="26c14-168">否则，将返回 `routeName`的 `null`。</span><span class="sxs-lookup"><span data-stu-id="26c14-168">Otherwise, `null` is returned for `routeName`.</span></span> <span data-ttu-id="26c14-169">前导空格和尾随空格还会从单个键和值中去除。</span><span class="sxs-lookup"><span data-stu-id="26c14-169">Leading and trailing spaces are also stripped from individual keys and values.</span></span>

 <span data-ttu-id="26c14-170">如果表达式不由至少一个具有格式*键*`=`*值*的键/值对构成，并使用逗号分隔多个对，则 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> 方法返回 `false`。</span><span class="sxs-lookup"><span data-stu-id="26c14-170">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> method returns `false` if the expression is not composed of at least one key/value pair that is in the format *key*`=`*value*, and that uses commas to separate multiple pairs.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="26c14-171">ASP.NET 路由</span><span class="sxs-lookup"><span data-stu-id="26c14-171">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="26c14-172">如何：访问路由页中的 URL 参数</span><span class="sxs-lookup"><span data-stu-id="26c14-172">How to: Access URL Parameters in a Routed Page</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/d5bd1tad(v=vs.100)"><span data-ttu-id="26c14-173">ASP.NET 表达式概述</span><span class="sxs-lookup"><span data-stu-id="26c14-173">ASP.NET Expressions Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
