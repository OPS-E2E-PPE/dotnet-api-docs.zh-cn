<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="705c0c119e297b81c0f3c07a87aad6148c2d560d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78737404" /></Metadata><TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Web" FromVersion="4.0.0.0" To="System.Web.ApplicationServices" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2637f-101">定义 ASP.NET 为使用自定义角色提供程序提供角色管理服务而实现的协定。</span><span class="sxs-lookup"><span data-stu-id="2637f-101">Defines the contract that ASP.NET implements to provide role-management services using custom role providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-102">ASP.NET 角色管理旨在使你能够轻松地为 ASP.NET 应用程序使用多个不同的角色提供程序。</span><span class="sxs-lookup"><span data-stu-id="2637f-102">ASP.NET role management is designed to enable you to easily use a number of different role providers for your ASP.NET applications.</span></span> <span data-ttu-id="2637f-103">您可以使用 .NET Framework 附带的提供的角色提供程序，也可以实现您自己的提供程序。</span><span class="sxs-lookup"><span data-stu-id="2637f-103">You can use the supplied role providers that are included with the .NET Framework, or you can implement your own provider.</span></span>  
  
 <span data-ttu-id="2637f-104">实现自定义角色提供程序时，需要继承 <xref:System.Web.Security.RoleProvider> 抽象类。</span><span class="sxs-lookup"><span data-stu-id="2637f-104">When implementing a custom role provider, you are required to inherit the <xref:System.Web.Security.RoleProvider> abstract class.</span></span>  
  
 <span data-ttu-id="2637f-105">创建自定义角色提供程序的主要原因有两个。</span><span class="sxs-lookup"><span data-stu-id="2637f-105">There are two primary reasons for creating a custom role provider.</span></span>  
  
-   <span data-ttu-id="2637f-106">您需要将角色信息存储在 .NET Framework 中包含的角色提供程序不支持的数据源中，如 FoxPro 数据库、Oracle 数据库或其他数据源。</span><span class="sxs-lookup"><span data-stu-id="2637f-106">You need to store role information in a data source that is not supported by the role providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data sources.</span></span>  
  
-   <span data-ttu-id="2637f-107">需要使用与 .NET Framework 附带的提供程序所使用的数据库架构不同的数据库架构来管理角色信息。</span><span class="sxs-lookup"><span data-stu-id="2637f-107">You need to manage role information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework.</span></span> <span data-ttu-id="2637f-108">这种情况的一个常见示例是公司或网站的 SQL Server 数据库中已存在的角色数据。</span><span class="sxs-lookup"><span data-stu-id="2637f-108">A common example of this would be role data that already exists in a SQL Server database for a company or Web site.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-109">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-109">Implementing a Role Provider</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2637f-110">初始化 <see cref="T:System.Web.Security.RoleProvider" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2637f-110">Initializes a new instance of the <see cref="T:System.Web.Security.RoleProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-111">不需要为继承 <xref:System.Web.Security.RoleProvider> 抽象类的类实现构造函数。</span><span class="sxs-lookup"><span data-stu-id="2637f-111">You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.RoleProvider> abstract class.</span></span> <span data-ttu-id="2637f-112"><xref:System.Web.Security.RoleProvider> 实现的初始化值将传递给 <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> 方法实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-112">Initialization values for a <xref:System.Web.Security.RoleProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-113">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-113">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames"><span data-ttu-id="2637f-114">要添加到指定的角色的用户名的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="2637f-114">A string array of user names to be added to the specified roles.</span></span></param>
        <param name="roleNames"><span data-ttu-id="2637f-115">要添加指定的用户名的角色名称的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="2637f-115">A string array of the role names to add the specified user names to.</span></span></param>
        <summary><span data-ttu-id="2637f-116">向配置的 <see langword="applicationName" /> 的指定角色添加指定的用户名。</span><span class="sxs-lookup"><span data-stu-id="2637f-116">Adds the specified user names to the specified roles for the configured <see langword="applicationName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-117"><xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> 由 <xref:System.Web.Security.Roles> 类调用，以将指定用户与数据源中的指定角色关联。</span><span class="sxs-lookup"><span data-stu-id="2637f-117"><xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> is called by the <xref:System.Web.Security.Roles> class to associate the specified users with the specified roles at the data source.</span></span> <span data-ttu-id="2637f-118">角色将添加到配置的 <xref:System.Web.Security.RoleProvider.ApplicationName%2A>。</span><span class="sxs-lookup"><span data-stu-id="2637f-118">Roles are added to the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="2637f-119">如果为配置的 `applicationName`找不到任何指定的角色名称，则建议提供程序引发 <xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="2637f-119">If any of the specified role names are not found for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="2637f-120">如果任何指定的用户名与所配置的 `applicationName`的任何指定角色名称都不关联，则建议提供程序引发 <xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="2637f-120">If any of the specified user names are not associated with any of the specified role names for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="2637f-121">如果任何指定的用户名 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-121">If any of the specified user names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-122">如果指定的任何角色名称 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-122">If any of the specified role names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-123">如果你的数据源支持事务，则建议你将每个 add 操作包含在一个事务中，并在任何添加操作失败的情况下回滚该事务并引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-123">If your data source supports transactions, we recommend that you include each add operation in a transaction and that you roll back the transaction and throw an exception if any add operation fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-124">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-124">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-125">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-125">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2637f-126">获取或设置要存储和检索其角色信息的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-126">Gets or sets the name of the application to store and retrieve role information for.</span></span></summary>
        <value><span data-ttu-id="2637f-127">要存储和检索其角色信息的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-127">The name of the application to store and retrieve role information for.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-128"><xref:System.Web.Security.Roles> 类使用 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> 将用户和角色与不同的应用程序相关联。</span><span class="sxs-lookup"><span data-stu-id="2637f-128">The <xref:System.Web.Security.RoleProvider.ApplicationName%2A> is used by the <xref:System.Web.Security.Roles> class to associate users and roles with different applications.</span></span> <span data-ttu-id="2637f-129">这使多个应用程序能够使用同一个数据库来存储用户和角色信息，而不会在重复用户名或角色名称之间发生冲突。</span><span class="sxs-lookup"><span data-stu-id="2637f-129">This enables multiple applications to use the same database to store user and role information without running into conflicts between duplicate user names or role names.</span></span> <span data-ttu-id="2637f-130">多个 ASP.NET 应用程序可以通过在 <xref:System.Web.Security.Roles.ApplicationName%2A> 属性中指定相同的值，来使用相同的数据库。</span><span class="sxs-lookup"><span data-stu-id="2637f-130">Multiple ASP.NET applications can use the same database by specifying the same value in the <xref:System.Web.Security.Roles.ApplicationName%2A> property.</span></span> <span data-ttu-id="2637f-131">可以通过编程方式设置 <xref:System.Web.Security.Roles.ApplicationName%2A> 属性，也可以在使用 `applicationName` 属性的 Web 应用程序的配置文件中以声明方式设置该属性。</span><span class="sxs-lookup"><span data-stu-id="2637f-131">The <xref:System.Web.Security.Roles.ApplicationName%2A> property can be set programmatically, or it can be set declaratively in the configuration file for the Web application using the `applicationName` attribute.</span></span>  
  
 <span data-ttu-id="2637f-132">如果未指定 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> 属性，我们建议使用 <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> 属性值。</span><span class="sxs-lookup"><span data-stu-id="2637f-132">If no <xref:System.Web.Security.RoleProvider.ApplicationName%2A> property is specified, we recommend that the <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> property value be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-133">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> 属性的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-133">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.ApplicationName%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-134">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-134">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName"><span data-ttu-id="2637f-135">要创建的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-135">The name of the role to create.</span></span></param>
        <summary><span data-ttu-id="2637f-136">针对已配置的 <see langword="applicationName" />，将一个新角色添加到数据源。</span><span class="sxs-lookup"><span data-stu-id="2637f-136">Adds a new role to the data source for the configured <see langword="applicationName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-137"><xref:System.Web.Security.RoleProvider.CreateRole%2A> 由 <xref:System.Web.Security.Roles> 类的 <xref:System.Web.Security.Roles.CreateRole%2A> 方法调用，以将指定的角色添加到已配置 <xref:System.Web.Security.RoleProvider.ApplicationName%2A>的数据源。</span><span class="sxs-lookup"><span data-stu-id="2637f-137"><xref:System.Web.Security.RoleProvider.CreateRole%2A> is called by the <xref:System.Web.Security.Roles.CreateRole%2A> method of the <xref:System.Web.Security.Roles> class to add the specified role to the data source for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="2637f-138">如果已为配置的 `applicationName`指定的角色名称已存在，则 `null`或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-138">If the specified role name already exists for the configured `applicationName`, is `null`, or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-139">如果指定的角色名称包含逗号，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-139">If the specified role name contains a comma, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-140">如果您的数据源限制角色名称的长度（例如，通过数据库中表的固定长度列），则建议您在角色名称超出数据源所允许的最大长度时引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-140">If your data source restricts the length of the role name, for example, through a fixed-length column of a table in a database, we recommend that you throw an exception if the role name exceeds the maximum length allowed by the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-141">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.CreateRole%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-141">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.CreateRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-142">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-142">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName"><span data-ttu-id="2637f-143">要删除的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-143">The name of the role to delete.</span></span></param>
        <param name="throwOnPopulatedRole"><span data-ttu-id="2637f-144">若为 <see langword="true" />，则在 <paramref name="roleName" /> 具有一个或多个成员时引发异常，且不删除 <paramref name="roleName" />。</span><span class="sxs-lookup"><span data-stu-id="2637f-144">If <see langword="true" />, throw an exception if <paramref name="roleName" /> has one or more members and do not delete <paramref name="roleName" />.</span></span></param>
        <summary><span data-ttu-id="2637f-145">从数据源中删除已配置的 <see langword="applicationName" /> 的一个角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-145">Removes a role from the data source for the configured <see langword="applicationName" />.</span></span></summary>
        <returns><span data-ttu-id="2637f-146">若已成功删除此角色，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2637f-146"><see langword="true" /> if the role was successfully deleted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-147"><xref:System.Web.Security.RoleProvider.DeleteRole%2A> 由 <xref:System.Web.Security.Roles> 类的 <xref:System.Web.Security.Roles.DeleteRole%2A> 和 <xref:System.Web.Security.Roles.DeleteRole%2A> 方法调用，以从配置的 <xref:System.Web.Security.RoleProvider.ApplicationName%2A>的数据源中删除指定的角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-147"><xref:System.Web.Security.RoleProvider.DeleteRole%2A> is called by the <xref:System.Web.Security.Roles.DeleteRole%2A> and the <xref:System.Web.Security.Roles.DeleteRole%2A> methods of the <xref:System.Web.Security.Roles> class to delete the specified role from the data source for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="2637f-148">当你从数据源中删除某个角色时，请确保你还删除了已配置 `applicationName`的用户名与已删除角色之间的任何关联。</span><span class="sxs-lookup"><span data-stu-id="2637f-148">When you delete a role from the data source, ensure that you also delete any associations between a user name and the deleted role for the configured `applicationName`.</span></span>  
  
 <span data-ttu-id="2637f-149">如果 `throwOnPopulatedRole` `true`，并且由 `roleName` 参数标识的角色具有一个或多个成员，则会引发 <xref:System.Configuration.Provider.ProviderException>，并且不会删除该角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-149">If `throwOnPopulatedRole` is `true`, and the role identified by the `roleName` parameter has one or more members, throw a <xref:System.Configuration.Provider.ProviderException> and do not delete the role.</span></span> <span data-ttu-id="2637f-150">如果 `false``throwOnPopulatedRole`，则删除角色，无论角色是否为空。</span><span class="sxs-lookup"><span data-stu-id="2637f-150">If `throwOnPopulatedRole` is `false`, then delete the role whether it is empty or not.</span></span>  
  
 <span data-ttu-id="2637f-151">如果指定的角色名称不存在、`null`或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-151">If the specified role name does not exist, is `null`, or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-152">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-152">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.DeleteRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-153">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-153">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName"><span data-ttu-id="2637f-154">作为搜索范围的角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-154">The role to search in.</span></span></param>
        <param name="usernameToMatch"><span data-ttu-id="2637f-155">要搜索的用户名。</span><span class="sxs-lookup"><span data-stu-id="2637f-155">The user name to search for.</span></span></param>
        <summary><span data-ttu-id="2637f-156">获取属于某个角色且与指定的用户名相匹配的用户名的数组。</span><span class="sxs-lookup"><span data-stu-id="2637f-156">Gets an array of user names in a role where the user name contains the specified user name to match.</span></span></summary>
        <returns><span data-ttu-id="2637f-157">一个字符串数组，包含用户名与 <paramref name="usernameToMatch" /> 匹配且用户是指定角色的成员的所有用户的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-157">A string array containing the names of all the users where the user name matches <paramref name="usernameToMatch" /> and the user is a member of the specified role.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-158"><xref:System.Web.Security.Roles> 类调用 <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> 方法，并返回一个角色中用户的列表，其中用户名包含已配置 `applicationName`的提供 `usernameToMatch` 的匹配项。</span><span class="sxs-lookup"><span data-stu-id="2637f-158">The <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> method is called by the <xref:System.Web.Security.Roles> class and returns a list of users in a role where the user name contains a match of the supplied `usernameToMatch` for the configured `applicationName`.</span></span> <span data-ttu-id="2637f-159">通配符支持包含在数据源的基础上。</span><span class="sxs-lookup"><span data-stu-id="2637f-159">Wildcard support is included based on the data source.</span></span> <span data-ttu-id="2637f-160">按用户名按字母顺序返回用户。</span><span class="sxs-lookup"><span data-stu-id="2637f-160">Users are returned in alphabetical order by user name.</span></span>  
  
 <span data-ttu-id="2637f-161">如果数据源中不存在 `roleName`，建议你引发 <xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="2637f-161">We recommend that you throw a <xref:System.Configuration.Provider.ProviderException> if `roleName` does not exist in the data source.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-162">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> 实现的示例。</span><span class="sxs-lookup"><span data-stu-id="2637f-162">The following code example shows a sample <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> implementation.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-163">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-163">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2637f-164">获取已配置的 <see langword="applicationName" /> 的全部角色列表。</span><span class="sxs-lookup"><span data-stu-id="2637f-164">Gets a list of all the roles for the configured <see langword="applicationName" />.</span></span></summary>
        <returns><span data-ttu-id="2637f-165">一个字符串数组，它包含已配置的 <see langword="applicationName" /> 的数据源中所存储的全部角色的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-165">A string array containing the names of all the roles stored in the data source for the configured <see langword="applicationName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-166"><xref:System.Web.Security.RoleProvider.GetAllRoles%2A> 由 <xref:System.Web.Security.Roles> 类的 <xref:System.Web.Security.Roles.GetAllRoles%2A> 方法调用，以从数据源检索角色名称的列表。</span><span class="sxs-lookup"><span data-stu-id="2637f-166"><xref:System.Web.Security.RoleProvider.GetAllRoles%2A> is called by the <xref:System.Web.Security.Roles.GetAllRoles%2A> method of the <xref:System.Web.Security.Roles> class to retrieve a list of role names from the data source.</span></span> <span data-ttu-id="2637f-167">仅检索指定 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> 的角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-167">Only the roles for the specified <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are retrieved.</span></span>  
  
 <span data-ttu-id="2637f-168">如果配置的 `applicationName`没有任何角色，则建议提供程序返回不包含任何元素的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="2637f-168">If no roles exist for the configured `applicationName`, we recommend that your provider return a string array with no elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-169">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-169">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-170">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-170">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username"><span data-ttu-id="2637f-171">要为其返回角色列表的用户。</span><span class="sxs-lookup"><span data-stu-id="2637f-171">The user to return a list of roles for.</span></span></param>
        <summary><span data-ttu-id="2637f-172">获取已配置的 <see langword="applicationName" /> 中指定用户所属的角色的列表。</span><span class="sxs-lookup"><span data-stu-id="2637f-172">Gets a list of the roles that a specified user is in for the configured <see langword="applicationName" />.</span></span></summary>
        <returns><span data-ttu-id="2637f-173">一个字符串数组，其中包含已配置的 <see langword="applicationName" /> 中指定用户所属的所有角色的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-173">A string array containing the names of all the roles that the specified user is in for the configured <see langword="applicationName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-174"><xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> 由 <xref:System.Web.Security.Roles> 类的 <xref:System.Web.Security.Roles.GetRolesForUser%2A> 方法调用，以从数据源检索指定用户关联的角色名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-174"><xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> is called by the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method of the <xref:System.Web.Security.Roles> class to retrieve the role names that the specified user is associated with from the data source.</span></span> <span data-ttu-id="2637f-175">仅检索已配置 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> 的角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-175">Only the roles for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are retrieved.</span></span>  
  
 <span data-ttu-id="2637f-176">如果为配置的 `applicationName`的指定用户不存在任何角色，则建议提供程序返回一个不包含任何元素的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="2637f-176">If no roles exist for the specified user for the configured `applicationName`, we recommend that your provider return a string array with no elements.</span></span>  
  
 <span data-ttu-id="2637f-177">如果指定的用户名为 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-177">If the specified user name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-178">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-178">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-179">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-179">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName"><span data-ttu-id="2637f-180">要获取其用户列表的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-180">The name of the role to get the list of users for.</span></span></param>
        <summary><span data-ttu-id="2637f-181">获取属于已配置 <see langword="applicationName" /> 的指定角色的用户的列表。</span><span class="sxs-lookup"><span data-stu-id="2637f-181">Gets a list of users in the specified role for the configured <see langword="applicationName" />.</span></span></summary>
        <returns><span data-ttu-id="2637f-182">一个字符串数组，其中包含属于已配置 <see langword="applicationName" /> 的指定角色的成员的所有用户名。</span><span class="sxs-lookup"><span data-stu-id="2637f-182">A string array containing the names of all the users who are members of the specified role for the configured <see langword="applicationName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-183"><xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> 由 <xref:System.Web.Security.Roles> 类的 <xref:System.Web.Security.Roles.GetUsersInRole%2A> 方法调用，以检索与数据源中的角色关联的用户名。</span><span class="sxs-lookup"><span data-stu-id="2637f-183"><xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> is called by the <xref:System.Web.Security.Roles.GetUsersInRole%2A> method of the <xref:System.Web.Security.Roles> class to retrieve the user names associated with a role from the data source.</span></span> <span data-ttu-id="2637f-184">仅检索已配置 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> 的角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-184">Only the roles for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are retrieved.</span></span>  
  
 <span data-ttu-id="2637f-185">如果为配置的 `applicationName` 指定的角色名称不存在，或者如果 `null` 或空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-185">If the specified role name does not exist for the configured `applicationName` or if it is `null` or an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-186">如果没有任何用户与配置 `applicationName`的指定角色关联，则建议提供程序返回不包含任何元素的字符串数组。</span><span class="sxs-lookup"><span data-stu-id="2637f-186">If no users are associated with the specified role for the configured `applicationName`, we recommend that your provider return a string array with no elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-187">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-187">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-188">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-188">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username"><span data-ttu-id="2637f-189">要搜索的用户名。</span><span class="sxs-lookup"><span data-stu-id="2637f-189">The user name to search for.</span></span></param>
        <param name="roleName"><span data-ttu-id="2637f-190">作为搜索范围的角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-190">The role to search in.</span></span></param>
        <summary><span data-ttu-id="2637f-191">获取一个值，该值指示指定用户是否属于已配置的 <see langword="applicationName" /> 的指定角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-191">Gets a value indicating whether the specified user is in the specified role for the configured <see langword="applicationName" />.</span></span></summary>
        <returns><span data-ttu-id="2637f-192">如果指定用户属于已配置的 <see langword="true" /> 的指定角色，则为 <see langword="applicationName" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2637f-192"><see langword="true" /> if the specified user is in the specified role for the configured <see langword="applicationName" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-193"><xref:System.Web.Security.Roles> 类的 <xref:System.Web.Security.Roles.IsUserInRole%2A> 方法调用 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> 方法，以确定当前登录用户是否与已配置 <xref:System.Web.Security.Roles.ApplicationName%2A>的数据源中的角色关联。</span><span class="sxs-lookup"><span data-stu-id="2637f-193">The <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> method is called by the <xref:System.Web.Security.Roles.IsUserInRole%2A> method of the <xref:System.Web.Security.Roles> class to determine whether the current logged-on user is associated with a role from the data source for the configured <xref:System.Web.Security.Roles.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="2637f-194">如果指定的用户名为 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-194">If the specified user name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-195">如果指定的角色名称为 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-195">If the specified role name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-196">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-196">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-197">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-197">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames"><span data-ttu-id="2637f-198">一个字符串数组，其中包含要从指定的角色移除的用户名。</span><span class="sxs-lookup"><span data-stu-id="2637f-198">A string array of user names to be removed from the specified roles.</span></span></param>
        <param name="roleNames"><span data-ttu-id="2637f-199">一个字符串数组，其中包含要将指定的用户名从中移除的角色的名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-199">A string array of role names to remove the specified user names from.</span></span></param>
        <summary><span data-ttu-id="2637f-200">从适用于配置的 <see langword="applicationName" /> 的指定的角色移除指定的用户名。</span><span class="sxs-lookup"><span data-stu-id="2637f-200">Removes the specified user names from the specified roles for the configured <see langword="applicationName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-201"><xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> 由 <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> 类的 <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>、<xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>、<xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> 和 <xref:System.Web.Security.Roles> 方法调用，以从数据源的指定角色中删除指定用户。</span><span class="sxs-lookup"><span data-stu-id="2637f-201"><xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> is called by <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , and <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> methods of the <xref:System.Web.Security.Roles> class to remove the specified users from the specified roles at the data source.</span></span> <span data-ttu-id="2637f-202">仅修改已配置 <xref:System.Web.Security.RoleProvider.ApplicationName%2A> 的角色。</span><span class="sxs-lookup"><span data-stu-id="2637f-202">Only roles for the configured <xref:System.Web.Security.RoleProvider.ApplicationName%2A> are modified.</span></span>  
  
 <span data-ttu-id="2637f-203">如果为配置的 `applicationName`找不到任何指定的角色名称，则建议提供程序引发 <xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="2637f-203">If any of the specified role names are not found for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="2637f-204">如果任何指定的用户名与所配置的 `applicationName`的任何指定角色名称都不关联，则建议提供程序引发 <xref:System.Configuration.Provider.ProviderException>。</span><span class="sxs-lookup"><span data-stu-id="2637f-204">If any of the specified user names are not associated with any of the specified role names for the configured `applicationName`, we recommend that your provider throw a <xref:System.Configuration.Provider.ProviderException>.</span></span>  
  
 <span data-ttu-id="2637f-205">如果任何指定的用户名 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-205">If any of the specified user names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-206">如果指定的任何角色名称 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-206">If any of the specified role names is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
 <span data-ttu-id="2637f-207">如果你的数据源支持事务，则建议你将每个删除操作包含在一个事务中，并在任何删除操作失败的情况下回滚该事务并引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-207">If your data source supports transactions, we recommend that you include each remove operation in a transaction and that you roll back the transaction and throw an exception if any remove operation fails.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-208">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-208">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-209">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-209">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName"><span data-ttu-id="2637f-210">要在数据源中搜索的角色名。</span><span class="sxs-lookup"><span data-stu-id="2637f-210">The name of the role to search for in the data source.</span></span></param>
        <summary><span data-ttu-id="2637f-211">获取一个值，该值指示配置后的 <see langword="applicationName" /> 的角色数据源中是否已存在指定的角色名。</span><span class="sxs-lookup"><span data-stu-id="2637f-211">Gets a value indicating whether the specified role name already exists in the role data source for the configured <see langword="applicationName" />.</span></span></summary>
        <returns><span data-ttu-id="2637f-212">如果配置后的 <see langword="true" /> 的数据源中已存在角色名，则为 <see langword="applicationName" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2637f-212"><see langword="true" /> if the role name already exists in the data source for the configured <see langword="applicationName" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2637f-213"><xref:System.Web.Security.RoleProvider.RoleExists%2A> 由 <xref:System.Web.Security.Roles> 类的 <xref:System.Web.Security.Roles.RoleExists%2A> 方法调用，以确定已配置 <xref:System.Web.Security.Roles.ApplicationName%2A>的数据源中是否存在角色名称。</span><span class="sxs-lookup"><span data-stu-id="2637f-213"><xref:System.Web.Security.RoleProvider.RoleExists%2A> is called by the <xref:System.Web.Security.Roles.RoleExists%2A> method of the <xref:System.Web.Security.Roles> class to determine whether a role name exists in the data source for the configured <xref:System.Web.Security.Roles.ApplicationName%2A>.</span></span>  
  
 <span data-ttu-id="2637f-214">如果指定的角色名称为 `null` 或为空字符串，则建议提供程序引发异常。</span><span class="sxs-lookup"><span data-stu-id="2637f-214">If the specified role name is `null` or is an empty string, we recommend that your provider throw an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2637f-215">下面的代码示例演示 <xref:System.Web.Security.RoleProvider.RoleExists%2A> 方法的示例实现。</span><span class="sxs-lookup"><span data-stu-id="2637f-215">The following code example shows a sample implementation of the <xref:System.Web.Security.RoleProvider.RoleExists%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d"><span data-ttu-id="2637f-216">实现角色提供程序</span><span class="sxs-lookup"><span data-stu-id="2637f-216">Implementing a Role Provider</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
