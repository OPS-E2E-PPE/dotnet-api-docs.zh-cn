<Type Name="OracleLob" FullName="System.Data.OracleClient.OracleLob">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e8147107a865c2823c16f71a256387508a40def" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76948093" /></Metadata><TypeSignature Language="C#" Value="public sealed class OracleLob : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OracleLob extends System.IO.Stream implements class System.Data.SqlTypes.INullable, class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.OracleClient.OracleLob" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OracleLob&#xA;Inherits Stream&#xA;Implements ICloneable, INullable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OracleLob sealed : System::IO::Stream, ICloneable, System::Data::SqlTypes::INullable" />
  <TypeSignature Language="F#" Value="type OracleLob = class&#xA;    inherit Stream&#xA;    interface ICloneable&#xA;    interface IDisposable&#xA;    interface INullable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.OracleClient</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.SqlTypes.INullable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1b332-101">表示存储在 Oracle 服务器上的大型对象二进制 (<see langword="LOB" />) 数据类型。</span><span class="sxs-lookup"><span data-stu-id="1b332-101">Represents a large object binary (<see langword="LOB" />) data type stored on an Oracle server.</span></span> <span data-ttu-id="1b332-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="1b332-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-103"><xref:System.Data.OracleClient.OracleLob> 不同于 <xref:System.Data.OracleClient.OracleBFile>，因为数据存储在服务器上而不是存储在操作系统的物理文件中。</span><span class="sxs-lookup"><span data-stu-id="1b332-103">An <xref:System.Data.OracleClient.OracleLob> differs from an <xref:System.Data.OracleClient.OracleBFile> in that the data is stored on the server instead of in a physical file in the operating system.</span></span> <span data-ttu-id="1b332-104">它也可以是读写对象，这一点与 <xref:System.Data.OracleClient.OracleBFile>始终是只读的不同。</span><span class="sxs-lookup"><span data-stu-id="1b332-104">It can also be a read-write object, unlike an <xref:System.Data.OracleClient.OracleBFile>, which is always read-only.</span></span>  
  
 <span data-ttu-id="1b332-105"><xref:System.Data.OracleClient.OracleLob> 可以是以下 <xref:System.Data.OracleClient.OracleType> 数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="1b332-105">An <xref:System.Data.OracleClient.OracleLob> may be one of these <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="1b332-106">OracleType 数据类型</span><span class="sxs-lookup"><span data-stu-id="1b332-106">OracleType data type</span></span>|<span data-ttu-id="1b332-107">说明</span><span class="sxs-lookup"><span data-stu-id="1b332-107">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="1b332-108">一种 Oracle `BLOB` 数据类型，它包含最大大小为 4 gb 的二进制数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-108">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes (GB).</span></span> <span data-ttu-id="1b332-109">它映射到 <xref:System.Array> 类型的 <xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="1b332-109">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="1b332-110">包含字符数据的 Oracle `CLOB` 数据类型，该数据类型基于服务器上的默认字符集，最大大小为 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-110">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 GB.</span></span> <span data-ttu-id="1b332-111">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="1b332-111">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="1b332-112">包含字符数据的 Oracle `NCLOB` 数据类型，其最大大小为 4 GB，基于服务器上的区域字符集。</span><span class="sxs-lookup"><span data-stu-id="1b332-112">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 GB.</span></span> <span data-ttu-id="1b332-113">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="1b332-113">This maps to <xref:System.String>.</span></span>|  
  
 <span data-ttu-id="1b332-114">.NET 应用程序开发人员可以将 Oracle `LOB` 值检索到基本的 .NET 数据类型中，如 <xref:System.Byte> 和 <xref:System.String>类型的 <xref:System.Array> 或专用 <xref:System.Data.OracleClient.OracleLob> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="1b332-114">A .NET application developer can retrieve the Oracle `LOB` values into basic .NET data types, such as <xref:System.Array> of type <xref:System.Byte> and <xref:System.String>, or the specialized <xref:System.Data.OracleClient.OracleLob> data type.</span></span> <span data-ttu-id="1b332-115"><xref:System.Data.OracleClient.OracleLob> 类支持在 Oracle 数据库中读取和写入 Oracle `LOB` 的数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-115">The <xref:System.Data.OracleClient.OracleLob> class supports reading data from and writing to the Oracle `LOB` in the Oracle database.</span></span>  
  
 <span data-ttu-id="1b332-116">下面是将其与基本 .NET 数据类型区分开来的 <xref:System.Data.OracleClient.OracleLob> 数据类型的主要特征：</span><span class="sxs-lookup"><span data-stu-id="1b332-116">The following are the main characteristics of an <xref:System.Data.OracleClient.OracleLob> data type that distinguish it from basic .NET data types:</span></span>  
  
-   <span data-ttu-id="1b332-117">将 oracle 数据库中的 Oracle `LOB` 值检索到 <xref:System.Data.OracleClient.OracleLob> 类之后，您可以在打开的事务中更改 `LOB` 数据，并且您的更改将直接反映到数据库中。</span><span class="sxs-lookup"><span data-stu-id="1b332-117">After you retrieve the Oracle `LOB` value from the Oracle database into the <xref:System.Data.OracleClient.OracleLob> class, you can change the `LOB` data in an open transaction and your changes are directly reflected to the database.</span></span> <span data-ttu-id="1b332-118">如果将 Oracle `LOB` 值检索到类型 <xref:System.Byte> 或 <xref:System.String> 的 <xref:System.Array> 中，并更新这些数组，则所做的更改不会反映到数据库中。</span><span class="sxs-lookup"><span data-stu-id="1b332-118">If you retrieve the Oracle `LOB` value into an <xref:System.Array> of type <xref:System.Byte> or <xref:System.String> and update these arrays, your changes are not reflected to the database.</span></span>  
  
-   <span data-ttu-id="1b332-119">当你使用 <xref:System.Data.OracleClient.OracleLob> 类访问 `LOB` 值的区块时，仅将该区块从 Oracle 数据库传递到客户端。</span><span class="sxs-lookup"><span data-stu-id="1b332-119">When you use the <xref:System.Data.OracleClient.OracleLob> class to access a chunk of a `LOB` value, only that chunk is passed from the Oracle database to the client.</span></span> <span data-ttu-id="1b332-120">使用 <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> 方法访问 `LOB` 值的区块时，会将值的整个内容从 Oracle 数据库传递到客户端。</span><span class="sxs-lookup"><span data-stu-id="1b332-120">When you use the <xref:System.Data.OracleClient.OracleDataReader.GetChars%2A> method to access a chunk of a `LOB` value, the entire contents of the value are passed from the Oracle database to the client.</span></span>  
  
 <span data-ttu-id="1b332-121">若要获取 <xref:System.Data.OracleClient.OracleLob> 对象，请调用 <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b332-121">To obtain an <xref:System.Data.OracleClient.OracleLob> object, call the <xref:System.Data.OracleClient.OracleDataReader.GetOracleLob%2A> method.</span></span>  
  
 <span data-ttu-id="1b332-122">可以使用以下格式构造一个为 NULL 的 <xref:System.Data.OracleClient.OracleLob>：</span><span class="sxs-lookup"><span data-stu-id="1b332-122">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```csharp
OracleLob myLob = OracleLob.Null;  
```

```vb
Dim myLob As OracleLob = OracleLob.Null
```
  
 <span data-ttu-id="1b332-123">此方法主要用于测试从服务器返回的 `LOB` 是否为 NULL，如本示例所示：</span><span class="sxs-lookup"><span data-stu-id="1b332-123">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```csharp
if (myLob == OracleLob.Null)  
```

```vb
If (myLob = OracleLob.Null) Then
```
  
 <span data-ttu-id="1b332-124">如果为 NULL `LOB` 的行为类似于零字节的 `LOB`，则 <xref:System.Data.OracleClient.OracleLob.Read%2A> 会成功，并且始终返回零字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-124">A NULL `LOB` behaves similarly to a zero-byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 <span data-ttu-id="1b332-125">如果选择包含 null 值 `LOB` 列，将返回 <xref:System.Data.OracleClient.OracleLob.Null>。</span><span class="sxs-lookup"><span data-stu-id="1b332-125">Selecting a `LOB` column that contains a null value returns <xref:System.Data.OracleClient.OracleLob.Null>.</span></span>  
  
 <span data-ttu-id="1b332-126">在获取临时 `LOB`之前，必须先开始事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-126">You must begin a transaction before obtaining a temporary `LOB`.</span></span> <span data-ttu-id="1b332-127">否则，<xref:System.Data.OracleClient.OracleDataReader> 可能无法在以后获取数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-127">Otherwise, the <xref:System.Data.OracleClient.OracleDataReader> may fail to obtain data later.</span></span>  
  
 <span data-ttu-id="1b332-128">还可以通过调用 DBMS_LOB 在 Oracle 中打开临时 `LOB`。CREATETEMPORARY 系统存储过程并绑定 `LOB` 的 output 参数。</span><span class="sxs-lookup"><span data-stu-id="1b332-128">You can also open a temporary `LOB` in Oracle by calling the DBMS_LOB.CREATETEMPORARY system stored procedure and binding a `LOB` output parameter.</span></span> <span data-ttu-id="1b332-129">在客户端，临时 `LOB` 的行为类似于基于表的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-129">On the client side, a temporary `LOB` behaves like a table-based `LOB`.</span></span> <span data-ttu-id="1b332-130">例如，若要更新临时 `LOB`，它必须包含在事务中。</span><span class="sxs-lookup"><span data-stu-id="1b332-130">For example, to update the temporary `LOB`, it must be enclosed in a transaction.</span></span>  
  
<span data-ttu-id="1b332-131">下面的示例演示如何打开临时 `LOB`：</span><span class="sxs-lookup"><span data-stu-id="1b332-131">The following example demonstrates how to open a temporary `LOB`:</span></span>
  
```csharp
var connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
var tempLob = (OracleLob)command.Parameters[0].Value;  
var tempbuff = new byte[10000];  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close(); 
```  
  
> [!NOTE]
>  <span data-ttu-id="1b332-132">如果与字符数据一起使用，继承的 <xref:System.IO.Stream.WriteByte%2A> 方法将失败，并且将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="1b332-132">The inherited <xref:System.IO.Stream.WriteByte%2A> method fails if used with character data, and an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="1b332-133">请改用 <xref:System.Data.OracleClient.OracleLob.Write%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b332-133">Use the <xref:System.Data.OracleClient.OracleLob.Write%2A> method instead.</span></span>  
>   
>  <span data-ttu-id="1b332-134">仅当连接关闭时，临时 `LOB`才会关闭，但在负载不足的情况下，临时 `LOB`不会关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-134">Temporary `LOB`s are only closed when the connection is closed, but with pooling and under load, temporary `LOB`s do not close.</span></span> <span data-ttu-id="1b332-135">可以通过调用 `tempLob.Dispose()`来释放临时 `LOB`来解决此情况。</span><span class="sxs-lookup"><span data-stu-id="1b332-135">This can be resolved by disposing the temporary `LOB`, by invoking `tempLob.Dispose()`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Data.OracleClient.OracleLob source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Data.OracleClient.OracleLob source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (source As OracleLob)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Data::OracleClient::OracleLob ^ source);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Data.OracleClient.OracleLob -&gt; unit" Usage="oracleLob.Append source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="1b332-136">要从其中追加数据的 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-136">The <see langword="LOB" /> from which to append data.</span></span></param>
        <summary><span data-ttu-id="1b332-137">将数据从指定的 <see langword="LOB" /> 追加到当前 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-137">Appends data from the specified <see langword="LOB" /> to the current <see langword="LOB" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-138">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-138">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="1b332-139">源 `LOB` 的所有数据都追加到当前 `LOB`的末尾。</span><span class="sxs-lookup"><span data-stu-id="1b332-139">All data from the source `LOB` is appended to the end of the current `LOB`.</span></span> <span data-ttu-id="1b332-140">在此过程中，不会计算或更改 `LOB` 的位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-140">The position of neither `LOB` is evaluated or changed during this process.</span></span>  
  
 <span data-ttu-id="1b332-141">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="1b332-141">The underlying data types must always be the same.</span></span> <span data-ttu-id="1b332-142">例如，如果要从 <xref:System.Data.OracleClient.OracleType.NClob>追加，则目标 <xref:System.Data.OracleClient.OracleLob> 也必须是 <xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="1b332-142">For example, if you are appending from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-143">在此版本中，对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-143">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-144">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-144">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-145">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-145">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b332-146">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="1b332-146">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-147">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-147">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-148">源 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-148">The source <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-149">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-149">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginBatch">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b332-150">在执行多个写操作时避免服务器端触发器激发。</span><span class="sxs-lookup"><span data-stu-id="1b332-150">Prevents server-side triggers from firing while performing multiple write operations.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch();" />
      <MemberSignature Language="F#" Value="member this.BeginBatch : unit -&gt; unit" Usage="oracleLob.BeginBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b332-151">在执行多个读操作时避免服务器端触发器激发。</span><span class="sxs-lookup"><span data-stu-id="1b332-151">Prevents server-side triggers from firing while performing multiple read operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-152">在 <xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly> 模式下打开 `LOB`;因此，只有在对 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>进行相应调用之后，才能从中读取 `LOB`，而不能写入。</span><span class="sxs-lookup"><span data-stu-id="1b332-152">Opens the `LOB` in <xref:System.Data.OracleClient.OracleLobOpenMode.ReadOnly> mode; therefore, the `LOB` can only be read from, not written to, until the corresponding call to <xref:System.Data.OracleClient.OracleLob.EndBatch%2A>.</span></span> <span data-ttu-id="1b332-153">若要对 `LOB`执行批处理写入，请调用具有 <xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>的 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A>。</span><span class="sxs-lookup"><span data-stu-id="1b332-153">To perform batch writes to the `LOB`, call <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> with <xref:System.Data.OracleClient.OracleLobOpenMode.ReadWrite>.</span></span>  
  
 <span data-ttu-id="1b332-154">在同一事务中多次调用 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> 会引发 Oracle "TNSNAMES.ORA-22293： LOB 已在同一事务中打开" 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-154">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="1b332-155">此外，如果使用其他 <xref:System.Data.OracleClient.OracleDataReader>获取了 `LOB`，并且原始调用方未调用 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 方法，则会生成相同的错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-155">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="1b332-156">因此，在完成使用 <xref:System.Data.OracleClient.OracleLob>时，必须调用 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b332-156">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-157">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-157">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-158">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-158">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-159">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-159">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginBatch">
      <MemberSignature Language="C#" Value="public void BeginBatch (System.Data.OracleClient.OracleLobOpenMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginBatch(valuetype System.Data.OracleClient.OracleLobOpenMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginBatch (mode As OracleLobOpenMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginBatch(System::Data::OracleClient::OracleLobOpenMode mode);" />
      <MemberSignature Language="F#" Value="member this.BeginBatch : System.Data.OracleClient.OracleLobOpenMode -&gt; unit" Usage="oracleLob.BeginBatch mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Data.OracleClient.OracleLobOpenMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="1b332-160">模式（<see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> 值之一），在该模式下，可在此 <see langword="LOB" /> 调用与对应的 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> 调用之间访问 <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-160">Mode (one of the <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> values) in which the <see langword="LOB" /> can be accessed between this <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> call and the corresponding <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> call.</span></span></param>
        <summary><span data-ttu-id="1b332-161">在以指定的访问模式执行多个读写操作时避免服务器端触发器激发。</span><span class="sxs-lookup"><span data-stu-id="1b332-161">Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-162">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-162">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="1b332-163">在同一事务中多次调用 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> 会引发 Oracle "TNSNAMES.ORA-22293： LOB 已在同一事务中打开" 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-163">Calling <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> more than one time within the same transaction currently throws the Oracle "ORA-22293: LOB already opened in the same transaction" error.</span></span> <span data-ttu-id="1b332-164">此外，如果使用其他 <xref:System.Data.OracleClient.OracleDataReader>获取了 `LOB`，并且原始调用方未调用 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 方法，则会生成相同的错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-164">In addition, if you obtain the `LOB` using another <xref:System.Data.OracleClient.OracleDataReader>, and the original caller has not called the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method, the same error is generated.</span></span> <span data-ttu-id="1b332-165">因此，在完成使用 <xref:System.Data.OracleClient.OracleLob>时，必须调用 <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b332-165">Therefore, you must call the <xref:System.Data.OracleClient.OracleLob.EndBatch%2A> method when you are finished using the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-166">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-166">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-167">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-167">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-168">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-168">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Data.OracleClient.OracleLob.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-169">获取一个值，该值指示 <see langword="LOB" /> 流是否可读。</span><span class="sxs-lookup"><span data-stu-id="1b332-169">Gets a value indicating whether the <see langword="LOB" /> stream can be read.</span></span></summary>
        <value><span data-ttu-id="1b332-170">如果 <see langword="true" /> 流支持读取，则为 <see langword="LOB" />；如果 <see langword="false" /> 已关闭或已释放，则为 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-170"><see langword="true" /> if the <see langword="LOB" /> stream supports reading, otherwise <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Data.OracleClient.OracleLob.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-171">获取一个值，该值指示能否执行向前和向后查找操作。</span><span class="sxs-lookup"><span data-stu-id="1b332-171">Gets a value indicating whether forward and backward seek operations can be performed.</span></span></summary>
        <value><span data-ttu-id="1b332-172">如果 <see langword="false" /> 已关闭或已释放，则为 <see langword="LOB" />；否则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-172"><see langword="false" /> if a <see langword="LOB" /> is closed or disposed, otherwise <see langword="true" />.</span></span> <span data-ttu-id="1b332-173">对于 <see langword="true" />，总是为 <see cref="F:System.Data.OracleClient.OracleLob.Null" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-173">Always <see langword="true" /> for <see cref="F:System.Data.OracleClient.OracleLob.Null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Data.OracleClient.OracleLob.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-174">不管 <see langword="LOB" /> 是否支持写入，始终返回真。</span><span class="sxs-lookup"><span data-stu-id="1b332-174">Always returns true, regardless of whether the <see langword="LOB" /> supports writing or not.</span></span></summary>
        <value><span data-ttu-id="1b332-175">不管已打开的或未释放的 <see langword="true" /> 是否支持写入，始终返回 <see langword="LOB" />；如果 <see langword="false" /> 已关闭或已释放，则返回 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-175">Always returns <see langword="true" />, regardless of whether an opened or undisposed <see langword="LOB" /> supports writing or not, <see langword="false" /> if a <see langword="LOB" /> is closed or disposed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-176">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索到 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-176">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have started a local transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChunkSize">
      <MemberSignature Language="C#" Value="public int ChunkSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChunkSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.ChunkSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChunkSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChunkSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChunkSize : int" Usage="System.Data.OracleClient.OracleLob.ChunkSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-177">获取一个值，该值指示读/写操作过程中要从服务器检索或发送到服务器的最小字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-177">Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</span></span></summary>
        <value><span data-ttu-id="1b332-178">要检索或发送的最小字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-178">The minimum number of bytes to retrieve or send.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-179"><xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> 属性返回的值不是用于 Oracle .NET Framework 数据提供程序的设置。</span><span class="sxs-lookup"><span data-stu-id="1b332-179">The value returned by the <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> property is not a setting of the .NET Framework Data Provider for Oracle.</span></span> <span data-ttu-id="1b332-180">相反，它是 Oracle 调用接口（OCI）在与服务器通信时使用的值。</span><span class="sxs-lookup"><span data-stu-id="1b332-180">Instead, it is the value that the Oracle Call Interface (OCI) uses when communicating with the server.</span></span> <span data-ttu-id="1b332-181">使用 <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> 确保客户端区块的大小相同。</span><span class="sxs-lookup"><span data-stu-id="1b332-181">Use <xref:System.Data.OracleClient.OracleLob.ChunkSize%2A> to ensure that client-side chunks are the same size.</span></span> <span data-ttu-id="1b332-182">在较小的块中读取或写入不会缓存数据，并会导致对服务器的不太优化的往返，因为不会接收或发送完整的数据包。</span><span class="sxs-lookup"><span data-stu-id="1b332-182">Reading or writing in smaller chunks does not cache data, and causes a less-optimized round trip to the server, because a full packet is not received or sent.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-183">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-183">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-184">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-184">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-185">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-185">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="oracleLob.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b332-186">创建一个新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象，该对象与原始 <see langword="LOB" /> 对象引用相同的 Oracle <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-186">Creates a new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <returns><span data-ttu-id="1b332-187">一个与原始 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象引用相同 Oracle <see langword="LOB" /> 的新 <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b332-187">A new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle <see langword="LOB" /> as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-188">新 <xref:System.Data.OracleClient.OracleLob> 对象的属性最初具有与原始对象相同的值。</span><span class="sxs-lookup"><span data-stu-id="1b332-188">The properties of the new <xref:System.Data.OracleClient.OracleLob> object initially have the same values as those of the original object.</span></span> <span data-ttu-id="1b332-189">但是，在 <xref:System.Data.OracleClient.OracleLob.Clone%2A> 完成后，每个 <xref:System.Data.OracleClient.OracleLob> 对象都相互独立。</span><span class="sxs-lookup"><span data-stu-id="1b332-189">However, after the <xref:System.Data.OracleClient.OracleLob.Clone%2A> is complete, each <xref:System.Data.OracleClient.OracleLob> object is independent from the other.</span></span> <span data-ttu-id="1b332-190">例如，更改原始 <xref:System.Data.OracleClient.OracleLob> 上的 <xref:System.Data.OracleClient.OracleLob.Position%2A> 属性的值不会更改副本上 <xref:System.Data.OracleClient.OracleLob.Position%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="1b332-190">For example, changing the value of the <xref:System.Data.OracleClient.OracleLob.Position%2A> property on the original <xref:System.Data.OracleClient.OracleLob> does not change the value of <xref:System.Data.OracleClient.OracleLob.Position%2A> on the copy.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-191">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-191">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-192">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-192">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="oracleLob.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b332-193">关闭当前流并释放与该流关联的资源。</span><span class="sxs-lookup"><span data-stu-id="1b332-193">Closes the current stream and releases resources that are associated with the stream.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.OracleClient.OracleConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As OracleConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleConnection ^ Connection { System::Data::OracleClient::OracleConnection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Connection : System.Data.OracleClient.OracleConnection" Usage="System.Data.OracleClient.OracleLob.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-194">获取由该 <see cref="T:System.Data.OracleClient.OracleConnection" /> 实例使用的 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-194">Gets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <value><span data-ttu-id="1b332-195">到数据源的连接。</span><span class="sxs-lookup"><span data-stu-id="1b332-195">The connection to a data source.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-196">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-196">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b332-197">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-197">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleLob.CopyTo destination" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob -&gt; int64" Usage="oracleLob.CopyTo destination" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="1b332-198">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-198">The destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></param>
        <summary><span data-ttu-id="1b332-199">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-199">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="1b332-200">已复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-200">The number of bytes copied.</span></span> <span data-ttu-id="1b332-201">这排除了所有已填充的字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-201">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-202">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="1b332-202">The underlying data types must always be the same.</span></span> <span data-ttu-id="1b332-203">例如，如果要从 <xref:System.Data.OracleClient.OracleType.NClob>复制，则目标 <xref:System.Data.OracleClient.OracleLob> 也必须是 <xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="1b332-203">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="1b332-204">如果目标偏移量超出了目标 `LOB`的末尾，则会扩展数据要复制到的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-204">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="1b332-205">`LOB` 末尾与末尾以外的目标偏移量之间的空间将用零填充 `CLOB` 和 `NCLOB` 数据类型的 `BLOB` 数据类型和空格。</span><span class="sxs-lookup"><span data-stu-id="1b332-205">The space between the end of the `LOB` and the destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="1b332-206">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-206">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-207">在此版本中，对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-207">In this release, a write operation to a read-only `LOB` might succeed, but not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-208">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-208">In this case, however, the local copy of the `LOB` will be updated.</span></span> <span data-ttu-id="1b332-209">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-209">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="1b332-210">在执行复制操作之前，`CopyTo` 方法不会清除目标 `OracleLob` 的内容。</span><span class="sxs-lookup"><span data-stu-id="1b332-210">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b332-211"><see cref="T:System.Data.OracleClient.OracleLob" /> 参数中指定的 <paramref name="destination" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="1b332-211">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-212">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-212">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-213">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-213">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(class System.Data.OracleClient.OracleLob destination, int64 destinationOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (destination As OracleLob, destinationOffset As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(System::Data::OracleClient::OracleLob ^ destination, long destinationOffset);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleLob.CopyTo (destination, destinationOffset)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.CopyTo : System.Data.OracleClient.OracleLob * int64 -&gt; int64" Usage="oracleLob.CopyTo (destination, destinationOffset)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="1b332-214">目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-214">The destination <see cref="T:System.Data.OracleClient.OracleLob" /></span></span></param>
        <param name="destinationOffset"><span data-ttu-id="1b332-215">要复制到的偏移量。</span><span class="sxs-lookup"><span data-stu-id="1b332-215">The offset to which to copy.</span></span> <span data-ttu-id="1b332-216">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-216">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number of bytes.</span></span></param>
        <summary><span data-ttu-id="1b332-217">将指定数量的数据从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-217">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data.</span></span></summary>
        <returns><span data-ttu-id="1b332-218">已复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-218">The number of bytes copied.</span></span> <span data-ttu-id="1b332-219">这排除了所有已填充的字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-219">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-220">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="1b332-220">The underlying data types must always be the same.</span></span> <span data-ttu-id="1b332-221">例如，如果要从 <xref:System.Data.OracleClient.OracleType.NClob>复制，则目标 <xref:System.Data.OracleClient.OracleLob> 也必须是 <xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="1b332-221">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="1b332-222">如果目标偏移量超出了目标 `LOB`的末尾，则会扩展数据要复制到的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-222">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="1b332-223">超出末尾的 `LOB` 与目标偏移量之间的空间将用零填充 `CLOB` 和 `NCLOB` 数据类型的 `BLOB` 数据类型和空格。</span><span class="sxs-lookup"><span data-stu-id="1b332-223">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="1b332-224">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-224">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-225">在此版本中，对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-225">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-226">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-226">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-227">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-227">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="1b332-228">在执行复制操作之前，`CopyTo` 方法不会清除目标 `OracleLob` 的内容。</span><span class="sxs-lookup"><span data-stu-id="1b332-228">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b332-229"><see cref="T:System.Data.OracleClient.OracleLob" /> 参数中指定的 <paramref name="destination" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="1b332-229">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b332-230"><paramref name="destinationOffset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-230">A value specified in the <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
<span data-ttu-id="1b332-231">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-231">-or-</span></span> 
<span data-ttu-id="1b332-232"><paramref name="destinationOffset" /> 参数中为 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型指定的值不是偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-232">A value specified in the <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span>  
  
<span data-ttu-id="1b332-233">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-233">-or-</span></span> 
<span data-ttu-id="1b332-234">必须将 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型指定为偶数字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-234">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-235">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-235">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-236">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-236">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 CopyTo(int64 sourceOffset, class System.Data.OracleClient.OracleLob destination, int64 destinationOffset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyTo (sourceOffset As Long, destination As OracleLob, destinationOffset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long CopyTo(long sourceOffset, System::Data::OracleClient::OracleLob ^ destination, long destinationOffset, long amount);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleLob.CopyTo (sourceOffset, destination, destinationOffset, amount)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.CopyTo : int64 * System.Data.OracleClient.OracleLob * int64 * int64 -&gt; int64" Usage="oracleLob.CopyTo (sourceOffset, destination, destinationOffset, amount)" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceOffset" Type="System.Int64" />
        <Parameter Name="destination" Type="System.Data.OracleClient.OracleLob" />
        <Parameter Name="destinationOffset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceOffset"><span data-ttu-id="1b332-237">要从中复制的偏移量。</span><span class="sxs-lookup"><span data-stu-id="1b332-237">The offset from which to copy.</span></span> <span data-ttu-id="1b332-238">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-238">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="destination"><span data-ttu-id="1b332-239">目标 <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-239">The destination <see langword="OracleLob" /><see cref="N:System.Data.OracleClient" />.</span></span></param>
        <param name="destinationOffset"><span data-ttu-id="1b332-240">要复制到的目标偏移量。</span><span class="sxs-lookup"><span data-stu-id="1b332-240">The destination offset to which to copy.</span></span> <span data-ttu-id="1b332-241">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-241">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="amount"><span data-ttu-id="1b332-242">要复制的数据数量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1b332-242">The quantity of data, in bytes, to copy.</span></span> <span data-ttu-id="1b332-243">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-243">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="1b332-244">使用该源偏移量将指定数量的数据从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 复制到目标 <see cref="T:System.Data.OracleClient.OracleLob" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-244">Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data, and the source offset.</span></span></summary>
        <returns><span data-ttu-id="1b332-245">已复制的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-245">The number of bytes copied.</span></span> <span data-ttu-id="1b332-246">这排除了所有已填充的字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-246">This excludes any padded bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-247">基础数据类型必须始终相同。</span><span class="sxs-lookup"><span data-stu-id="1b332-247">The underlying data types must always be the same.</span></span> <span data-ttu-id="1b332-248">例如，如果要从 <xref:System.Data.OracleClient.OracleType.NClob>复制，则目标 <xref:System.Data.OracleClient.OracleLob> 也必须是 <xref:System.Data.OracleClient.OracleType.NClob>。</span><span class="sxs-lookup"><span data-stu-id="1b332-248">For example, if you are copying from an <xref:System.Data.OracleClient.OracleType.NClob>, the destination <xref:System.Data.OracleClient.OracleLob> must also be an <xref:System.Data.OracleClient.OracleType.NClob>.</span></span>  
  
 <span data-ttu-id="1b332-249">如果目标偏移量超出了目标 `LOB`的末尾，则会扩展数据要复制到的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-249">If the destination offset is beyond the end of destination `LOB`, the `LOB` to which the data is being copied is extended.</span></span> <span data-ttu-id="1b332-250">超出末尾的 `LOB` 与目标偏移量之间的空间将用零填充 `CLOB` 和 `NCLOB` 数据类型的 `BLOB` 数据类型和空格。</span><span class="sxs-lookup"><span data-stu-id="1b332-250">The space between the end of `LOB` and destination offset beyond the end is padded with zeros for `BLOB` data types and spaces for `CLOB` and `NCLOB` data types.</span></span>  
  
 <span data-ttu-id="1b332-251">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-251">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-252">在此版本中，对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-252">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-253">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-253">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-254">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-254">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
>   
>  <span data-ttu-id="1b332-255">在执行复制操作之前，`CopyTo` 方法不会清除目标 `OracleLob` 的内容。</span><span class="sxs-lookup"><span data-stu-id="1b332-255">The `CopyTo` method does not clear the contents of the destination `OracleLob` before performing the copy operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b332-256"><see cref="T:System.Data.OracleClient.OracleLob" /> 参数中指定的 <paramref name="destination" /> 为 null。</span><span class="sxs-lookup"><span data-stu-id="1b332-256">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b332-257"><paramref name="amount" />、<paramref name="sourceOffset" /> 或 <paramref name="destinationOffset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-257">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
<span data-ttu-id="1b332-258">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-258">-or-</span></span> 
<span data-ttu-id="1b332-259">在 <paramref name="amount" />、<paramref name="sourceOffset" /> 或 <paramref name="destinationOffset" /> 参数中为 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型指定的值不是偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-259">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-260">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-260">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-261">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-261">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="oracleLob.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b332-262">释放此对象使用的资源。</span><span class="sxs-lookup"><span data-stu-id="1b332-262">Releases the resources that are used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="oracleLob.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBatch">
      <MemberSignature Language="C#" Value="public void EndBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.EndBatch" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndBatch ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndBatch();" />
      <MemberSignature Language="F#" Value="member this.EndBatch : unit -&gt; unit" Usage="oracleLob.EndBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b332-263">允许服务器端触发器在执行多个写入操作之后继续激发。</span><span class="sxs-lookup"><span data-stu-id="1b332-263">Allows server-side triggers to resume firing after performing multiple write operations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-264">先调用 <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> 方法，然后再开始对 <xref:System.Data.OracleClient.OracleLob>执行写入操作。</span><span class="sxs-lookup"><span data-stu-id="1b332-264">Call the <xref:System.Data.OracleClient.OracleLob.BeginBatch%2A> method before you begin performing write operations on the <xref:System.Data.OracleClient.OracleLob>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-265">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-265">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-266">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-266">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-267">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-267">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1b332-268">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-268">Erases data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase();" />
      <MemberSignature Language="F#" Value="member this.Erase : unit -&gt; int64" Usage="oracleLob.Erase " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b332-269">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除所有数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-269">Erases all data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="1b332-270">清除的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-270">The number of bytes erased.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-271"><xref:System.Data.OracleClient.OracleLob.Erase%2A> 不会截断数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-271"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="1b332-272">`LOB` 长度对于 `BLOB` 数据类型保持不变，已清除的数据将替换为0x00。</span><span class="sxs-lookup"><span data-stu-id="1b332-272">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="1b332-273">`CLOB` 和 `NCLOB` 数据类型替换为空格。</span><span class="sxs-lookup"><span data-stu-id="1b332-273">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="1b332-274">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-274">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-275">在此版本中，对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-275">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-276">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-276">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-277">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-277">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-278">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-278">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-279">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-279">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-280">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-280">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public long Erase (long offset, long amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Erase(int64 offset, int64 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Erase (offset As Long, amount As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long Erase(long offset, long amount);" />
      <MemberSignature Language="F#" Value="member this.Erase : int64 * int64 -&gt; int64" Usage="oracleLob.Erase (offset, amount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="amount" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="1b332-281">要从中清除的偏移量。</span><span class="sxs-lookup"><span data-stu-id="1b332-281">The offset from which to erase.</span></span> <span data-ttu-id="1b332-282">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-282">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="amount"><span data-ttu-id="1b332-283">要清除的数据数量（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1b332-283">The quantity of data, in bytes, to erase.</span></span> <span data-ttu-id="1b332-284">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-284">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="1b332-285">从该 <see cref="T:System.Data.OracleClient.OracleLob" /> 清除指定数量的数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-285">Erases the specified amount of data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <returns><span data-ttu-id="1b332-286">清除的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-286">The number of bytes erased.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-287">`offset` 和 `amount` 参数中的值的和可以大于 <xref:System.Data.OracleClient.OracleLob>大小的值的总和。</span><span class="sxs-lookup"><span data-stu-id="1b332-287">The sum of the values in the `offset` and `amount` parameters can be greater than that of the size of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="1b332-288">因此，指定的值大于 <xref:System.Data.OracleClient.OracleLob.Length%2A> 属性返回的值，则为;但是 <xref:System.Data.OracleClient.OracleLob.Erase%2A> 仅擦除到 <xref:System.Data.OracleClient.OracleLob>的末尾。</span><span class="sxs-lookup"><span data-stu-id="1b332-288">Therefore, specifying a value greater than that returned by the <xref:System.Data.OracleClient.OracleLob.Length%2A> property succeeds; however <xref:System.Data.OracleClient.OracleLob.Erase%2A> only erases to the end of the <xref:System.Data.OracleClient.OracleLob>.</span></span> <span data-ttu-id="1b332-289">（同样，如果将负值传递到 `offset`，则 <xref:System.Data.OracleClient.OracleLob.Erase%2A> 会成功，但仅从 <xref:System.Data.OracleClient.OracleLob>的开头开始清除。）此行为与 <xref:System.Data.OracleClient.OracleLob.Read%2A> 和 <xref:System.Data.OracleClient.OracleLob.Write%2A> 方法的行为不同，并提供了能够从 `offset` 指定的值中删除所有数据的优点，而不会对服务器进行额外的往返以验证实际大小。</span><span class="sxs-lookup"><span data-stu-id="1b332-289">(Similarly, if a negative value is passed to `offset`, <xref:System.Data.OracleClient.OracleLob.Erase%2A> will succeed, but only erase starting from the beginning of the <xref:System.Data.OracleClient.OracleLob>.) This behavior is different from that of the <xref:System.Data.OracleClient.OracleLob.Read%2A> and <xref:System.Data.OracleClient.OracleLob.Write%2A> methods, and offers the advantage of being able to erase all data from the value specified by `offset` without making an additional roundtrip to the server to verify the actual size.</span></span>  
  
 <span data-ttu-id="1b332-290"><xref:System.Data.OracleClient.OracleLob.Erase%2A> 不会截断数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-290"><xref:System.Data.OracleClient.OracleLob.Erase%2A> does not truncate data.</span></span> <span data-ttu-id="1b332-291">`LOB` 长度对于 `BLOB` 数据类型保持不变，已清除的数据将替换为0x00。</span><span class="sxs-lookup"><span data-stu-id="1b332-291">The `LOB` length remains the same for a `BLOB` data type, and the erased data is replaced by 0x00.</span></span> <span data-ttu-id="1b332-292">`CLOB` 和 `NCLOB` 数据类型替换为空格。</span><span class="sxs-lookup"><span data-stu-id="1b332-292">`CLOB` and `NCLOB` data types are replaced by spaces.</span></span>  
  
 <span data-ttu-id="1b332-293">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-293">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-294">在此版本中，对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-294">In this release, a write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-295">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-295">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-296">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-296">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-297">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-297">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-298">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-298">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-299">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-299">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="oracleLob.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b332-300">当前不支持。</span><span class="sxs-lookup"><span data-stu-id="1b332-300">Not currently supported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-301">在此版本中，此方法不起作用。</span><span class="sxs-lookup"><span data-stu-id="1b332-301">In this release, this method is not functional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBatched">
      <MemberSignature Language="C#" Value="public bool IsBatched { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBatched" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsBatched" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBatched As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBatched { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBatched : bool" Usage="System.Data.OracleClient.OracleLob.IsBatched" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-302">获取一个值，该值指示应用程序是否调用了 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="1b332-302">Gets a value indicating whether an application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method.</span></span></summary>
        <value><span data-ttu-id="1b332-303">如果应用程序调用了 <see langword="true" /> 方法，则为 <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-303"><see langword="true" /> if application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-304">使用 Oracle 8.0.5 服务器时，将引发 Oracle "TNSNAMES.ORA-00600：内部错误代码" 异常。</span><span class="sxs-lookup"><span data-stu-id="1b332-304">When using an Oracle 8.0.5 server, an Oracle "ORA-00600: internal error code" exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-305">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-305">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNull : bool" Usage="System.Data.OracleClient.OracleLob.IsNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.SqlTypes.INullable.IsNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-306">获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleLob" /> 是否为一个 <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> 流。</span><span class="sxs-lookup"><span data-stu-id="1b332-306">Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream.</span></span></summary>
        <value><span data-ttu-id="1b332-307">如果 <see langword="true" /> 是 <see cref="T:System.Data.OracleClient.OracleLob" /> 流，则为 <see cref="F:System.Data.OracleClient.OracleBFile.Null" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-307"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream, otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTemporary">
      <MemberSignature Language="C#" Value="public bool IsTemporary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporary" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.IsTemporary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporary { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTemporary : bool" Usage="System.Data.OracleClient.OracleLob.IsTemporary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-308">获取一个值，该值指示 <see cref="T:System.Data.OracleClient.OracleLob" /> 是否为临时 <see langword="LOB" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-308">Gets a value indicating whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />.</span></span></summary>
        <value><span data-ttu-id="1b332-309">如果 <see langword="true" /> 是临时 <see cref="T:System.Data.OracleClient.OracleLob" />，则为 <see langword="LOB" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-309"><see langword="true" /> if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary <see langword="LOB" />, otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-310">下面的示例演示如何创建临时 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-310">The following example demonstrates how to create a temporary `LOB`.</span></span>  
  
```  
OracleConnection connection = new OracleConnection("server=MyServer; integrated security=yes;");  
connection.Open();  
OracleTransaction transaction = connection.BeginTransaction();  
OracleCommand command = connection.CreateCommand();  
command.Transaction = transaction;  
command.CommandText = "declare xx blob; begin dbms_lob.createtemporary(xx, false, 0); :tempblob := xx; end;";  
command.Parameters.Add(new OracleParameter("tempblob", OracleType.Blob)).Direction = ParameterDirection.Output;  
command.ExecuteNonQuery();  
OracleLob tempLob = (OracleLob)command.Parameters[0].Value;  
tempLob.BeginBatch(OracleLobOpenMode.ReadWrite);  
tempLob.Write(tempbuff,0,tempbuff.Length);  
tempLob.EndBatch();  
command.Parameters.Clear();  
command.CommandText = "MyTable.MyProc";  
command.CommandType = CommandType.StoredProcedure;    
command.Parameters.Add(new OracleParameter("ImportDoc", OracleType.Blob)).Value = tempLob;  
command.ExecuteNonQuery();  
transaction.Commit();  
connection.Close  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-311">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-311">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-312">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-312">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-313">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-313">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Data.OracleClient.OracleLob.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-314">获取一个值，该值返回 <see cref="T:System.Data.OracleClient.OracleLob" /> 的大小。</span><span class="sxs-lookup"><span data-stu-id="1b332-314">Gets a value that returns the size of the <see cref="T:System.Data.OracleClient.OracleLob" />.</span></span></summary>
        <value><span data-ttu-id="1b332-315"><see cref="T:System.Data.OracleClient.OracleLob" /> 的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1b332-315">The size of the <see cref="T:System.Data.OracleClient.OracleLob" /> in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-316">对于所有数据类型，始终返回 <xref:System.Data.OracleClient.OracleLob> 的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="1b332-316">The size of the <xref:System.Data.OracleClient.OracleLob> is always returned in bytes for all data types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-317">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-317">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-318">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-318">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-319">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-319">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LobType">
      <MemberSignature Language="C#" Value="public System.Data.OracleClient.OracleType LobType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.OracleClient.OracleType LobType" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.LobType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LobType As OracleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::OracleClient::OracleType LobType { System::Data::OracleClient::OracleType get(); };" />
      <MemberSignature Language="F#" Value="member this.LobType : System.Data.OracleClient.OracleType" Usage="System.Data.OracleClient.OracleLob.LobType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-320">获取一个值，该值返回 <see langword="LOB" /> 数据类型。</span><span class="sxs-lookup"><span data-stu-id="1b332-320">Gets a value that returns the <see langword="LOB" /> data type.</span></span></summary>
        <value><span data-ttu-id="1b332-321"><see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" /> 的数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="1b332-321">One of the <see cref="T:System.Data.OracleClient.OracleType" /><see langword="LOB" /> data types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-322"><xref:System.Data.OracleClient.OracleLob> 可以是以下 <xref:System.Data.OracleClient.OracleType> 数据类型之一。</span><span class="sxs-lookup"><span data-stu-id="1b332-322">An <xref:System.Data.OracleClient.OracleLob> may be one of the following <xref:System.Data.OracleClient.OracleType> data types.</span></span>  
  
|<span data-ttu-id="1b332-323">OracleType 数据类型</span><span class="sxs-lookup"><span data-stu-id="1b332-323">OracleType data type</span></span>|<span data-ttu-id="1b332-324">说明</span><span class="sxs-lookup"><span data-stu-id="1b332-324">Description</span></span>|  
|--------------------------|-----------------|  
|`Blob`|<span data-ttu-id="1b332-325">包含二进制数据的 Oracle `BLOB` 数据类型，其最大大小为 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-325">An Oracle `BLOB` data type that contains binary data with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="1b332-326">它映射到 <xref:System.Array> 类型的 <xref:System.Byte>。</span><span class="sxs-lookup"><span data-stu-id="1b332-326">This maps to an <xref:System.Array> of type <xref:System.Byte>.</span></span>|  
|`Clob`|<span data-ttu-id="1b332-327">包含字符数据的 Oracle `CLOB` 数据类型，根据服务器的默认字符集，其最大大小为 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-327">An Oracle `CLOB` data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="1b332-328">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="1b332-328">This maps to <xref:System.String>.</span></span>|  
|`NClob`|<span data-ttu-id="1b332-329">包含字符数据的 Oracle `NCLOB` 数据类型，其最大大小为 4 gb，基于服务器上的区域字符集。</span><span class="sxs-lookup"><span data-stu-id="1b332-329">An Oracle `NCLOB` data type that contains character data, based on the national character set on the server with a maximum size of 4 gigabytes.</span></span> <span data-ttu-id="1b332-330">它映射到 <xref:System.String>。</span><span class="sxs-lookup"><span data-stu-id="1b332-330">This maps to <xref:System.String>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.Data.OracleClient.OracleLob Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Data.OracleClient.OracleLob Null" />
      <MemberSignature Language="DocId" Value="F:System.Data.OracleClient.OracleLob.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As OracleLob " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Data::OracleClient::OracleLob ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.Data.OracleClient.OracleLob" Usage="System.Data.OracleClient.OracleLob.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OracleClient.OracleLob</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-331">表示一个 null <see cref="T:System.Data.OracleClient.OracleLob" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="1b332-331">Represents a null <see cref="T:System.Data.OracleClient.OracleLob" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-332">可以使用以下格式构造一个为 NULL 的 <xref:System.Data.OracleClient.OracleLob>：</span><span class="sxs-lookup"><span data-stu-id="1b332-332">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```  
OracleLob myLob = OracleLOB.Null;  
```  
  
 <span data-ttu-id="1b332-333">此方法主要用于测试从服务器返回的 `LOB` 是否为 NULL，如本示例所示：</span><span class="sxs-lookup"><span data-stu-id="1b332-333">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as this example illustrates:</span></span>  
  
```  
If(myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="1b332-334">NULL `LOB` 的行为类似于 `LOB` 中的零字节，<xref:System.Data.OracleClient.OracleLob.Read%2A> 成功并始终返回零字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-334">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Data.OracleClient.OracleLob.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-335">获取 <see cref="T:System.Data.OracleClient.OracleLob" /> 流中的当前读取位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-335">Gets the current read position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></summary>
        <value><span data-ttu-id="1b332-336"><see cref="T:System.Data.OracleClient.OracleLob" /> 流中的当前位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-336">The current position within the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-337">流必须支持查找以获取或设置位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-337">The stream must support seeking to get or set the position.</span></span> <span data-ttu-id="1b332-338">使用 <xref:System.Data.OracleClient.OracleLob.CanSeek%2A> 属性来确定流是否支持查找。</span><span class="sxs-lookup"><span data-stu-id="1b332-338">Use the <xref:System.Data.OracleClient.OracleLob.CanSeek%2A> property to determine whether the stream supports seeking.</span></span>  
  
 <span data-ttu-id="1b332-339">支持查找超出流长度的任何位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-339">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="1b332-340">还支持查找 `CLOB` 和 `NCLOB` 数据类型的奇数位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-340">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="1b332-341">有关详细信息，请参阅 <xref:System.Data.OracleClient.OracleLob.Read%2A> 属性的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="1b332-341">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 <span data-ttu-id="1b332-342">"<xref:System.Data.OracleClient.OracleLob.Position%2A>" 属性不会跟踪已消耗、跳过的流中的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-342">The <xref:System.Data.OracleClient.OracleLob.Position%2A> property does not keep track of the number of bytes from the stream that have been consumed, skipped, or both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-343">连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-343">The connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-344">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-344">The object was closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="oracleLob.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1b332-345">字节的数组。</span><span class="sxs-lookup"><span data-stu-id="1b332-345">An array of bytes.</span></span> <span data-ttu-id="1b332-346">当此方法返回时，此缓冲区包含指定的字符数组，此数组中 <paramref name="offset" /> 和 (<paramref name="offset" /> + <paramref name="count" />) 之间的值被从当前源中读取的字节所替换。</span><span class="sxs-lookup"><span data-stu-id="1b332-346">When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" />) replaced by the bytes read from the current source.</span></span></param>
        <param name="offset"><span data-ttu-id="1b332-347"><paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始存储从当前流中读取的数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-347">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</span></span> <span data-ttu-id="1b332-348">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-348">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="count"><span data-ttu-id="1b332-349">要从当前流中最多读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-349">The maximum number of bytes to be read from the current stream.</span></span> <span data-ttu-id="1b332-350">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-350">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="1b332-351">从当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流中读取字节序列，并在该流中按照读取的字节数提升位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-351">Reads a sequence of bytes from the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream and advances the position within the stream by the number of bytes read.</span></span></summary>
        <returns><span data-ttu-id="1b332-352">读入缓冲区中的总字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-352">The total number of bytes read into the buffer.</span></span> <span data-ttu-id="1b332-353">如果当前可用的字节数没有请求的字节数那么多，则总字节数可能小于请求的字节数，或者如果已到达流的末尾，则为零 (0)。</span><span class="sxs-lookup"><span data-stu-id="1b332-353">This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-354"><xref:System.Data.OracleClient.OracleLob.Read%2A> 方法从当前流中读取最多 `count` 字节，并将它们存储在从 `offset`开始的 `buffer` 中。</span><span class="sxs-lookup"><span data-stu-id="1b332-354">The <xref:System.Data.OracleClient.OracleLob.Read%2A> method reads a maximum of `count` bytes from the current stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="1b332-355">流中的当前位置按读取的字节数提前;但是，如果发生异常，则流中的当前位置将保持不变。</span><span class="sxs-lookup"><span data-stu-id="1b332-355">The current position within the stream is advanced by the number of bytes read; however, if an exception occurs, the current position within the stream remains unchanged.</span></span> <span data-ttu-id="1b332-356"><xref:System.Data.OracleClient.OracleLob.Read%2A> 返回所读取的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-356"><xref:System.Data.OracleClient.OracleLob.Read%2A> returns the number of bytes read.</span></span> <span data-ttu-id="1b332-357">仅当位置当前位于流的末尾时，返回值才为零。</span><span class="sxs-lookup"><span data-stu-id="1b332-357">The return value is zero only if the position is currently at the end of the stream.</span></span> <span data-ttu-id="1b332-358">如果没有数据可用，<xref:System.Data.OracleClient.OracleLob.Read%2A> 将会一直阻止，直到至少有一个字节的数据可供读取。<xref:System.Data.OracleClient.OracleLob.Read%2A></span><span class="sxs-lookup"><span data-stu-id="1b332-358"><xref:System.Data.OracleClient.OracleLob.Read%2A> will block until at least one byte of data can be read, in the event that no data is available.<xref:System.Data.OracleClient.OracleLob.Read%2A></span></span> <span data-ttu-id="1b332-359">如果当当前位置在 `LOB`结束时尝试从 `LOB` 读取，则返回0。</span><span class="sxs-lookup"><span data-stu-id="1b332-359">returns 0 if you attempt to read from a `LOB` when the current position is at the end of `LOB`.</span></span> <span data-ttu-id="1b332-360">即使尚未到达流的末尾，<xref:System.Data.OracleClient.OracleLob.Read%2A> 可以返回比请求更少的字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-360"><xref:System.Data.OracleClient.OracleLob.Read%2A> can return fewer bytes than requested even if the end of the stream has not been reached.</span></span>  
  
 <span data-ttu-id="1b332-361">用于 Oracle 的 .NET Framework 数据提供程序以 Unicode 形式处理所有 `CLOB` 和 `NCLOB` 数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-361">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="1b332-362">因此，在访问 `CLOB` 和 `NCLOB` 数据类型时，始终会处理字节数，其中每个字符都是2个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-362">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="1b332-363">例如，如果将包含三个字符的文本字符串作为 `NCLOB` 保存在 Oracle 服务器上，其中字符集为每个字符4个字节，并且您执行 `Read` 操作，则可以将字符串的长度指定为6个字节，尽管它在服务器上存储为12个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-363">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Read` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="1b332-364">下面的示例演示如何读取 <xref:System.Data.OracleClient.OracleLob> 的对象。</span><span class="sxs-lookup"><span data-stu-id="1b332-364">The following example demonstrates how to read <xref:System.Data.OracleClient.OracleLob> objects.</span></span>  
  
```csharp
public static void ReadLobExample(OracleCommand command)  
{  
    int actual = 0;  
  
    // Select some data.  
    // Table Schema:  
    //  "CREATE TABLE TableWithLobs (a int, b BLOB, c CLOB, d NCLOB)";  
    //  "INSERT INTO TableWithLobs values (1, 'AA', 'AAA', N'AAAA')";  
    command.CommandText = "SELECT * FROM TableWithLobs";  
    OracleDataReader reader = command.ExecuteReader();  
    using(reader)  
    {  
        // Obtain the first row of data.  
        reader.Read();  
        // Obtain the LOBs (all 3 varieties).  
        OracleLob BLOB = reader.GetOracleLob(1);  
        OracleLob CLOB  = reader.GetOracleLob(2);  
        OracleLob NCLOB = reader.GetOracleLob(3);  
  
        // Example - Reading binary data (in chunks).  
        var buffer = new byte[100];  
        while((actual = BLOB.Read(buffer, 0, buffer.Length)) > 0)  
            Console.WriteLine(BLOB.LobType + ".Read(" + buffer + ", " + buffer.Length + ") => " + actual);  
  
        // Example - Reading CLOB/NCLOB data (in chunks).  
        // Note: You can read character data as raw Unicode bytes (using OracleLob.Read as in the above example).  
        // However, because the OracleLob object inherits directly from the.NET stream object,   
        // all the existing classes that manipulate streams can also be used. For example, the   
        // .NET StreamReader makes converting the raw bytes into actual characters easier.  
        var streamreader = new StreamReader(CLOB, Encoding.Unicode);  
        var cbuffer = new char[100];  
        while((actual = streamreader.Read(cbuffer, 0, cbuffer.Length)) >0)  
            Console.WriteLine(CLOB.LobType + ".Read(" + new string(cbuffer, 0, actual) + ", " + cbuffer.Length + ") => " + actual);  
  
        //Example - Reading data (all at once).  
        //You could use StreamReader.ReadToEnd to obtain all the string data,or simply  
        //call OracleLob.Value to obtain a contiguous allocation of all the data.  
        Console.WriteLine(NCLOB.LobType + ".Value => " + NCLOB.Value);  
    }  
}  
```  
  
 <span data-ttu-id="1b332-365">可以使用以下格式构造一个为 NULL 的 <xref:System.Data.OracleClient.OracleLob>：</span><span class="sxs-lookup"><span data-stu-id="1b332-365">You can construct an <xref:System.Data.OracleClient.OracleLob> that is NULL using this format:</span></span>  
  
```csharp
OracleLob myLob = OracleLob.Null;  
```

  
 <span data-ttu-id="1b332-366">此方法主要用于测试从服务器返回的 `LOB` 是否为 NULL，如以下示例所示。</span><span class="sxs-lookup"><span data-stu-id="1b332-366">This technique is used primarily to test whether a `LOB` returned from the server is NULL, as the following example illustrates.</span></span>  
  
```csharp
if (myLob == OracleLob.Null)  
```  
  
 <span data-ttu-id="1b332-367">NULL `LOB` 的行为类似于 `LOB` 中的零字节，<xref:System.Data.OracleClient.OracleLob.Read%2A> 成功并始终返回零字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-367">A NULL `LOB` behaves similarly to a zero byte `LOB` in that <xref:System.Data.OracleClient.OracleLob.Read%2A> succeeds and always returns zero bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b332-368"><paramref name="buffer" /> 为空引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="1b332-368">The <paramref name="buffer" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b332-369"><paramref name="offset" /> 或 <paramref name="count" /> 参数中的值为非正。</span><span class="sxs-lookup"><span data-stu-id="1b332-369">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span></span>  
  
<span data-ttu-id="1b332-370">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-370">-or-</span></span> 
<span data-ttu-id="1b332-371">offset 参数与 count 参数之和大于 buffer 的长度。</span><span class="sxs-lookup"><span data-stu-id="1b332-371">The sum of the offset and count parameters is larger than the buffer length.</span></span>  
  
<span data-ttu-id="1b332-372">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-372">-or-</span></span> 
<span data-ttu-id="1b332-373"><paramref name="amount" /> 或 <paramref name="offset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-373">A value specified in the <paramref name="amount" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-374">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-374">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-375">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-375">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-376">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-376">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="oracleLob.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="1b332-377">相对于 origin 的字节偏移量。</span><span class="sxs-lookup"><span data-stu-id="1b332-377">A byte offset relative to origin.</span></span> <span data-ttu-id="1b332-378">如果 <paramref name="offset" /> 为负，则新位置位于 <paramref name="origin" /> 指定的位置之前 <paramref name="offset" /> 指定的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-378">If <paramref name="offset" /> is negative, the new position precedes the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />.</span></span> <span data-ttu-id="1b332-379">如果 <paramref name="offset" /> 为零，则新位置是 <paramref name="origin" /> 指定的位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-379">If <paramref name="offset" /> is zero, the new position is the position specified by <paramref name="origin" />.</span></span> <span data-ttu-id="1b332-380">如果 <paramref name="offset" /> 为正，则新位置位于 <paramref name="origin" /> 指定的位置之后 <paramref name="offset" /> 指定的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-380">If <paramref name="offset" /> is positive, the new position follows the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />.</span></span></param>
        <param name="origin"><span data-ttu-id="1b332-381"><see cref="T:System.IO.SeekOrigin" /> 类型的值，指示用于获取新位置的参考点。</span><span class="sxs-lookup"><span data-stu-id="1b332-381">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</span></span></param>
        <summary><span data-ttu-id="1b332-382">在当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流上设置位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-382">Sets the position on the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</span></span></summary>
        <returns><span data-ttu-id="1b332-383">当前流中的新位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-383">The new position within the current stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-384">如果 `offset` 为负，则新位置必须在 `origin` 指定的位置之前，`offset`指定的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-384">If `offset` is negative, the new position must precede the position specified by `origin` by the number of bytes specified by `offset`.</span></span> <span data-ttu-id="1b332-385">如果 `offset` 为零，则新位置必须是 `origin`指定的位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-385">If `offset` is zero, the new position must be the position specified by `origin`.</span></span> <span data-ttu-id="1b332-386">如果 `offset` 为正，则新位置必须按照 `offset`指定的字节数 `origin` 指定的位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-386">If `offset` is positive, the new position must follow the position specified by `origin` by the number of bytes specified by `offset`.</span></span>  
  
 <span data-ttu-id="1b332-387">支持查找超出流长度的任何位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-387">Seeking to any location beyond the length of the stream is supported.</span></span> <span data-ttu-id="1b332-388">还支持查找 `CLOB` 和 `NCLOB` 数据类型的奇数位置。</span><span class="sxs-lookup"><span data-stu-id="1b332-388">Seeking to an odd position for `CLOB` and `NCLOB` data types is also supported.</span></span> <span data-ttu-id="1b332-389">有关详细信息，请参阅 <xref:System.Data.OracleClient.OracleLob.Read%2A> 属性的 "备注" 部分。</span><span class="sxs-lookup"><span data-stu-id="1b332-389">For more information, see the Remarks section of the <xref:System.Data.OracleClient.OracleLob.Read%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b332-390"><paramref name="origin" /> 参数不包含有效的值。</span><span class="sxs-lookup"><span data-stu-id="1b332-390">The <paramref name="origin" /> parameter does not contain a valid value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b332-391">结果位置在值的长度之外。</span><span class="sxs-lookup"><span data-stu-id="1b332-391">The resulting position is beyond the length of the value.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-392"><see cref="T:System.Data.OracleClient.OracleLob" /> 对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-392">The <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-393">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-393">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="oracleLob.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b332-394">所需的当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流的长度（以字节表示）。</span><span class="sxs-lookup"><span data-stu-id="1b332-394">The desired length of the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream in bytes.</span></span> <span data-ttu-id="1b332-395">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-395">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="1b332-396">将 <see cref="T:System.Data.OracleClient.OracleLob" /> 流的长度设置为小于当前长度的值。</span><span class="sxs-lookup"><span data-stu-id="1b332-396">Sets the length of the <see cref="T:System.Data.OracleClient.OracleLob" /> stream to a value less than the current length.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-397">尝试增加 <xref:System.Data.OracleClient.OracleLob> 流的长度失败，并返回 Oracle 服务器的 "Message： TNSNAMES.ORA-22926：指定的剪裁长度大于当前 LOB 值的长度"。</span><span class="sxs-lookup"><span data-stu-id="1b332-397">An attempt to increase the length of the <xref:System.Data.OracleClient.OracleLob> stream fails, and returns "Message: ORA-22926: specified trim length is greater than current LOB value's length" from the Oracle server.</span></span>  
  
 <span data-ttu-id="1b332-398">流必须支持写入和查找功能 <xref:System.Data.OracleClient.OracleLob.SetLength%2A>。</span><span class="sxs-lookup"><span data-stu-id="1b332-398">A stream must support both writing and seeking for <xref:System.Data.OracleClient.OracleLob.SetLength%2A> to function.</span></span>  
  
 <span data-ttu-id="1b332-399">用于 Oracle 的 .NET Framework 数据提供程序以 Unicode 形式处理所有 `CLOB` 和 `NCLOB` 数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-399">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="1b332-400">因此，在访问 `CLOB` 和 `NCLOB` 数据类型时，始终会处理字节数，其中每个字符都是2个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-400">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="1b332-401">例如，如果将包含三个字符的文本字符串作为 `NCLOB` 保存在 Oracle 服务器上，其中字符集为每个字符4个字节，并且您执行 `SetLength` 操作，则可以将字符串的长度指定为6个字节，尽管它在服务器上存储为12个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-401">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `SetLength` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="1b332-402">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-402">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-403">对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-403">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-404">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-404">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-405">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-405">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b332-406"><paramref name="value" /> 参数中为 <see langword="CLOB" /> 或 <see langword="NCLOB" /> 数据类型指定的值不是偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-406">A value specified in the <paramref name="value" /> parameter for a <see langword="CLOB" /> or <see langword="NCLOB" /> data type is not even.</span></span>  
  
<span data-ttu-id="1b332-407">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-407">-or-</span></span> 
<span data-ttu-id="1b332-408"><paramref name="value" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-408">A value specified in the <paramref name="value" /> parameter is less than zero or greater than 4 gigabytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-409">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-409">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-410">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-410">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-411">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-411">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.OracleClient.OracleLob.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Data.OracleClient.OracleLob.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b332-412">获取公共语言运行时流值（基础值的等效值）。</span><span class="sxs-lookup"><span data-stu-id="1b332-412">Gets the common language runtime stream value equivalent of the underlying value.</span></span></summary>
        <value><span data-ttu-id="1b332-413">对于 <see cref="F:System.Data.OracleClient.OracleType.Blob" />，为 <see langword="Byte[]" /> 类型的数组。</span><span class="sxs-lookup"><span data-stu-id="1b332-413">For <see cref="F:System.Data.OracleClient.OracleType.Blob" />, an array of type <see langword="Byte[]" />.</span></span> <span data-ttu-id="1b332-414">对于 <see cref="F:System.Data.OracleClient.OracleType.Clob" /> 和 <see cref="F:System.Data.OracleClient.OracleType.NClob" />，为 <see langword="String" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-414">For <see cref="F:System.Data.OracleClient.OracleType.Clob" /> and <see cref="F:System.Data.OracleClient.OracleType.NClob" />, a <see langword="String" />.</span></span> <span data-ttu-id="1b332-415">对于 null 数据，则为 <see cref="T:System.DBNull" />。</span><span class="sxs-lookup"><span data-stu-id="1b332-415">For null data, <see cref="T:System.DBNull" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-416">对于 <xref:System.Data.OracleClient.OracleType.Blob> 数据类型，<xref:System.Data.OracleClient.OracleLob.Value%2A> 以 `Byte[]`类型的连续数组形式返回整个基础数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-416">For <xref:System.Data.OracleClient.OracleType.Blob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns the entire underlying data as a contiguous array of type `Byte[]`.</span></span> <span data-ttu-id="1b332-417">对于 <xref:System.Data.OracleClient.OracleType.Clob> 和 <xref:System.Data.OracleClient.OracleType.NClob> 数据类型，<xref:System.Data.OracleClient.OracleLob.Value%2A> 将所有数据作为 `String` 数据类型返回。</span><span class="sxs-lookup"><span data-stu-id="1b332-417">For <xref:System.Data.OracleClient.OracleType.Clob> and <xref:System.Data.OracleClient.OracleType.NClob> data types, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns all the data as a `String` data type.</span></span> <span data-ttu-id="1b332-418">对于空数据，<xref:System.Data.OracleClient.OracleLob.Value%2A> 返回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="1b332-418">For null data, <xref:System.Data.OracleClient.OracleLob.Value%2A> returns <xref:System.DBNull>.</span></span> <span data-ttu-id="1b332-419">通过比较返回的值，可以区分空数据、空数据和数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-419">By comparing the returned values, you can distinguish among empty data, null data, and data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-420">使用 `LOB` 数据类型的优点是能够在客户端上的块区中检索大量数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-420">A benefit of using `LOB` data types is the capability to retrieve large amounts of data in chunks at the client.</span></span> <span data-ttu-id="1b332-421">但是，当你使用 <xref:System.Data.OracleClient.OracleLob.Value%2A>时，会将 `LOB` 列的所有数据作为一个连续块获取，这可能会显著增加应用程序开销。</span><span class="sxs-lookup"><span data-stu-id="1b332-421">However, when you use <xref:System.Data.OracleClient.OracleLob.Value%2A>, you obtain all the data for the `LOB` column as one contiguous chunk, which can significantly increase application overhead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-422">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-422">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-423">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-423">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="oracleLob.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1b332-424">字节的数组。</span><span class="sxs-lookup"><span data-stu-id="1b332-424">An array of bytes.</span></span> <span data-ttu-id="1b332-425">此方法将 <paramref name="count" /> 中指定的字节数从 <paramref name="buffer" /> 复制到当前流中。</span><span class="sxs-lookup"><span data-stu-id="1b332-425">This method copies the number of bytes specified in <paramref name="count" /> from <paramref name="buffer" /> to the current stream.</span></span></param>
        <param name="offset"><span data-ttu-id="1b332-426"><paramref name="buffer" /> 中的从零开始的字节偏移量，从此处开始将字节复制到当前流。</span><span class="sxs-lookup"><span data-stu-id="1b332-426">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</span></span> <span data-ttu-id="1b332-427">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-427">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <param name="count"><span data-ttu-id="1b332-428">要写入当前流的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-428">The number of bytes to be written to the current stream.</span></span> <span data-ttu-id="1b332-429">对于 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型，它必须为偶数。</span><span class="sxs-lookup"><span data-stu-id="1b332-429">For <see langword="CLOB" /> and <see langword="NCLOB" /> data types, this must be an even number.</span></span></param>
        <summary><span data-ttu-id="1b332-430">将一个字节序列写入当前 <see cref="T:System.Data.OracleClient.OracleLob" /> 流，并使流中的当前位置前进所写入的字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-430">Writes a sequence of bytes to the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the current position within this stream by the number of bytes written.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-431">如果写入操作成功，则流中的位置将按写入的字节数向前推进。</span><span class="sxs-lookup"><span data-stu-id="1b332-431">If the write operation is successful, the position within the stream advances by the number of bytes written.</span></span> <span data-ttu-id="1b332-432">如果发生异常，则流中的位置将保持不变。</span><span class="sxs-lookup"><span data-stu-id="1b332-432">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="1b332-433">允许写入超出 `LOB` 末尾，并按写入的字节数增大 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-433">Writing beyond the end of `LOB` is allowed and enlarges the `LOB` by the number of bytes written.</span></span>  
  
 <span data-ttu-id="1b332-434">用于 Oracle 的 .NET Framework 数据提供程序以 Unicode 形式处理所有 `CLOB` 和 `NCLOB` 数据。</span><span class="sxs-lookup"><span data-stu-id="1b332-434">The .NET Framework Data Provider for Oracle handles all `CLOB` and `NCLOB` data as Unicode.</span></span> <span data-ttu-id="1b332-435">因此，在访问 `CLOB` 和 `NCLOB` 数据类型时，始终会处理字节数，其中每个字符都是2个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-435">Therefore, when accessing `CLOB` and `NCLOB` data types, you are always dealing with the number of bytes, where each character is 2 bytes.</span></span> <span data-ttu-id="1b332-436">例如，如果将包含三个字符的文本字符串作为 `NCLOB` 保存在 Oracle 服务器上，其中字符集为每个字符4个字节，并且您执行 `Write` 操作，则可以将字符串的长度指定为6个字节，尽管它在服务器上存储为12个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-436">For example, if a string of text containing three characters is saved as an `NCLOB` on an Oracle server where the character set is 4 bytes per character, and you perform a `Write` operation, you specify the length of the string as 6 bytes, although it is stored as 12 bytes on the server.</span></span>  
  
 <span data-ttu-id="1b332-437">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-437">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
 <span data-ttu-id="1b332-438">下面的示例演示如何写入 <xref:System.Data.OracleClient.OracleLob> 对象：</span><span class="sxs-lookup"><span data-stu-id="1b332-438">The following example demonstrates how to write to <xref:System.Data.OracleClient.OracleLob> objects:</span></span>
  
```csharp
public static void WriteLobExample(OracleCommand command)  
{  
    // Note: Updating LOB data requires a transaction.  
    command.Transaction = command.Connection.BeginTransaction();  
    // Select some data.  
    //    Table Schema:  
    //        "CREATE TABLE tablewithlobs (a int, b BLOB, c BLOB)";  
    //        "INSERT INTO tablewithlobs values (1, 'AA', 'AAA')";  
    command.CommandText = "SELECT * FROM TableWithLobs FOR UPDATE";  
    OracleDataReader reader = command.ExecuteReader();  
    using(reader)  
    {  
        // Obtain the first row of data.  
        reader.Read();  
        // Obtain both LOBs.  
        OracleLob BLOB1 = reader.GetOracleLob(1);  
        OracleLob BLOB2 = reader.GetOracleLob(2);  
        // Perform any desired operations on the LOB, (read, position, and so on).  
        // ...  
        // Example - Writing binary data (directly to the backend).  
        // To write, you can use any of the stream classes, or write raw binary data using   
        // the OracleLob write method. Writing character vs. binary is the same;  
        // however note that character is always in terms of Unicode byte counts  
        // (for example: even number of bytes - 2 bytes for every Unicode character).  
        var buffer = new byte[100];  
        buffer[0] = 0xCC;  
        buffer[1] = 0xDD;  
        BLOB1.Write(buffer, 0, 2);  
        BLOB1.Position = 0;  
        Console.WriteLine(BLOB1.LobType + ".Write(" + buffer + ", 0, 2) => " + BLOB1.Value);  
        
        // Example - Copying data into another LOB.  
        long actual = BLOB1.CopyTo(BLOB2);  
        Console.WriteLine(BLOB1.LobType + ".CopyTo(" + BLOB2.Value + ") => " + actual);  
        
        // Commit the transaction now that everything succeeded.  
        // Note: On error, Transaction.Dispose is called (from the using statement)  
        // and will automatically roll-back the pending transaction.  
        command.Transaction.Commit();  
    }  
}  
```  
  
> [!NOTE]
>  <span data-ttu-id="1b332-439">对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-439">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-440">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-440">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-441">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-441">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b332-442"><paramref name="buffer" /> 参数为 null 引用（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="1b332-442">The <paramref name="buffer" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b332-443"><paramref name="offset" /> 或 <paramref name="count" /> 参数中的值为非正。</span><span class="sxs-lookup"><span data-stu-id="1b332-443">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.</span></span>  
  
<span data-ttu-id="1b332-444">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-444">-or-</span></span> 
<span data-ttu-id="1b332-445"><paramref name="offset" /> 参数与 <paramref name="count" /> 参数之和大于 <paramref name="buffer" /> 的长度。</span><span class="sxs-lookup"><span data-stu-id="1b332-445">The sum of the <paramref name="offset" /> and <paramref name="count" /> parameters is larger than the <paramref name="buffer" /> length.</span></span>  
  
<span data-ttu-id="1b332-446">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-446">-or-</span></span> 
<span data-ttu-id="1b332-447"><paramref name="count" /> 或 <paramref name="offset" /> 参数中指定的值小于零，或大于 4 GB。</span><span class="sxs-lookup"><span data-stu-id="1b332-447">A value specified in the <paramref name="count" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.</span></span>  
  
<span data-ttu-id="1b332-448">-或-</span><span class="sxs-lookup"><span data-stu-id="1b332-448">-or-</span></span> 
<span data-ttu-id="1b332-449">必须将 <see langword="CLOB" /> 和 <see langword="NCLOB" /> 数据类型指定为偶数字节数。</span><span class="sxs-lookup"><span data-stu-id="1b332-449">You must specify <see langword="CLOB" /> and <see langword="NCLOB" /> data types as an even number of bytes.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1b332-450">该操作未处在事务中，<see cref="T:System.Data.OracleClient.OracleLob" /> 对象为 null，或者连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="1b332-450">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1b332-451">对象已关闭或已释放。</span><span class="sxs-lookup"><span data-stu-id="1b332-451">The object was closed or disposed.</span></span></exception>
        <exception cref="T:System.Data.OracleClient.OracleException"><span data-ttu-id="1b332-452">发生了 Oracle 错误。</span><span class="sxs-lookup"><span data-stu-id="1b332-452">An Oracle error has occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="oracleLob.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.OracleClient</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b332-453">要写入流中的字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-453">The byte to write to the stream.</span></span></param>
        <summary><span data-ttu-id="1b332-454">将一个字节写入 <see cref="T:System.Data.OracleClient.OracleLob" /> 流内的当前位置，并将流内的位置向前推进一个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-454">Writes a byte to the current position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the position within the stream by one byte.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1b332-455">如果写入操作成功，则流中的位置将向前推进一个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-455">If the write operation is successful, the position within the stream advances by one byte.</span></span> <span data-ttu-id="1b332-456">如果发生异常，则流中的位置将保持不变。</span><span class="sxs-lookup"><span data-stu-id="1b332-456">If an exception occurs, the position within the stream remains unchanged.</span></span>  
  
 <span data-ttu-id="1b332-457">允许写入超出 `LOB` 末尾，并将 `LOB` 增加一个字节。</span><span class="sxs-lookup"><span data-stu-id="1b332-457">Writing beyond the end of the `LOB` is allowed and enlarges the `LOB` by one byte.</span></span>  
  
 <span data-ttu-id="1b332-458">若要写入 `LOB`，必须使用 SQL SELECT 语句中的 FOR UPDATE 子句检索 `LOB`，并且必须已启动本地事务。</span><span class="sxs-lookup"><span data-stu-id="1b332-458">To write to the `LOB`, you must have retrieved the `LOB` using the FOR UPDATE clause in the SQL SELECT statement, and you must have a local transaction started.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1b332-459">对只读 `LOB` 的写入操作可能会成功，但不会更新服务器上的 `LOB`。</span><span class="sxs-lookup"><span data-stu-id="1b332-459">A write operation to a read-only `LOB` might succeed, but does not update the `LOB` on the server.</span></span> <span data-ttu-id="1b332-460">但在这种情况下，将更新 `LOB` 的本地副本。</span><span class="sxs-lookup"><span data-stu-id="1b332-460">In this case, however, the local copy of the `LOB` is updated.</span></span> <span data-ttu-id="1b332-461">因此，稍后对 <xref:System.Data.OracleClient.OracleLob> 对象的读取操作可能会返回写入操作的结果。</span><span class="sxs-lookup"><span data-stu-id="1b332-461">Therefore, later read operations on the <xref:System.Data.OracleClient.OracleLob> object might return the results of the write operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
