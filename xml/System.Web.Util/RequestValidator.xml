<Type Name="RequestValidator" FullName="System.Web.Util.RequestValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4aacfe554d751d4565402afae5664b385564aaf0" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78757801" /></Metadata><TypeSignature Language="C#" Value="public class RequestValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.RequestValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestValidator" />
  <TypeSignature Language="F#" Value="type RequestValidator = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="007e0-101">定义自定义请求验证的基方法。</span><span class="sxs-lookup"><span data-stu-id="007e0-101">Defines base methods for custom request validation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007e0-102">默认情况下，ASP.NET 不会验证请求，直到代码显式请求请求中的值。</span><span class="sxs-lookup"><span data-stu-id="007e0-102">By default, ASP.NET does not validate requests until code explicitly requests a value from the request.</span></span> <span data-ttu-id="007e0-103">例如，在代码访问 <xref:System.Web.HttpRequest.QueryString%2A> 集合之前，ASP.NET 不会验证查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="007e0-103">For example, ASP.NET does not validate query-string values until code accesses the <xref:System.Web.HttpRequest.QueryString%2A> collection.</span></span> <span data-ttu-id="007e0-104">默认情况下，ASP.NET 也不会验证某些类型的请求数据，如窗体值、cookie、使用 HTTP 上传的文件的名称以及 <xref:System.Web.HttpRequest.RawUrl%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="007e0-104">By default, ASP.NET also does not validate some types of request data, such as form values, cookies, the names of files that have been uploaded using HTTP, and the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property.</span></span>  
  
 <span data-ttu-id="007e0-105"><xref:System.Web.Util.RequestValidator> 类是一个基类，可以实现此基类以提供自定义请求验证。</span><span class="sxs-lookup"><span data-stu-id="007e0-105">The <xref:System.Web.Util.RequestValidator> class is a base class that you can implement in order to provide custom request validation.</span></span> <span data-ttu-id="007e0-106">通过实现此类，可以确定验证发生的时间以及要对其执行验证的请求数据的类型。</span><span class="sxs-lookup"><span data-stu-id="007e0-106">By implementing this class, you can determine when validation occurs and what type of request data to perform validation on.</span></span>  
  
 <span data-ttu-id="007e0-107">默认情况下，ASP.NET 提供跨站点脚本（XSS）检查。</span><span class="sxs-lookup"><span data-stu-id="007e0-107">By default, ASP.NET provides cross-site scripting (XSS) checks.</span></span> <span data-ttu-id="007e0-108">但是，可以通过创建 XSS 的自定义实现来补充或替换 ASP.NET 中提供的请求验证逻辑。</span><span class="sxs-lookup"><span data-stu-id="007e0-108">However, you can supplement or replace the request validation logic that is provided in ASP.NET by creating a custom implementation of the XSS.</span></span> <span data-ttu-id="007e0-109">例如，你可以编写一个自定义请求验证实现，该实现除了检查 XSS 攻击以外，还会扫描 SQL 注入攻击。</span><span class="sxs-lookup"><span data-stu-id="007e0-109">For example, you can write a custom request validation implementation that scans for SQL injection attacks in addition to checking for XSS attacks.</span></span>  
  
 <span data-ttu-id="007e0-110">若要创建自定义请求验证，请编写一个从 <xref:System.Web.Util.RequestValidator> 基类派生的自定义类。</span><span class="sxs-lookup"><span data-stu-id="007e0-110">To create custom request validation, you write a custom class that derives from the <xref:System.Web.Util.RequestValidator> base class.</span></span> <span data-ttu-id="007e0-111">然后，将 ASP.NET 配置为使用应用程序级别的 Web.config 文件中的自定义请求验证程序。</span><span class="sxs-lookup"><span data-stu-id="007e0-111">You then configure ASP.NET to use the custom request validator in the application-level Web.config file.</span></span> <span data-ttu-id="007e0-112">可以将自定义类放入 App_Code 文件夹、Bin 文件夹中的已编译类库或 GAC 中的已编译类库中。</span><span class="sxs-lookup"><span data-stu-id="007e0-112">You can put the custom class in the App_Code folder, in a compiled class library in the Bin folder, or in a compiled class library in the GAC.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="007e0-113">对于应用程序，只能配置一个自定义请求验证类型。</span><span class="sxs-lookup"><span data-stu-id="007e0-113">Only one custom request validation type can be configured for an application.</span></span> <span data-ttu-id="007e0-114">不能为单个虚拟路径或页面配置不同的请求验证类型。</span><span class="sxs-lookup"><span data-stu-id="007e0-114">It is not possible to configure a different request validation type for individual virtual paths or pages.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="007e0-115">下面的示例演示如何创建自定义请求验证程序，该验证器仅允许将特定字符串用于查询字符串值。</span><span class="sxs-lookup"><span data-stu-id="007e0-115">The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.</span></span>  
  
 [!code-csharp[System.Web.Util.RequestValidator#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.util.requestvalidator/cs/requestvalidator.cs#1)]
 [!code-vb[System.Web.Util.RequestValidator#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.util.requestvalidator/vb/requestvalidator.vb#1)]  
  
 <span data-ttu-id="007e0-116">下面的示例演示如何将 ASP.NET 配置为使用应用程序的 web.config 文件中的自定义验证程序。</span><span class="sxs-lookup"><span data-stu-id="007e0-116">The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.</span></span>  
  
```  
<system.web>  
  <httpRuntime requestValidationType="CustomRequestValidation" />  
</system.web>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Util.RequestValidationSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.RequestValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="007e0-117">初始化 <see cref="T:System.Web.Util.RequestValidator" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="007e0-117">Initializes a new instance of the <see cref="T:System.Web.Util.RequestValidator" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007e0-118"><xref:System.Web.Util.RequestValidator> 类具有无参数的构造函数。</span><span class="sxs-lookup"><span data-stu-id="007e0-118">The <xref:System.Web.Util.RequestValidator> class has a parameterless constructor.</span></span> <span data-ttu-id="007e0-119">初始化类的新实例时，内部方法会从应用程序的配置信息中检索自定义验证详细信息。</span><span class="sxs-lookup"><span data-stu-id="007e0-119">When a new instance of the class is initialized, an internal method retrieves custom validation details from the application's configuration information.</span></span> <span data-ttu-id="007e0-120"><xref:System.Web.Configuration.HttpRuntimeSection> 部分中包含配置详细信息。</span><span class="sxs-lookup"><span data-stu-id="007e0-120">The configuration details are contained in the <xref:System.Web.Configuration.HttpRuntimeSection> section.</span></span> <span data-ttu-id="007e0-121">有关详细信息，请参阅[HttpRuntime 元素（ASP.NET 设置架构）](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100))和 <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A> 特性。</span><span class="sxs-lookup"><span data-stu-id="007e0-121">For more information, see [httpRuntime Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100)) and the <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A> attribute.</span></span>  
  
 <span data-ttu-id="007e0-122">在初始化期间，将创建 <xref:System.Web.Util.RequestValidator> 类的单个实例，并在 <xref:System.Web.Util.RequestValidator.Current%2A> 属性中维护对实例的引用。</span><span class="sxs-lookup"><span data-stu-id="007e0-122">During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is maintained in the <xref:System.Web.Util.RequestValidator.Current%2A> property.</span></span> <span data-ttu-id="007e0-123">ASP.NET 不会为每个请求创建新的请求验证程序实例。</span><span class="sxs-lookup"><span data-stu-id="007e0-123">ASP.NET does not create a new request validator instance per request.</span></span> <span data-ttu-id="007e0-124">因此，<xref:System.Web.Util.RequestValidator> 类的自定义实现必须是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="007e0-124">Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.RequestValidator Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.RequestValidator Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.RequestValidator.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As RequestValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::RequestValidator ^ Current { System::Web::Util::RequestValidator ^ get(); void set(System::Web::Util::RequestValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.RequestValidator with get, set" Usage="System.Web.Util.RequestValidator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.RequestValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="007e0-125">获取或设置对将在应用程序中使用的当前 <see cref="T:System.Web.Util.RequestValidator" /> 实例的引用。</span><span class="sxs-lookup"><span data-stu-id="007e0-125">Gets or sets a reference to the current <see cref="T:System.Web.Util.RequestValidator" /> instance that will be used in an application.</span></span></summary>
        <value><span data-ttu-id="007e0-126"><see cref="T:System.Web.Util.RequestValidator" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="007e0-126">An instance of the <see cref="T:System.Web.Util.RequestValidator" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007e0-127"><xref:System.Web.Util.RequestValidator.Current%2A> 属性维护对 <xref:System.Web.Util.RequestValidator> 类的单个允许实例的引用。</span><span class="sxs-lookup"><span data-stu-id="007e0-127">The <xref:System.Web.Util.RequestValidator.Current%2A> property maintains a reference to the single allowed instance of the <xref:System.Web.Util.RequestValidator> class.</span></span> <span data-ttu-id="007e0-128">如果不存在实例，则创建一个新实例。</span><span class="sxs-lookup"><span data-stu-id="007e0-128">If no instance exists, a new one is created.</span></span> <span data-ttu-id="007e0-129">如果某个实例已存在，则返回当前实例。</span><span class="sxs-lookup"><span data-stu-id="007e0-129">If an instance already exists, the current instance is returned.</span></span>  
  
 <span data-ttu-id="007e0-130">在初始化期间，将创建 <xref:System.Web.Util.RequestValidator> 类的单个实例，并在 <xref:System.Web.Util.RequestValidator.Current%2A> 属性中提供对实例的引用。</span><span class="sxs-lookup"><span data-stu-id="007e0-130">During initialization, a single instance of the <xref:System.Web.Util.RequestValidator> class is created, and a reference to the instance is made available in the <xref:System.Web.Util.RequestValidator.Current%2A> property.</span></span> <span data-ttu-id="007e0-131">ASP.NET 不会为每个请求创建新的请求验证程序实例。</span><span class="sxs-lookup"><span data-stu-id="007e0-131">ASP.NET does not create a new request validator instance per request.</span></span> <span data-ttu-id="007e0-132">因此，<xref:System.Web.Util.RequestValidator> 类的自定义实现必须是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="007e0-132">Therefore, custom implementations of the <xref:System.Web.Util.RequestValidator> class must be thread-safe.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="007e0-133">当属性设置对当前 <xref:System.Web.Util.RequestValidator> 类的引用时，<xref:System.Web.Util.RequestValidator.Current%2A> 属性不是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="007e0-133">The <xref:System.Web.Util.RequestValidator.Current%2A> property is not thread-safe while the property is setting a reference to the current <xref:System.Web.Util.RequestValidator> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="007e0-134">属性为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="007e0-134">The property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsValidRequestString">
      <MemberSignature Language="C#" Value="public bool InvokeIsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool InvokeIsValidRequestString(class System.Web.HttpContext context, string value, valuetype System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, [out] int32&amp; validationFailureIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeIsValidRequestString (context As HttpContext, value As String, requestValidationSource As RequestValidationSource, collectionKey As String, ByRef validationFailureIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool InvokeIsValidRequestString(System::Web::HttpContext ^ context, System::String ^ value, System::Web::Util::RequestValidationSource requestValidationSource, System::String ^ collectionKey, [Runtime::InteropServices::Out] int % validationFailureIndex);" />
      <MemberSignature Language="F#" Value="member this.InvokeIsValidRequestString : System.Web.HttpContext * string * System.Web.Util.RequestValidationSource * string * int -&gt; bool" Usage="requestValidator.InvokeIsValidRequestString (context, value, requestValidationSource, collectionKey, validationFailureIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="requestValidationSource" Type="System.Web.Util.RequestValidationSource" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collectionKey" Type="System.String" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="validationFailureIndex" Type="System.Int32" RefType="out" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="007e0-135">请求的 HTTP 上下文。</span><span class="sxs-lookup"><span data-stu-id="007e0-135">The HTTP context of the request.</span></span></param>
        <param name="value"><span data-ttu-id="007e0-136">要验证的 HTTP 请求数据。</span><span class="sxs-lookup"><span data-stu-id="007e0-136">The HTTP request data to validate.</span></span></param>
        <param name="requestValidationSource"><span data-ttu-id="007e0-137">一个枚举，表示正在验证的请求数据的源。</span><span class="sxs-lookup"><span data-stu-id="007e0-137">An enumeration that represents the source of request data that is being validated.</span></span> <span data-ttu-id="007e0-138">以下是枚举的可能值：</span><span class="sxs-lookup"><span data-stu-id="007e0-138">The following are possible values for the enumeration:</span></span> 
-   <see langword="QueryString" />  
  
-   <see langword="Form" />  
  
-   <see langword="Cookies" />  
  
-   <see langword="Files" />  
  
-   <see langword="Path" />  
  
-   <see langword="PathInfo" />  
  
-   <see langword="Headers" /></param>
        <param name="collectionKey"><span data-ttu-id="007e0-139">（可选）验证项的请求集合中的键。</span><span class="sxs-lookup"><span data-stu-id="007e0-139">(Optional) The key in the request collection of the item to validate.</span></span> <span data-ttu-id="007e0-140">如果从集合中获得要验证的数据，则使用此参数。</span><span class="sxs-lookup"><span data-stu-id="007e0-140">This parameter is used if the data to validate is obtained from a collection.</span></span> <span data-ttu-id="007e0-141">如果要验证的数据不是集合中的数据，则此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="007e0-141">If the data to validate is not from a collection, this parameter can be <see langword="null" />.</span></span></param>
        <param name="validationFailureIndex"><span data-ttu-id="007e0-142">此方法返回时，指示请求集合中有问题或无效文本的从零开始的起点。</span><span class="sxs-lookup"><span data-stu-id="007e0-142">When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection.</span></span> <span data-ttu-id="007e0-143">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="007e0-143">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="007e0-144">提供一种公共方法，其调用受保护的 <see cref="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)" /> 方法来验证 HTTP 请求数据。</span><span class="sxs-lookup"><span data-stu-id="007e0-144">Provides a public method that calls the protected <see cref="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)" /> method in order to validate HTTP request data.</span></span></summary>
        <returns><span data-ttu-id="007e0-145">如果要验证的字符串不包含可用于恶意脚本攻击的未编码字符，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="007e0-145"><see langword="true" /> if the string to validate does not contain unencoded characters that could be used in a malicious scripting attack; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007e0-146"><xref:System.Web.Util.RequestValidator.InvokeIsValidRequestString%2A> 方法提供对受保护的 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 方法的公共访问。</span><span class="sxs-lookup"><span data-stu-id="007e0-146">The <xref:System.Web.Util.RequestValidator.InvokeIsValidRequestString%2A> method provides public access to the protected <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method.</span></span> <span data-ttu-id="007e0-147">这使你可以为 <xref:System.Web.Util.RequestValidator> 类创建自定义包装器类，并调用 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 方法，而不必从 <xref:System.Web.Util.RequestValidator> 类中继承。</span><span class="sxs-lookup"><span data-stu-id="007e0-147">This lets you create a custom wrapper class for the <xref:System.Web.Util.RequestValidator> class and call the <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method without having to inherit from the <xref:System.Web.Util.RequestValidator> class.</span></span>  
  
 <span data-ttu-id="007e0-148">有关请求验证的信息，请参阅 <xref:System.Web.UnvalidatedRequestValues>。</span><span class="sxs-lookup"><span data-stu-id="007e0-148">For information about request validation, see <xref:System.Web.UnvalidatedRequestValues>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidRequestString">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool IsValidRequestString(class System.Web.HttpContext context, string value, valuetype System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, [out] int32&amp; validationFailureIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function IsValidRequestString (context As HttpContext, value As String, requestValidationSource As RequestValidationSource, collectionKey As String, ByRef validationFailureIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool IsValidRequestString(System::Web::HttpContext ^ context, System::String ^ value, System::Web::Util::RequestValidationSource requestValidationSource, System::String ^ collectionKey, [Runtime::InteropServices::Out] int % validationFailureIndex);" />
      <MemberSignature Language="F#" Value="abstract member IsValidRequestString : System.Web.HttpContext * string * System.Web.Util.RequestValidationSource * string * int -&gt; bool&#xA;override this.IsValidRequestString : System.Web.HttpContext * string * System.Web.Util.RequestValidationSource * string * int -&gt; bool" Usage="requestValidator.IsValidRequestString (context, value, requestValidationSource, collectionKey, validationFailureIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="requestValidationSource" Type="System.Web.Util.RequestValidationSource" />
        <Parameter Name="collectionKey" Type="System.String" />
        <Parameter Name="validationFailureIndex" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="007e0-149">当前请求的上下文。</span><span class="sxs-lookup"><span data-stu-id="007e0-149">The context of the current request.</span></span></param>
        <param name="value"><span data-ttu-id="007e0-150">要验证的 HTTP 请求数据。</span><span class="sxs-lookup"><span data-stu-id="007e0-150">The HTTP request data to validate.</span></span></param>
        <param name="requestValidationSource"><span data-ttu-id="007e0-151">一个枚举，表示正在验证的请求数据的源。</span><span class="sxs-lookup"><span data-stu-id="007e0-151">An enumeration that represents the source of request data that is being validated.</span></span> <span data-ttu-id="007e0-152">以下是枚举的可能值：</span><span class="sxs-lookup"><span data-stu-id="007e0-152">The following are possible values for the enumeration:</span></span> 
- <see langword="QueryString" />
- <see langword="Form " />
- <see langword="Cookies" />
- <see langword="Files" />
- <see langword="RawUrl" />
- <see langword="Path" />
- <see langword="PathInfo" />
- <see langword="Headers" /></param>
        <param name="collectionKey"><span data-ttu-id="007e0-153">要验证的项的请求集合中的键。</span><span class="sxs-lookup"><span data-stu-id="007e0-153">The key in the request collection of the item to validate.</span></span> <span data-ttu-id="007e0-154">此参数可选。</span><span class="sxs-lookup"><span data-stu-id="007e0-154">This parameter is optional.</span></span> <span data-ttu-id="007e0-155">如果从集合中获得要验证的数据，则使用此参数。</span><span class="sxs-lookup"><span data-stu-id="007e0-155">This parameter is used if the data to validate is obtained from a collection.</span></span> <span data-ttu-id="007e0-156">如果要验证的数据不是集合中的数据，<paramref name="collectionKey" /> 可以是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="007e0-156">If the data to validate is not from a collection, <paramref name="collectionKey" /> can be <see langword="null" />.</span></span></param>
        <param name="validationFailureIndex"><span data-ttu-id="007e0-157">此方法返回时，指示请求集合中有问题或无效文本的从零开始的起点。</span><span class="sxs-lookup"><span data-stu-id="007e0-157">When this method returns, indicates the zero-based starting point of the problematic or invalid text in the request collection.</span></span> <span data-ttu-id="007e0-158">此参数未经初始化即被传递。</span><span class="sxs-lookup"><span data-stu-id="007e0-158">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="007e0-159">验证包含 HTTP 请求数据的字符串。</span><span class="sxs-lookup"><span data-stu-id="007e0-159">Validates a string that contains HTTP request data.</span></span></summary>
        <returns><span data-ttu-id="007e0-160">如果要验证的字符串有效，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="007e0-160"><see langword="true" /> if the string to be validated is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="007e0-161">实现此方法可以执行请求数据的自定义验证。</span><span class="sxs-lookup"><span data-stu-id="007e0-161">You implement this method to perform custom validation of request data.</span></span> <span data-ttu-id="007e0-162"><xref:System.Web.Util.RequestValidator.IsValidRequestString%28System.Web.HttpContext%2CSystem.String%2CSystem.Web.Util.RequestValidationSource%2CSystem.String%2CSystem.Int32%40%29> 方法的基本行为类似于 ASP.NET 在内部实现以检查跨站点脚本验证中的危险字符串的行为。</span><span class="sxs-lookup"><span data-stu-id="007e0-162">The base behavior of the <xref:System.Web.Util.RequestValidator.IsValidRequestString%28System.Web.HttpContext%2CSystem.String%2CSystem.Web.Util.RequestValidationSource%2CSystem.String%2CSystem.Int32%40%29> method is like the behavior that ASP.NET implements internally to check for dangerous strings in cross-site scripting validation.</span></span> <span data-ttu-id="007e0-163">有关详细信息，请参阅[如何：在 ASP.NET 中阻止跨站点脚本](https://go.microsoft.com/fwlink/?LinkID=178708)。</span><span class="sxs-lookup"><span data-stu-id="007e0-163">For more information, see [How To: Prevent Cross-Site Scripting in ASP.NET](https://go.microsoft.com/fwlink/?LinkID=178708).</span></span>  
  
 <span data-ttu-id="007e0-164">如果自定义验证逻辑检测到错误，则此方法应返回 `false`，并在 `validationFailureIndex` 中提供一个值以指示导致错误的文本的起始点。</span><span class="sxs-lookup"><span data-stu-id="007e0-164">If custom validation logic detects an error, this method should return `false` and provide a value in `validationFailureIndex` to indicate the starting point of the text that caused the error.</span></span> <span data-ttu-id="007e0-165">`validationFailureIndex` 中的值必须为0或正整数。</span><span class="sxs-lookup"><span data-stu-id="007e0-165">The value in `validationFailureIndex` must be 0 or a positive integer.</span></span>  
  
 <span data-ttu-id="007e0-166">请求验证检查中的逻辑按如下方式继续：</span><span class="sxs-lookup"><span data-stu-id="007e0-166">The logic in a request validation check proceeds as follows:</span></span>  
  
-   <span data-ttu-id="007e0-167"><xref:System.Web.HttpRequest> 类对传入数据执行 null 字符删除检查。</span><span class="sxs-lookup"><span data-stu-id="007e0-167">The <xref:System.Web.HttpRequest> class performs a null-character removal check on the incoming data.</span></span>  
  
-   <span data-ttu-id="007e0-168"><xref:System.Web.HttpRequest> 类调用 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 方法（基方法的默认实现）或调用该方法的派生版本。</span><span class="sxs-lookup"><span data-stu-id="007e0-168">The <xref:System.Web.HttpRequest> class calls either the <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method (the default implementation of the base method) or calls a derived version of the method.</span></span>  
  
-   <span data-ttu-id="007e0-169">如果 <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> 方法返回 `false` 以指示验证失败，ASP.NET 将构造错误字符串（如有必要），并引发 <xref:System.Web.HttpRequestValidationException> 异常。</span><span class="sxs-lookup"><span data-stu-id="007e0-169">If <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> method returns `false` to indicate a validation failure, ASP.NET constructs an error string (if necessary) and throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
