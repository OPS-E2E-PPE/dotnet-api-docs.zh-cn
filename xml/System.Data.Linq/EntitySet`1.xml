<Type Name="EntitySet&lt;TEntity&gt;" FullName="System.Data.Linq.EntitySet&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6df7b531fe7913a9a79d521627cd7f7e264725a" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76949305" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntitySet&lt;TEntity&gt; : System.Collections.Generic.ICollection&lt;TEntity&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.Collections.Generic.IList&lt;TEntity&gt;, System.Collections.IList, System.ComponentModel.IListSource where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntitySet`1&lt;class TEntity&gt; extends System.Object implements class System.Collections.Generic.ICollection`1&lt;!TEntity&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.Generic.IList`1&lt;!TEntity&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ComponentModel.IListSource" />
  <TypeSignature Language="DocId" Value="T:System.Data.Linq.EntitySet`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntitySet(Of TEntity)&#xA;Implements ICollection(Of TEntity), IEnumerable(Of TEntity), IList, IList(Of TEntity), IListSource" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntitySet sealed : System::Collections::Generic::ICollection&lt;TEntity&gt;, System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::Collections::Generic::IList&lt;TEntity&gt;, System::Collections::IList, System::ComponentModel::IListSource" />
  <TypeSignature Language="F#" Value="type EntitySet&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    interface ICollection&#xA;    interface ICollection&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IEnumerable&#xA;    interface seq&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IList&#xA;    interface IList&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Linq</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity"><span data-ttu-id="198ed-101">目标实体的数据类型。</span><span class="sxs-lookup"><span data-stu-id="198ed-101">The data type of the target entity.</span></span></typeparam>
    <summary><span data-ttu-id="198ed-102">为 LINQ to SQL 应用程序中的一对多和一对一关系中的集合提供延迟加载和关系维护。</span><span class="sxs-lookup"><span data-stu-id="198ed-102">Provides for deferred loading and relationship maintenance for the collection side of one-to-many and one-to-one relationships in a LINQ to SQL applications.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-103">此类与 <xref:System.Data.Linq.EntityRef%601>结合使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-103">This class is used in combination with <xref:System.Data.Linq.EntityRef%601>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="198ed-104">初始化 <see cref="T:System.Data.Linq.EntitySet`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="198ed-104">Initializes a new instance of the <see cref="T:System.Data.Linq.EntitySet`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntitySet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntitySet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="198ed-105">初始化 <see cref="T:System.Data.Linq.EntitySet`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="198ed-105">Initializes a new instance of the <see cref="T:System.Data.Linq.EntitySet`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntitySet (Action&lt;TEntity&gt; onAdd, Action&lt;TEntity&gt; onRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TEntity&gt; onAdd, class System.Action`1&lt;!TEntity&gt; onRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.#ctor(System.Action{`0},System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (onAdd As Action(Of TEntity), onRemove As Action(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntitySet(Action&lt;TEntity&gt; ^ onAdd, Action&lt;TEntity&gt; ^ onRemove);" />
      <MemberSignature Language="F#" Value="new System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt; : Action&lt;'Entity (requires 'Entity : null)&gt; * Action&lt;'Entity (requires 'Entity : null)&gt; -&gt; System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt;" Usage="new System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt; (onAdd, onRemove)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="onAdd" Type="System.Action&lt;TEntity&gt;" />
        <Parameter Name="onRemove" Type="System.Action&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="onAdd"><span data-ttu-id="198ed-106"><see cref="M:System.Data.Linq.EntitySet`1.Add(`0)" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="198ed-106">Delegate for <see cref="M:System.Data.Linq.EntitySet`1.Add(`0)" />.</span></span></param>
        <param name="onRemove"><span data-ttu-id="198ed-107"><see cref="M:System.Data.Linq.EntitySet`1.Remove(`0)" /> 的委托。</span><span class="sxs-lookup"><span data-stu-id="198ed-107">Delegate for <see cref="M:System.Data.Linq.EntitySet`1.Remove(`0)" />.</span></span></param>
        <summary><span data-ttu-id="198ed-108">在为添加和移除操作提供处理程序的同时，初始化 <see cref="T:System.Data.Linq.EntitySet`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="198ed-108">Initializes a new instance of the <see cref="T:System.Data.Linq.EntitySet`1" /> class while supplying handlers for add and remove operations.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'Entity -&gt; unit&#xA;override this.Add : 'Entity -&gt; unit" Usage="entitySet.Add entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="198ed-109">要添加的实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-109">The entity to add.</span></span></param>
        <summary><span data-ttu-id="198ed-110">添加实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-110">Adds an entity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Collections.Generic.IEnumerable&lt;TEntity&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (collection As IEnumerable(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="member this.AddRange : seq&lt;'Entity (requires 'Entity : null)&gt; -&gt; unit" Usage="entitySet.AddRange collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="198ed-111">要添加的集合。</span><span class="sxs-lookup"><span data-stu-id="198ed-111">The collection to be added.</span></span></param>
        <summary><span data-ttu-id="198ed-112">添加实体的集合。</span><span class="sxs-lookup"><span data-stu-id="198ed-112">Adds a collection of entities.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assign">
      <MemberSignature Language="C#" Value="public void Assign (System.Collections.Generic.IEnumerable&lt;TEntity&gt; entitySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Assign(class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt; entitySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.Assign(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Assign (entitySource As IEnumerable(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Assign(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ entitySource);" />
      <MemberSignature Language="F#" Value="member this.Assign : seq&lt;'Entity (requires 'Entity : null)&gt; -&gt; unit" Usage="entitySet.Assign entitySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySource" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySource"><span data-ttu-id="198ed-113">要分配的集合。</span><span class="sxs-lookup"><span data-stu-id="198ed-113">The collection to assign.</span></span></param>
        <summary><span data-ttu-id="198ed-114">将 <see cref="T:System.Data.Linq.EntitySet`1" /> 集合分配给其他 <see cref="T:System.Data.Linq.EntitySet`1" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="198ed-114">Assigns an <see cref="T:System.Data.Linq.EntitySet`1" /> collection to another <see cref="T:System.Data.Linq.EntitySet`1" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="entitySet.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="198ed-115">移除所有项。</span><span class="sxs-lookup"><span data-stu-id="198ed-115">Removes all items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'Entity -&gt; bool&#xA;override this.Contains : 'Entity -&gt; bool" Usage="entitySet.Contains entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="198ed-116">实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-116">The entity.</span></span></param>
        <summary><span data-ttu-id="198ed-117">指定 <see cref="T:System.Data.Linq.EntitySet`1" /> 是否包含特定实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-117">Specifies whether the <see cref="T:System.Data.Linq.EntitySet`1" /> contains a specific entity.</span></span></summary>
        <returns><span data-ttu-id="198ed-118">如果 <see langword="true" /> 包含该实体，则为 <see cref="T:System.Data.Linq.EntitySet`1" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-118"><see langword="true" /> if the <see cref="T:System.Data.Linq.EntitySet`1" /> contains the entity; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (TEntity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!TEntity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TEntity(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;TEntity&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'Entity[] * int -&gt; unit&#xA;override this.CopyTo : 'Entity[] * int -&gt; unit" Usage="entitySet.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="TEntity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="198ed-119">要复制到的数组。</span><span class="sxs-lookup"><span data-stu-id="198ed-119">The array to copy to.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="198ed-120">数组中的起始索引。</span><span class="sxs-lookup"><span data-stu-id="198ed-120">The starting index in the array.</span></span></param>
        <summary><span data-ttu-id="198ed-121">将 <see cref="T:System.Data.Linq.EntitySet`1" /> 复制到数组。</span><span class="sxs-lookup"><span data-stu-id="198ed-121">Copies the <see cref="T:System.Data.Linq.EntitySet`1" /> to an array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples

 <span data-ttu-id="198ed-122">下面的示例演示了此方法的一种用法：</span><span class="sxs-lookup"><span data-stu-id="198ed-122">The following example shows one use of this method:</span></span>  
  
```csharp
var customer = (from c in db.Customers  
   where c.CustomerID == "ALFKI"  
   select c).Single();

var orderArray = new Order[customer.Orders.Count];
customer.Orders.CopyTo(orderArray,0);
```  
  
```vb
Dim customer = (From c In db.Customers _   
   Where c.CustomerID = "ALFKI" _   
   Select c).[Single]()  
  
Dim orderArray As New Order(customer.Orders.Count - 1) {}
customer.Orders.CopyTo(orderArray, 0)
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-123">获取 <see cref="T:System.Data.Linq.EntitySet`1" /> 集合中的实体数。</span><span class="sxs-lookup"><span data-stu-id="198ed-123">Gets the number of entities in the <see cref="T:System.Data.Linq.EntitySet`1" /> collection.</span></span></summary>
        <value><span data-ttu-id="198ed-124">一个表示实体数的整数。</span><span class="sxs-lookup"><span data-stu-id="198ed-124">An integer representing the number of entities.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TEntity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TEntity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TEntity&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Entity (requires 'Entity : null)&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Entity (requires 'Entity : null)&gt;" Usage="entitySet.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="198ed-125">返回循环访问集合的枚举器。</span><span class="sxs-lookup"><span data-stu-id="198ed-125">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="198ed-126">一个<see cref="T:System.Collections.Generic.IEnumerator`1" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-126">An <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNewBindingList">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IBindingList GetNewBindingList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.IBindingList GetNewBindingList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.GetNewBindingList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNewBindingList () As IBindingList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::IBindingList ^ GetNewBindingList();" />
      <MemberSignature Language="F#" Value="member this.GetNewBindingList : unit -&gt; System.ComponentModel.IBindingList" Usage="entitySet.GetNewBindingList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IBindingList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="198ed-127">创建用于绑定到数据源的新列表。</span><span class="sxs-lookup"><span data-stu-id="198ed-127">Creates a new list for binding to a data source.</span></span></summary>
        <returns><span data-ttu-id="198ed-128">用于绑定到数据源的新 <see cref="T:System.ComponentModel.IBindingList" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-128">A new <see cref="T:System.ComponentModel.IBindingList" /> for binding to a data source.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAssignedValues">
      <MemberSignature Language="C#" Value="public bool HasAssignedValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAssignedValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.HasAssignedValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAssignedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAssignedValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAssignedValues : bool" Usage="System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt;.HasAssignedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoadedOrAssignedValues">
      <MemberSignature Language="C#" Value="public bool HasLoadedOrAssignedValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoadedOrAssignedValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.HasLoadedOrAssignedValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLoadedOrAssignedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLoadedOrAssignedValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLoadedOrAssignedValues : bool" Usage="System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt;.HasLoadedOrAssignedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-129">指定 <see cref="T:System.Data.Linq.EntitySet`1" /> 是否已加载或分配某值。</span><span class="sxs-lookup"><span data-stu-id="198ed-129">Specifies whether the <see cref="T:System.Data.Linq.EntitySet`1" /> has loaded or assigned a value.</span></span></summary>
        <value><span data-ttu-id="198ed-130">如果 <see cref="T:System.Data.Linq.EntitySet`1" /> 已加载或分配值，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-130"><see langword="true" /> if the <see cref="T:System.Data.Linq.EntitySet`1" /> has either loaded or assigned a value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-131">"已加载" 表示在具体化期间或在延迟加载时加载数据。</span><span class="sxs-lookup"><span data-stu-id="198ed-131">"Loaded" means that the data was loaded during materialization or at deferred loading.</span></span> <span data-ttu-id="198ed-132">"已分配" 表示你已手动为数据指定了值。</span><span class="sxs-lookup"><span data-stu-id="198ed-132">"Assigned" means that you have manually given the data a value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoadedValues">
      <MemberSignature Language="C#" Value="public bool HasLoadedValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoadedValues" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.HasLoadedValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasLoadedValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasLoadedValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLoadedValues : bool" Usage="System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt;.HasLoadedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (entity As TEntity) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'Entity -&gt; int&#xA;override this.IndexOf : 'Entity -&gt; int" Usage="entitySet.IndexOf entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="198ed-133">要返回其索引的实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-133">The entity whose index is to be returned.</span></span></param>
        <summary><span data-ttu-id="198ed-134">返回实体的索引。</span><span class="sxs-lookup"><span data-stu-id="198ed-134">Returns the index of the entity.</span></span></summary>
        <returns><span data-ttu-id="198ed-135">一个表示索引的整数。</span><span class="sxs-lookup"><span data-stu-id="198ed-135">An integer representing the index.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'Entity -&gt; unit&#xA;override this.Insert : int * 'Entity -&gt; unit" Usage="entitySet.Insert (index, entity)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="198ed-136">表示要插入实体的位置的索引。</span><span class="sxs-lookup"><span data-stu-id="198ed-136">The index representing the position at which to insert the entity.</span></span></param>
        <param name="entity"><span data-ttu-id="198ed-137">要插入的实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-137">The entity to be inserted.</span></span></param>
        <summary><span data-ttu-id="198ed-138">在索引位置处插入实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-138">Inserts an entity at an index position.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeferred">
      <MemberSignature Language="C#" Value="public bool IsDeferred { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeferred" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.IsDeferred" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeferred As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeferred { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDeferred : bool" Usage="System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt;.IsDeferred" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-139">指定此 <see cref="T:System.Data.Linq.EntitySet`1" /> 是否具有尚未执行的延迟查询。</span><span class="sxs-lookup"><span data-stu-id="198ed-139">Specifies whether this <see cref="T:System.Data.Linq.EntitySet`1" /> has a deferred query that has not yet executed.</span></span></summary>
        <value><span data-ttu-id="198ed-140">如果尚未执行延迟的查询，则 <see langword="true" />;否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-140"><see langword="true" /> if a deferred query has not yet been executed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public TEntity this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity default[int] { TEntity get(int index); void set(int index, TEntity value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'Entity with get, set" Usage="System.Data.Linq.EntitySet&lt;'Entity (requires 'Entity : null)&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="198ed-141">元素的索引。</span><span class="sxs-lookup"><span data-stu-id="198ed-141">The index of the element.</span></span></param>
        <summary><span data-ttu-id="198ed-142">获取或设置指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="198ed-142">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="198ed-143">一个表示项的 <see cref="T:System.Data.Linq.EntitySet`1" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-143">An <see cref="T:System.Data.Linq.EntitySet`1" /> representing the item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.ListChangedEventHandler ListChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.ListChangedEventHandler ListChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Linq.EntitySet`1.ListChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ListChanged As ListChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::ListChangedEventHandler ^ ListChanged;" />
      <MemberSignature Language="F#" Value="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " Usage="member this.ListChanged : System.ComponentModel.ListChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ListChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-144">当列表的内容发生更改时发生。</span><span class="sxs-lookup"><span data-stu-id="198ed-144">Occurs when the contents of a list are changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.Load" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load();" />
      <MemberSignature Language="F#" Value="member this.Load : unit -&gt; unit" Usage="entitySet.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="198ed-145">加载 <see cref="T:System.Data.Linq.EntitySet`1" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-145">Loads the <see cref="T:System.Data.Linq.EntitySet`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'Entity -&gt; bool&#xA;override this.Remove : 'Entity -&gt; bool" Usage="entitySet.Remove entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity"><span data-ttu-id="198ed-146">要移除的实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-146">The entity to be removed.</span></span></param>
        <summary><span data-ttu-id="198ed-147">移除实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-147">Removes an entity.</span></span></summary>
        <returns><span data-ttu-id="198ed-148">如果已成功移除该实体，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-148"><see langword="true" /> if the entity is successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="entitySet.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="198ed-149">要移除的实体的索引。</span><span class="sxs-lookup"><span data-stu-id="198ed-149">The index of the entity to be removed.</span></span></param>
        <summary><span data-ttu-id="198ed-150">移除指定索引处的实体。</span><span class="sxs-lookup"><span data-stu-id="198ed-150">Removes an entity at a specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSource">
      <MemberSignature Language="C#" Value="public void SetSource (System.Collections.Generic.IEnumerable&lt;TEntity&gt; entitySource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSource(class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt; entitySource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.SetSource(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSource (entitySource As IEnumerable(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSource(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ entitySource);" />
      <MemberSignature Language="F#" Value="member this.SetSource : seq&lt;'Entity (requires 'Entity : null)&gt; -&gt; unit" Usage="entitySet.SetSource entitySource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySource" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="entitySource"><span data-ttu-id="198ed-151"><see cref="T:System.Data.Linq.EntitySet`1" /> 的源。</span><span class="sxs-lookup"><span data-stu-id="198ed-151">The source of the <see cref="T:System.Data.Linq.EntitySet`1" />.</span></span></param>
        <summary><span data-ttu-id="198ed-152">设置 <see cref="T:System.Data.Linq.EntitySet`1" /> 的源。</span><span class="sxs-lookup"><span data-stu-id="198ed-152">Sets the source of the <see cref="T:System.Data.Linq.EntitySet`1" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;TEntity&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;TEntity&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;TEntity&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#Collections#Generic#ICollection&lt;TEntity&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of TEntity).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;TEntity&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;TEntity&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-153">有关此成员的说明，请参见 <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-153">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="198ed-154">如果集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-154"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-155">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-155">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-156">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.Generic.ICollection%601> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-156">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="198ed-157">集合的元素将复制到其中的数组。</span><span class="sxs-lookup"><span data-stu-id="198ed-157">The array to which elements of the collection are copied.</span></span></param>
        <param name="index"><span data-ttu-id="198ed-158">数组索引，从此处开始复制。</span><span class="sxs-lookup"><span data-stu-id="198ed-158">The array index at which copying begins.</span></span></param>
        <summary><span data-ttu-id="198ed-159">有关此成员的说明，请参见 <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-159">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-160">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-160">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-161">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-161">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-162">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.IsSynchronized" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-162">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span></span></summary>
        <value><span data-ttu-id="198ed-163">如果同步对集合的访问（线程安全），则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-163"><see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-164">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-164">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-165">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-165">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-166">有关此成员的说明，请参见 <see cref="P:System.Collections.ICollection.SyncRoot" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-166">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="198ed-167">用于同步对集合的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="198ed-167">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-168">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-168">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-169">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.ICollection> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-169">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="198ed-170">有关此成员的说明，请参见 <see cref="M:System.Collections.IEnumerable.GetEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-170">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="198ed-171">可用于循环访问集合的 <see cref="T:System.Collections.IEnumerator" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="198ed-171">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through a collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-172">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-172">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-173">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IEnumerable?displayProperty=nameWithType> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-173">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IEnumerable?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="198ed-174">要添加到列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="198ed-174">The object to add to the list.</span></span></param>
        <summary><span data-ttu-id="198ed-175">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Add(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-175">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="198ed-176">插入新元素的位置。</span><span class="sxs-lookup"><span data-stu-id="198ed-176">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-177">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-177">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-178">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList?displayProperty=nameWithType> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-178">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="198ed-179">要在列表中查找的对象。</span><span class="sxs-lookup"><span data-stu-id="198ed-179">The object to locate in the list.</span></span></param>
        <summary><span data-ttu-id="198ed-180">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Contains(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-180">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="198ed-181">如果在 <see langword="true" /> 中找到了该<see cref="T:System.Object" />，则为 <see cref="T:System.Collections.IList" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-181"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-182">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-182">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-183">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList?displayProperty=nameWithType> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-183">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="198ed-184">要在列表中查找的对象。</span><span class="sxs-lookup"><span data-stu-id="198ed-184">The object to locate in the list.</span></span></param>
        <summary><span data-ttu-id="198ed-185">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.IndexOf(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-185">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="198ed-186">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="198ed-186">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-187">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-187">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-188">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList?displayProperty=nameWithType> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-188">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="198ed-189">列表中的对象的索引。</span><span class="sxs-lookup"><span data-stu-id="198ed-189">The index of the object in the list.</span></span></param>
        <param name="value"><span data-ttu-id="198ed-190">要插入到列表中的对象。</span><span class="sxs-lookup"><span data-stu-id="198ed-190">The object to insert into the list.</span></span></param>
        <summary><span data-ttu-id="198ed-191">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-191">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-192">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-193">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-193">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-194">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsFixedSize" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-194">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span></span></summary>
        <value><span data-ttu-id="198ed-195">如果该集合具有固定大小，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-195"><see langword="true" /> if the collection has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-196">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-197">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-197">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-198">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.IsReadOnly" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-198">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="198ed-199">如果集合为只读，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-199"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-200">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-200">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-201">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-201">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="198ed-202">要设置或获取元素的索引。</span><span class="sxs-lookup"><span data-stu-id="198ed-202">The index at which to set or get the element.</span></span></param>
        <summary><span data-ttu-id="198ed-203">有关此成员的说明，请参见 <see cref="P:System.Collections.IList.Item(System.Int32)" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-203">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span></span></summary>
        <value><span data-ttu-id="198ed-204">指定索引处的元素。</span><span class="sxs-lookup"><span data-stu-id="198ed-204">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-205">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-206">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-206">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="198ed-207">要从列表中移除的对象。</span><span class="sxs-lookup"><span data-stu-id="198ed-207">The object to remove from the list.</span></span></param>
        <summary><span data-ttu-id="198ed-208">有关此成员的说明，请参见 <see cref="M:System.Collections.IList.Remove(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-208">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-209">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-209">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-210">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.Collections.IList> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-210">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System::ComponentModel::IListSource::ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IListSource.ContainsListCollection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="198ed-211">有关此成员的说明，请参见 <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-211">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span></span></summary>
        <value><span data-ttu-id="198ed-212">如果集合是 <see langword="true" /> 对象集合，则为 <see cref="T:System.Collections.IList" />；否则，为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-212"><see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-213">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-213">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-214">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-214">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Linq.EntitySet`1.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.IListSource.GetList</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Linq</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="198ed-215">有关此成员的说明，请参见 <see cref="M:System.ComponentModel.IListSource.GetList" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-215">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span></span></summary>
        <returns><span data-ttu-id="198ed-216">对象中可以绑定到数据源的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="198ed-216">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="198ed-217">此成员是显式接口成员的实现。</span><span class="sxs-lookup"><span data-stu-id="198ed-217">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="198ed-218">它只能在 <xref:System.Data.Linq.EntitySet%601> 实例被强制转换为 <xref:System.ComponentModel.IListSource?displayProperty=nameWithType> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="198ed-218">It can be used only when the <xref:System.Data.Linq.EntitySet%601> instance is cast to an <xref:System.ComponentModel.IListSource?displayProperty=nameWithType> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
