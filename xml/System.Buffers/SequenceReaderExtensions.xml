<Type Name="SequenceReaderExtensions" FullName="System.Buffers.SequenceReaderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e7a088fffaef4e0b2b48b4e886257272c97f083" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82418366" /></Metadata><TypeSignature Language="C#" Value="public static class SequenceReaderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SequenceReaderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.SequenceReaderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SequenceReaderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class SequenceReaderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type SequenceReaderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="T:System.Buffers.SequenceReader`1" /> 类提供扩展功能，允许从二进制数据读取字节序特定数值。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="TryReadBigEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadBigEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadBigEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadBigEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadBigEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadBigEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] short % value);" />
      <MemberSignature Language="F#" Value="static member TryReadBigEndian : SequenceReader * int16 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadBigEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">要从中读取值的字节序列读取器实例。</param>
        <param name="value">当该方法返回时，作为大字节序从字节序列读取器读取的值。</param>
        <summary>尝试将 <see cref="T:System.Int16" /> 读取为大字节序。</summary>
        <returns>如果读取操作成功，则为 <see langword="true" />；如果没有足够的数据用于 <see langword="false" />，则为 <see cref="T:System.Int16" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadBigEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadBigEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadBigEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadBigEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadBigEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadBigEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="F#" Value="static member TryReadBigEndian : SequenceReader * int -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadBigEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">从中读取值的字节序列读取器。</param>
        <param name="value">当该方法返回时，作为大字节序从字节序列读取器读取的值。</param>
        <summary>尝试将 <see cref="T:System.Int32" /> 读取为大字节序。</summary>
        <returns>如果读取操作成功，则为 <see langword="true" />；如果没有足够的数据用于 <see langword="false" />，则为 <see cref="T:System.Int32" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadBigEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadBigEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadBigEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadBigEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadBigEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadBigEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="F#" Value="static member TryReadBigEndian : SequenceReader * int64 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadBigEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">要从中读取值的字节序列读取器实例。</param>
        <param name="value">当该方法返回时，作为大字节序从字节序列读取器读取的值。</param>
        <summary>尝试将 <see cref="T:System.Int64" /> 读取为大字节序。</summary>
        <returns>如果读取操作成功，则为 <see langword="true" />；如果没有足够的数据用于 <see langword="false" />，则为 <see cref="T:System.Int64" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadLittleEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadLittleEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadLittleEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int16&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadLittleEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int16@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadLittleEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Short) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadLittleEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] short % value);" />
      <MemberSignature Language="F#" Value="static member TryReadLittleEndian : SequenceReader * int16 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadLittleEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int16" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">要从中读取值的字节序列读取器实例。</param>
        <param name="value">当该方法返回时，作为小字节序从字节序列读取器读取的值。</param>
        <summary>尝试将 <see cref="T:System.Int16" /> 读取为小字节序。</summary>
        <returns>如果读取操作成功，则为 <see langword="true" />；如果没有足够的数据用于 <see langword="false" />，则为 <see cref="T:System.Int16" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadLittleEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadLittleEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadLittleEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int32&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadLittleEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadLittleEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadLittleEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] int % value);" />
      <MemberSignature Language="F#" Value="static member TryReadLittleEndian : SequenceReader * int -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadLittleEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">要从中读取值的字节序列读取器实例。</param>
        <param name="value">当该方法返回时，作为小字节序从字节序列读取器读取的值。</param>
        <summary>尝试将 <see cref="T:System.Int32" /> 读取为小字节序。</summary>
        <returns>如果读取操作成功，则为 <see langword="true" />；如果没有足够的数据用于 <see langword="false" />，则为 <see cref="T:System.Int32" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadLittleEndian">
      <MemberSignature Language="C#" Value="public static bool TryReadLittleEndian (this ref System.Buffers.SequenceReader&lt;byte&gt; reader, out long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryReadLittleEndian(valuetype System.Buffers.SequenceReader`1&lt;unsigned int8&gt;&amp; reader, [out] int64&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.SequenceReaderExtensions.TryReadLittleEndian(System.Buffers.SequenceReader{System.Byte}@,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TryReadLittleEndian (ByRef reader As SequenceReader(Of Byte), ByRef value As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool TryReadLittleEndian(System::Buffers::SequenceReader&lt;System::Byte&gt; % reader, [Runtime::InteropServices::Out] long % value);" />
      <MemberSignature Language="F#" Value="static member TryReadLittleEndian : SequenceReader * int64 -&gt; bool" Usage="System.Buffers.SequenceReaderExtensions.TryReadLittleEndian (reader, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Buffers.SequenceReader&lt;System.Byte&gt;" RefType="this" />
        <Parameter Name="value" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader">要从中读取值的字节序列读取器实例。</param>
        <param name="value">当该方法返回时，作为小字节序从字节序列读取器读取的值。</param>
        <summary>尝试将 <see cref="T:System.Int64" /> 读取为小字节序。</summary>
        <returns>如果读取操作成功，则为 <see langword="true" />；如果没有足够的数据用于 <see langword="false" />，则为 <see cref="T:System.Int64" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
