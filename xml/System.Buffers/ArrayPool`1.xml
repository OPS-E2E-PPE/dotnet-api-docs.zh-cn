<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2e39fa3866a8cb8ea06da50187f53e1811515825" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82470821" /></Metadata><TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Buffers" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="bb35d-101">资源池中的对象的类型。</span><span class="sxs-lookup"><span data-stu-id="bb35d-101">The type of the objects that are in the resource pool.</span></span></typeparam>
    <summary><span data-ttu-id="bb35d-102">提供可重复使用 T[] 类型实例的资源池。</span><span class="sxs-lookup"><span data-stu-id="bb35d-102">Provides a resource pool that enables reusing instances of type T[].</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="bb35d-103">使用 <xref:System.Buffers.ArrayPool%601> 类租用和返回缓冲区（使用 <xref:System.Buffers.ArrayPool%601.Rent%2A> 和 <xref:System.Buffers.ArrayPool%601.Return%2A> 方法）可以在频繁创建和销毁数组的情况下提高性能，从而导致垃圾回收器上出现大量的内存压力。</span><span class="sxs-lookup"><span data-stu-id="bb35d-103">Using the <xref:System.Buffers.ArrayPool%601> class to rent and return buffers (using the <xref:System.Buffers.ArrayPool%601.Rent%2A> and <xref:System.Buffers.ArrayPool%601.Return%2A> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</span></span>
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="bb35d-104">此类是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="bb35d-104">This class is thread-safe.</span></span> <span data-ttu-id="bb35d-105">所有成员可以同时由多个线程使用。</span><span class="sxs-lookup"><span data-stu-id="bb35d-105">All members may be used by multiple threads concurrently.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb35d-106">初始化 <see cref="T:System.Buffers.ArrayPool`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-106">Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="bb35d-107">请注意，此构造函数是受保护的;它只能由派生自 <xref:System.Buffers.ArrayPool%601> 类的类调用。</span><span class="sxs-lookup"><span data-stu-id="bb35d-107">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Buffers.ArrayPool%601> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bb35d-108">创建 <see cref="T:System.Buffers.ArrayPool`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-108">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <returns><span data-ttu-id="bb35d-109"><see cref="T:System.Buffers.ArrayPool`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-109">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength"><span data-ttu-id="bb35d-110">可能存储在池中的数组实例的最大长度。</span><span class="sxs-lookup"><span data-stu-id="bb35d-110">The maximum length of an array instance that may be stored in the pool.</span></span></param>
        <param name="maxArraysPerBucket"><span data-ttu-id="bb35d-111">可能存储在池中每个存储桶的数组实例的最大长度。</span><span class="sxs-lookup"><span data-stu-id="bb35d-111">The maximum number of array instances that may be stored in each bucket in the pool.</span></span> <span data-ttu-id="bb35d-112">该池将长度类似的数组分到不同的存储桶，以更快进行访问。</span><span class="sxs-lookup"><span data-stu-id="bb35d-112">The pool groups arrays of similar lengths into buckets for faster access.</span></span></param>
        <summary><span data-ttu-id="bb35d-113">使用指定的配置创建 <see cref="T:System.Buffers.ArrayPool`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-113">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specified configuration.</span></span></summary>
        <returns><span data-ttu-id="bb35d-114">使用指定配置的 <see cref="T:System.Buffers.ArrayPool`1" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-114">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class with the specified configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="bb35d-115">此方法创建的 <xref:System.Buffers.ArrayPool%601> 类的实例将数组分组到存储桶中，每个存储桶中的 `maxArraysPerBucket` 不超过个，并且这些数组的长度不超过 `maxArrayLength`。</span><span class="sxs-lookup"><span data-stu-id="bb35d-115">The instance of the <xref:System.Buffers.ArrayPool%601> class created by this method will group arrays into buckets, with no more than `maxArraysPerBucket` in each bucket, and with those arrays not exceeding `maxArrayLength` in length.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength"><span data-ttu-id="bb35d-116">数组的最小长度。</span><span class="sxs-lookup"><span data-stu-id="bb35d-116">The minimum length of the array.</span></span></param>
        <summary><span data-ttu-id="bb35d-117">检索至少为请求的长度的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb35d-117">Retrieves a buffer that is at least the requested length.</span></span></summary>
        <returns><span data-ttu-id="bb35d-118">T 类型的数组，该数组长度至少为 <paramref name="minimumLength" />。</span><span class="sxs-lookup"><span data-stu-id="bb35d-118">An array of type T that is at least <paramref name="minimumLength" /> in length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="bb35d-119">此缓冲区借给调用方，并且应使用 <xref:System.Buffers.ArrayPool%601.Return%2A> 方法返回到相同的池，以便可以在对 <xref:System.Buffers.ArrayPool%601.Rent%2A> 方法的后续调用中重用。</span><span class="sxs-lookup"><span data-stu-id="bb35d-119">This buffer is loaned to the caller and should be returned to the same pool using the <xref:System.Buffers.ArrayPool%601.Return%2A> method, so that it can be reused in subsequent calls to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method.</span></span> <span data-ttu-id="bb35d-120">未能返回租赁缓冲区不是致命错误。</span><span class="sxs-lookup"><span data-stu-id="bb35d-120">Failure to return a rented buffer is not a fatal error.</span></span> <span data-ttu-id="bb35d-121">但是，这可能会导致应用程序性能下降，因为池可能需要创建新的缓冲区来替换丢失的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb35d-121">However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="bb35d-122">要返回给先前使用 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 方法获得的池的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb35d-122">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</span></span></param>
        <param name="clearArray"><span data-ttu-id="bb35d-123">指示是否应在重复使用前清除缓冲区的内容。</span><span class="sxs-lookup"><span data-stu-id="bb35d-123">Indicates whether the contents of the buffer should be cleared before reuse.</span></span> <span data-ttu-id="bb35d-124">如果 <paramref name="clearArray" /> 设置为 <see langword="true" />，并且该池将存储缓冲区，供后续重复使用，<see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> 方法将清除其内容的 <paramref name="array" />，这样，使用 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 方法的后续调用方便不会看到先前调用方的内容。</span><span class="sxs-lookup"><span data-stu-id="bb35d-124">If <paramref name="clearArray" /> is set to <see langword="true" />, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array" /> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller.</span></span> <span data-ttu-id="bb35d-125">如果 <paramref name="clearArray" /> 设置为 <see langword="false" />，或者该池将释放缓冲区，则数组内容保持不变。</span><span class="sxs-lookup"><span data-stu-id="bb35d-125">If <paramref name="clearArray" /> is set to <see langword="false" /> or if the pool will release the buffer, the array's contents are left unchanged.</span></span></param>
        <summary><span data-ttu-id="bb35d-126">要返回给先前在同一 <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> 实例上使用 <see cref="T:System.Buffers.ArrayPool`1" /> 方法获得的池的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb35d-126">Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="bb35d-127">将缓冲区返回到池中后，调用方将获得缓冲区的所有所有权，并且不能使用它。</span><span class="sxs-lookup"><span data-stu-id="bb35d-127">Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</span></span> <span data-ttu-id="bb35d-128">只有使用 <xref:System.Buffers.ArrayPool%601.Return%2A> 方法一次只返回对 <xref:System.Buffers.ArrayPool%601.Rent%2A> 方法的给定调用返回的引用。</span><span class="sxs-lookup"><span data-stu-id="bb35d-128">The reference returned from a given call to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method must only be returned using the <xref:System.Buffers.ArrayPool%601.Return%2A> method once.</span></span> <span data-ttu-id="bb35d-129">默认 <xref:System.Buffers.ArrayPool%601> 可能会保留在返回的缓冲区中，以便再次对其进行租用，或者，如果确定池已有足够的缓冲区存储，则可能会释放返回的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb35d-129">The default <xref:System.Buffers.ArrayPool%601> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb35d-130">获取共享 <see cref="T:System.Buffers.ArrayPool`1" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-130">Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="bb35d-131">共享的 <see cref="T:System.Buffers.ArrayPool`1" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="bb35d-131">A shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="bb35d-132">共享池提供了 <xref:System.Buffers.ArrayPool%601> 类的默认实现，该实现适用于一般的适用性。</span><span class="sxs-lookup"><span data-stu-id="bb35d-132">The shared pool provides a default implementation of the <xref:System.Buffers.ArrayPool%601> class that's intended for general applicability.</span></span> <span data-ttu-id="bb35d-133">共享类维护多个大小的数组，并且可能会退回比实际请求更大的数组，但它永远不会退回比请求的更小的数组。</span><span class="sxs-lookup"><span data-stu-id="bb35d-133">A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</span></span> <span data-ttu-id="bb35d-134">如果使用 <xref:System.Buffers.ArrayPool%601.Rent%2A> 方法的共享类中的缓冲区，则会导致从池中获取现有缓冲区（如果有合适的缓冲区可用），或者如果没有可用的新缓冲区，则会分配新的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="bb35d-134">Renting a buffer from a shared class using the <xref:System.Buffers.ArrayPool%601.Rent%2A> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
