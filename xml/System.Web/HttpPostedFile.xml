<Type Name="HttpPostedFile" FullName="System.Web.HttpPostedFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7e16e58d9cba94d5ad6b121e13aea70844842ec" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77105570" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpPostedFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpPostedFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpPostedFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpPostedFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostedFile sealed" />
  <TypeSignature Language="F#" Value="type HttpPostedFile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供对客户端已上载的单独文件的访问。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.HttpFileCollection> 类提供对从客户端上载为文件集合的所有文件的访问权限。 <xref:System.Web.HttpPostedFile> 类提供属性和方法，以获取有关单个文件的信息并读取和保存该文件。  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputFile> 控件可用于从客户端选择并上传文件。  
  
 文件以 MIME 多部分/窗体数据格式上传。 默认情况下，所有请求（包括表单字段和上传的文件256）均缓冲到磁盘，而不是保留在服务器内存中。  
  
 您可以通过访问 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 属性或设置 Machine.config 或 web.config 文件中的[HttpRuntime 元素（ASP.NET 设置架构）](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100))元素的 `maxRequestLength` 特性来指定允许的最大请求大小。 默认值为 4 MB。  
  
 对于包含文件上载的请求，在服务器内存中缓冲的数据量可以通过访问 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> 属性或设置 Machine.config 或 web.config 文件中的[HttpRuntime 元素（ASP.NET 设置架构）](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100))元素的 `requestLengthDiskThreshold` 特性来指定。  
  
 通过调整 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> 和 <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> 属性，可以微调服务器的性能。 此外，还应考虑设置 <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A>，以防止用户将大型文件发布到服务器导致拒绝服务攻击。  
  
 当请求结束时，分配给缓冲上载文件的服务器资源将被销毁。 若要保存该文件的持久副本，请使用 <xref:System.Web.HttpPostedFile.SaveAs%2A> 方法。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />
    <altmember cref="T:System.Web.HttpFileCollection" />
  </Docs>
  <Members>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpPostedFile.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取已上载文件的大小（以字节为单位）。</summary>
        <value>文件长度（以字节为单位）。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Web.HttpPostedFile.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取客户端发送的文件的 MIME 内容类型。</summary>
        <value>上载文件的 MIME 内容类型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何遍历上传的文件集合中的所有文件，并在 `US-ASCII`MIME 类型的文件时执行操作。  
  
 [!code-csharp[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.FileName" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.HttpPostedFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取客户端上文件的完全限定名称。</summary>
        <value>客户端的文件的名称，包含目录路径。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何将上传的文件（文件集合中的第一个文件）的名称分配给字符串变量。  
  
 [!code-csharp[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpPostedFile.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个 <see cref="T:System.IO.Stream" /> 对象，该对象指向一个上载文件，以准备读取该文件的内容。</summary>
        <value>指向文件的 <see cref="T:System.IO.Stream" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下面的代码示例演示如何将客户端文件集合中第一个文件的内容读入一个字节数组，然后将该字节数组复制到一个字符串。  
  
 [!code-csharp[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpPostedFile.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="httpPostedFile.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">保存的文件的名称。</param>
        <summary>保存已上载文件的内容。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 默认情况下，请求允许的最大大小（包括上传的文件）为 4 MB。 可以在 machine.config 或 web.config 文件中的[HttpRuntime 元素（ASP.NET Settings Schema）](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/e1f13641(v=vs.100))元素的 `maxRequestLength` 特性中指定最大请求大小。 可以使用 Web.config 文件中的[Location 元素（ASP.NET Settings Schema）](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/b6x6shw7(v=vs.100))元素指定特定页面的最大请求大小。  
  
   
  
## Examples  
 下面的代码示例演示如何将客户端上传的所有文件保存到 Web 服务器本地磁盘上的 C:\TempFiles 文件夹中。  
  
 [!code-csharp[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> 对象的 <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> 属性设置为 <see langword="true" />，但 <paramref name="filename" /> 不是绝对路径。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
