<Type Name="ToolboxCategoryItems" FullName="System.Activities.Presentation.Toolbox.ToolboxCategoryItems">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cba7d9edd080d2ed69814f808e6c903ed5e71901" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78726233" /></Metadata><TypeSignature Language="C#" Value="public sealed class ToolboxCategoryItems : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ToolboxCategoryItems extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ToolboxCategoryItems&#xA;Implements ICollection(Of ToolboxCategory), IEnumerable(Of ToolboxCategory), IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxCategoryItems sealed : System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type ToolboxCategoryItems = class&#xA;    interface ICollection&lt;ToolboxCategory&gt;&#xA;    interface seq&lt;ToolboxCategory&gt;&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type ToolboxCategoryItems = class&#xA;    interface ICollection&lt;ToolboxCategory&gt;&#xA;    interface seq&lt;ToolboxCategory&gt;&#xA;    interface IEnumerable&#xA;    interface IList&#xA;    interface ICollection" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8d798-101"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="8d798-101">A collection of <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> objects.</span></span> <span data-ttu-id="8d798-102">此类的状态为 <see langword="sealed" />，因此不能继承此类。在 Visual Studio 2010 之外重新托管 Windows 工作流设计器时，此类为工具箱项的分类提供支持。</span><span class="sxs-lookup"><span data-stu-id="8d798-102">This class is <see langword="sealed" /> and so cannot be inherited.This class provides support for the categorization of toolbox items when re-hosting the Windows Workflow Designer outside of Visual Studio 2010.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxCategoryItems ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxCategoryItems();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d798-103">创建 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="8d798-103">Creates an instance of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Add(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit&#xA;override this.Add : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; unit" Usage="toolboxCategoryItems.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8d798-104">要添加到集合中的 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-104">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="8d798-105">在工具箱类别项集合末尾添加一个指定的工具箱类别。</span><span class="sxs-lookup"><span data-stu-id="8d798-105">Adds a specified toolbox category to the end of the toolbox category items collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-106"><paramref name="item" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-106">The <paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="toolboxCategoryItems.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d798-107">从 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中移除所有项。</span><span class="sxs-lookup"><span data-stu-id="8d798-107">Removes all the items from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Contains(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Contains : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8d798-108">要查找的工具箱类别项。</span><span class="sxs-lookup"><span data-stu-id="8d798-108">The toolbox category item to look for.</span></span></param>
        <summary><span data-ttu-id="8d798-109">确定 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中是否包含特定的工具箱类别项。</span><span class="sxs-lookup"><span data-stu-id="8d798-109">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection contains a specific toolbox category item.</span></span></summary>
        <returns><span data-ttu-id="8d798-110">如果在 <see langword="true" /> 中找到了 <paramref name="item" />，则为 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-110"><see langword="true" /> if the <paramref name="item" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-111"><paramref name="item" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-111">The <paramref name="item" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Activities.Presentation.Toolbox.ToolboxCategory[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.CopyTo(System.Activities.Presentation.Toolbox.ToolboxCategory[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As ToolboxCategory(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit&#xA;override this.CopyTo : System.Activities.Presentation.Toolbox.ToolboxCategory[] * int -&gt; unit" Usage="toolboxCategoryItems.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Activities.Presentation.Toolbox.ToolboxCategory[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8d798-112">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="8d798-112">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span> <span data-ttu-id="8d798-113"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-113">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="8d798-114">目标数组的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-114">The zero-based index of the target array.</span></span></param>
        <summary><span data-ttu-id="8d798-115">将整个 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合复制到兼容的一维 <see cref="T:System.Array" /> 中从目标 <see cref="T:System.Array" /> 的指定索引处开始的位置。</span><span class="sxs-lookup"><span data-stu-id="8d798-115">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-116">元素按照枚举数循环访问 <xref:System.Array> 集合的顺序复制到 <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> 中。</span><span class="sxs-lookup"><span data-stu-id="8d798-116">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-117"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-117">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d798-118">获取 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中包含的工具数。</span><span class="sxs-lookup"><span data-stu-id="8d798-118">Gets the number of tools contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <value><span data-ttu-id="8d798-119"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中包含的元素数。</span><span class="sxs-lookup"><span data-stu-id="8d798-119">The number of elements contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.ICollection> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-120"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements  the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Activities.Presentation.Toolbox.ToolboxCategory&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of ToolboxCategory)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Activities::Presentation::Toolbox::ToolboxCategory ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;" Usage="toolboxCategoryItems.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Activities.Presentation.Toolbox.ToolboxCategory&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d798-121">返回一个循环访问 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="8d798-121">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <returns><span data-ttu-id="8d798-122"><see cref="T:System.Collections.Generic.IEnumerator`1" /> 的一个 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-122">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-123">枚举数可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="8d798-123">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8d798-124">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="8d798-124">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8d798-125">在此位置上，未定义 <xref:System.Collections.Generic.IEnumerator%601.Current>。</span><span class="sxs-lookup"><span data-stu-id="8d798-125">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="8d798-126">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext> 的值之前，必须调用 <xref:System.Collections.Generic.IEnumerator%601.Current> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="8d798-126">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="8d798-127">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="8d798-127">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8d798-128">如果对该集合进行了更改（例如添加、修改或删除了元素），该枚举数将不再有效，且其行为不可确定。</span><span class="sxs-lookup"><span data-stu-id="8d798-128">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="8d798-129">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="8d798-129">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d798-130">获取一个值，该值指示 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="8d798-130">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="8d798-131">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-131"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-132"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="8d798-133">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="8d798-133">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Toolbox.ToolboxCategory this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Toolbox.ToolboxCategory Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As ToolboxCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Toolbox::ToolboxCategory ^ default[int] { System::Activities::Presentation::Toolbox::ToolboxCategory ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Activities.Presentation.Toolbox.ToolboxCategory" Usage="System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Toolbox.ToolboxCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d798-134">要获取的工具箱类别项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-134">The zero-based index of the toolbox category item to get.</span></span></param>
        <summary><span data-ttu-id="8d798-135">获取指定索引位置处的工具箱类别。</span><span class="sxs-lookup"><span data-stu-id="8d798-135">Gets the toolbox category at the specified index.</span></span></summary>
        <value><span data-ttu-id="8d798-136">位于指定索引位置处的工具箱类别 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-136">The toolbox category <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-137"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="8d798-138">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="8d798-138">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Activities.Presentation.Toolbox.ToolboxCategory item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Toolbox.ToolboxCategory item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.Remove(System.Activities.Presentation.Toolbox.ToolboxCategory)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As ToolboxCategory) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Activities::Presentation::Toolbox::ToolboxCategory ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool&#xA;override this.Remove : System.Activities.Presentation.Toolbox.ToolboxCategory -&gt; bool" Usage="toolboxCategoryItems.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Activities.Presentation.Toolbox.ToolboxCategory" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="8d798-139">要移除的 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-139">The <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategory" /> to remove.</span></span></param>
        <summary><span data-ttu-id="8d798-140">从 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中移除特定工具箱类别的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="8d798-140">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="8d798-141">如果从集合中找到并移除了项，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-141"><see langword="true" /> if the item is found and removed from the collection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8d798-142">如果找不到指定的 <see langword="false" />，则此方法返回 <paramref name="item" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-142">This method returns <see langword="false" /> if the <paramref name="item" /> specified is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="toolboxCategoryItems.System.Collections.ICollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="8d798-143">一维 <see cref="T:System.Array" />，它是从 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合复制的元素的目标。</span><span class="sxs-lookup"><span data-stu-id="8d798-143">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span> <span data-ttu-id="8d798-144"><see cref="T:System.Array" /> 必须具有从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-144">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="8d798-145">目标数组的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-145">The zero-based index of the target array.</span></span></param>
        <summary><span data-ttu-id="8d798-146">将整个 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合复制到兼容的一维 <see cref="T:System.Array" /> 中从目标 <see cref="T:System.Array" /> 的指定索引处开始的位置。</span><span class="sxs-lookup"><span data-stu-id="8d798-146">Copies the entire <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target <see cref="T:System.Array" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-147">元素按照枚举数循环访问 <xref:System.Array> 集合的顺序复制到 <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> 中。</span><span class="sxs-lookup"><span data-stu-id="8d798-147">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Activities.Presentation.Toolbox.ToolboxCategory> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-148"><paramref name="array" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-148">The <paramref name="array" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.Count : int" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d798-149">获取 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中包含的工具箱类别数。</span><span class="sxs-lookup"><span data-stu-id="8d798-149">Gets the number of toolbox categories contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <value><span data-ttu-id="8d798-150"><see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中包含的项数。</span><span class="sxs-lookup"><span data-stu-id="8d798-150">The number of items contained in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.ICollection> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-151"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d798-152">获取一个值，该值指示对 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的访问是否同步（线程安全）。</span><span class="sxs-lookup"><span data-stu-id="8d798-152">Gets a value that indicates whether access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="8d798-153">如果对 <see langword="true" /> 的访问是同步的（线程安全），则为 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-153"><see langword="true" /> if access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.ICollection> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-154"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span> <span data-ttu-id="8d798-155"><xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> 属性返回一个对象，该对象可用于同步对 <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 的访问。</span><span class="sxs-lookup"><span data-stu-id="8d798-155">The <xref:System.Activities.Presentation.Toolbox.ToolboxCategory.System%23Collections%23ICollection%23SyncRoot%2A> property returns an object, which can be used to synchronize access to the <xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d798-156">获取可用于同步对 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="8d798-156">Gets an object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <value><span data-ttu-id="8d798-157">可用于同步对 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 的访问的对象。</span><span class="sxs-lookup"><span data-stu-id="8d798-157">An object that can be used to synchronize access to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.ICollection> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-158"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="toolboxCategoryItems.System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d798-159">返回一个循环访问 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合的枚举数。</span><span class="sxs-lookup"><span data-stu-id="8d798-159">Returns an enumerator that iterates through the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <returns><span data-ttu-id="8d798-160"><see cref="T:System.Collections.IEnumerator" /> 的一个 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-160">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-161">枚举数可用于读取集合中的数据，但不能用于修改基础集合。</span><span class="sxs-lookup"><span data-stu-id="8d798-161">Enumerators can be used to read the data in a collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="8d798-162">最初，枚举数定位在集合中第一个元素的前面。</span><span class="sxs-lookup"><span data-stu-id="8d798-162">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="8d798-163">在此位置上，未定义 <xref:System.Collections.Generic.IEnumerator%601.Current>。</span><span class="sxs-lookup"><span data-stu-id="8d798-163">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current> is undefined.</span></span> <span data-ttu-id="8d798-164">因此，在读取 <xref:System.Collections.IEnumerator.MoveNext> 的值之前，必须调用 <xref:System.Collections.Generic.IEnumerator%601.Current> 将枚举器向前移动到集合的第一个元素。</span><span class="sxs-lookup"><span data-stu-id="8d798-164">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current>.</span></span> <span data-ttu-id="8d798-165">只要集合保持不变，枚举数就保持有效。</span><span class="sxs-lookup"><span data-stu-id="8d798-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="8d798-166">如果对该集合进行了更改（例如添加、修改或删除了元素），该枚举数将不再有效，且其行为不可确定。</span><span class="sxs-lookup"><span data-stu-id="8d798-166">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is no longer valid and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="8d798-167">枚举数没有对集合的独占访问权；因此，从头到尾对一个集合进行枚举在本质上不是一个线程安全的过程。</span><span class="sxs-lookup"><span data-stu-id="8d798-167">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="toolboxCategoryItems.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8d798-168">新元素的插入位置。</span><span class="sxs-lookup"><span data-stu-id="8d798-168">The position into which the new element is inserted.</span></span></param>
        <summary><span data-ttu-id="8d798-169">向 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中添加一个工具。</span><span class="sxs-lookup"><span data-stu-id="8d798-169">Adds a tool to the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="8d798-170">要添加到集合中的工具的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-170">The zero-based index of the tool added to the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-171"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8d798-172"><paramref name="value" /> 的类型不能分配给由集合实现的 <see cref="T:System.Collections.IList" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-172">The <paramref name="value" /> is of a type that is not assignable to the <see cref="T:System.Collections.IList" /> implemented by the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d798-173">从 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中移除所有工具。</span><span class="sxs-lookup"><span data-stu-id="8d798-173">Removes all the tools from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-174"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="toolboxCategoryItems.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8d798-175">要在集合中查找的工具 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-175">The tool <see cref="T:System.Object" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="8d798-176">确定 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否包含特定工具。</span><span class="sxs-lookup"><span data-stu-id="8d798-176">Determines whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> contains a specific tool.</span></span></summary>
        <returns><span data-ttu-id="8d798-177">如果在 <see langword="true" /> 中找到了 <paramref name="value" />，则为 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-177"><see langword="true" /> if the <paramref name="value" /> is found in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-178"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-179"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-179">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="toolboxCategoryItems.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8d798-180">要在 <see cref="T:System.Collections.IList" /> 中定位的对象。</span><span class="sxs-lookup"><span data-stu-id="8d798-180">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="8d798-181">确定特定工具在 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-181">Determines the index of a specific tool in the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <returns><span data-ttu-id="8d798-182">如果在列表中找到，则为 <paramref name="value" /> 的索引；否则为 -1。</span><span class="sxs-lookup"><span data-stu-id="8d798-182">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-183"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-184"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-184">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d798-185">应插入 <paramref name="value" /> 的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-185">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="8d798-186">要插入到集合中的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-186">The <see cref="T:System.Object" /> inserted into the collection.</span></span></param>
        <summary><span data-ttu-id="8d798-187">将工具箱类别插入到 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合中的指定索引位置。</span><span class="sxs-lookup"><span data-stu-id="8d798-187">Inserts a toolbox category into the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-188"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="8d798-189">如果 `index` 等于 <xref:System.Collections.IList> 中的项数，则将 `value` 追加到末尾。</span><span class="sxs-lookup"><span data-stu-id="8d798-189">If `index` equals the number of items in the <xref:System.Collections.IList>, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="8d798-190">在由连续的元素组成的集合（如列表）中，插入点下面的元素将下移以容纳新的元素。</span><span class="sxs-lookup"><span data-stu-id="8d798-190">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="8d798-191">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="8d798-191">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d798-192"><paramref name="index" /> 对于 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合无效。</span><span class="sxs-lookup"><span data-stu-id="8d798-192">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-193"><paramref name="value" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-193">The <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8d798-194">此集合是只读的，或者它具有固定的大小且已超出其大小。</span><span class="sxs-lookup"><span data-stu-id="8d798-194">The collection is read-only or has a fixed size that has been exceeded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d798-195">获取一个值，该值指示 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否具有固定大小。</span><span class="sxs-lookup"><span data-stu-id="8d798-195">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="8d798-196">如果 <see langword="true" /> 具有固定大小，则为 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-196"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-197"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsReadOnly : bool" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d798-198">获取一个值，该值指示 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 是否为只读。</span><span class="sxs-lookup"><span data-stu-id="8d798-198">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="8d798-199">如果 <see langword="true" /> 是只读的，则为 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-199"><see langword="true" /> if the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-200"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="8d798-201">在创建只读集合后，该集合不允许添加、移除或修改元素。</span><span class="sxs-lookup"><span data-stu-id="8d798-201">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d798-202">要获取或设置的工具箱类别项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-202">The zero-based index of the toolbox category item to get or set.</span></span></param>
        <summary><span data-ttu-id="8d798-203">获取或设置集合中的指定索引位置处的工具箱类别。</span><span class="sxs-lookup"><span data-stu-id="8d798-203">Gets or sets the toolbox category at a specified index of the collection.</span></span></summary>
        <value><span data-ttu-id="8d798-204">位于指定索引位置处的工具箱类别 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-204">The toolbox category <see cref="T:System.Object" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-205"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span> <span data-ttu-id="8d798-206">可以使用下面的语法通过此属性访问集合中的特定元素：`myCollection[index]`。</span><span class="sxs-lookup"><span data-stu-id="8d798-206">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8d798-207"><paramref name="value" /> 设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-207">The <paramref name="value" /> set is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="8d798-208">要从 <see cref="T:System.Object" /> 集合中移除的工具 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />。</span><span class="sxs-lookup"><span data-stu-id="8d798-208">The tool <see cref="T:System.Object" /> to remove from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></param>
        <summary><span data-ttu-id="8d798-209">从 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 中移除特定工具箱类别的第一个匹配项。</span><span class="sxs-lookup"><span data-stu-id="8d798-209">Removes the first occurrence of a specific toolbox category from the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-210"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="8d798-211">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="8d798-211">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="8d798-212">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="8d798-212">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Toolbox.ToolboxCategoryItems.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="toolboxCategoryItems.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="8d798-213">要移除的工具箱类别项的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="8d798-213">The zero-based index of the toolbox category item to remove.</span></span></param>
        <summary><span data-ttu-id="8d798-214">从 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合的指定索引位置处移除工具箱类别。</span><span class="sxs-lookup"><span data-stu-id="8d798-214">Removes a toolbox category at the specified index of the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d798-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> 实现 <xref:System.Collections.IList> 接口。</span><span class="sxs-lookup"><span data-stu-id="8d798-215"><xref:System.Activities.Presentation.Toolbox.ToolboxCategoryItems> implements the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="8d798-216">在由连续的元素组成的集合（如列表）中，已移除元素下面的元素将上移以占据空出的位置。</span><span class="sxs-lookup"><span data-stu-id="8d798-216">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="8d798-217">如果集合具有索引，则移动的元素的索引也将更新。</span><span class="sxs-lookup"><span data-stu-id="8d798-217">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8d798-218"><paramref name="index" /> 对于 <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> 集合无效。</span><span class="sxs-lookup"><span data-stu-id="8d798-218">The <paramref name="index" /> is not valid for the <see cref="T:System.Activities.Presentation.Toolbox.ToolboxCategoryItems" /> collection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
