<Type Name="WindowsRuntimeStreamExtensions" FullName="System.IO.WindowsRuntimeStreamExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d8f70b7ded61483b12cb1b943fde3e629741ab8" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78703418" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStreamExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStreamExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStreamExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
    <AssemblyVersion>4.0.15.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b71a3-101">包含用于在 Windows 运行时中的流与适用于 Windows 应用商店应用的 .NET 的托管流之间进行转换的扩展方法。</span><span class="sxs-lookup"><span data-stu-id="b71a3-101">Contains extension methods for converting between streams in the Windows Runtime and managed streams in the .NET for Windows Store apps.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
## Remarks

<span data-ttu-id="b71a3-102">仅当开发 Windows 应用商店应用时，这些扩展方法才可用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-102">These extension methods are available only when you develop Windows Store apps.</span></span> <span data-ttu-id="b71a3-103">方法提供了在 Windows 应用商店应用程序中使用流的便利方法。</span><span class="sxs-lookup"><span data-stu-id="b71a3-103">The methods provide convenient ways of working with streams in Windows Store apps.</span></span> <span data-ttu-id="b71a3-104">不创建 `WindowsRuntimeStreamExtensions` 类的实例;相反，请从 <xref:Windows.Storage.Streams.IInputStream> 的实例和 <xref:Windows.Storage.Streams.IOutputStream> 接口和 <xref:System.IO.Stream> 类的实例使用这些方法。</span><span class="sxs-lookup"><span data-stu-id="b71a3-104">You do not create an instance of the `WindowsRuntimeStreamExtensions` class; instead, you use these methods from instances of the <xref:Windows.Storage.Streams.IInputStream> and <xref:Windows.Storage.Streams.IOutputStream> interfaces and the <xref:System.IO.Stream> class.</span></span>

<span data-ttu-id="b71a3-105">`WindowsRuntimeStreamExtensions` 类包含两种方法，用于将托管 <xref:System.IO.Stream> 对象转换为 Windows 运行时中的流：</span><span class="sxs-lookup"><span data-stu-id="b71a3-105">The `WindowsRuntimeStreamExtensions` class contains two methods for converting a managed <xref:System.IO.Stream> object to a stream in the Windows Runtime:</span></span>

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>

<span data-ttu-id="b71a3-106">`WindowsRuntimeStreamExtensions` 类包含三种重载方法，用于将 Windows 运行时中的流转换为 <xref:System.IO.Stream> 对象：</span><span class="sxs-lookup"><span data-stu-id="b71a3-106">The `WindowsRuntimeStreamExtensions` class contains three overloaded methods for converting a stream in the Windows Runtime to a <xref:System.IO.Stream> object:</span></span>

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A>

<span data-ttu-id="b71a3-107">从 .NET Framework 4.5.1 开始，`WindowsRuntimeStreamExtensions` 类包含一个方法，用于将流转换为 Windows 运行时 <xref:Windows.Storage.Streams.RandomAccessStream>：</span><span class="sxs-lookup"><span data-stu-id="b71a3-107">Starting with the .NET Framework 4.5.1, the `WindowsRuntimeStreamExtensions` class contains a method for converting a stream to a Windows Runtime <xref:Windows.Storage.Streams.RandomAccessStream>:</span></span>

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)>

## Examples

<span data-ttu-id="b71a3-108">下面的示例演示如何使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> 和 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A></span><span class="sxs-lookup"><span data-stu-id="b71a3-108">The following example shows how to use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A></span></span>

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

<span data-ttu-id="b71a3-109">下面是与上一个示例关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="b71a3-109">Here's the XAML code that is associated with the previous example.</span></span> 

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]
]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsInputStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IInputStream AsInputStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IInputStream AsInputStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsInputStream (stream As Stream) As IInputStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IInputStream ^ AsInputStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsInputStream : System.IO.Stream -&gt; Windows.Storage.Streams.IInputStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsInputStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IInputStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b71a3-110">要转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-110">The stream to convert.</span></span></param>
        <summary><span data-ttu-id="b71a3-111">将适用于 Windows 应用商店应用的 .NET 中的托管流转换为 Windows 运行时中的输入流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-111">Converts a managed stream in the .NET for Windows Store apps to an input stream in the Windows Runtime.</span></span></summary>
        <returns><span data-ttu-id="b71a3-112">表示转换流的 Windows 运行时 <see cref="T:Windows.Storage.Streams.IInputStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-112">A Windows Runtime <see cref="T:Windows.Storage.Streams.IInputStream" /> object that represents the converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
          
> [!NOTE]
> <span data-ttu-id="b71a3-113">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-113">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-114">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-114">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-115">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-115">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="b71a3-116">下面的示例演示如何使用 `AsInputStream` 和 <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A> 方法将托管流与 Windows 运行时中的流相互转换。</span><span class="sxs-lookup"><span data-stu-id="b71a3-116">The following example shows how to use the `AsInputStream` and <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A> methods to convert a managed stream to and from a stream in the Windows Runtime.</span></span>

[!code-csharp[windowsruntimestreamextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestreamextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage2.xaml.vb#4)]

<span data-ttu-id="b71a3-117">下面是与上一个示例关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="b71a3-117">Here's the XAML code that is associated with the previous example.</span></span>

[!code-xaml[windowsruntimestreamextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-118"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-118"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b71a3-119">流不支持读取。</span><span class="sxs-lookup"><span data-stu-id="b71a3-119">The stream does not support reading.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsOutputStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IOutputStream AsOutputStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IOutputStream AsOutputStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsOutputStream (stream As Stream) As IOutputStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IOutputStream ^ AsOutputStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsOutputStream : System.IO.Stream -&gt; Windows.Storage.Streams.IOutputStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsOutputStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IOutputStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b71a3-120">要转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-120">The stream to convert.</span></span></param>
        <summary><span data-ttu-id="b71a3-121">将适用于 Windows 应用商店应用的 .NET 中的托管流转换为 Windows 运行时中的输出流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-121">Converts a managed stream in the .NET for Windows Store apps to an output stream in the Windows Runtime.</span></span></summary>
        <returns><span data-ttu-id="b71a3-122">表示转换流的 Windows 运行时 <see cref="T:Windows.Storage.Streams.IOutputStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-122">A Windows Runtime <see cref="T:Windows.Storage.Streams.IOutputStream" /> object that represents the converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="b71a3-123">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-123">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-124">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-124">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-125">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-125">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

## Examples

<span data-ttu-id="b71a3-126">下面的示例演示如何使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> 和 `AsOutputStream`> 方法将托管流与 Windows 运行时中的流相互转换。</span><span class="sxs-lookup"><span data-stu-id="b71a3-126">The following example shows how to use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> and `AsOutputStream`> methods to convert a managed stream to and from a stream in the Windows Runtime.</span></span>

[!code-csharp[windowsruntimestreamextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestreamextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage2.xaml.vb#4)]

<span data-ttu-id="b71a3-127">下面是与上一个示例关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="b71a3-127">Here's the XAML code that is associated with the previous example.</span></span>

[!code-xaml[windowsruntimestreamextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-128"><paramref name="stream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-128"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b71a3-129">流不支持读取。</span><span class="sxs-lookup"><span data-stu-id="b71a3-129">The stream does not support reading.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsRandomAccessStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IRandomAccessStream AsRandomAccessStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IRandomAccessStream AsRandomAccessStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsRandomAccessStream (stream As Stream) As IRandomAccessStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IRandomAccessStream ^ AsRandomAccessStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsRandomAccessStream : System.IO.Stream -&gt; Windows.Storage.Streams.IRandomAccessStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IRandomAccessStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="b71a3-130">要转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-130">The stream to convert.</span></span></param>
        <summary><span data-ttu-id="b71a3-131">将指定的流转换为随机访问流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-131">Converts the specified stream to a random access stream.</span></span></summary>
        <returns><span data-ttu-id="b71a3-132">表示转换流的 Windows 运行时 <see cref="T:Windows.Storage.Streams.IRandomAccessStream" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-132">A Windows Runtime <see cref="T:Windows.Storage.Streams.IRandomAccessStream" />, which represents the converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks


> [!NOTE]
> <span data-ttu-id="b71a3-133">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-133">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-134">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-134">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-135">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-135">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStream (this Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStream(class Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStream (windowsRuntimeStream As IRandomAccessStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStream(Windows::Storage::Streams::IRandomAccessStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStream : Windows.Storage.Streams.IRandomAccessStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStream windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IRandomAccessStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream"><span data-ttu-id="b71a3-136">要转换的 Windows 运行时 <see cref="T:Windows.Storage.Streams.IRandomAccessStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-136">The Windows Runtime <see cref="T:Windows.Storage.Streams.IRandomAccessStream" /> object to convert.</span></span></param>
        <summary><span data-ttu-id="b71a3-137">将 Windows 运行时中的随机访问流转换为适用于 Windows 应用商店应用的 .NET 中的托管流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-137">Converts a random access stream in the Windows Runtime to a managed stream in the .NET for Windows Store apps.</span></span></summary>
        <returns><span data-ttu-id="b71a3-138">已转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-138">The converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="b71a3-139">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-139">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-140">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-140">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-141">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-141">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

<span data-ttu-id="b71a3-142">转换流时，将使用默认缓冲区大小16384字节。</span><span class="sxs-lookup"><span data-stu-id="b71a3-142">A default buffer size of 16,384 bytes is used when converting the stream.</span></span> <span data-ttu-id="b71a3-143">若要指定不同的缓冲区大小，请使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream,System.Int32)> 重载。</span><span class="sxs-lookup"><span data-stu-id="b71a3-143">To specify a different buffer size, use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream,System.Int32)> overload.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-144"><paramref name="windowsRuntimeStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-144"><paramref name="windowsRuntimeStream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStream (this Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStream(class Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStream (windowsRuntimeStream As IRandomAccessStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStream(Windows::Storage::Streams::IRandomAccessStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStream : Windows.Storage.Streams.IRandomAccessStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStream (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IRandomAccessStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream"><span data-ttu-id="b71a3-145">要转换的 Windows 运行时 <see cref="T:Windows.Storage.Streams.IRandomAccessStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-145">The Windows Runtime <see cref="T:Windows.Storage.Streams.IRandomAccessStream" /> object to convert.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="b71a3-146">缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b71a3-146">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="b71a3-147">此值不能为负，但是，它可以是（0）禁用缓冲的 0。</span><span class="sxs-lookup"><span data-stu-id="b71a3-147">This value cannot be negative, but it can be 0 (zero) to disable buffering.</span></span></param>
        <summary><span data-ttu-id="b71a3-148">将 Windows 运行时中的随机访问流转换为适用于 Windows 应用商店应用的 .NET 中使用指定缓冲区大小的托管流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-148">Converts a random access stream in the Windows Runtime to a managed stream in the .NET for Windows Store apps using the specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="b71a3-149">已转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-149">The converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="b71a3-150">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-150">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-151">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-151">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-152">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-152">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

<span data-ttu-id="b71a3-153">在转换流时，可以使用此方法指定缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="b71a3-153">You use this method to specify a buffer size when converting the stream.</span></span> <span data-ttu-id="b71a3-154">若要使用16384字节的默认缓冲区大小，请使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream)> 重载。</span><span class="sxs-lookup"><span data-stu-id="b71a3-154">To use the default buffer size of 16,384 bytes, use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream)> overload.</span></span>

<span data-ttu-id="b71a3-155">在大多数情况下，缓冲会提高流操作的性能。</span><span class="sxs-lookup"><span data-stu-id="b71a3-155">In most situations, buffering improves the performance of stream operations.</span></span> <span data-ttu-id="b71a3-156">你可以通过将 `bufferSize` 设置为零来禁用缓冲，但只有在确定禁用缓冲适用于你的情况下，才应执行此操作。</span><span class="sxs-lookup"><span data-stu-id="b71a3-156">You can disable buffering by setting `bufferSize` to zero, but you should do this only when you are sure that disabling buffering is appropriate for your situation.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-157"><paramref name="windowsRuntimeStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-157"><paramref name="windowsRuntimeStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b71a3-158"><paramref name="bufferSize" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-158"><paramref name="bufferSize" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForRead">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForRead (this Windows.Storage.Streams.IInputStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForRead(class Windows.Storage.Streams.IInputStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForRead (windowsRuntimeStream As IInputStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForRead(Windows::Storage::Streams::IInputStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStreamForRead : Windows.Storage.Streams.IInputStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IInputStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream"><span data-ttu-id="b71a3-159">要转换的 Windows 运行时 <see cref="T:Windows.Storage.Streams.IInputStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-159">The Windows Runtime <see cref="T:Windows.Storage.Streams.IInputStream" /> object to convert.</span></span></param>
        <summary><span data-ttu-id="b71a3-160">将 Windows 运行时中的输入流转换为适用于 Windows 应用商店应用的 .NET 中的托管流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-160">Converts an input stream in the Windows Runtime to a managed stream in the .NET for Windows Store apps.</span></span></summary>
        <returns><span data-ttu-id="b71a3-161">已转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-161">The converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="b71a3-162">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-162">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-163">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-163">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-164">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-164">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

<span data-ttu-id="b71a3-165">转换流时，将使用默认缓冲区大小16384字节。</span><span class="sxs-lookup"><span data-stu-id="b71a3-165">A default buffer size of 16,384 bytes is used when converting the stream.</span></span> <span data-ttu-id="b71a3-166">若要指定不同的缓冲区大小，请使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream,System.Int32)> 重载。</span><span class="sxs-lookup"><span data-stu-id="b71a3-166">To specify a different buffer size, use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream,System.Int32)> overload.</span></span>

## Examples

<span data-ttu-id="b71a3-167">下面的示例演示如何使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> 和 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> 方法将托管流与 Windows 运行时中的流相互转换。</span><span class="sxs-lookup"><span data-stu-id="b71a3-167">The following example shows how to use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> methods to convert a managed stream to and from a stream in the Windows Runtime.</span></span>

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

<span data-ttu-id="b71a3-168">下面是与上一个示例关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="b71a3-168">Here's the XAML code that is associated with the previous example.</span></span>

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-169"><paramref name="windowsRuntimeStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-169"><paramref name="windowsRuntimeStream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForRead">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForRead (this Windows.Storage.Streams.IInputStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForRead(class Windows.Storage.Streams.IInputStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForRead (windowsRuntimeStream As IInputStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForRead(Windows::Storage::Streams::IInputStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStreamForRead : Windows.Storage.Streams.IInputStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IInputStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream"><span data-ttu-id="b71a3-170">要转换的 Windows 运行时 <see xref="T:Windows.Storage.Streams.IInputStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-170">The Windows Runtime <see xref="T:Windows.Storage.Streams.IInputStream" /> object to convert.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="b71a3-171">缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b71a3-171">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="b71a3-172">此值不能为负，但是，它可以是（0）禁用缓冲的 0。</span><span class="sxs-lookup"><span data-stu-id="b71a3-172">This value cannot be negative, but it can be 0 (zero) to disable buffering.</span></span></param>
        <summary><span data-ttu-id="b71a3-173">将 Windows 运行时中的输入流转换为适用于 Windows 8.x 应用商店应用的 .NET 中使用指定缓冲区大小的托管流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-173">Converts an input stream in the Windows Runtime to a managed stream in the .NET for Windows 8.x Store apps using the specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="b71a3-174">已转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-174">The converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> <span data-ttu-id="b71a3-175">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-175">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-176">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-176">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-177">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-177">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

<span data-ttu-id="b71a3-178">在转换流时，可以使用此方法指定缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="b71a3-178">You use this method to specify a buffer size when converting the stream.</span></span> <span data-ttu-id="b71a3-179">若要使用16384字节的默认缓冲区大小，请使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream)> 重载。</span><span class="sxs-lookup"><span data-stu-id="b71a3-179">To use the default buffer size of 16,384 bytes, use the  <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream)> overload.</span></span>

<span data-ttu-id="b71a3-180">在大多数情况下，缓冲会提高流操作的性能。</span><span class="sxs-lookup"><span data-stu-id="b71a3-180">In most situations, buffering improves the performance of stream operations.</span></span> <span data-ttu-id="b71a3-181">你可以通过将 `bufferSize` 设置为零来禁用缓冲，但只有在确定禁用缓冲适用于你的情况下，才应执行此操作。</span><span class="sxs-lookup"><span data-stu-id="b71a3-181">You can disable buffering by setting `bufferSize` to zero, but you should do this only when you are sure that disabling buffering is appropriate for your situation.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-182"><paramref name="windowsRuntimeStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-182"><paramref name="windowsRuntimeStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b71a3-183"><paramref name="bufferSize" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-183"><paramref name="bufferSize" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForWrite">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForWrite (this Windows.Storage.Streams.IOutputStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForWrite(class Windows.Storage.Streams.IOutputStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForWrite (windowsRuntimeStream As IOutputStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForWrite(Windows::Storage::Streams::IOutputStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStreamForWrite : Windows.Storage.Streams.IOutputStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IOutputStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream"><span data-ttu-id="b71a3-184">要转换的 Windows 运行时 <see xref="T:Windows.Storage.Streams.IOutputStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-184">The Windows Runtime <see xref="T:Windows.Storage.Streams.IOutputStream" /> object to convert.</span></span></param>
        <summary><span data-ttu-id="b71a3-185">将 Windows 运行时中的输出流转换为适用于 Windows 8.x 应用商店应用的 .NET 中的托管流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-185">Converts an output stream in the Windows Runtime to a managed stream in the .NET for Windows 8.x Store apps.</span></span></summary>
        <returns><span data-ttu-id="b71a3-186">已转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-186">The converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> <span data-ttu-id="b71a3-187">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-187">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-188">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-188">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-189">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-189">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

<span data-ttu-id="b71a3-190">转换流时，将使用默认缓冲区大小16384字节。</span><span class="sxs-lookup"><span data-stu-id="b71a3-190">A default buffer size of 16,384 bytes is used when converting the stream.</span></span> <span data-ttu-id="b71a3-191">若要指定不同的缓冲区大小，请使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)> 重载。</span><span class="sxs-lookup"><span data-stu-id="b71a3-191">To specify a different buffer size, use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)> overload.</span></span>

## Examples
<span data-ttu-id="b71a3-192">下面的示例演示如何使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> 和 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> 方法将托管流与 Windows 运行时中的流相互转换。</span><span class="sxs-lookup"><span data-stu-id="b71a3-192">The following example shows how to use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> and <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> methods to convert a managed stream to and from a stream in the Windows Runtime.</span></span>

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

<span data-ttu-id="b71a3-193">下面是与上一个示例关联的 XAML 代码。</span><span class="sxs-lookup"><span data-stu-id="b71a3-193">Here's the XAML code that is associated with the previous example.</span></span>

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-194"><paramref name="windowsRuntimeStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-194"><paramref name="windowsRuntimeStream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForWrite">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForWrite (this Windows.Storage.Streams.IOutputStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForWrite(class Windows.Storage.Streams.IOutputStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForWrite (windowsRuntimeStream As IOutputStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForWrite(Windows::Storage::Streams::IOutputStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStreamForWrite : Windows.Storage.Streams.IOutputStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
        <AssemblyVersion>4.0.15.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IOutputStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream"><span data-ttu-id="b71a3-195">要转换的 Windows 运行时 <see cref="T:Windows.Storage.Streams.IOutputStream" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="b71a3-195">The Windows Runtime <see cref="T:Windows.Storage.Streams.IOutputStream" /> object to convert.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="b71a3-196">缓冲区的大小（以字节为单位）。</span><span class="sxs-lookup"><span data-stu-id="b71a3-196">The size, in bytes, of the buffer.</span></span> <span data-ttu-id="b71a3-197">此值不能为负，但是，它可以是（0）禁用缓冲的 0。</span><span class="sxs-lookup"><span data-stu-id="b71a3-197">This value cannot be negative, but it can be 0 (zero) to disable buffering.</span></span></param>
        <summary><span data-ttu-id="b71a3-198">将 Windows 运行时中的输出流转换为适用于 Windows 应用商店应用的 .NET 中使用指定缓冲区大小的托管流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-198">Converts an output stream in the Windows Runtime to a managed stream in the .NET for Windows Store apps using the specified buffer size.</span></span></summary>
        <returns><span data-ttu-id="b71a3-199">已转换的流。</span><span class="sxs-lookup"><span data-stu-id="b71a3-199">The converted stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> <span data-ttu-id="b71a3-200">在 Visual Basic 和C#中，你可以将此方法作为 <xref:System.IO.Stream>类型的任何对象上的实例方法来调用。</span><span class="sxs-lookup"><span data-stu-id="b71a3-200">In Visual Basic and C#, you can call this method as an instance method on any object of type <xref:System.IO.Stream>.</span></span> <span data-ttu-id="b71a3-201">当使用实例方法语法调用此方法时，请省略第一个参数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-201">When you use instance method syntax to call this method, omit the first parameter.</span></span> <span data-ttu-id="b71a3-202">有关详细信息，请参阅[扩展方法（Visual Basic）](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md)或[扩展方法C# （编程指南）](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md)。</span><span class="sxs-lookup"><span data-stu-id="b71a3-202">For more information, see [Extension Methods (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) or [Extension Methods (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).</span></span>

<span data-ttu-id="b71a3-203">在转换流时，可以使用此方法指定缓冲区大小。</span><span class="sxs-lookup"><span data-stu-id="b71a3-203">You use this method to specify a buffer size when converting the stream.</span></span> <span data-ttu-id="b71a3-204">若要使用16384字节的默认缓冲区大小，请使用 <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)> 重载。</span><span class="sxs-lookup"><span data-stu-id="b71a3-204">To use the default buffer size of 16,384 bytes, use the <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)> overload.</span></span>

<span data-ttu-id="b71a3-205">在大多数情况下，缓冲会提高流操作的性能。</span><span class="sxs-lookup"><span data-stu-id="b71a3-205">In most situations, buffering improves the performance of stream operations.</span></span> <span data-ttu-id="b71a3-206">你可以通过将 `bufferSize` 设置为零来禁用缓冲，但只有在确定禁用缓冲适用于你的情况下，才应执行此操作。</span><span class="sxs-lookup"><span data-stu-id="b71a3-206">You can disable buffering by setting `bufferSize` to zero, but you should do this only when you are sure that disabling buffering is appropriate for your situation.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b71a3-207"><paramref name="windowsRuntimeStream" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b71a3-207"><paramref name="windowsRuntimeStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b71a3-208"><paramref name="bufferSize" /> 为负数。</span><span class="sxs-lookup"><span data-stu-id="b71a3-208"><paramref name="bufferSize" /> is negative.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
