<Type Name="RouteValueExpressionEditorSheet" FullName="System.Web.UI.Design.RouteValueExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="be9a2019190d006872177c338937370107a602f3" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77102036" /></Metadata><TypeSignature Language="C#" Value="public class RouteValueExpressionEditorSheet : System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteValueExpressionEditorSheet extends System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteValueExpressionEditorSheet&#xA;Inherits ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteValueExpressionEditorSheet : System::Web::UI::Design::ExpressionEditorSheet" />
  <TypeSignature Language="F#" Value="type RouteValueExpressionEditorSheet = class&#xA;    inherit ExpressionEditorSheet" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditorSheet</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示设计时期间一个设计器宿主 UI 中一个 <see langword="RouteValue" /> 表达式的属性的设计时编辑器表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 可视化设计器将 <xref:System.Web.UI.Design.RouteValueExpressionEditor> 类与 <xref:System.Web.UI.Design.RouteValueExpressionEditorSheet> 类结合使用，以选择 `RouteValue` 表达式的各个属性，并将所选表达式属性值合并为 `RouteValue` 表达式。

 <xref:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> 方法将返回 <xref:System.Web.UI.Design.RouteValueExpressionEditorSheet> 对象。 在 "表达式" 对话框中，选择控件属性并将其绑定到 `RouteValue` 表达式时，可视化设计器将调用 <xref:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet%2A> 方法。 可视化设计器使用返回的 <xref:System.Web.UI.Design.RouteValueExpressionEditorSheet> 对象提示提供 <xref:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue%2A> 属性。 选择属性后，可视化设计器会调用 <xref:System.Web.UI.Design.RouteValueExpressionEditorSheet.GetExpression%2A> 方法来创建 `RouteValue` 的表达式字符串。

 若要创建 `RouteValue` 表达式字符串，必须指定 <xref:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue%2A> 属性。

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
    <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditor" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteValueExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As String, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteValueExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.RouteValueExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.RouteValueExpressionEditorSheet" Usage="new System.Web.UI.Design.RouteValueExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">一个 <see langword="RouteValue" /> 表达式，用于初始化表达式编辑器表。</param>
        <param name="serviceProvider">一个服务提供程序实现，它由设计器宿主提供，用于获取其他设计时服务</param>
        <summary>初始化 <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用输入 `expression` 字符串设置初始 <xref:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue%2A> 属性值。 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> 属性是使用输入 `serviceProvider` 实现设置的。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public override string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="override this.GetExpression : unit -&gt; string" Usage="routeValueExpressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回由表达式编辑器表属性值组成的 <see langword="RouteValue" /> 表达式。</summary>
        <returns>表中当前设置的 <see langword="RouteValue" /> 表达式字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.RouteValueExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see langword="RouteValue" /> 表达式字符串是否有效。</summary>
        <value>如果 <see langword="true" /> 表达式字符串有效，则为 <see langword="RouteValue" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
      </Docs>
    </Member>
    <Member MemberName="RouteValue">
      <MemberSignature Language="C#" Value="public string RouteValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RouteValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RouteValue : string with get, set" Usage="System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要由 <see langword="RouteValue" /> 表达式计算的 URL 参数的名称。</summary>
        <value>要由 <see langword="RouteValue" /> 表达式计算的 URL 参数的名称。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteValueExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteValueExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET 路由</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)">如何：访问路由页中的 URL 参数</related>
      </Docs>
    </Member>
  </Members>
</Type>
