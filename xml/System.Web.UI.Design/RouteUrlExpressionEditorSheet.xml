<Type Name="RouteUrlExpressionEditorSheet" FullName="System.Web.UI.Design.RouteUrlExpressionEditorSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5274bd02ae08893bc6f9cdd410e51a5f974e090" /><Meta Name="ms.sourcegitcommit" Value="83d757eaee63e682417f41094d711281691d9aba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/10/2020" /><Meta Name="ms.locfileid" Value="78956973" /></Metadata><TypeSignature Language="C#" Value="public class RouteUrlExpressionEditorSheet : System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteUrlExpressionEditorSheet extends System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteUrlExpressionEditorSheet&#xA;Inherits ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteUrlExpressionEditorSheet : System::Web::UI::Design::ExpressionEditorSheet" />
  <TypeSignature Language="F#" Value="type RouteUrlExpressionEditorSheet = class&#xA;    inherit ExpressionEditorSheet" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.ExpressionEditorSheet</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示设计时期间一个设计器宿主 UI 中一个 <see langword="RouteUrl" /> 表达式的属性的设计时编辑器表。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 可视化设计器将 <xref:System.Web.UI.Design.RouteUrlExpressionEditor> 类与 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet> 类结合使用，以选择 `RouteUrl` 表达式的各个属性，并将所选表达式属性值合并为 `RouteUrl` 表达式。

 <xref:System.Web.UI.Design.RouteUrlExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=nameWithType> 方法将返回 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet> 对象。 在 "表达式" 对话框中，选择控件属性并将其绑定到 `RouteUrl` 表达式时，可视化设计器将调用 <xref:System.Web.UI.Design.RouteUrlExpressionEditor.GetExpressionEditorSheet%2A> 方法。 可视化设计器使用返回的 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet> 对象来提示 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues%2A> 和 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName%2A> 属性。 选择属性后，可视化设计器会调用 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.GetExpression%2A> 方法，将属性合并为 `RouteUrl` 的表达式字符串。

 如果未指定 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName%2A> 属性，则必须指定 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues%2A> 属性。 如果未指定 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues%2A>，则必须指定 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName%2A> 属性。 这两个属性都可以指定。

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
    <altmember cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET Routing（ASP.NET 路由）</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100)">如何：从路由构造 Url</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteUrlExpressionEditorSheet (string expression, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expression, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expression As String, serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteUrlExpressionEditorSheet(System::String ^ expression, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.RouteUrlExpressionEditorSheet : string * IServiceProvider -&gt; System.Web.UI.Design.RouteUrlExpressionEditorSheet" Usage="new System.Web.UI.Design.RouteUrlExpressionEditorSheet (expression, serviceProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="expression">一个 <see langword="RouteUrl" /> 表达式，用于初始化表达式编辑器表。</param>
        <param name="serviceProvider">一个由设计器宿主提供的服务提供程序实现，用于获取其他设计时服务。</param>
        <summary>初始化 <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 初始 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues%2A> 和 <xref:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName%2A> 属性值使用输入 `expression` 字符串进行设置。 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> 属性是使用输入 `serviceProvider` 实现设置的。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET Routing（ASP.NET 路由）</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100)">如何：从路由构造 Url</related>
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public override string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="override this.GetExpression : unit -&gt; string" Usage="routeUrlExpressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>返回由表达式编辑器表属性值组成的 <see langword="RouteUrl" /> 表达式。</summary>
        <returns>表中当前设置的 <see langword="RouteUrl" /> 表达式字符串。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET Routing（ASP.NET 路由）</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100)">如何：从路由构造 Url</related>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.RouteUrlExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示 <see langword="RouteUrl" /> 表达式字符串是否有效。</summary>
        <value>如果 <see langword="true" /> 表达式字符串有效，则为 <see langword="RouteUrl" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET Routing（ASP.NET 路由）</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100)">如何：从路由构造 Url</related>
      </Docs>
    </Member>
    <Member MemberName="RouteName">
      <MemberSignature Language="C#" Value="public string RouteName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RouteName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RouteName : string with get, set" Usage="System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要为其生成 URL 的路由的名称。</summary>
        <value>要为其生成 URL 的路由的名称。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET Routing（ASP.NET 路由）</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100)">如何：从路由构造 Url</related>
      </Docs>
    </Member>
    <Member MemberName="RouteValues">
      <MemberSignature Language="C#" Value="public string RouteValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RouteValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteValues As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RouteValues { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RouteValues : string with get, set" Usage="System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要用于根据路由生成 URL 的 URL 参数名称和值。</summary>
        <value>用于根据路由生成 URL 的 URL 参数名称和值。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
        <altmember cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET Routing（ASP.NET 路由）</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668176(v=vs.100)">如何：从路由构造 Url</related>
      </Docs>
    </Member>
  </Members>
</Type>
