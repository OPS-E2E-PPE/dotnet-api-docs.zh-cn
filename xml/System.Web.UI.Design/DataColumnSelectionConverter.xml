<Type Name="DataColumnSelectionConverter" FullName="System.Web.UI.Design.DataColumnSelectionConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21161fa752d3e9490d53e21973f76487d6770f15" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77233093" /></Metadata><TypeSignature Language="C#" Value="public class DataColumnSelectionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumnSelectionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.DataColumnSelectionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumnSelectionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumnSelectionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DataColumnSelectionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为表示 <see cref="T:System.Web.UI.WebControls.GridView" /> 控件中绑定列字段的字段名称的属性提供类型转换器。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Web.UI.Design.DataColumnSelectionConverter> 类在赋值前转换对象类型。 通常，<xref:System.Web.UI.Design.DataColumnSelectionConverter> 类支持转换字符串对象类型，并提供可用于分配给关联控件属性的标准值列表。 标准值集合是当前 <xref:System.Web.UI.WebControls.GridView> 控件的绑定列字段的字段名称列表。  
  
 若要支持转换其他对象类型，请从 <xref:System.Web.UI.Design.DataColumnSelectionConverter> 中派生一个类，并为其他对象类型重写 <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> 和 <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> 方法。 若要支持标准可赋值值的自定义列表，请重写 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> 方法。  
  
 应用 <xref:System.ComponentModel.TypeConverterAttribute> 特性来指定 <xref:System.Web.UI.Design.DataColumnSelectionConverter> 类作为控件属性的类型转换器。 例如，<xref:System.Web.UI.WebControls.GridView> 控件的 <xref:System.Web.UI.WebControls.GridView.RowHeaderColumn%2A> 属性将 <xref:System.Web.UI.Design.DataColumnSelectionConverter> 指定为其类型转换器。  
  
> [!NOTE]
>  永远不应直接访问类型转换器。 相反，请使用 <xref:System.ComponentModel.TypeDescriptor> 对象调用适当的转换器。 有关详细信息，请参阅 <xref:System.ComponentModel.TypeConverter>中的示例。  
  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> 方法指示转换器支持通过 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> 方法返回可用值的列表。 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> 方法指示列表不是可能值的独占列表。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/c5z9s1h4(v=vs.120)">设计时体系结构</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumnSelectionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumnSelectionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  永远不应直接访问类型转换器。 相反，请使用 <xref:System.ComponentModel.TypeDescriptor> 对象调用适当的转换器。 有关详细信息，请参阅 <xref:System.ComponentModel.TypeConverter>中的示例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dataColumnSelectionConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
        <param name="sourceType">要转换的类型。</param>
        <summary>指示指定的源类型是否可转换为关联控件属性的类型。</summary>
        <returns>如果转换器能执行转换，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 调用 <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> 方法，以确定 <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> 方法是否支持转换源类型。  
  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> 方法只能从字符串进行转换，因此当 `sourceType` 是一个字符串时，<xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> 方法返回 `true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dataColumnSelectionConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
        <param name="culture">可用于支持本地化功能的 <see cref="T:System.Globalization.CultureInfo" /> 对象。</param>
        <param name="value">要转换的对象。</param>
        <summary>将指定对象转换为关联控件属性的类型。</summary>
        <returns>一个 <see cref="T:System.Object" /> 实例，表示已转换的对象。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 `value` 是字符串，则返回 `value` 的字符串表示形式。 如果 `null``value`，则返回空字符串（""）。 对于所有其他值，将引发 <xref:System.NotSupportedException> 异常。  
  
 调用 <xref:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom%2A> 方法，以确定 <xref:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom%2A> 方法是否支持转换源类型。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">转换未能执行。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="dataColumnSelectionConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
        <summary>返回可以分配给关联控件属性的可用值的列表。</summary>
        <returns>一个 <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> 实例，包含可以分配给关联控件属性的可用值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> 方法使用指定 `context` 对象的 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 属性来获取 <xref:System.ComponentModel.IComponent> 实现。 如果 <xref:System.ComponentModel.IComponent> 实现可用，它将用于在设计时访问关联的控件，并从关联的 <xref:System.Web.UI.WebControls.GridView> 组件中检索可用值的列表。  
  
 可用值的集合是从 <xref:System.Web.UI.WebControls.GridView> 控件中的绑定列字段生成的。 绑定列字段由 <xref:System.Web.UI.WebControls.GridView.Columns%2A> 集合中的 <xref:System.Web.UI.WebControls.BoundField> 对象以及为数据源中的字段自动生成的绑定列字段组成。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateColumns" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.BoundField" />
        <altmember cref="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        <altmember cref="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataColumnSelectionConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
        <summary>指示此转换器是否返回一个列表，在其中包含可分配给关联的控件属性的所有可能值。</summary>
        <returns>如果此转换器返回一个列表，在其中包含可分配给关联的控件属性的所有可能值，则返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter> 实例的 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive%2A> 方法返回 `false`，这表示 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> 方法返回的列表不是所有可能可赋值值的独占列表。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="dataColumnSelectionConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">可用于获取附加上下文信息的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 实现。</param>
        <summary>指示在指定的上下文内，此转换器是否返回一组可以分配给控件属性的值。</summary>
        <returns>如果此转换器返回一组可以分配给关联控件属性的值，则返回 <see langword="true" />；否则返回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> 方法指示转换器是否支持通过 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> 方法返回可用值的列表。  
  
 如果指定的 `context` 对象在其 <xref:System.ComponentModel.IComponent> 属性中提供 <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> 实现，则 <xref:System.Web.UI.Design.DataColumnSelectionConverter> 对象的 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported%2A> 方法返回 `true`。 <xref:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues%2A> 方法使用 <xref:System.ComponentModel.IComponent> 实现在设计时访问关联的控件，并从关联的 <xref:System.Web.UI.WebControls.GridView> 组件检索可用绑定列字段的列表。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      </Docs>
    </Member>
  </Members>
</Type>
