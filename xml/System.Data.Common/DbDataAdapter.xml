<Type Name="DbDataAdapter" FullName="System.Data.Common.DbDataAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6fbe8cf7fb5f85c4f91f246d65bab1921115e191" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75142886" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbDataAdapter : System.Data.Common.DataAdapter, ICloneable, System.Data.IDbDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbDataAdapter extends System.Data.Common.DataAdapter implements class System.Data.IDataAdapter, class System.Data.IDbDataAdapter, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.DbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbDataAdapter&#xA;Inherits DataAdapter&#xA;Implements ICloneable, IDbDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbDataAdapter abstract : System::Data::Common::DataAdapter, ICloneable, System::Data::IDbDataAdapter" />
  <TypeSignature Language="F#" Value="type DbDataAdapter = class&#xA;    inherit DataAdapter&#xA;    interface IDbDataAdapter&#xA;    interface ICloneable&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DataAdapter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Data.IDbDataAdapter</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="001d9-101">帮助实现 <see cref="T:System.Data.IDbDataAdapter" /> 接口。</span><span class="sxs-lookup"><span data-stu-id="001d9-101">Aids implementation of the <see cref="T:System.Data.IDbDataAdapter" /> interface.</span></span> <span data-ttu-id="001d9-102"><see cref="T:System.Data.Common.DbDataAdapter" /> 的继承类实现了一组功能以提供强类型，但是继承了完全实现 DataAdapter 所需的大部分功能。</span><span class="sxs-lookup"><span data-stu-id="001d9-102">Inheritors of <see cref="T:System.Data.Common.DbDataAdapter" /> implement a set of functions to provide strong typing, but inherit most of the functionality needed to fully implement a **DataAdapter**.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-103"><xref:System.Data.Common.DbDataAdapter> 类继承自 <xref:System.Data.Common.DataAdapter> 类并实现 <xref:System.Data.IDbDataAdapter> 接口。</span><span class="sxs-lookup"><span data-stu-id="001d9-103">The <xref:System.Data.Common.DbDataAdapter> class inherits from the <xref:System.Data.Common.DataAdapter> class and implements the <xref:System.Data.IDbDataAdapter> interface.</span></span> <span data-ttu-id="001d9-104">它有助于类实现设计用于关系数据库的**DataAdapter** 。</span><span class="sxs-lookup"><span data-stu-id="001d9-104">It helps a class implement a **DataAdapter** designed for use with a relational database.</span></span>  
  
 <span data-ttu-id="001d9-105">应用程序不会直接创建 <xref:System.Data.Common.DbDataAdapter> 类的实例，而是创建从它继承的类的实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-105">An application does not create an instance of the <xref:System.Data.Common.DbDataAdapter> class directly, but creates an instance of a class that inherits from it.</span></span>  
  
 <span data-ttu-id="001d9-106">继承 <xref:System.Data.Common.DbDataAdapter> 的类必须实现继承成员，并且通常定义其他成员来添加特定于提供程序的功能。</span><span class="sxs-lookup"><span data-stu-id="001d9-106">Classes that inherit <xref:System.Data.Common.DbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="001d9-107">例如，<xref:System.Data.Common.DbDataAdapter> 类定义 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 属性，而 <xref:System.Data.Common.DbDataAdapter> 类定义 <xref:System.Data.IDataAdapter.Fill%2A> 方法的8个重载。</span><span class="sxs-lookup"><span data-stu-id="001d9-107">For example, the <xref:System.Data.Common.DbDataAdapter> class defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> class defines eight overloads of the <xref:System.Data.IDataAdapter.Fill%2A> method.</span></span> <span data-ttu-id="001d9-108">相反，<xref:System.Data.OleDb.OleDbDataAdapter> 类继承 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法，还定义了两个将 ADO 记录集对象作为参数的 <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> 的其他重载。</span><span class="sxs-lookup"><span data-stu-id="001d9-108">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> that take an ADO Recordset object as a parameter.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="001d9-109">当从 <see cref="T:System.Data.Common.DbDataAdapter" /> 类继承时，建议实现以下构造函数：</span><span class="sxs-lookup"><span data-stu-id="001d9-109">When you inherit from the <see cref="T:System.Data.Common.DbDataAdapter" /> class, we recommend that you implement the following constructors:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="001d9-110">项</span><span class="sxs-lookup"><span data-stu-id="001d9-110">Item</span></span> 
 </term><description> <span data-ttu-id="001d9-111">说明</span><span class="sxs-lookup"><span data-stu-id="001d9-111">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="001d9-112">*Prv*DataAdapter （）</span><span class="sxs-lookup"><span data-stu-id="001d9-112">*Prv*DataAdapter()</span></span> 
 </term><description> <span data-ttu-id="001d9-113">初始化*Prv*DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-113">Initializes a new instance of the *Prv*DataAdapter class.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="001d9-114">*Prv*DataAdapter （*Prv*命令*selectCommand*）</span><span class="sxs-lookup"><span data-stu-id="001d9-114">*Prv*DataAdapter(*Prv*Command *selectCommand*)</span></span> 
 </term><description> <span data-ttu-id="001d9-115">使用指定的 SQL SELECT 语句初始化*Prv*DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-115">Initializes a new instance of the *Prv*DataAdapter class with the specified SQL SELECT statement.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="001d9-116">*Prv*DataAdapter （string *selectCommandText*，string *selectConnectionString*）</span><span class="sxs-lookup"><span data-stu-id="001d9-116">*Prv*DataAdapter(string *selectCommandText*, string *selectConnectionString*)</span></span> 
 </term><description> <span data-ttu-id="001d9-117">使用 SQL SELECT 语句和连接字符串初始化*Prv*DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-117">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a connection string.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="001d9-118">*Prv*DataAdapter （string *selectCommandText*， *Prv*Connection *selectConnection*）</span><span class="sxs-lookup"><span data-stu-id="001d9-118">*Prv*DataAdapter(string *selectCommandText*, *Prv*Connection *selectConnection*)</span></span> 
 </term><description> <span data-ttu-id="001d9-119">使用 SQL SELECT 语句和*Prv*连接对象初始化*Prv*DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-119">Initializes a new instance of the *Prv*DataAdapter class with an SQL SELECT statement and a *Prv*Connection object.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="001d9-120">若要提升 .NET Framework 数据提供程序之间的一致性，应将继承类命名为*Prv*DataAdapter 格式，其中*Prv*是给定给特定 .NET Framework 数据提供程序命名空间中的所有类的统一前缀。</span><span class="sxs-lookup"><span data-stu-id="001d9-120">To promote consistency among .NET Framework data providers, you should name the inheriting class in the form *Prv*DataAdapter, where *Prv* is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="001d9-121">例如，"Sql" 是**SqlClient**命名空间中的 <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> 类的前缀。</span><span class="sxs-lookup"><span data-stu-id="001d9-121">For example, "Sql" is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the **System.Data.SqlClient** namespace.</span></span></para></block>
    <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-122">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-122">DbProviderFactories (ADO.NET)</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-123">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-123">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="001d9-124">初始化 <see langword="DataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-124">Initializes a new instance of a <see langword="DataAdapter" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-125">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-125">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="001d9-126">初始化 DataAdapter 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-126">Initializes a new instance of a **DataAdapter** class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-127">创建 <xref:System.Data.Common.DbDataAdapter>的实例时，以下读/写属性将设置为以下初始值。</span><span class="sxs-lookup"><span data-stu-id="001d9-127">When you create an instance of <xref:System.Data.Common.DbDataAdapter>, the following read/write properties are set to the following initial values.</span></span>  
  
|<span data-ttu-id="001d9-128">属性</span><span class="sxs-lookup"><span data-stu-id="001d9-128">Properties</span></span>|<span data-ttu-id="001d9-129">初始值</span><span class="sxs-lookup"><span data-stu-id="001d9-129">Initial value</span></span>|  
|----------------|-------------------|  
|<xref:System.Data.IDbDataAdapter.SelectCommand%2A>|<span data-ttu-id="001d9-130">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="001d9-130">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.InsertCommand%2A>|<span data-ttu-id="001d9-131">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="001d9-131">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.DeleteCommand%2A>|<span data-ttu-id="001d9-132">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="001d9-132">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.IDbDataAdapter.UpdateCommand%2A>|<span data-ttu-id="001d9-133">一个新的 <xref:System.Data.IDbCommand>。</span><span class="sxs-lookup"><span data-stu-id="001d9-133">A new <xref:System.Data.IDbCommand>.</span></span>|  
|<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  
|<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|  
  
 <span data-ttu-id="001d9-134">可以通过单独调用属性来更改任何这些属性的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-134">You can change the value of any of these properties through a separate call to the property.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-135">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-135">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-136">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-136">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbDataAdapter (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.#ctor(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbDataAdapter(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberSignature Language="F#" Value="new System.Data.Common.DbDataAdapter : System.Data.Common.DbDataAdapter -&gt; System.Data.Common.DbDataAdapter" Usage="new System.Data.Common.DbDataAdapter adapter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter"><span data-ttu-id="001d9-137">用于创建新 <see langword="DataAdapter" /> 的 <see langword="DataAdapter" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-137">A <see langword="DataAdapter" /> object used to create the new <see langword="DataAdapter" />.</span></span></param>
        <summary><span data-ttu-id="001d9-138">从同一类型的现有对象中初始化 <see langword="DataAdapter" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-138">Initializes a new instance of a <see langword="DataAdapter" /> class from an existing object of the same type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-139"><xref:System.Data.Common.DbDataAdapter> 构造函数的此重载旨在供 .NET Framework 数据提供程序在实现在克隆实现中使用的类似构造函数时使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-139">This overload of the <xref:System.Data.Common.DbDataAdapter> constructor is designed for use by a .NET Framework data provider when implementing a similar constructor for use in a clone implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-140">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-140">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-141">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-141">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddToBatch">
      <MemberSignature Language="C#" Value="protected virtual int AddToBatch (System.Data.IDbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 AddToBatch(class System.Data.IDbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AddToBatch (command As IDbCommand) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int AddToBatch(System::Data::IDbCommand ^ command);" />
      <MemberSignature Language="F#" Value="abstract member AddToBatch : System.Data.IDbCommand -&gt; int&#xA;override this.AddToBatch : System.Data.IDbCommand -&gt; int" Usage="dbDataAdapter.AddToBatch command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="001d9-142">要添加到批处理的 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-142">The <see cref="T:System.Data.IDbCommand" /> to add to the batch.</span></span></param>
        <summary><span data-ttu-id="001d9-143">向当前批处理添加 <see cref="T:System.Data.IDbCommand" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-143">Adds a <see cref="T:System.Data.IDbCommand" /> to the current batch.</span></span></summary>
        <returns><span data-ttu-id="001d9-144">添加 <see cref="T:System.Data.IDbCommand" /> 之前批处理中的命令数。</span><span class="sxs-lookup"><span data-stu-id="001d9-144">The number of commands in the batch before adding the <see cref="T:System.Data.IDbCommand" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-145">在 <xref:System.Data.Common.DbDataAdapter>中，此方法将引发 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-145">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="001d9-146">继承自的类 <xref:System.Data.Common.DbDataAdapter> 重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="001d9-146">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="001d9-147">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-147">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-148">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-148">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="001d9-149">如果从 <see cref="T:System.Data.Common.DbDataAdapter" /> 继承的类支持批处理，则该类将重写此方法，以允许用户向批处理中添加命令。</span><span class="sxs-lookup"><span data-stu-id="001d9-149">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to add a command to a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-150">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-150">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-151">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-151">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClearBatch">
      <MemberSignature Language="C#" Value="protected virtual void ClearBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ClearBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ClearBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ClearBatch ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ClearBatch();" />
      <MemberSignature Language="F#" Value="abstract member ClearBatch : unit -&gt; unit&#xA;override this.ClearBatch : unit -&gt; unit" Usage="dbDataAdapter.ClearBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="001d9-152">从批处理中移除所有 <see cref="T:System.Data.IDbCommand" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-152">Removes all <see cref="T:System.Data.IDbCommand" /> objects from the batch.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-153">在 <xref:System.Data.Common.DbDataAdapter>中，此方法将引发 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-153">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="001d9-154">继承自的类 <xref:System.Data.Common.DbDataAdapter> 重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="001d9-154">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="001d9-155">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-155">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-156">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-156">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="001d9-157">如果从 <see cref="T:System.Data.Common.DbDataAdapter" /> 继承的类支持批处理，则该类将重写此方法，以允许用户从批处理中删除所有命令。</span><span class="sxs-lookup"><span data-stu-id="001d9-157">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to remove all commands from a batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-158">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-158">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-159">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-159">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatedEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs&#xA;override this.CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::RowUpdatedEventArgs ^ CreateRowUpdatedEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatedEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatedEventArgs" Usage="dbDataAdapter.CreateRowUpdatedEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatedEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="001d9-160">用于更新数据源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-160">The <see cref="T:System.Data.DataRow" /> used to update the data source.</span></span></param>
        <param name="command"><span data-ttu-id="001d9-161">在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-161">The <see cref="T:System.Data.IDbCommand" /> executed during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="001d9-162">该命令是否为 UPDATE、INSERT、DELETE 或 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-162">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="001d9-163">一个 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-163">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="001d9-164">初始化 <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-164">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="001d9-165"><see cref="T:System.Data.Common.RowUpdatedEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-165">A new instance of the <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-166">当在派生类中重写 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-166">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-167">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-167">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateRowUpdatingEvent">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent(class System.Data.DataRow dataRow, class System.Data.IDbCommand command, valuetype System.Data.StatementType statementType, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs&#xA;override this.CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Data::Common::RowUpdatingEventArgs ^ CreateRowUpdatingEvent(System::Data::DataRow ^ dataRow, System::Data::IDbCommand ^ command, System::Data::StatementType statementType, System::Data::Common::DataTableMapping ^ tableMapping);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateRowUpdatingEvent : System.Data.DataRow * System.Data.IDbCommand * System.Data.StatementType * System.Data.Common.DataTableMapping -&gt; System.Data.Common.RowUpdatingEventArgs" Usage="dbDataAdapter.CreateRowUpdatingEvent (dataRow, command, statementType, tableMapping)" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.RowUpdatingEventArgs</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRow" Type="System.Data.DataRow" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRow"><span data-ttu-id="001d9-168">更新数据源的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-168">The <see cref="T:System.Data.DataRow" /> that updates the data source.</span></span></param>
        <param name="command"><span data-ttu-id="001d9-169">要在 <see cref="T:System.Data.IDbCommand" /> 过程中执行的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-169">The <see cref="T:System.Data.IDbCommand" /> to execute during the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />.</span></span></param>
        <param name="statementType"><span data-ttu-id="001d9-170">该命令是否为 UPDATE、INSERT、DELETE 或 SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-170">Whether the command is an UPDATE, INSERT, DELETE, or SELECT statement.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="001d9-171">一个 <see cref="T:System.Data.Common.DataTableMapping" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-171">A <see cref="T:System.Data.Common.DataTableMapping" /> object.</span></span></param>
        <summary><span data-ttu-id="001d9-172">初始化 <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-172">Initializes a new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></summary>
        <returns><span data-ttu-id="001d9-173"><see cref="T:System.Data.Common.RowUpdatingEventArgs" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="001d9-173">A new instance of the <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-174">当在派生类中重写 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-174">When overriding <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-175">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-175">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-176">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultSourceTableName">
      <MemberSignature Language="C#" Value="public const string DefaultSourceTableName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSourceTableName" />
      <MemberSignature Language="DocId" Value="F:System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultSourceTableName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultSourceTableName;" />
      <MemberSignature Language="F#" Value="val mutable DefaultSourceTableName : string" Usage="System.Data.Common.DbDataAdapter.DefaultSourceTableName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-177"><see cref="T:System.Data.Common.DataAdapter" /> 对象用于表映射的默认名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-177">The default name used by the <see cref="T:System.Data.Common.DataAdapter" /> object for table mappings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-178">"表" 是 <xref:System.Data.Common.DataAdapter> 对象用于表映射的默认名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-178">"Table" is the default name used by the <xref:System.Data.Common.DataAdapter> object for table mappings.</span></span>  
  
 <span data-ttu-id="001d9-179">当应用程序添加要与 <xref:System.Data.Common.DbDataAdapter.Fill%2A>一起使用的表映射，但未指定 <xref:System.Data.DataTable> 名称时，<xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName>。</span><span class="sxs-lookup"><span data-stu-id="001d9-179"><xref:System.Data.Common.DbDataAdapter.DefaultSourceTableName> is when an application adds a table mapping to be used with <xref:System.Data.Common.DbDataAdapter.Fill%2A>, but does not specify a <xref:System.Data.DataTable> name.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-180">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-180">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-181">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-181">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ DeleteCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-182">获取或设置用于从数据集中删除记录的命令。</span><span class="sxs-lookup"><span data-stu-id="001d9-182">Gets or sets a command for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="001d9-183"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="001d9-183">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-184">在 <xref:System.Data.Common.DbDataAdapter.Update%2A>过程中，如果未设置此属性，并且 <xref:System.Data.DataSet>中存在主键信息，则将自动生成 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-184">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-185">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter>，并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-185">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-186">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-186">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-187">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-187">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-188">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-188">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="dbDataAdapter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="001d9-189">若要释放托管资源和非托管资源，则为 <see langword="true" />；若仅释放非托管资源，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-189"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="001d9-190">释放 <see cref="T:System.Data.Common.DbDataAdapter" /> 使用的非托管资源，并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="001d9-190">Releases the unmanaged resources used by the <see cref="T:System.Data.Common.DbDataAdapter" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-191">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-191">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-192">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-192">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteBatch">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.ExecuteBatch" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteBatch () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteBatch();" />
      <MemberSignature Language="F#" Value="abstract member ExecuteBatch : unit -&gt; int&#xA;override this.ExecuteBatch : unit -&gt; int" Usage="dbDataAdapter.ExecuteBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="001d9-193">执行当前批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-193">Executes the current batch.</span></span></summary>
        <returns><span data-ttu-id="001d9-194">从批处理中的最后一个命令返回的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-194">The return value from the last command in the batch.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-195">在 <xref:System.Data.Common.DbDataAdapter>中，此方法将引发 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-195">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="001d9-196">继承自的类 <xref:System.Data.Common.DbDataAdapter> 重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="001d9-196">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-197">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-197">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="001d9-198">如果从 <see cref="T:System.Data.Common.DbDataAdapter" /> 继承的类支持批处理，则该类将重写此方法以允许用户执行批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-198">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="001d9-199">此方法的实现将适配器中的命令合并为一个批处理，然后执行该批并返回该批的返回值。</span><span class="sxs-lookup"><span data-stu-id="001d9-199">An implementation of this method combines the commands in the adapter into a batch, then executes the batch and returns the return value of the batch.</span></span></para></block>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-200">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-200">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-201">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-201">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-202">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-202">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Fill">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="001d9-203">填充 <see cref="T:System.Data.DataSet" /> 或 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-203">Fills a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-204">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-204">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public override int Fill (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Fill(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Fill(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Fill dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Fill(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-205">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-205">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <summary><span data-ttu-id="001d9-206">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行。</span><span class="sxs-lookup"><span data-stu-id="001d9-206">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-207">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-207">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="001d9-208">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-208">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-209"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-209">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="001d9-210">与 select 命令关联的 <xref:System.Data.IDbConnection> 对象必须有效，但不需要将其打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-210">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-211">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前关闭 <xref:System.Data.IDbConnection>，则会打开该以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-211">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="001d9-212">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-212">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-213">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-213">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="001d9-214">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="001d9-214">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="001d9-215">如果命令未返回任何行，则不会将任何表添加到 <xref:System.Data.DataSet>中，也不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-215">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="001d9-216">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充 <xref:System.Data.DataTable>时遇到重复的列，则它会使用 "*columnname*1"、"*columnname*2"、"*columnname*3" 等模式为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-216">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-217">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-217">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="001d9-218">当指定的查询返回多个结果时，返回查询的每个行的结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-218">When the query specified returns multiple results, the result set for each row returning query is placed in a separate table.</span></span> <span data-ttu-id="001d9-219">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-219">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="001d9-220">由于没有为不返回行的查询创建表，因此，如果处理的是 insert 查询后跟 select 查询，则为 select 查询创建的表名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="001d9-220">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table" because it is the first table created.</span></span> <span data-ttu-id="001d9-221">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-221">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-222">当用于填充 <xref:System.Data.DataSet> 的 SELECT 语句返回多个结果（如批处理 SQL 语句）时，如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-222">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, if one of the results contains an error, all subsequent results are skipped and are not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="001d9-223">使用后续 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用来刷新 <xref:System.Data.DataSet>的内容时，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="001d9-223">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="001d9-224">SQL 语句应与最初用于填充 <xref:System.Data.DataSet>的语句匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-224">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="001d9-225">**键**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="001d9-225">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="001d9-226">如果主键信息存在，则会对所有重复行进行协调，并且仅在对应于 <xref:System.Data.DataSet>的 <xref:System.Data.DataTable> 中出现一次。</span><span class="sxs-lookup"><span data-stu-id="001d9-226">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-227">可以通过 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定 <xref:System.Data.DataTable>的 <xref:System.Data.DataTable.PrimaryKey%2A> 属性或将 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey`来设置主键信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-227">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-228">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="001d9-228">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-229">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="001d9-229">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="001d9-230">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-230">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-231">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-231">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-232">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-232">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-233">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-233">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-234">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-234">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Fill dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="001d9-235">用于表映射的 <see cref="T:System.Data.DataTable" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-235">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="001d9-236">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行，以与使用 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-236">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="001d9-237">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-237">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="001d9-238">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-238">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-239"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法使用关联的 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 属性指定的 SELECT 语句从数据源中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-239">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="001d9-240">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-240">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-241">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前关闭连接，则会打开该连接，以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-241">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-242">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-242">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-243">然后 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作将行添加到 <xref:System.Data.DataSet>中的目标 <xref:System.Data.DataTable> 对象，并创建 <xref:System.Data.DataTable> 对象（如果它们尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="001d9-243">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="001d9-244">创建 <xref:System.Data.DataTable> 对象时，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-244">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="001d9-245">但是，如果 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey`，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="001d9-245">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="001d9-246">如果 <xref:System.Data.Common.DbDataAdapter> 在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等来为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-246">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-247">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-247">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-248">当将多个结果集添加到 <xref:System.Data.DataSet> 时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-248">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span>  
  
 <span data-ttu-id="001d9-249">采用 `DataTable` 作为参数的 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 的重载只获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-249">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="001d9-250">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 的重载，该重载采用 `DataSet` 作为参数以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-250">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="001d9-251"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-251">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-252">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 执行区分大小写的比较来查找相应的表，如果不存在完全匹配项，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="001d9-252">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="001d9-253">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-253">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
 dataset.Tables.Add("AAA");  
 adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
    adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="001d9-254">如果调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-254">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-255">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-255">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-256">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-256">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-257">您可以在同一 <xref:System.Data.DataTable>上多次使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-257">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-258">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="001d9-258">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="001d9-259">如果主键不存在，将在 <xref:System.Data.DataTable>中追加传入行。</span><span class="sxs-lookup"><span data-stu-id="001d9-259">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-260">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="001d9-260">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-261">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="001d9-261">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="001d9-262">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-262">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-263">当处理返回多个结果的批处理 SQL 语句时，.NET Framework 数据提供程序的 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 和 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-263">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-264">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-264">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-265"><see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 方法的此重载受保护，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-265">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-266">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-266">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-267">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-268">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-268">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="001d9-269">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-269">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="001d9-270">在 <see cref="T:System.Data.DataSet" /> 中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-270">Adds or refreshes rows in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="001d9-271">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-271">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="001d9-272">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-272">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-273"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-273">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="001d9-274">与 select 命令关联的 <xref:System.Data.IDbConnection> 对象必须有效，但不需要将其打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-274">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-275">如果 <xref:System.Data.IDbConnection> 在 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用之前关闭，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-275">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-276">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-276">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-277">如果命令未返回任何行，则不会将任何表添加到 <xref:System.Data.DataSet>中，也不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-277">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
 <span data-ttu-id="001d9-278">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充 <xref:System.Data.DataTable>时遇到重复的列，它将使用模式 "columnname1"、"columnname2"、"columnname3" 等，为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-278">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="001d9-279">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-279">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="001d9-280">当指定的查询返回多个结果时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-280">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-281">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-281">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="001d9-282">由于没有为不返回行的查询创建表，因此，如果要处理一个 insert 查询后跟一个 select 查询，则为 select 查询创建的表将命名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="001d9-282">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="001d9-283">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-283">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-284"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-284">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-285">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 执行区分大小写的比较来查找相应的表，如果不存在完全匹配项，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="001d9-285">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="001d9-286">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-286">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="001d9-287">如果调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-287">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-288">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-288">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-289">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-289">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-290">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-290">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="001d9-291">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="001d9-291">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="001d9-292">当用于填充 <xref:System.Data.DataSet> 的 SELECT 语句返回多个结果（如批处理 SQL 语句）时，请注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="001d9-292">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="001d9-293">如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-293">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="001d9-294">使用后续 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用来刷新 <xref:System.Data.DataSet>的内容时，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="001d9-294">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="001d9-295">SQL 语句应与最初用于填充 <xref:System.Data.DataSet>的语句匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-295">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="001d9-296">**键**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="001d9-296">The **Key** column information must be present.</span></span> <span data-ttu-id="001d9-297">如果主键信息存在，则会对所有重复行进行协调，并且仅在对应于 <xref:System.Data.DataSet>的 <xref:System.Data.DataTable> 中出现一次。</span><span class="sxs-lookup"><span data-stu-id="001d9-297">If primary key information is present, any duplicate rows are reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-298">可以通过 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定 <xref:System.Data.DataTable>的 <xref:System.Data.DataTable.PrimaryKey%2A> 属性或将 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey`来设置主键信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-298">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-299">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="001d9-299">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-300">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="001d9-300">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="001d9-301">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-301">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-302">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-302">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-303">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-303">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-304">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter>，使用 "类别" 表中的行填充 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="001d9-304">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with rows from the categories table.</span></span> <span data-ttu-id="001d9-305">此示例假设已创建 <xref:System.Data.OleDb.OleDbDataAdapter> 和 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="001d9-305">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="001d9-306">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-306">The source table is invalid.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-307">当在派生类中重写 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-307">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-308">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-308">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-309">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-309">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDataReader dataReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDataReader ^ dataReader);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDataReader -&gt; int" Usage="dbDataAdapter.Fill (dataTable, dataReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="1" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="001d9-310">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-310">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="dataReader"><span data-ttu-id="001d9-311"><see cref="T:System.Data.IDataReader" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-311">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <summary><span data-ttu-id="001d9-312">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与使用指定的 <see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Data.IDataReader" /> 名称的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-312">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" /> and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="001d9-313">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-313">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="001d9-314">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-314">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable dataTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataTable ^ dataTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="001d9-315">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-315">A <see cref="T:System.Data.DataTable" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="command"><span data-ttu-id="001d9-316">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-316">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="001d9-317"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-317">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="001d9-318">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与使用指定的 <see cref="T:System.Data.DataTable" />、<see cref="T:System.Data.IDbCommand" /> 和 <see cref="T:System.Data.CommandBehavior" /> 的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-318">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source using the specified <see cref="T:System.Data.DataTable" />, <see cref="T:System.Data.IDbCommand" /> and <see cref="T:System.Data.CommandBehavior" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-319">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-319">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="001d9-320">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-320">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-321"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法使用关联的 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 属性指定的 SELECT 语句从数据源中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-321">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="001d9-322">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-322">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-323">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前关闭连接，则会打开该连接，以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-323">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="001d9-324">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-324">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-325">然后 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作将行添加到 <xref:System.Data.DataSet>中指定的目标 <xref:System.Data.DataTable> 对象中，如果该对象尚不存在，则创建 <xref:System.Data.DataTable> 该对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-325">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to the specified destination <xref:System.Data.DataTable> object in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> object if it does not already exist.</span></span> <span data-ttu-id="001d9-326">创建 <xref:System.Data.DataTable> 对象时，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-326">When creating a <xref:System.Data.DataTable> object, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="001d9-327">但是，如果 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey`，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="001d9-327">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="001d9-328">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-328">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-329">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-329">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="001d9-330">采用 `DataTable` 作为参数的 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 的重载只获取第一个结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-330">The overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataTable` as a parameter only obtains the first result.</span></span> <span data-ttu-id="001d9-331">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 的重载，该重载采用 `DataSet` 作为参数以获取多个结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-331">Use an overload of <xref:System.Data.Common.DbDataAdapter.Fill%2A> that takes `DataSet` as a parameter to obtain multiple results.</span></span>  
  
 <span data-ttu-id="001d9-332">您可以在同一 <xref:System.Data.DataTable>上多次使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-332">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-333">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="001d9-333">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="001d9-334">如果主键不存在，将在 <xref:System.Data.DataTable>中追加传入行。</span><span class="sxs-lookup"><span data-stu-id="001d9-334">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-335">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="001d9-335">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-336">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="001d9-336">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="001d9-337">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-337">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-338">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-338">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-339">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-339">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-340"><see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 方法的此重载受保护，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-340">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-341">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-341">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-342">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-342">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (int startRecord, int maxRecords, params System.Data.DataTable[] dataTables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(int32 startRecord, int32 maxRecords, class System.Data.DataTable[] dataTables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Fill (startRecord As Integer, maxRecords As Integer, ParamArray dataTables As DataTable()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(int startRecord, int maxRecords, ... cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables);" />
      <MemberSignature Language="F#" Value="override this.Fill : int * int * System.Data.DataTable[] -&gt; int" Usage="dbDataAdapter.Fill (startRecord, maxRecords, dataTables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startRecord" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-2.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="startRecord"><span data-ttu-id="001d9-343">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="001d9-343">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="001d9-344">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="001d9-344">The maximum number of records to retrieve.</span></span></param>
        <param name="dataTables"><span data-ttu-id="001d9-345">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-345">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <summary><span data-ttu-id="001d9-346">在 <see cref="T:System.Data.DataTable" /> 中添加或刷新行，以与从指定的记录开始一直检索到指定的最大数目的记录的数据源中的行匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-346">Adds or refreshes rows in a <see cref="T:System.Data.DataTable" /> to match those in the data source starting at the specified record and retrieving up to the specified maximum number of records.</span></span></summary>
        <returns><span data-ttu-id="001d9-347">已在 <see cref="T:System.Data.DataTable" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-347">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataTable" />.</span></span> <span data-ttu-id="001d9-348">此值不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-348">This value does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-349"><xref:System.Data.Common.DataAdapter.Fill%2A> 方法使用关联的 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 属性指定的 SELECT 语句从数据源中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-349">The <xref:System.Data.Common.DataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="001d9-350">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-350">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-351">如果在调用 <xref:System.Data.Common.DataAdapter.Fill%2A> 之前关闭连接，则会打开该连接以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-351">If the connection is closed before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it is opened to retrieve data, and then it is closed.</span></span> <span data-ttu-id="001d9-352">如果在调用 <xref:System.Data.Common.DataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-352">If the connection is open before <xref:System.Data.Common.DataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-353">然后 <xref:System.Data.Common.DataAdapter.Fill%2A> 操作将行添加到 <xref:System.Data.DataSet>中的目标 <xref:System.Data.DataTable> 对象，并创建 <xref:System.Data.DataTable> 对象（如果它们尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="001d9-353">The <xref:System.Data.Common.DataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="001d9-354">创建 <xref:System.Data.DataTable> 对象时，<xref:System.Data.Common.DataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-354">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="001d9-355">但是，如果 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey`，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="001d9-355">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="001d9-356">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="001d9-356">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-357">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="001d9-357">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="001d9-358">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-358">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="001d9-359">如果数据适配器在填充 <xref:System.Data.DataTable>时遇到重复的列，则使用 "columnname1"、"columnname2"、"columnname3" 等模式为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-359">If the data adapter encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "columnname1", "columnname2", "columnname3", and so on.</span></span> <span data-ttu-id="001d9-360">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-360">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-361">将多个结果集添加到 <xref:System.Data.DataSet>时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-361">When multiple result sets are added to the <xref:System.Data.DataSet>, each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-362">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-362">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="001d9-363">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-363">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-364">当用于填充 <xref:System.Data.DataSet> 的 SELECT 语句返回多个结果（如批处理 SQL 语句）时，如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-364">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as a batch SQL statements, if one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="001d9-365">您可以在同一 <xref:System.Data.DataTable>上多次使用 <xref:System.Data.Common.DataAdapter.Fill%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-365">You can use the <xref:System.Data.Common.DataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-366">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="001d9-366">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="001d9-367">如果主键不存在，将在 <xref:System.Data.DataTable>中追加传入行。</span><span class="sxs-lookup"><span data-stu-id="001d9-367">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-368">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-368">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-369">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-369">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-370">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-370">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-371">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-371">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="public int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-372">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-372">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="001d9-373">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="001d9-373">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="001d9-374">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="001d9-374">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="001d9-375">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-375">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="001d9-376">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-376">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="001d9-377">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-377">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="001d9-378">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-378">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-379">如果 `maxRecords` 值为0，则获取在开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="001d9-379">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="001d9-380">如果 `maxRecords` 大于剩余行数，则只返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="001d9-380">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned, and no error is issued.</span></span>  
  
 <span data-ttu-id="001d9-381">如果相应的 select 命令是返回多个结果的语句，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 仅将 `maxRecords` 应用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-381">If the corresponding select command is a statement returning multiple results, <xref:System.Data.Common.DbDataAdapter.Fill%2A> only applies `maxRecords` to the first result.</span></span>  
  
 <span data-ttu-id="001d9-382"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-382">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="001d9-383">与 SELECT 语句关联的 <xref:System.Data.IDbConnection> 对象必须有效，但不需要将其打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-383">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-384">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前关闭 <xref:System.Data.IDbConnection>，则会打开该以检索数据，然后将其关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-384">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data and then closed.</span></span> <span data-ttu-id="001d9-385">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-385">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-386">如果命令未返回任何行，则不会将任何表添加到 <xref:System.Data.DataSet>中，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-386">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="001d9-387">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-387">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-388">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-388">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="001d9-389">当指定的查询返回多个结果时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-389">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-390">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-390">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="001d9-391">由于没有为不返回行的查询创建表，因此，如果处理的是 insert 查询后跟 select 查询，则为 select 查询创建的表名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="001d9-391">Because no table is created for a query that does not return rows, if you process an insert query followed by a select query, the table created for the select query is named "Table", because it is the first table created.</span></span> <span data-ttu-id="001d9-392">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-392">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-393"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-393">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-394">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 执行区分大小写的比较来查找相应的表，如果不存在完全匹配项，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="001d9-394">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="001d9-395">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-395">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="001d9-396">如果调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-396">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-397">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-397">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-398">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-398">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-399">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-399">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="001d9-400">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="001d9-400">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="001d9-401">当用于填充 <xref:System.Data.DataSet> 的 SELECT 语句返回多个结果（如批处理 SQL 语句）时，请注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="001d9-401">When the SELECT statement used to populate the <xref:System.Data.DataSet> returns multiple results, such as batch SQL statements, be aware of the following:</span></span>  
  
-   <span data-ttu-id="001d9-402">处理来自批处理 SQL 语句的多个结果时，`maxRecords` 仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-402">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="001d9-403">对于包含分章节结果的行也是如此（仅适用于 OLE DB 的 .NET Framework 数据提供程序）。</span><span class="sxs-lookup"><span data-stu-id="001d9-403">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="001d9-404">顶级结果受 `maxRecords`的限制，但会添加所有子行。</span><span class="sxs-lookup"><span data-stu-id="001d9-404">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="001d9-405">如果其中一个结果包含错误，则会跳过所有后续结果，并且不会将其添加到 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-405">If one of the results contains an error, all subsequent results are skipped and not added to the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="001d9-406">使用后续 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用来刷新 <xref:System.Data.DataSet>的内容时，必须满足两个条件：</span><span class="sxs-lookup"><span data-stu-id="001d9-406">When using subsequent <xref:System.Data.Common.DbDataAdapter.Fill%2A> calls to refresh the contents of the <xref:System.Data.DataSet>, two conditions must be met:</span></span>  
  
1.  <span data-ttu-id="001d9-407">SQL 语句应与最初用于填充 <xref:System.Data.DataSet>的语句匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-407">The SQL statement should match the one initially used to populate the <xref:System.Data.DataSet>.</span></span>  
  
2.  <span data-ttu-id="001d9-408">**键**列信息必须存在。</span><span class="sxs-lookup"><span data-stu-id="001d9-408">The **Key** column information must be present.</span></span>  
  
 <span data-ttu-id="001d9-409">如果存在主键信息，则会对所有重复行进行协调，并且仅在对应于 <xref:System.Data.DataSet>的 <xref:System.Data.DataTable> 中出现一次。</span><span class="sxs-lookup"><span data-stu-id="001d9-409">If primary key information is present, any duplicate rows will be reconciled and only appear once in the <xref:System.Data.DataTable> that corresponds to the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-410">可以通过 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>、指定 <xref:System.Data.DataTable>的 <xref:System.Data.DataTable.PrimaryKey%2A> 属性或将 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey`来设置主键信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-410">Primary key information may be set either through <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, by specifying the <xref:System.Data.DataTable.PrimaryKey%2A> property of the <xref:System.Data.DataTable>, or by setting the <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> property to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-411">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="001d9-411">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-412">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="001d9-412">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="001d9-413">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-413">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-414">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-414">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-415">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-415">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-416">`DataSet` 将不包含 `maxRecords`所指示的记录数。</span><span class="sxs-lookup"><span data-stu-id="001d9-416">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="001d9-417">但是，查询生成的整个结果集仍从服务器返回。</span><span class="sxs-lookup"><span data-stu-id="001d9-417">However, the entire result set generated by the query is still returned from the server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-418">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter>从 "**类别**" 表中填充15行（从第10行开始）的 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="001d9-418">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to fill a <xref:System.Data.DataSet> with 15 rows, beginning at row 10, from the **Categories** table.</span></span> <span data-ttu-id="001d9-419">此示例假设已创建 <xref:System.Data.OleDb.OleDbDataAdapter> 和 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="001d9-419">This example assumes that you have created an <xref:System.Data.OleDb.OleDbDataAdapter> and a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Fill3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Fill3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="001d9-420"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-420">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-421">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-421">The source table is invalid.</span></span>  
  
 <span data-ttu-id="001d9-422">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-422">-or-</span></span>  
  
 <span data-ttu-id="001d9-423">connection 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-423">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="001d9-424">未能找到连接。</span><span class="sxs-lookup"><span data-stu-id="001d9-424">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="001d9-425"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="001d9-425">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="001d9-426">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-426">-or-</span></span> 
<span data-ttu-id="001d9-427"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="001d9-427">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-428">当在派生类中重写 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-428">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-429">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-429">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-430">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-430">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, string srcTable, class System.Data.IDataReader dataReader, int32 startRecord, int32 maxRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, System::String ^ srcTable, System::Data::IDataReader ^ dataReader, int startRecord, int maxRecords);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * string * System.Data.IDataReader * int * int -&gt; int" Usage="dbDataAdapter.Fill (dataSet, srcTable, dataReader, startRecord, maxRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="srcTable" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="dataReader" Type="System.Data.IDataReader" Index="2" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="startRecord" Type="System.Int32" Index="3" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="4" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-431">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-431">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="001d9-432">用于表映射的 <see cref="T:System.Data.DataTable" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-432">The name of the <see cref="T:System.Data.DataTable" /> to use for table mapping.</span></span></param>
        <param name="dataReader"><span data-ttu-id="001d9-433"><see cref="T:System.Data.IDataReader" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-433">The name of the <see cref="T:System.Data.IDataReader" />.</span></span></param>
        <param name="startRecord"><span data-ttu-id="001d9-434">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="001d9-434">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="001d9-435">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="001d9-435">The maximum number of records to retrieve.</span></span></param>
        <summary><span data-ttu-id="001d9-436">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以与使用 <see cref="T:System.Data.DataSet" />、<see cref="T:System.Data.DataTable" /> 和 <see cref="T:System.Data.IDataReader" /> 名称的数据源中的行进行匹配。</span><span class="sxs-lookup"><span data-stu-id="001d9-436">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" />, <see cref="T:System.Data.DataTable" />, and <see cref="T:System.Data.IDataReader" /> names.</span></span></summary>
        <returns><span data-ttu-id="001d9-437">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-437">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="001d9-438">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-438">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataTable[] dataTables, int startRecord, int maxRecords, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataTable[] dataTables, int32 startRecord, int32 maxRecords, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Fill (dataTables As DataTable(), startRecord As Integer, maxRecords As Integer, command As IDbCommand, behavior As CommandBehavior) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(cli::array &lt;System::Data::DataTable ^&gt; ^ dataTables, int startRecord, int maxRecords, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataTable[] * int * int * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataTables, startRecord, maxRecords, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTables" Type="System.Data.DataTable[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="startRecord" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maxRecords" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="command" Type="System.Data.IDbCommand" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dataTables"><span data-ttu-id="001d9-439">要从数据源填充的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-439">The <see cref="T:System.Data.DataTable" /> objects to fill from the data source.</span></span></param>
        <param name="startRecord"><span data-ttu-id="001d9-440">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="001d9-440">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="001d9-441">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="001d9-441">The maximum number of records to retrieve.</span></span></param>
        <param name="command"><span data-ttu-id="001d9-442">执行以填充 <see cref="T:System.Data.IDbCommand" /> 对象的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-442">The <see cref="T:System.Data.IDbCommand" /> executed to fill the <see cref="T:System.Data.DataTable" /> objects.</span></span></param>
        <param name="behavior"><span data-ttu-id="001d9-443"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-443">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="001d9-444">在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新行以匹配使用 <see cref="T:System.Data.DataSet" /> 和 <see cref="T:System.Data.DataTable" /> 名称的数据源中的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-444">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and <see cref="T:System.Data.DataTable" /> names.</span></span></summary>
        <returns><span data-ttu-id="001d9-445">已在数据表中添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-445">The number of rows added to or refreshed in the data tables.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-446">如果 `maxRecords` 值为0，则获取在开始记录后找到的所有记录。</span><span class="sxs-lookup"><span data-stu-id="001d9-446">A `maxRecords` value of 0 gets all records found after the start record.</span></span> <span data-ttu-id="001d9-447">如果 `maxRecords` 大于剩余行数，则只返回剩余的行，并且不会发出错误。</span><span class="sxs-lookup"><span data-stu-id="001d9-447">If `maxRecords` is greater than the number of remaining rows, only the remaining rows are returned and no error is issued.</span></span>  
  
 <span data-ttu-id="001d9-448"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法使用 SELECT 语句从数据源中检索数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-448">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves the data from the data source using a SELECT statement.</span></span> <span data-ttu-id="001d9-449">与 SELECT 语句关联的 <xref:System.Data.IDbConnection> 对象必须有效，但不需要将其打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-449">The <xref:System.Data.IDbConnection> object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-450">如果 <xref:System.Data.IDbConnection> 在 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 调用之前关闭，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-450">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-451">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-451">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-452">如果命令未返回任何行，则不会将任何表添加到 <xref:System.Data.DataSet>中，但不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-452">If a command does not return any rows, no tables are added to the <xref:System.Data.DataSet>, but no exception is raised.</span></span>  
  
 <span data-ttu-id="001d9-453">如果 <xref:System.Data.Common.DbDataAdapter> 对象在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-453">If the <xref:System.Data.Common.DbDataAdapter> object encounters duplicate columns while populating a <xref:System.Data.DataTable>, it will generate names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-454">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-454">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span>  
  
 <span data-ttu-id="001d9-455">当指定的查询返回多个结果时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-455">When the query specified returns multiple results, each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-456">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-456">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="001d9-457">由于没有为不返回行的查询创建表，因此，如果要处理一个 insert 查询后跟一个 select 查询，则为 select 查询创建的表将命名为 "Table"，因为它是第一个创建的表。</span><span class="sxs-lookup"><span data-stu-id="001d9-457">Since no table is created for a query that does not return rows, if you were to process an insert query followed by a select query, the table created for the select query would be named "Table", because it is the first table created.</span></span> <span data-ttu-id="001d9-458">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-458">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-459"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-459">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-460">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 执行区分大小写的比较来查找相应的表，如果不存在完全匹配项，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="001d9-460">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="001d9-461">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-461">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="001d9-462">如果调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-462">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-463">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-463">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-464">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-464">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-465">如果在填充数据表时出现错误或异常，则在出现错误之前添加的行将保留在数据表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-465">If an error or an exception is encountered while populating the data tables, rows added prior to the occurrence of the error remain in the data tables.</span></span> <span data-ttu-id="001d9-466">操作的剩余部分中止。</span><span class="sxs-lookup"><span data-stu-id="001d9-466">The remainder of the operation is aborted.</span></span>  
  
 <span data-ttu-id="001d9-467">当用于填充 <xref:System.Data.DataTable> 对象的 SELECT 语句返回多个结果（如批处理 SQL 语句）时，请注意以下事项：</span><span class="sxs-lookup"><span data-stu-id="001d9-467">When the SELECT statement used to populate the <xref:System.Data.DataTable> objects returns multiple results, such as a batch SQL statement, be aware of the following:</span></span>  
  
-   <span data-ttu-id="001d9-468">处理来自批处理 SQL 语句的多个结果时，`maxRecords` 仅适用于第一个结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-468">When processing multiple results from a batch SQL statement, `maxRecords` only applies to the first result.</span></span> <span data-ttu-id="001d9-469">对于包含分章节结果的行也是如此（仅适用于 OLE DB 的 .NET Framework 数据提供程序）。</span><span class="sxs-lookup"><span data-stu-id="001d9-469">The same is true for rows containing chaptered results (.NET Framework Data Provider for OLE DB only).</span></span> <span data-ttu-id="001d9-470">顶级结果受 `maxRecords`的限制，但会添加所有子行。</span><span class="sxs-lookup"><span data-stu-id="001d9-470">The top level result is limited by `maxRecords`, but all child rows are added.</span></span>  
  
-   <span data-ttu-id="001d9-471">如果其中一个结果包含错误，则会跳过所有后续结果。</span><span class="sxs-lookup"><span data-stu-id="001d9-471">If one of the results contains an error, all subsequent results are skipped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-472">`DataSet` 将不包含 `maxRecords`所指示的记录数。</span><span class="sxs-lookup"><span data-stu-id="001d9-472">The `DataSet` will not contain more than the number of records indicated by `maxRecords`.</span></span> <span data-ttu-id="001d9-473">但仍从服务器返回查询生成的整个结果集。</span><span class="sxs-lookup"><span data-stu-id="001d9-473">However, the entire resultset generated by the query is still returned from the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.SystemException"><span data-ttu-id="001d9-474"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-474">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-475">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-475">The source table is invalid.</span></span>  
  
 <span data-ttu-id="001d9-476">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-476">-or-</span></span>  
  
 <span data-ttu-id="001d9-477">connection 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-477">The connection is invalid.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="001d9-478">未能找到连接。</span><span class="sxs-lookup"><span data-stu-id="001d9-478">The connection could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="001d9-479"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="001d9-479">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="001d9-480">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-480">-or-</span></span> 
<span data-ttu-id="001d9-481"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="001d9-481">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-482">当在派生类中重写 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-482">When overriding <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-483">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-483">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-484">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-484">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="C#" Value="protected virtual int Fill (System.Data.DataSet dataSet, int startRecord, int maxRecords, string srcTable, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Fill(class System.Data.DataSet dataSet, int32 startRecord, int32 maxRecords, string srcTable, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Fill(System::Data::DataSet ^ dataSet, int startRecord, int maxRecords, System::String ^ srcTable, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.Fill : System.Data.DataSet * int * int * string * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; int" Usage="dbDataAdapter.Fill (dataSet, startRecord, maxRecords, srcTable, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="startRecord" Type="System.Int32" />
        <Parameter Name="maxRecords" Type="System.Int32" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-485">要用记录和架构（如果必要）填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-485">A <see cref="T:System.Data.DataSet" /> to fill with records and, if necessary, schema.</span></span></param>
        <param name="startRecord"><span data-ttu-id="001d9-486">从其开始的从零开始的记录号。</span><span class="sxs-lookup"><span data-stu-id="001d9-486">The zero-based record number to start with.</span></span></param>
        <param name="maxRecords"><span data-ttu-id="001d9-487">要检索的最大记录数。</span><span class="sxs-lookup"><span data-stu-id="001d9-487">The maximum number of records to retrieve.</span></span></param>
        <param name="srcTable"><span data-ttu-id="001d9-488">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-488">The name of the source table to use for table mapping.</span></span></param>
        <param name="command"><span data-ttu-id="001d9-489">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-489">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="001d9-490"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-490">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="001d9-491">使用 <see cref="T:System.Data.DataSet" /> 和源表名称、命令字符串以及命令行为，在 <see cref="T:System.Data.DataSet" /> 的指定范围中添加或刷新某些行以使它们与数据源中对应的行相一致。</span><span class="sxs-lookup"><span data-stu-id="001d9-491">Adds or refreshes rows in a specified range in the <see cref="T:System.Data.DataSet" /> to match those in the data source using the <see cref="T:System.Data.DataSet" /> and source table names, command string, and command behavior.</span></span></summary>
        <returns><span data-ttu-id="001d9-492">已在 <see cref="T:System.Data.DataSet" /> 中成功添加或刷新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-492">The number of rows successfully added to or refreshed in the <see cref="T:System.Data.DataSet" />.</span></span> <span data-ttu-id="001d9-493">这不包括受不返回行的语句影响的行。</span><span class="sxs-lookup"><span data-stu-id="001d9-493">This does not include rows affected by statements that do not return rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-494"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法使用关联的 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 属性指定的 SELECT 语句从数据源中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-494">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method retrieves rows from the data source using the SELECT statement specified by an associated <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property.</span></span> <span data-ttu-id="001d9-495">与 SELECT 语句关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-495">The connection object associated with the SELECT statement must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-496">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前关闭连接，则会打开该连接，以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-496">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-497">如果在调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-497">If the connection is open before <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-498">然后 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作将行添加到 <xref:System.Data.DataSet>中的目标 <xref:System.Data.DataTable> 对象，并创建 <xref:System.Data.DataTable> 对象（如果它们尚不存在）。</span><span class="sxs-lookup"><span data-stu-id="001d9-498">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation then adds the rows to destination <xref:System.Data.DataTable> objects in the <xref:System.Data.DataSet>, creating the <xref:System.Data.DataTable> objects if they do not already exist.</span></span> <span data-ttu-id="001d9-499">创建 <xref:System.Data.DataTable> 对象时，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 操作通常只创建列名称元数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-499">When creating <xref:System.Data.DataTable> objects, the <xref:System.Data.Common.DbDataAdapter.Fill%2A> operation normally creates only column name metadata.</span></span> <span data-ttu-id="001d9-500">但是，如果 <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> 属性设置为 `AddWithKey`，则还会创建相应的主键和约束。</span><span class="sxs-lookup"><span data-stu-id="001d9-500">However, if the <xref:System.Data.IDataAdapter.MissingSchemaAction%2A> property is set to `AddWithKey`, appropriate primary keys and constraints are also created.</span></span>  
  
 <span data-ttu-id="001d9-501">如果 <xref:System.Data.Common.DbDataAdapter> 在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等来为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-501">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-502">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-502">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-503">当将多个结果集添加到 <xref:System.Data.DataSet> 时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-503">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-504">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-504">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on).</span></span> <span data-ttu-id="001d9-505">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-505">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-506"><xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-506">The <xref:System.Data.Common.DbDataAdapter.Fill%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-507">在这种情况下，<xref:System.Data.Common.DbDataAdapter.Fill%2A> 执行区分大小写的比较来查找相应的表，如果不存在完全匹配项，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="001d9-507">In such situations, <xref:System.Data.Common.DbDataAdapter.Fill%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="001d9-508">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-508">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.Fill(dataset, "aaa"); // Fills "aaa", which already exists in the DataSet.  
adapter.Fill(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="001d9-509">如果调用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-509">If <xref:System.Data.Common.DbDataAdapter.Fill%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-510">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-510">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-511">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-511">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.Fill(dataset, "AAA"); // Fills table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-512">您可以在同一 <xref:System.Data.DataTable>上多次使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-512">You can use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method multiple times on the same <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-513">如果存在主键，则传入行与已存在的匹配行合并在一起。</span><span class="sxs-lookup"><span data-stu-id="001d9-513">If a primary key exists, incoming rows are merged with matching rows that already exist.</span></span> <span data-ttu-id="001d9-514">如果主键不存在，将在 <xref:System.Data.DataTable>中追加传入行。</span><span class="sxs-lookup"><span data-stu-id="001d9-514">If no primary key exists, incoming rows are appended to the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-515">如果 `SelectCommand` 返回 OUTER JOIN 的结果，则 `DataAdapter` 不会为生成的 <xref:System.Data.DataTable.PrimaryKey%2A> 设置 <xref:System.Data.DataTable>值。</span><span class="sxs-lookup"><span data-stu-id="001d9-515">If the `SelectCommand` returns the results of an OUTER JOIN, the `DataAdapter` does not set a <xref:System.Data.DataTable.PrimaryKey%2A> value for the resulting <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-516">必须显式定义主键，以确保正确解析重复行。</span><span class="sxs-lookup"><span data-stu-id="001d9-516">You must explicitly define the primary key to ensure that duplicate rows are resolved correctly.</span></span> <span data-ttu-id="001d9-517">有关详细信息，请参阅[定义主键](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-517">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-518">当处理返回多个结果的批处理 SQL 语句时，.NET Framework 数据提供程序的 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 和 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-518">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.Fill%2A> and <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for a .NET Framework data provider retrieves schema information for only the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-519">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-519">The source table is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="001d9-520"><paramref name="startRecord" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="001d9-520">The <paramref name="startRecord" /> parameter is less than 0.</span></span>  
  
<span data-ttu-id="001d9-521">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-521">-or-</span></span> 
<span data-ttu-id="001d9-522"><paramref name="maxRecords" /> 参数小于 0。</span><span class="sxs-lookup"><span data-stu-id="001d9-522">The <paramref name="maxRecords" /> parameter is less than 0.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-523"><see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> 方法的此重载受保护，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-523">This overload of the <see cref="M:System.Data.IDataAdapter.Fill(System.Data.DataSet)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-524">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-524">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-525">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-525">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillCommandBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Data.CommandBehavior FillCommandBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandBehavior FillCommandBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property FillCommandBehavior As CommandBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Data::CommandBehavior FillCommandBehavior { System::Data::CommandBehavior get(); void set(System::Data::CommandBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillCommandBehavior : System.Data.CommandBehavior with get, set" Usage="System.Data.Common.DbDataAdapter.FillCommandBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-526">获取或设置用于填充数据适配器的命令的行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-526">Gets or sets the behavior of the command used to fill the data adapter.</span></span></summary>
        <value><span data-ttu-id="001d9-527">用于填充数据适配器的命令的 <see cref="T:System.Data.CommandBehavior" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-527">The <see cref="T:System.Data.CommandBehavior" /> of the command used to fill the data adapter.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-528">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-528">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-529">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-529">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillError">
      <MemberSignature Language="C#" Value="public event System.Data.FillErrorEventHandler FillError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.FillErrorEventHandler FillError" />
      <MemberSignature Language="DocId" Value="E:System.Data.Common.DbDataAdapter.FillError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FillError As FillErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::FillErrorEventHandler ^ FillError;" />
      <MemberSignature Language="F#" Value="member this.FillError : System.Data.FillErrorEventHandler " Usage="member this.FillError : System.Data.FillErrorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Data.DataSysDescription("DbDataAdapter_FillError")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.FillErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-530">在填充操作过程中出现错误时返回。</span><span class="sxs-lookup"><span data-stu-id="001d9-530">Returned when an error occurs during a fill operation.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="001d9-531">将 <see cref="T:System.Data.DataTable" /> 添加到 <see cref="T:System.Data.DataSet" /> 中，并配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-531">Adds a <see cref="T:System.Data.DataTable" /> to a <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-532">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-532">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-533">要插入架构的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-533">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="001d9-534"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-534">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <summary><span data-ttu-id="001d9-535">将名为“Table”的 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" />，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-535">Adds a <see cref="T:System.Data.DataTable" /> named "Table" to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-536">一个引用，指向添加到 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataSet" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-536">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-537">此方法使用 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>从数据源中检索架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-537">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="001d9-538"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作向目标 <xref:System.Data.DataSet>添加 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-538">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-539">然后，将列添加到 <xref:System.Data.DataTable>的 <xref:System.Data.DataColumnCollection> 中，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="001d9-539">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="001d9-540"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="001d9-540"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="001d9-541">您必须单独设置 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-541">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="001d9-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 还根据以下规则配置 <xref:System.Data.DataTable.PrimaryKey%2A> 和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="001d9-542"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="001d9-543">如果 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>返回一个或多个主键列，则将它们用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-543">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="001d9-544">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="001d9-544">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="001d9-545">如果任何列可为 null，则会将 <xref:System.Data.UniqueConstraint> 添加到 <xref:System.Data.ConstraintCollection>，但不会设置 <xref:System.Data.DataTable.PrimaryKey%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-545">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="001d9-546">如果为主键列和唯一列都返回，则主键列将用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-546">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-547">请注意，根据前面的规则将主键和 unique 约束添加到 <xref:System.Data.ConstraintCollection> 中，但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="001d9-547">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="001d9-548">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-548">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="001d9-549">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="001d9-549">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="001d9-550">有关指定查询提示的详细信息，请参阅[查询提示（transact-sql）](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="001d9-550">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="001d9-551">在 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 期间使用主键信息查找并替换其键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="001d9-551">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="001d9-552">如果这不是所需的行为，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，而不请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-552">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="001d9-553">如果 <xref:System.Data.IDataAdapter> 在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等来为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-553">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-554">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-554">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-555">当将多个结果集添加到 <xref:System.Data.DataSet> 时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-555">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-556">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-556">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="001d9-557">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-557">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-558">与 select 命令关联的 <xref:System.Data.IDbConnection> 对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-558">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="001d9-559">如果 <xref:System.Data.IDbConnection> 在 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 调用之前关闭，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-559">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-560">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前连接处于打开状态，则该连接会保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-560">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-561">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-561">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-562">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-562">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-563">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-563">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="001d9-564">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="001d9-564">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="001d9-565">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="001d9-565">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="001d9-566">下面的示例使用派生类 <xref:System.Data.SqlClient.SqlDataAdapter>来使用架构填充 <xref:System.Data.DataSet>，并返回 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="001d9-566">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-567">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="001d9-567">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-568">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-568">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="001d9-569">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-569">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="001d9-570"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-570">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <summary><span data-ttu-id="001d9-571">根据指定的 <see cref="T:System.Data.DataTable" /> 配置指定 <see cref="T:System.Data.SchemaType" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-571">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-572">一个 <see cref="T:System.Data.DataTable" />，其中包含从数据源返回的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-572">A <see cref="T:System.Data.DataTable" /> that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-573"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 方法使用 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>从数据源检索架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-573">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="001d9-574">与 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-574">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-575">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前关闭连接，则会打开该连接，以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-575">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-576">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-576">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-577"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作返回一个 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-577">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation returns a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="001d9-578">然后，将列添加到 <xref:System.Data.DataTable>的 <xref:System.Data.DataColumnCollection> 中，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="001d9-578">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="001d9-579"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="001d9-579"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="001d9-580">您必须单独设置 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-580">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="001d9-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 还根据以下规则配置 <xref:System.Data.DataTable.PrimaryKey%2A> 和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="001d9-581"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="001d9-582">如果已为 `DataTable`定义了 <xref:System.Data.DataTable.PrimaryKey%2A>，或者 `DataTable` 包含数据，则不会设置 `PrimaryKey` 属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-582">If a <xref:System.Data.DataTable.PrimaryKey%2A> has already been defined for the `DataTable`, or the `DataTable` contains data, the `PrimaryKey` property will not be set.</span></span>  
  
-   <span data-ttu-id="001d9-583">如果 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>返回一个或多个主键列，则将它们用作 `DataTable`的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-583">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the `DataTable`.</span></span>  
  
-   <span data-ttu-id="001d9-584">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="001d9-584">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="001d9-585">如果任何列可为 null，则会将 <xref:System.Data.UniqueConstraint> 添加到 <xref:System.Data.ConstraintCollection>，但不会设置 `PrimaryKey` 属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-585">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the `PrimaryKey` property is not set.</span></span>  
  
-   <span data-ttu-id="001d9-586">如果为主键列和唯一列都返回，则主键列将用作 `DataTable`的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-586">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the `DataTable`.</span></span>  
  
 <span data-ttu-id="001d9-587">请注意，根据前面的规则将主键和 unique 约束添加到 <xref:System.Data.ConstraintCollection> 中，但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="001d9-587">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span> <span data-ttu-id="001d9-588">此过程可能需要多次往返服务器。</span><span class="sxs-lookup"><span data-stu-id="001d9-588">This process may require several round-trips to the server.</span></span>  
  
 <span data-ttu-id="001d9-589">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-589">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="001d9-590">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="001d9-590">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="001d9-591">有关指定查询提示的详细信息，请参阅[查询提示（transact-sql）](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="001d9-591">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="001d9-592">如果 <xref:System.Data.Common.DbDataAdapter> 在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等来为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-592">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-593">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-593">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-594">当将多个结果集添加到 <xref:System.Data.DataSet> 时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-594">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-595">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-595">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="001d9-596">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-596">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="001d9-597"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="001d9-598">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法将行添加到 <xref:System.Data.DataTable>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-598">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-599">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-599">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-600">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-600">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-601">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-601">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="001d9-602">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="001d9-602">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="001d9-603">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="001d9-603">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="001d9-604">下面的示例使用派生类 <xref:System.Data.SqlClient.SqlDataAdapter>来使用架构填充 <xref:System.Data.DataSet>，并返回 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-604">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-605">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="001d9-605">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-606">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-606">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="public System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * string -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-607">要插入架构的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-607">A <see cref="T:System.Data.DataSet" /> to insert the schema in.</span></span></param>
        <param name="schemaType"><span data-ttu-id="001d9-608"><see cref="T:System.Data.SchemaType" /> 值之一，指定如何插入架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-608">One of the <see cref="T:System.Data.SchemaType" /> values that specify how to insert the schema.</span></span></param>
        <param name="srcTable"><span data-ttu-id="001d9-609">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-609">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="001d9-610">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 和 <see cref="T:System.Data.DataTable" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-610">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based upon the specified <see cref="T:System.Data.SchemaType" /> and <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-611">一个引用，指向添加到 <see cref="T:System.Data.DataTable" /> 的 <see cref="T:System.Data.DataSet" /> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-611">A reference to a collection of <see cref="T:System.Data.DataTable" /> objects that were added to the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-612">此方法使用 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>从数据源中检索架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-612">This method retrieves the schema information from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 <span data-ttu-id="001d9-613"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作向目标 <xref:System.Data.DataSet>添加 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-613">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-614">然后，将列添加到 <xref:System.Data.DataTable>的 <xref:System.Data.DataColumnCollection> 中，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="001d9-614">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="001d9-615"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="001d9-615"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="001d9-616">您必须单独设置 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-616">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="001d9-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 还根据以下规则配置 <xref:System.Data.DataTable.PrimaryKey%2A> 和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="001d9-617"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="001d9-618">如果 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>返回一个或多个主键列，则将它们用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-618">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="001d9-619">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="001d9-619">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="001d9-620">如果任何列可为 null，则会将 <xref:System.Data.UniqueConstraint> 添加到 <xref:System.Data.ConstraintCollection>，但不会设置 <xref:System.Data.DataTable.PrimaryKey%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-620">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="001d9-621">如果为主键列和唯一列都返回，则主键列将用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-621">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-622">请注意，根据前面的规则将主键和 unique 约束添加到 <xref:System.Data.ConstraintCollection> 中，但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="001d9-622">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="001d9-623">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-623">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="001d9-624">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="001d9-624">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="001d9-625">有关指定查询提示的详细信息，请参阅[查询提示（transact-sql）](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="001d9-625">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="001d9-626">在 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 期间使用主键信息查找并替换其键列匹配的任何行。</span><span class="sxs-lookup"><span data-stu-id="001d9-626">Primary key information is used during <xref:System.Data.Common.DbDataAdapter.Fill%2A> to find and replace any rows whose key columns match.</span></span> <span data-ttu-id="001d9-627">如果这不是所需的行为，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，而不请求架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-627">If this is not the desired behavior, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> without requesting schema information.</span></span>  
  
 <span data-ttu-id="001d9-628">如果 <xref:System.Data.Common.DbDataAdapter> 在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等来为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-628">If the <xref:System.Data.Common.DbDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-629">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-629">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-630">当将多个结果集添加到 <xref:System.Data.DataSet> 时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-630">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-631">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-631">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="001d9-632">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-632">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-633"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-633">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-634">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 执行区分大小写的比较来查找相应的表，如果不存在完全匹配项，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="001d9-634">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="001d9-635">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-635">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="001d9-636">如果调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-636">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-637">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-637">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-638">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-638">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-639">与 select 命令关联的 <xref:System.Data.IDbConnection> 对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-639">The <xref:System.Data.IDbConnection> object associated with the select command must be valid, but it does not need to open.</span></span> <span data-ttu-id="001d9-640">如果 <xref:System.Data.IDbConnection> 在 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 调用之前关闭，则将其打开以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-640">If the <xref:System.Data.IDbConnection> is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-641">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前连接处于打开状态，则该连接会保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-641">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is left open.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-642">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-642">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-643">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-643">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-644">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-644">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="001d9-645">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="001d9-645">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="001d9-646">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="001d9-646">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="001d9-647">下面的示例使用派生类 <xref:System.Data.SqlClient.SqlDataAdapter>来使用架构填充 <xref:System.Data.DataSet>，并返回 <xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="001d9-647">The following example uses the derived class, <xref:System.Data.SqlClient.SqlDataAdapter>, to fill a <xref:System.Data.DataSet> with the schema, and returns a <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.FillSchema2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.FillSchema2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="001d9-648">找不到从中获取架构的源表。</span><span class="sxs-lookup"><span data-stu-id="001d9-648">A source table from which to get the schema could not be found.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-649">DbProviderFactories</span><span class="sxs-lookup"><span data-stu-id="001d9-649">DbProviderFactories</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-650">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-650">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDbCommand command, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable FillSchema(class System.Data.DataTable dataTable, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ FillSchema(System::Data::DataTable ^ dataTable, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataTable * System.Data.SchemaType * System.Data.IDbCommand * System.Data.CommandBehavior -&gt; System.Data.DataTable" Usage="dbDataAdapter.FillSchema (dataTable, schemaType, command, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="001d9-651">要用数据源中的架构填充的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-651">The <see cref="T:System.Data.DataTable" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="001d9-652"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-652">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="001d9-653">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-653">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="behavior"><span data-ttu-id="001d9-654"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-654">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="001d9-655">根据指定的 <see cref="T:System.Data.DataTable" />、命令字符串以及 <see cref="T:System.Data.SchemaType" /> 值配置指定 <see cref="T:System.Data.CommandBehavior" /> 的架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-655">Configures the schema of the specified <see cref="T:System.Data.DataTable" /> based on the specified <see cref="T:System.Data.SchemaType" />, command string, and <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="001d9-656">包含从数据源返回的架构信息的 <see cref="T:System.Data.DataTable" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-656">A of <see cref="T:System.Data.DataTable" /> object that contains schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-657"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 方法使用 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>从数据源检索架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-657">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="001d9-658">与 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-658">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-659">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前关闭连接，则会打开该连接，以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-659">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-660">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-660">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-661"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作向目标 <xref:System.Data.DataSet>添加 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-661">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-662">然后，将列添加到 <xref:System.Data.DataTable>的 <xref:System.Data.DataColumnCollection> 中，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="001d9-662">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="001d9-663"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="001d9-663"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="001d9-664">您必须单独设置 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-664">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="001d9-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 还根据以下规则配置 <xref:System.Data.DataTable.PrimaryKey%2A> 和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="001d9-665"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="001d9-666">如果 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>返回一个或多个主键列，则将它们用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-666">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="001d9-667">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="001d9-667">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="001d9-668">如果任何列可为 null，则会将 <xref:System.Data.UniqueConstraint> 添加到 <xref:System.Data.ConstraintCollection>，但不会设置 <xref:System.Data.DataTable.PrimaryKey%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-668">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="001d9-669">如果为主键列和唯一列都返回，则主键列将用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-669">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-670">请注意，根据前面的规则将主键和 unique 约束添加到 <xref:System.Data.ConstraintCollection> 中，但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="001d9-670">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="001d9-671">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-671">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="001d9-672">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="001d9-672">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="001d9-673">有关指定查询提示的详细信息，请参阅[查询提示（transact-sql）](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="001d9-673">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="001d9-674">如果 <xref:System.Data.IDataAdapter> 在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等来为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-674">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-675">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-675">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-676">当将多个结果集添加到 <xref:System.Data.DataSet> 时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-676">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-677">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-677">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="001d9-678">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-678">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="001d9-679"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="001d9-680">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法将行添加到 <xref:System.Data.DataTable>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-680">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-681">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-681">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-682">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-682">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-683">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-683">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="001d9-684">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="001d9-684">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="001d9-685">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="001d9-685">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-686">此 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 方法的实现是受保护的，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-686">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-687">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-687">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-688">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-688">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FillSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, System.Data.IDbCommand command, string srcTable, System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable[] FillSchema(class System.Data.DataSet dataSet, valuetype System.Data.SchemaType schemaType, class System.Data.IDbCommand command, string srcTable, valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;System::Data::DataTable ^&gt; ^ FillSchema(System::Data::DataSet ^ dataSet, System::Data::SchemaType schemaType, System::Data::IDbCommand ^ command, System::String ^ srcTable, System::Data::CommandBehavior behavior);" />
      <MemberSignature Language="F#" Value="override this.FillSchema : System.Data.DataSet * System.Data.SchemaType * System.Data.IDbCommand * string * System.Data.CommandBehavior -&gt; System.Data.DataTable[]" Usage="dbDataAdapter.FillSchema (dataSet, schemaType, command, srcTable, behavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="schemaType" Type="System.Data.SchemaType" />
        <Parameter Name="command" Type="System.Data.IDbCommand" />
        <Parameter Name="srcTable" Type="System.String" />
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-689">要用数据源中的架构填充的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-689">The <see cref="T:System.Data.DataSet" /> to be filled with the schema from the data source.</span></span></param>
        <param name="schemaType"><span data-ttu-id="001d9-690"><see cref="T:System.Data.SchemaType" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-690">One of the <see cref="T:System.Data.SchemaType" /> values.</span></span></param>
        <param name="command"><span data-ttu-id="001d9-691">用于从数据源中检索行的 SQL SELECT 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-691">The SQL SELECT statement used to retrieve rows from the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="001d9-692">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-692">The name of the source table to use for table mapping.</span></span></param>
        <param name="behavior"><span data-ttu-id="001d9-693"><see cref="T:System.Data.CommandBehavior" /> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-693">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="001d9-694">将 <see cref="T:System.Data.DataTable" /> 添加到指定的 <see cref="T:System.Data.DataSet" /> 中，并根据指定的 <see cref="T:System.Data.SchemaType" /> 配置架构以匹配数据源中的架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-694">Adds a <see cref="T:System.Data.DataTable" /> to the specified <see cref="T:System.Data.DataSet" /> and configures the schema to match that in the data source based on the specified <see cref="T:System.Data.SchemaType" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-695"><see cref="T:System.Data.DataTable" /> 对象的数组，这些对象包含从数据源返回的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-695">An array of <see cref="T:System.Data.DataTable" /> objects that contain schema information returned from the data source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-696"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 方法使用 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>从数据源检索架构。</span><span class="sxs-lookup"><span data-stu-id="001d9-696">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method retrieves the schema from the data source using the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="001d9-697">与 <xref:System.Data.IDbDataAdapter.SelectCommand%2A> 关联的连接对象必须有效，但不需要打开。</span><span class="sxs-lookup"><span data-stu-id="001d9-697">The connection object associated with the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> must be valid, but it does not need to be open.</span></span> <span data-ttu-id="001d9-698">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前关闭连接，则会打开该连接，以检索数据，然后关闭。</span><span class="sxs-lookup"><span data-stu-id="001d9-698">If the connection is closed before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it is opened to retrieve data, then closed.</span></span> <span data-ttu-id="001d9-699">如果在调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 之前连接处于打开状态，则该连接将保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="001d9-699">If the connection is open before <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called, it remains open.</span></span>  
  
 <span data-ttu-id="001d9-700"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 操作向目标 <xref:System.Data.DataSet>添加 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-700">A <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> operation adds a <xref:System.Data.DataTable> to the destination <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-701">然后，将列添加到 <xref:System.Data.DataTable>的 <xref:System.Data.DataColumnCollection> 中，并配置以下 <xref:System.Data.DataColumn> 属性（如果它们存在于数据源中）：</span><span class="sxs-lookup"><span data-stu-id="001d9-701">It then adds columns to the <xref:System.Data.DataColumnCollection> of the <xref:System.Data.DataTable>, and configures the following <xref:System.Data.DataColumn> properties if they exist at the data source:</span></span>  
  
-   <xref:System.Data.DataColumn.AllowDBNull%2A>  
  
-   <span data-ttu-id="001d9-702"><xref:System.Data.DataColumn.AutoIncrement%2A></span><span class="sxs-lookup"><span data-stu-id="001d9-702"><xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="001d9-703">您必须单独设置 <xref:System.Data.DataColumn.AutoIncrementStep%2A> 和 <xref:System.Data.DataColumn.AutoIncrementSeed%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-703">You must set <xref:System.Data.DataColumn.AutoIncrementStep%2A> and <xref:System.Data.DataColumn.AutoIncrementSeed%2A> separately.</span></span>  
  
-   <xref:System.Data.DataColumn.MaxLength%2A>  
  
-   <xref:System.Data.DataColumn.ReadOnly%2A>  
  
-   <xref:System.Data.DataColumn.Unique%2A>  
  
 <span data-ttu-id="001d9-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 还根据以下规则配置 <xref:System.Data.DataTable.PrimaryKey%2A> 和 <xref:System.Data.DataTable.Constraints%2A> 属性：</span><span class="sxs-lookup"><span data-stu-id="001d9-704"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> also configures the <xref:System.Data.DataTable.PrimaryKey%2A> and <xref:System.Data.DataTable.Constraints%2A> properties according to the following rules:</span></span>  
  
-   <span data-ttu-id="001d9-705">如果 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>返回一个或多个主键列，则将它们用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-705">If one or more primary key columns are returned by the <xref:System.Data.IDbDataAdapter.SelectCommand%2A>, they are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
-   <span data-ttu-id="001d9-706">如果未返回主键列但唯一列为，则当且仅当不可 null 所有唯一列时，才将唯一列用作主键。</span><span class="sxs-lookup"><span data-stu-id="001d9-706">If no primary key columns are returned but unique columns are, the unique columns are used as the primary key if, and only if, all the unique columns are nonnullable.</span></span> <span data-ttu-id="001d9-707">如果任何列可为 null，则会将 <xref:System.Data.UniqueConstraint> 添加到 <xref:System.Data.ConstraintCollection>，但不会设置 <xref:System.Data.DataTable.PrimaryKey%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-707">If any of the columns are nullable, a <xref:System.Data.UniqueConstraint> is added to the <xref:System.Data.ConstraintCollection>, but the <xref:System.Data.DataTable.PrimaryKey%2A> property is not set.</span></span>  
  
-   <span data-ttu-id="001d9-708">如果为主键列和唯一列都返回，则主键列将用作 <xref:System.Data.DataTable>的主键列。</span><span class="sxs-lookup"><span data-stu-id="001d9-708">If both primary key columns and unique columns are returned, the primary key columns are used as the primary key columns for the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-709">请注意，根据前面的规则将主键和 unique 约束添加到 <xref:System.Data.ConstraintCollection> 中，但不会添加其他约束类型。</span><span class="sxs-lookup"><span data-stu-id="001d9-709">Note that primary keys and unique constraints are added to the <xref:System.Data.ConstraintCollection> according to the preceding rules, but other constraint types are not added.</span></span>  
  
 <span data-ttu-id="001d9-710">如果在 SQL Server 表中的一列或多列上定义了唯一聚集索引，并且在一组单独的列上定义了 primary key 约束，则将返回聚集索引中的列的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-710">If a unique clustered index is defined on a column or columns in a SQL Server table and the primary key constraint is defined on a separate set of columns, then the names of the columns in the clustered index will be returned.</span></span> <span data-ttu-id="001d9-711">若要返回主键列的名称，请使用带有指定主键索引名称的 SELECT 语句的查询提示。</span><span class="sxs-lookup"><span data-stu-id="001d9-711">To return the name or names of the primary key columns, use a query hint with the SELECT statement that specifies the name of the primary key index.</span></span> <span data-ttu-id="001d9-712">有关指定查询提示的详细信息，请参阅[查询提示（transact-sql）](https://msdn.microsoft.com/library/ms181714.aspx)。</span><span class="sxs-lookup"><span data-stu-id="001d9-712">For more information about specifying query hints, see [Query Hint (Transact-SQL)](https://msdn.microsoft.com/library/ms181714.aspx).</span></span>  
  
 <span data-ttu-id="001d9-713">如果 <xref:System.Data.IDataAdapter> 在填充 <xref:System.Data.DataTable>时遇到重复的列，则它将使用模式 "*columnname*1"、"*columnname*2"、"*columnname*3" 等来为后续列生成名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-713">If the <xref:System.Data.IDataAdapter> encounters duplicate columns while populating a <xref:System.Data.DataTable>, it generates names for the subsequent columns, using the pattern "*columnname*1", "*columnname*2", "*columnname*3", and so on.</span></span> <span data-ttu-id="001d9-714">如果传入数据包含未命名列，则这些列将按照模式 "Column1"、"Column2" 等放置在 <xref:System.Data.DataSet> 中。</span><span class="sxs-lookup"><span data-stu-id="001d9-714">If the incoming data contains unnamed columns, they are placed in the <xref:System.Data.DataSet> according to the pattern "Column1", "Column2", and so on.</span></span> <span data-ttu-id="001d9-715">当将多个结果集添加到 <xref:System.Data.DataSet> 时，每个结果集将放在一个单独的表中。</span><span class="sxs-lookup"><span data-stu-id="001d9-715">When multiple result sets are added to the <xref:System.Data.DataSet> each result set is placed in a separate table.</span></span> <span data-ttu-id="001d9-716">附加的结果集通过将整数值追加到指定的表名来命名（例如，"表"、"Table1"、"Table2" 等）。</span><span class="sxs-lookup"><span data-stu-id="001d9-716">Additional result sets are named by appending integral values to the specified table name (for example, "Table", "Table1", "Table2", and so on.).</span></span> <span data-ttu-id="001d9-717">使用列和表名称的应用程序应确保不会与这些命名模式发生冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-717">Applications using column and table names should ensure that conflicts with these naming patterns does not occur.</span></span>  
  
 <span data-ttu-id="001d9-718"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-718">The <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-719">在这种情况下，<xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 执行区分大小写的比较来查找相应的表，如果不存在完全匹配项，则创建新表。</span><span class="sxs-lookup"><span data-stu-id="001d9-719">In such situations, <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> performs a case-sensitive comparison to find the corresponding table, and creates a new table if no exact match exists.</span></span> <span data-ttu-id="001d9-720">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-720">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
dataset.Tables.Add("AAA");  
adapter.FillSchema(dataset, "aaa"); // Fills the schema of "aaa", which already exists in the DataSet.  
adapter.FillSchema(dataset, "Aaa"); // Adds a new table called "Aaa".  
```  
  
 <span data-ttu-id="001d9-721">如果调用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-721">If <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-722">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-722">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-723">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-723">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
dataset.Tables.Add("aaa");  
adapter.FillSchema(dataset, "AAA"); // Fills the schema of table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 不返回任何行。</span><span class="sxs-lookup"><span data-stu-id="001d9-724"><xref:System.Data.Common.DbDataAdapter.FillSchema%2A> does not return any rows.</span></span> <span data-ttu-id="001d9-725">使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A> 方法将行添加到 <xref:System.Data.DataTable>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-725">Use the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method to add rows to a <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-726">当处理返回多个结果的批处理 SQL 语句时，OLE DB 的 .NET Framework 数据提供程序 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 的实现仅检索第一个结果的架构信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-726">When handling batch SQL statements that return multiple results, the implementation of <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> for the .NET Framework Data Provider for OLE DB retrieves schema information for only the first result.</span></span> <span data-ttu-id="001d9-727">若要检索多个结果的架构信息，请使用 <xref:System.Data.Common.DbDataAdapter.Fill%2A>，并将 <xref:System.Data.MissingSchemaAction> 设置为 `AddWithKey`。</span><span class="sxs-lookup"><span data-stu-id="001d9-727">To retrieve schema information for multiple results, use <xref:System.Data.Common.DbDataAdapter.Fill%2A> with the <xref:System.Data.MissingSchemaAction> set to `AddWithKey`.</span></span>  
  
 <span data-ttu-id="001d9-728">当使用 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A> 时，用于 SQL Server 的 .NET Framework 数据提供程序将 FOR BROWSE 子句追加到正在执行的语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-728">When using <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>, the .NET Framework Data Provider for SQL Server appends a FOR BROWSE clause to the statement being executed.</span></span> <span data-ttu-id="001d9-729">用户应该注意潜在的副作用，例如对 SET FMTONLY ON 语句的使用产生的干扰。</span><span class="sxs-lookup"><span data-stu-id="001d9-729">The user should be aware of potential side effects, such as interference with the use of SET FMTONLY ON statements.</span></span> <span data-ttu-id="001d9-730">有关详细信息，请参阅 [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql)。</span><span class="sxs-lookup"><span data-stu-id="001d9-730">For more information, see [SET FMTONLY (Transact-SQL)](/sql/t-sql/statements/set-fmtonly-transact-sql).</span></span>
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-731">此 <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> 方法的实现是受保护的，旨在供 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-731">This implementation of the <see cref="M:System.Data.IDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)" /> method is protected and is designed for use by a .NET Framework data provider.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-732">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-732">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-733">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-733">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedParameter">
      <MemberSignature Language="C#" Value="protected virtual System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.IDataParameter GetBatchedParameter(int32 commandIdentifier, int32 parameterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedParameter (commandIdentifier As Integer, parameterIndex As Integer) As IDataParameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::IDataParameter ^ GetBatchedParameter(int commandIdentifier, int parameterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedParameter : int * int -&gt; System.Data.IDataParameter&#xA;override this.GetBatchedParameter : int * int -&gt; System.Data.IDataParameter" Usage="dbDataAdapter.GetBatchedParameter (commandIdentifier, parameterIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="parameterIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="001d9-734">要从中检索参数的命令的索引。</span><span class="sxs-lookup"><span data-stu-id="001d9-734">The index of the command to retrieve the parameter from.</span></span></param>
        <param name="parameterIndex"><span data-ttu-id="001d9-735">命令内的参数的索引。</span><span class="sxs-lookup"><span data-stu-id="001d9-735">The index of the parameter within the command.</span></span></param>
        <summary><span data-ttu-id="001d9-736">从当前批处理中的其中一个命令返回一个 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-736">Returns a <see cref="T:System.Data.IDataParameter" /> from one of the commands in the current batch.</span></span></summary>
        <returns><span data-ttu-id="001d9-737">指定的 <see cref="T:System.Data.IDataParameter" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-737">The <see cref="T:System.Data.IDataParameter" /> specified.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-738">在 <xref:System.Data.Common.DbDataAdapter>中，此方法将引发 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-738">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="001d9-739">继承自的类 <xref:System.Data.Common.DbDataAdapter> 重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="001d9-739">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="001d9-740">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-740">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-741">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-741">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="001d9-742">如果从 <see cref="T:System.Data.Common.DbDataAdapter" /> 继承的类支持批处理，则该类将重写此方法以允许用户执行批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-742">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method to allow users to execute a batch.</span></span> <span data-ttu-id="001d9-743">实现使用提供的 <paramref name="commandIdentifier" /> 来定位请求的命令，然后使用提供的 <paramref name="parameterIndex" /> 来定位请求的参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-743">An implementation uses the <paramref name="commandIdentifier" /> provided to locate the requested command, then uses the <paramref name="parameterIndex" /> provided to locate the requested parameter.</span></span> <span data-ttu-id="001d9-744">例如，<paramref name="commandIdentifier" /> 0 和 <paramref name="parameterIndex" /> 0 返回批处理中第一个命令的第一个参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-744">For example, a <paramref name="commandIdentifier" /> of 0 and a <paramref name="parameterIndex" /> of 0 returns the first parameter from the first command in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-745">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-745">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-746">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-746">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBatchedRecordsAffected">
      <MemberSignature Language="C#" Value="protected virtual bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetBatchedRecordsAffected(int32 commandIdentifier, [out] int32&amp; recordsAffected, [out] class System.Exception&amp; error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBatchedRecordsAffected (commandIdentifier As Integer, ByRef recordsAffected As Integer, ByRef error As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetBatchedRecordsAffected(int commandIdentifier, [Runtime::InteropServices::Out] int % recordsAffected, [Runtime::InteropServices::Out] Exception ^ % error);" />
      <MemberSignature Language="F#" Value="abstract member GetBatchedRecordsAffected : int * int * Exception -&gt; bool&#xA;override this.GetBatchedRecordsAffected : int * int * Exception -&gt; bool" Usage="dbDataAdapter.GetBatchedRecordsAffected (commandIdentifier, recordsAffected, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandIdentifier" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="recordsAffected" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="error" Type="System.Exception" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="commandIdentifier"><span data-ttu-id="001d9-747">该批次内单个命令的从零开始的列序号。</span><span class="sxs-lookup"><span data-stu-id="001d9-747">The zero-based column ordinal of the individual command within the batch.</span></span></param>
        <param name="recordsAffected"><span data-ttu-id="001d9-748">数据存储区中受该批内的指定命令影响的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-748">The number of rows affected in the data store by the specified command within the batch.</span></span></param>
        <param name="error"><span data-ttu-id="001d9-749">在执行指定命令期间引发的一个 <see cref="T:System.Exception" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-749">An <see cref="T:System.Exception" /> thrown during execution of the specified command.</span></span> <span data-ttu-id="001d9-750">如果未引发任何异常，则返回 <see langword="null" />（在 Visual Basic 中为 <see langword="Nothing" />）。</span><span class="sxs-lookup"><span data-stu-id="001d9-750">Returns <see langword="null" /> (<see langword="Nothing" /> in Visual Basic) if no exception is thrown.</span></span></param>
        <summary><span data-ttu-id="001d9-751">返回与较大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-751">Returns information about an individual update attempt within a larger batched update.</span></span></summary>
        <returns><span data-ttu-id="001d9-752">与较大的批处理更新内的单次更新尝试有关的信息。</span><span class="sxs-lookup"><span data-stu-id="001d9-752">Information about an individual update attempt within a larger batched update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-753">支持批量更新逻辑的数据访问接口必须覆盖 <xref:System.Data.Common.DbDataAdapter> 类中的一系列虚拟方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-753">Data providers that support batched updating logic must override a series of virtual methods on the <xref:System.Data.Common.DbDataAdapter> class.</span></span> <span data-ttu-id="001d9-754">`GetBatchedRecordsAffected` 表示这些虚拟方法之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-754">`GetBatchedRecordsAffected` represents one of those virtual methods.</span></span> <span data-ttu-id="001d9-755">`DbDataAdapter` 类依赖于 `GetBatchedRecordsAffected` 来确定批处理内单个更新尝试是成功还是失败，以便它能够相应地标记每个相应的 <xref:System.Data.DataRow>。</span><span class="sxs-lookup"><span data-stu-id="001d9-755">The `DbDataAdapter` class relies on `GetBatchedRecordsAffected` to determine the success or failure of individual update attempts within a batch so it can mark each corresponding <xref:System.Data.DataRow> accordingly.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-756">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-756">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFillParameters">
      <MemberSignature Language="C#" Value="public override System.Data.IDataParameter[] GetFillParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.IDataParameter[] GetFillParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.GetFillParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFillParameters () As IDataParameter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Data::IDataParameter ^&gt; ^ GetFillParameters();" />
      <MemberSignature Language="F#" Value="override this.GetFillParameters : unit -&gt; System.Data.IDataParameter[]" Usage="dbDataAdapter.GetFillParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.GetFillParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="001d9-757">获取当执行 SQL SELECT 语句时由用户设置的参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-757">Gets the parameters set by the user when executing an SQL SELECT statement.</span></span></summary>
        <returns><span data-ttu-id="001d9-758"><see cref="T:System.Data.IDataParameter" /> 对象的数组，这些对象包含由用户设置的参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-758">An array of <see cref="T:System.Data.IDataParameter" /> objects that contains the parameters set by the user.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-759">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-759">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeBatching">
      <MemberSignature Language="C#" Value="protected virtual void InitializeBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.InitializeBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeBatching();" />
      <MemberSignature Language="F#" Value="abstract member InitializeBatching : unit -&gt; unit&#xA;override this.InitializeBatching : unit -&gt; unit" Usage="dbDataAdapter.InitializeBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="001d9-760">初始化 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-760">Initializes batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-761">在 <xref:System.Data.Common.DbDataAdapter>中，此方法将引发 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-761">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="001d9-762">继承自的类 <xref:System.Data.Common.DbDataAdapter> 重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="001d9-762">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="001d9-763">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-763">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-764">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-764">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="001d9-765">如果从 <see cref="T:System.Data.Common.DbDataAdapter" /> 继承的类支持批处理，则该类将重写此方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-765">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="001d9-766">此方法为类提供了初始化支持批处理所需的任何资源的机会。</span><span class="sxs-lookup"><span data-stu-id="001d9-766">This method gives the class the opportunity to initialize any resources necessary to support batching.</span></span> <span data-ttu-id="001d9-767">例如，类可以分配数据结构来保存批处理中的命令集。</span><span class="sxs-lookup"><span data-stu-id="001d9-767">For example, a class may allocate a data structure to hold the set of commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-768">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-768">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-769">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-769">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ InsertCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-770">获取或设置用于在数据源中插入新记录的命令。</span><span class="sxs-lookup"><span data-stu-id="001d9-770">Gets or sets a command used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="001d9-771">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源中。</span><span class="sxs-lookup"><span data-stu-id="001d9-771">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-772">在 <xref:System.Data.Common.DbDataAdapter.Update%2A>过程中，如果未设置此属性，并且 <xref:System.Data.DataSet>中存在主键信息，则将自动生成 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-772">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-773">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter>，并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-773">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-774">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-774">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-775">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-775">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-776">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-776">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnFillError">
      <MemberSignature Language="C#" Value="protected virtual void OnFillError (System.Data.FillErrorEventArgs value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFillError(class System.Data.FillErrorEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnFillError(System.Data.FillErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFillError (value As FillErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFillError(System::Data::FillErrorEventArgs ^ value);" />
      <MemberSignature Language="F#" Value="abstract member OnFillError : System.Data.FillErrorEventArgs -&gt; unit&#xA;override this.OnFillError : System.Data.FillErrorEventArgs -&gt; unit" Usage="dbDataAdapter.OnFillError value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.FillErrorEventArgs" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="001d9-777">事件的相关数据。</span><span class="sxs-lookup"><span data-stu-id="001d9-777">The data for the event.</span></span></param>
        <summary><span data-ttu-id="001d9-778">引发 <see cref="E:System.Data.Common.DataAdapter.FillError" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-778">Raises the <see cref="E:System.Data.Common.DataAdapter.FillError" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdated(class System.Data.Common.RowUpdatedEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdated (value As RowUpdatedEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit&#xA;override this.OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRowUpdated (value As RowUpdatedEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRowUpdated(System::Data::Common::RowUpdatedEventArgs ^ value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdated : System.Data.Common.RowUpdatedEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdated value" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="001d9-779">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-779">A <see cref="T:System.Data.Common.RowUpdatedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="001d9-780">引发 .NET Framework 数据提供程序的 <see langword="RowUpdated" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-780">Raises the <see langword="RowUpdated" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-781">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="001d9-781">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="001d9-782">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-782">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-783">当在派生类中重写 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> 时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-783">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-784">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-784">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-785">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-785">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnRowUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowUpdating(class System.Data.Common.RowUpdatingEventArgs value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowUpdating (value As RowUpdatingEventArgs)" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit&#xA;override this.OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="protected abstract void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRowUpdating (value As RowUpdatingEventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRowUpdating(System::Data::Common::RowUpdatingEventArgs ^ value);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member OnRowUpdating : System.Data.Common.RowUpdatingEventArgs -&gt; unit" Usage="dbDataAdapter.OnRowUpdating value" FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.RowUpdatingEventArgs" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="001d9-786">包含事件数据的 <see cref="T:System.Data.Common.RowUpdatingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-786">An <see cref="T:System.Data.Common.RowUpdatingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="001d9-787">引发 .NET Framework 数据提供程序的 <see langword="RowUpdating" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-787">Raises the <see langword="RowUpdating" /> event of a .NET Framework data provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-788">引发事件时，将通过委托调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="001d9-788">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="001d9-789">有关概述，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-789">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-790">当在派生类中重写 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> 时，请确保调用基类的 <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-790">When overriding <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> in a derived class, be sure to call the bases class's <see cref="M:System.Data.Common.DbDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)" /> method.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-791">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-791">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-792">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-792">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ SelectCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-793">获取或设置用于在数据源中选择记录的命令。</span><span class="sxs-lookup"><span data-stu-id="001d9-793">Gets or sets a command used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="001d9-794">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="001d9-794">A <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="001d9-795">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter>，并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-795">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-796">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-796">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-797">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-797">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-798">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-798">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.DeleteCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#DeleteCommand" />
      <MemberSignature Language="VB.NET" Value=" Property DeleteCommand As IDbCommand Implements IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.DeleteCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-799">获取或设置用于从数据集中删除记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-799">Gets or sets an SQL statement for deleting records from the data set.</span></span></summary>
        <value><span data-ttu-id="001d9-800"><see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已删除的行删除数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="001d9-800">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-801">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="001d9-801">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="001d9-802">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-802">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="001d9-803">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-803">For more information, see <xref:System.Data.IDbDataAdapter.DeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-804">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-804">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.InsertCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#InsertCommand" />
      <MemberSignature Language="VB.NET" Value=" Property InsertCommand As IDbCommand Implements IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.InsertCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-805">获取或设置用于在数据源中插入新记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-805">Gets or sets an SQL statement used to insert new records into the data source.</span></span></summary>
        <value><span data-ttu-id="001d9-806">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中的新行将记录插入到数据源。</span><span class="sxs-lookup"><span data-stu-id="001d9-806">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-807">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="001d9-807">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="001d9-808">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-808">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="001d9-809">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.InsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-809">For more information, see <xref:System.Data.IDbDataAdapter.InsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-810">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-810">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.SelectCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#SelectCommand" />
      <MemberSignature Language="VB.NET" Value=" Property SelectCommand As IDbCommand Implements IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.SelectCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-811">获取或设置用于在数据源中选择记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-811">Gets or sets an SQL statement used to select records in the data source.</span></span></summary>
        <value><span data-ttu-id="001d9-812">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它从数据源中选择记录以便放入数据集中。</span><span class="sxs-lookup"><span data-stu-id="001d9-812">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-813">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="001d9-813">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="001d9-814">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-814">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="001d9-815">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-815">For more information, see <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-816">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-816">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Data.IDbDataAdapter.UpdateCommand">
      <MemberSignature Language="C#" Value="System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.System#Data#IDbDataAdapter#UpdateCommand" />
      <MemberSignature Language="VB.NET" Value=" Property UpdateCommand As IDbCommand Implements IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="C++ CLI" Value="property System::Data::IDbCommand ^ System::Data::IDbDataAdapter::UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Data.IDbDataAdapter.UpdateCommand</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-817">获取或设置用于更新数据源中的记录的 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-817">Gets or sets an SQL statement used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="001d9-818">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="001d9-818">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-819">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="001d9-819">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="001d9-820">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.Data.IDbDataAdapter> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-820">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.Data.IDbDataAdapter> interface.</span></span>  
  
 <span data-ttu-id="001d9-821">有关详细信息，请参阅 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-821">For more information, see <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-822">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-822">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("use 'protected DbDataAdapter(DbDataAdapter)' ctor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="001d9-823">创建作为当前实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-823">Creates a new object that is a copy of the current instance.</span></span></summary>
        <returns><span data-ttu-id="001d9-824">作为此实例副本的新对象。</span><span class="sxs-lookup"><span data-stu-id="001d9-824">A new object that is a copy of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-825">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="001d9-825">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="001d9-826">它只能在 <xref:System.Data.Common.DbDataAdapter> 实例被强制转换为 <xref:System.ICloneable> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-826">It can be used only when the <xref:System.Data.Common.DbDataAdapter> instance is cast to an <xref:System.ICloneable> interface.</span></span>  
  
 <span data-ttu-id="001d9-827">有关详细信息，请参阅 <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="001d9-827">For more information, see <xref:System.ICloneable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-828">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-828">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TerminateBatching">
      <MemberSignature Language="C#" Value="protected virtual void TerminateBatching ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TerminateBatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.TerminateBatching" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TerminateBatching ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TerminateBatching();" />
      <MemberSignature Language="F#" Value="abstract member TerminateBatching : unit -&gt; unit&#xA;override this.TerminateBatching : unit -&gt; unit" Usage="dbDataAdapter.TerminateBatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="001d9-829">结束 <see cref="T:System.Data.Common.DbDataAdapter" /> 的批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-829">Ends batching for the <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-830">在 <xref:System.Data.Common.DbDataAdapter>中，此方法将引发 <xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-830">In <xref:System.Data.Common.DbDataAdapter>, this method throws <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="001d9-831">继承自的类 <xref:System.Data.Common.DbDataAdapter> 重写此方法以提供对批的支持。</span><span class="sxs-lookup"><span data-stu-id="001d9-831">Classes that inherit from <xref:System.Data.Common.DbDataAdapter> override this method to provide support for batches.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="001d9-832">该适配器不支持批处理。</span><span class="sxs-lookup"><span data-stu-id="001d9-832">The adapter does not support batches.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="001d9-833">此方法是受保护的，由 .NET Framework 数据提供程序使用。</span><span class="sxs-lookup"><span data-stu-id="001d9-833">This method is protected and is designed for use by a .NET Framework data provider.</span></span>  
  
<span data-ttu-id="001d9-834">如果从 <see cref="T:System.Data.Common.DbDataAdapter" /> 继承的类支持批处理，则该类将重写此方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-834">If a class that inherits from <see cref="T:System.Data.Common.DbDataAdapter" /> supports batches, that class overrides this method.</span></span> <span data-ttu-id="001d9-835">此方法使类有机会释放分配给支持批处理的任何资源。</span><span class="sxs-lookup"><span data-stu-id="001d9-835">This method gives the class the opportunity to dispose of any resources allocated to support batching.</span></span> <span data-ttu-id="001d9-836">例如，类可以解除分配保存批处理中的命令的数据结构。</span><span class="sxs-lookup"><span data-stu-id="001d9-836">For example, the class may deallocate the data structure that holds the commands in the batch.</span></span></para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-837">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-837">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-838">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-838">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="001d9-839">通过为 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-839">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-840">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-840">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataRow[] dataRows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataRow[] dataRows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (dataRows As DataRow()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] -&gt; int" Usage="dbDataAdapter.Update dataRows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="001d9-841">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="001d9-841">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <summary><span data-ttu-id="001d9-842">通过为 <see cref="T:System.Data.DataSet" /> 中的指定数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-842">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array in the <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-843"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-843">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-844">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，<xref:System.Data.Common.DbDataAdapter> 将检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据在 <xref:System.Data.DataSet>中配置的索引的顺序对每个行执行所需的 INSERT、UPDATE 或 DELETE 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-844">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-845">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 DELETE 语句，因为 <xref:System.Data.DataTable>中的行的顺序。</span><span class="sxs-lookup"><span data-stu-id="001d9-845">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-846">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-846">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="001d9-847">如果必须控制语句类型的顺序（例如，在更新之前插入），则应用程序可以调用 <xref:System.Data.DataSet.GetChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-847">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="001d9-848">有关详细信息，请参阅[用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-848">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="001d9-849">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法将生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-849">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="001d9-850">不过，如果设置 .NET Framework 数据提供程序的 `SelectCommand` 属性，则可以创建 <xref:System.Data.SqlClient.SqlCommandBuilder> 或 <xref:System.Data.OleDb.OleDbCommandBuilder> 对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-850">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="001d9-851">然后， **CommandBuilder**将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-851">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="001d9-852">此代逻辑要求密钥列信息存在于 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-852">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-853">有关详细信息，请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-853">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="001d9-854">在执行更新之前，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-854">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="001d9-855">然后，<xref:System.Data.Common.DbDataAdapter.Update%2A> 使用 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 属性的值刷新该行。</span><span class="sxs-lookup"><span data-stu-id="001d9-855">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="001d9-856">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="001d9-856">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="001d9-857">将任何数据加载回 <xref:System.Data.DataSet>后，将引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-857">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="001d9-858">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="001d9-858">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="001d9-859">使用 <xref:System.Data.Common.DbDataAdapter.Update%2A>时，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="001d9-859">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="001d9-860"><xref:System.Data.DataRow> 中的值将移至参数值。</span><span class="sxs-lookup"><span data-stu-id="001d9-860">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="001d9-861">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-861">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="001d9-862">命令执行。</span><span class="sxs-lookup"><span data-stu-id="001d9-862">The command executes.</span></span>  
  
4.  <span data-ttu-id="001d9-863">如果命令设置为 `FirstReturnedRecord`，则返回的第一个结果将放置在 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-863">If the command is set to `FirstReturnedRecord`, the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="001d9-864">如果有输出参数，它们会置于 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-864">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="001d9-865">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-865">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="001d9-866">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-866"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="001d9-867">与 <xref:System.Data.Common.DbDataAdapter> 关联的每个命令通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-867">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="001d9-868">通过 `SourceColumn` 和 `SourceVersion` .NET Framework 数据提供程序的 `Parameter` 类的属性，将参数映射到当前行。</span><span class="sxs-lookup"><span data-stu-id="001d9-868">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="001d9-869">`SourceColumn` 指 <xref:System.Data.Common.DbDataAdapter> 为获取当前行的参数值而引用的 <xref:System.Data.DataTable> 列。</span><span class="sxs-lookup"><span data-stu-id="001d9-869">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="001d9-870">在应用任何表映射之前，`SourceColumn` 引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-870">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="001d9-871">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列 <xref:System.Data.MissingMappingAction> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-871">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="001d9-872">枚举值</span><span class="sxs-lookup"><span data-stu-id="001d9-872">Enumeration value</span></span>|<span data-ttu-id="001d9-873">执行的操作</span><span class="sxs-lookup"><span data-stu-id="001d9-873">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="001d9-874">如果不存在任何映射，请使用 <xref:System.Data.DataSet> 中的源列名称和表名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-874">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="001d9-875">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-875">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="001d9-876">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="001d9-876">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="001d9-877">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-877">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="001d9-878">`SourceColumn` 属性还用于将输出或输入/输出参数的值映射回 `DataSet`。</span><span class="sxs-lookup"><span data-stu-id="001d9-878">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="001d9-879">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-879">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="001d9-880">.NET Framework 数据提供程序的 `Parameter` 类的 `SourceVersion` 属性确定是否使用列值的原始版本、当前版本或建议版本。</span><span class="sxs-lookup"><span data-stu-id="001d9-880">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="001d9-881">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-881">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-882">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-882">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="001d9-883">若要在遇到错误时继续执行更新操作而不生成异常，请在调用 <xref:System.Data.Common.DbDataAdapter.Update%2A>之前将 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="001d9-883">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="001d9-884">您还可以在 DataAdapter 的 `RowUpdated` 事件内每行响应错误。</span><span class="sxs-lookup"><span data-stu-id="001d9-884">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="001d9-885">若要在 `RowUpdated` 事件中继续执行更新操作而不生成异常，请将 <xref:System.Data.Common.RowUpdatedEventArgs> 的 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 属性设置为 "<xref:System.Data.UpdateStatus.Continue>"。</span><span class="sxs-lookup"><span data-stu-id="001d9-885">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-886">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter>来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="001d9-886">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="001d9-887"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-887">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-888">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-888">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="001d9-889">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-889">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="001d9-890">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-890">-or-</span></span> 
<span data-ttu-id="001d9-891">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-891">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="001d9-892">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-892">-or-</span></span> 
<span data-ttu-id="001d9-893">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-893">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="001d9-894">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="001d9-894">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-895">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-895">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-896">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-896">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-897">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-897">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override int Update (System.Data.DataSet dataSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Update(class System.Data.DataSet dataSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Update(System::Data::DataSet ^ dataSet);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet -&gt; int" Usage="dbDataAdapter.Update dataSet" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataAdapter.Update(System.Data.DataSet)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-898">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-898">The <see cref="T:System.Data.DataSet" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="001d9-899">通过为指定的 <see cref="T:System.Data.DataSet" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-899">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataSet" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-900"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-900">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-901">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，<xref:System.Data.Common.DbDataAdapter> 将检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据在 <xref:System.Data.DataSet>中配置的索引的顺序对每个行执行所需的 INSERT、UPDATE 或 DELETE 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-901">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-902">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 DELETE 语句，因为 <xref:System.Data.DataTable>中的行的顺序。</span><span class="sxs-lookup"><span data-stu-id="001d9-902">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-903">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-903">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="001d9-904">如果必须控制语句类型的顺序（例如，在更新之前插入），则应用程序可以调用 <xref:System.Data.DataSet.GetChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-904">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="001d9-905">有关详细信息，请参阅[用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-905">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="001d9-906">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法将生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-906">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="001d9-907">不过，如果设置 .NET Framework 数据提供程序的 `SelectCommand` 属性，则可以创建 <xref:System.Data.SqlClient.SqlCommandBuilder> 或 <xref:System.Data.OleDb.OleDbCommandBuilder> 对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-907">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="001d9-908">然后， **CommandBuilder**将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-908">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="001d9-909">此代逻辑要求密钥列信息存在于 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-909">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-910">有关详细信息，请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-910">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="001d9-911">在执行更新之前，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-911">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="001d9-912">然后，<xref:System.Data.Common.DbDataAdapter.Update%2A> 使用 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 属性的值刷新该行。</span><span class="sxs-lookup"><span data-stu-id="001d9-912">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="001d9-913">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="001d9-913">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="001d9-914">将任何数据加载回 <xref:System.Data.DataSet>后，将引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-914">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="001d9-915">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="001d9-915">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="001d9-916">使用 <xref:System.Data.Common.DbDataAdapter.Update%2A>时，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="001d9-916">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="001d9-917"><xref:System.Data.DataRow> 中的值将移至参数值。</span><span class="sxs-lookup"><span data-stu-id="001d9-917">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="001d9-918">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-918">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="001d9-919">命令执行。</span><span class="sxs-lookup"><span data-stu-id="001d9-919">The command executes.</span></span>  
  
4.  <span data-ttu-id="001d9-920">如果命令设置为 `FirstReturnedRecord`，则将第一个返回的结果放置在 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-920">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="001d9-921">如果有输出参数，它们会置于 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-921">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="001d9-922">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-922">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="001d9-923">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-923"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="001d9-924">与 <xref:System.Data.Common.DbDataAdapter> 关联的每个命令通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-924">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="001d9-925">通过 `SourceColumn` 和 `SourceVersion` .NET Framework 数据提供程序的 `Parameter` 类的属性，将参数映射到当前行。</span><span class="sxs-lookup"><span data-stu-id="001d9-925">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="001d9-926">`SourceColumn` 指 <xref:System.Data.Common.DbDataAdapter> 为获取当前行的参数值而引用的 <xref:System.Data.DataTable> 列。</span><span class="sxs-lookup"><span data-stu-id="001d9-926">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="001d9-927">在应用任何表映射之前，`SourceColumn` 引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-927">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="001d9-928">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列 <xref:System.Data.MissingMappingAction> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-928">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="001d9-929">枚举值</span><span class="sxs-lookup"><span data-stu-id="001d9-929">Enumeration value</span></span>|<span data-ttu-id="001d9-930">执行的操作</span><span class="sxs-lookup"><span data-stu-id="001d9-930">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="001d9-931">如果不存在任何映射，请使用 <xref:System.Data.DataSet> 中的源列名称和表名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-931">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="001d9-932">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-932">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="001d9-933">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="001d9-933">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="001d9-934">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-934">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="001d9-935">`SourceColumn` 属性还用于将输出或输入/输出参数的值映射回 `DataSet`。</span><span class="sxs-lookup"><span data-stu-id="001d9-935">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="001d9-936">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-936">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="001d9-937">.NET Framework 数据提供程序的 `Parameter` 类的 `SourceVersion` 属性确定是否使用列值的原始版本、当前版本或建议版本。</span><span class="sxs-lookup"><span data-stu-id="001d9-937">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="001d9-938">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-938">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-939">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-939">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="001d9-940">若要在遇到错误时继续执行更新操作而不生成异常，请在调用 <xref:System.Data.Common.DbDataAdapter.Update%2A>之前将 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="001d9-940">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="001d9-941">您还可以在 DataAdapter 的 `RowUpdated` 事件内每行响应错误。</span><span class="sxs-lookup"><span data-stu-id="001d9-941">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="001d9-942">若要在 `RowUpdated` 事件中继续执行更新操作而不生成异常，请将 <xref:System.Data.Common.RowUpdatedEventArgs> 的 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 属性设置为 "<xref:System.Data.UpdateStatus.Continue>"。</span><span class="sxs-lookup"><span data-stu-id="001d9-942">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-943">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter>来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="001d9-943">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-944">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-944">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="001d9-945">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="001d9-945">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-946">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-946">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-947">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-947">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-948">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-948">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataTable dataTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataTable dataTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataTable ^ dataTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataTable -&gt; int" Usage="dbDataAdapter.Update dataTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTable" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="dataTable"><span data-ttu-id="001d9-949">用于更新数据源的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-949">The <see cref="T:System.Data.DataTable" /> used to update the data source.</span></span></param>
        <summary><span data-ttu-id="001d9-950">通过为指定的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-950">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified <see cref="T:System.Data.DataTable" />.</span></span></summary>
        <returns><span data-ttu-id="001d9-951"><see cref="T:System.Data.DataTable" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-951">The number of rows successfully updated from the <see cref="T:System.Data.DataTable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-952">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，<xref:System.Data.Common.DbDataAdapter> 将检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据在 <xref:System.Data.DataSet>中配置的索引的顺序对每个行执行所需的 INSERT、UPDATE 或 DELETE 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-952">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-953">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 DELETE 语句，因为 <xref:System.Data.DataTable>中的行的顺序。</span><span class="sxs-lookup"><span data-stu-id="001d9-953">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-954">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-954">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="001d9-955">如果必须控制语句类型的顺序（例如，在更新之前插入），则应用程序可以调用 <xref:System.Data.DataSet.GetChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-955">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="001d9-956">有关详细信息，请参阅[用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-956">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="001d9-957">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法将生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-957">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="001d9-958">不过，如果设置 .NET Framework 数据提供程序的 `SelectCommand` 属性，则可以创建 <xref:System.Data.SqlClient.SqlCommandBuilder> 或 <xref:System.Data.OleDb.OleDbCommandBuilder> 对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-958">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="001d9-959">然后， **CommandBuilder**将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-959">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="001d9-960">此代逻辑要求密钥列信息存在于 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-960">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-961">有关详细信息，请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-961">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="001d9-962">在执行更新之前，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-962">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="001d9-963">然后，<xref:System.Data.Common.DbDataAdapter.Update%2A> 使用 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 属性的值刷新该行。</span><span class="sxs-lookup"><span data-stu-id="001d9-963">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="001d9-964">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="001d9-964">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="001d9-965">将任何数据加载回 <xref:System.Data.DataSet>后，将引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-965">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="001d9-966">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="001d9-966">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="001d9-967">使用 <xref:System.Data.Common.DbDataAdapter.Update%2A>时，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="001d9-967">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="001d9-968"><xref:System.Data.DataRow> 中的值将移至参数值。</span><span class="sxs-lookup"><span data-stu-id="001d9-968">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="001d9-969">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-969">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="001d9-970">命令执行。</span><span class="sxs-lookup"><span data-stu-id="001d9-970">The command executes.</span></span>  
  
4.  <span data-ttu-id="001d9-971">如果命令设置为 `FirstReturnedRecord`，则将第一个返回的结果放置在 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-971">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="001d9-972">如果有输出参数，它们会置于 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-972">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="001d9-973">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-973">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="001d9-974">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-974"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="001d9-975">与 <xref:System.Data.Common.DbDataAdapter> 关联的每个命令通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-975">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="001d9-976">通过 `SourceColumn` 和 `SourceVersion` .NET Framework 数据提供程序的 `Parameter` 类的属性，将参数映射到当前行。</span><span class="sxs-lookup"><span data-stu-id="001d9-976">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="001d9-977">`SourceColumn` 指 <xref:System.Data.Common.DbDataAdapter> 为获取当前行的参数值而引用的 <xref:System.Data.DataTable> 列。</span><span class="sxs-lookup"><span data-stu-id="001d9-977">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="001d9-978">在应用任何表映射之前，`SourceColumn` 引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-978">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="001d9-979">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列 <xref:System.Data.MissingMappingAction> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-979">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="001d9-980">枚举值</span><span class="sxs-lookup"><span data-stu-id="001d9-980">Enumeration value</span></span>|<span data-ttu-id="001d9-981">执行的操作</span><span class="sxs-lookup"><span data-stu-id="001d9-981">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="001d9-982">如果不存在任何映射，请使用 <xref:System.Data.DataSet> 中的源列名称和表名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-982">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="001d9-983">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-983">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="001d9-984">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="001d9-984">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="001d9-985">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-985">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="001d9-986">`SourceColumn` 属性还用于将输出或输入/输出参数的值映射回 `DataSet`。</span><span class="sxs-lookup"><span data-stu-id="001d9-986">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="001d9-987">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-987">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="001d9-988">.NET Framework 数据提供程序的 `Parameter` 类的 `SourceVersion` 属性确定是否使用列值的原始版本、当前版本或建议版本。</span><span class="sxs-lookup"><span data-stu-id="001d9-988">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="001d9-989">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-989">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-990">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-990">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="001d9-991">若要在遇到错误时继续执行更新操作而不生成异常，请在调用 <xref:System.Data.Common.DbDataAdapter.Update%2A>之前将 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="001d9-991">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="001d9-992">您还可以在 DataAdapter 的 `RowUpdated` 事件内每行响应错误。</span><span class="sxs-lookup"><span data-stu-id="001d9-992">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="001d9-993">若要在 `RowUpdated` 事件中继续执行更新操作而不生成异常，请将 <xref:System.Data.Common.RowUpdatedEventArgs> 的 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 属性设置为 "<xref:System.Data.UpdateStatus.Continue>"。</span><span class="sxs-lookup"><span data-stu-id="001d9-993">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-994">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter>来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="001d9-994">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="001d9-995"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-995">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-996">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-996">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="001d9-997">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-997">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="001d9-998">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-998">-or-</span></span> 
<span data-ttu-id="001d9-999">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-999">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="001d9-1000">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-1000">-or-</span></span> 
<span data-ttu-id="001d9-1001">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-1001">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="001d9-1002">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="001d9-1002">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-1003">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1003">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-1004">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1004">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-1005">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-1005">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="protected virtual int Update (System.Data.DataRow[] dataRows, System.Data.Common.DataTableMapping tableMapping);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 Update(class System.Data.DataRow[] dataRows, class System.Data.Common.DataTableMapping tableMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Update (dataRows As DataRow(), tableMapping As DataTableMapping) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int Update(cli::array &lt;System::Data::DataRow ^&gt; ^ dataRows, System::Data::Common::DataTableMapping ^ tableMapping);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataRow[] * System.Data.Common.DataTableMapping -&gt; int" Usage="dbDataAdapter.Update (dataRows, tableMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataRows" Type="System.Data.DataRow[]" />
        <Parameter Name="tableMapping" Type="System.Data.Common.DataTableMapping" />
      </Parameters>
      <Docs>
        <param name="dataRows"><span data-ttu-id="001d9-1006">用于更新数据源的 <see cref="T:System.Data.DataRow" /> 对象的数组。</span><span class="sxs-lookup"><span data-stu-id="001d9-1006">An array of <see cref="T:System.Data.DataRow" /> objects used to update the data source.</span></span></param>
        <param name="tableMapping"><span data-ttu-id="001d9-1007">要使用的 <see cref="P:System.Data.IDataAdapter.TableMappings" /> 集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-1007">The <see cref="P:System.Data.IDataAdapter.TableMappings" /> collection to use.</span></span></param>
        <summary><span data-ttu-id="001d9-1008">通过为指定的 <see cref="T:System.Data.DataSet" /> 对象数组中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-1008">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the specified array of <see cref="T:System.Data.DataSet" /> objects.</span></span></summary>
        <returns><span data-ttu-id="001d9-1009"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-1009">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-1010">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，<xref:System.Data.Common.DbDataAdapter> 将检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据在 <xref:System.Data.DataSet>中配置的索引的顺序对每个行执行所需的 INSERT、UPDATE 或 DELETE 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-1010">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-1011">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 DELETE 语句，因为 <xref:System.Data.DataTable>中的行的顺序。</span><span class="sxs-lookup"><span data-stu-id="001d9-1011">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-1012">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-1012">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="001d9-1013">如果必须控制语句类型的顺序（例如，在更新之前插入），则应用程序可以调用 <xref:System.Data.DataSet.GetChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-1013">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERTs before UPDATEs).</span></span> <span data-ttu-id="001d9-1014">有关详细信息，请参阅[用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-1014">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="001d9-1015">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法将生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-1015">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="001d9-1016">不过，如果设置 .NET Framework 数据提供程序的 `SelectCommand` 属性，则可以创建 <xref:System.Data.SqlClient.SqlCommandBuilder> 或 <xref:System.Data.OleDb.OleDbCommandBuilder> 对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-1016">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="001d9-1017">然后， **CommandBuilder**将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-1017">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="001d9-1018">此代逻辑要求密钥列信息存在于 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-1018">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-1019">有关详细信息，请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-1019">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="001d9-1020">在执行更新之前，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1020">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="001d9-1021">然后，<xref:System.Data.Common.DbDataAdapter.Update%2A> 使用 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 属性的值刷新该行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1021">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="001d9-1022">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1022">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="001d9-1023">将任何数据加载回 <xref:System.Data.DataSet>后，将引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-1023">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="001d9-1024">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="001d9-1024">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="001d9-1025">使用 <xref:System.Data.Common.DbDataAdapter.Update%2A>时，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="001d9-1025">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="001d9-1026"><xref:System.Data.DataRow> 中的值将移至参数值。</span><span class="sxs-lookup"><span data-stu-id="001d9-1026">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="001d9-1027">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-1027">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="001d9-1028">命令执行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1028">The command executes.</span></span>  
  
4.  <span data-ttu-id="001d9-1029">如果命令设置为 `FirstReturnedRecord`，则将第一个返回的结果放置在 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-1029">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="001d9-1030">如果有输出参数，它们会置于 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-1030">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="001d9-1031">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-1031">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="001d9-1032">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1032"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="001d9-1033">与 <xref:System.Data.Common.DbDataAdapter> 关联的每个命令通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-1033">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="001d9-1034">通过 `SourceColumn` 和 `SourceVersion` .NET Framework 数据提供程序的 `Parameter` 类的属性，将参数映射到当前行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1034">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="001d9-1035">`SourceColumn` 指 <xref:System.Data.Common.DbDataAdapter> 为获取当前行的参数值而引用的 <xref:System.Data.DataTable> 列。</span><span class="sxs-lookup"><span data-stu-id="001d9-1035">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="001d9-1036">在应用任何表映射之前，`SourceColumn` 引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-1036">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="001d9-1037">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列 <xref:System.Data.MissingMappingAction> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-1037">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="001d9-1038">枚举值</span><span class="sxs-lookup"><span data-stu-id="001d9-1038">Enumeration value</span></span>|<span data-ttu-id="001d9-1039">执行的操作</span><span class="sxs-lookup"><span data-stu-id="001d9-1039">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="001d9-1040">如果不存在任何映射，请使用 <xref:System.Data.DataSet> 中的源列名称和表名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-1040">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="001d9-1041">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1041">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="001d9-1042">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="001d9-1042">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="001d9-1043">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1043">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="001d9-1044">`SourceColumn` 属性还用于将输出或输入/输出参数的值映射回 `DataSet`。</span><span class="sxs-lookup"><span data-stu-id="001d9-1044">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="001d9-1045">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-1045">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="001d9-1046">.NET Framework 数据提供程序的 `Parameter` 类的 `SourceVersion` 属性确定是否使用列值的原始版本、当前版本或建议版本。</span><span class="sxs-lookup"><span data-stu-id="001d9-1046">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="001d9-1047">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-1047">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-1048">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-1048">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="001d9-1049">若要在遇到错误时继续执行更新操作而不生成异常，请在调用 <xref:System.Data.Common.DbDataAdapter.Update%2A>之前将 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="001d9-1049">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="001d9-1050">您还可以在 DataAdapter 的 `RowUpdated` 事件内每行响应错误。</span><span class="sxs-lookup"><span data-stu-id="001d9-1050">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="001d9-1051">若要在 `RowUpdated` 事件中继续执行更新操作而不生成异常，请将 <xref:System.Data.Common.RowUpdatedEventArgs> 的 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 属性设置为 "<xref:System.Data.UpdateStatus.Continue>"。</span><span class="sxs-lookup"><span data-stu-id="001d9-1051">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="001d9-1052"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-1052">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-1053">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-1053">The source table is invalid.</span></span></exception>
        <exception cref="T:System.SystemException"><span data-ttu-id="001d9-1054">不存在要更新的 <see cref="T:System.Data.DataRow" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-1054">No <see cref="T:System.Data.DataRow" /> exists to update.</span></span>  
  
<span data-ttu-id="001d9-1055">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-1055">-or-</span></span> 
<span data-ttu-id="001d9-1056">不存在要更新的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-1056">No <see cref="T:System.Data.DataTable" /> exists to update.</span></span>  
  
<span data-ttu-id="001d9-1057">- 或 -</span><span class="sxs-lookup"><span data-stu-id="001d9-1057">-or-</span></span> 
<span data-ttu-id="001d9-1058">不存在要用作源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-1058">No <see cref="T:System.Data.DataSet" /> exists to use as a source.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="001d9-1059">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="001d9-1059">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-1060">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1060">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-1061">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1061">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-1062">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-1062">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Data.DataSet dataSet, string srcTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Data.DataSet dataSet, string srcTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Data::DataSet ^ dataSet, System::String ^ srcTable);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Data.DataSet * string -&gt; int" Usage="dbDataAdapter.Update (dataSet, srcTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSet" Type="System.Data.DataSet" />
        <Parameter Name="srcTable" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dataSet"><span data-ttu-id="001d9-1063">用于更新数据源的 <see cref="T:System.Data.DataSet" />。</span><span class="sxs-lookup"><span data-stu-id="001d9-1063">The <see cref="T:System.Data.DataSet" /> to use to update the data source.</span></span></param>
        <param name="srcTable"><span data-ttu-id="001d9-1064">用于表映射的源表的名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-1064">The name of the source table to use for table mapping.</span></span></param>
        <summary><span data-ttu-id="001d9-1065">通过为具有指定名称 <see cref="T:System.Data.DataSet" /> 的 <see cref="T:System.Data.DataTable" /> 中的每个已插入、已更新或已删除的行执行相应的 INSERT、UPDATE 或 DELETE 语句来更新数据库中的值。</span><span class="sxs-lookup"><span data-stu-id="001d9-1065">Updates the values in the database by executing the respective INSERT, UPDATE, or DELETE statements for each inserted, updated, or deleted row in the <see cref="T:System.Data.DataSet" /> with the specified <see cref="T:System.Data.DataTable" /> name.</span></span></summary>
        <returns><span data-ttu-id="001d9-1066"><see cref="T:System.Data.DataSet" /> 中成功更新的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-1066">The number of rows successfully updated from the <see cref="T:System.Data.DataSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-1067">当应用程序调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 方法时，<xref:System.Data.Common.DbDataAdapter> 将检查 <xref:System.Data.DataRow.RowState%2A> 属性，并根据在 <xref:System.Data.DataSet>中配置的索引的顺序对每个行执行所需的 INSERT、UPDATE 或 DELETE 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-1067">When an application calls the <xref:System.Data.Common.DbDataAdapter.Update%2A> method, the <xref:System.Data.Common.DbDataAdapter> examines the <xref:System.Data.DataRow.RowState%2A> property, and executes the required INSERT, UPDATE, or DELETE statements iteratively for each row, based on the order of the indexes configured in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-1068">例如，<xref:System.Data.Common.DbDataAdapter.Update%2A> 可能会执行 DELETE 语句，后跟 INSERT 语句，然后执行另一 DELETE 语句，因为 <xref:System.Data.DataTable>中的行的顺序。</span><span class="sxs-lookup"><span data-stu-id="001d9-1068">For example, <xref:System.Data.Common.DbDataAdapter.Update%2A> might execute a DELETE statement, followed by an INSERT statement, and then another DELETE statement, due to the ordering of the rows in the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="001d9-1069">应注意的是，这些语句不作为批处理执行;每一行都单独更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-1069">It should be noted that these statements are not performed as a batch process; each row is updated individually.</span></span> <span data-ttu-id="001d9-1070">如果必须控制语句类型的顺序（例如，在 UPDATE 之前插入），则应用程序可以调用 <xref:System.Data.DataSet.GetChanges%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="001d9-1070">An application can call the <xref:System.Data.DataSet.GetChanges%2A> method in situations where you must control the sequence of statement types (for example, INSERT before UPDATE).</span></span> <span data-ttu-id="001d9-1071">有关详细信息，请参阅[用 Dataadapter 更新数据源](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-1071">For more information, see [Updating Data Sources with DataAdapters](~/docs/framework/data/adonet/updating-data-sources-with-dataadapters.md).</span></span>  
  
 <span data-ttu-id="001d9-1072">如果尚未指定 INSERT、UPDATE 或 DELETE 语句，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法将生成一个异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-1072">If INSERT, UPDATE, or DELETE statements have not been specified, the <xref:System.Data.Common.DbDataAdapter.Update%2A> method generates an exception.</span></span> <span data-ttu-id="001d9-1073">不过，如果设置 .NET Framework 数据提供程序的 `SelectCommand` 属性，则可以创建 <xref:System.Data.SqlClient.SqlCommandBuilder> 或 <xref:System.Data.OleDb.OleDbCommandBuilder> 对象以自动为单表更新生成 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-1073">However, you can create a <xref:System.Data.SqlClient.SqlCommandBuilder> or <xref:System.Data.OleDb.OleDbCommandBuilder> object to automatically generate SQL statements for single-table updates if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="001d9-1074">然后， **CommandBuilder**将生成未设置的任何其他 SQL 语句。</span><span class="sxs-lookup"><span data-stu-id="001d9-1074">Then, any additional SQL statements that you do not set are generated by the **CommandBuilder**.</span></span> <span data-ttu-id="001d9-1075">此代逻辑要求密钥列信息存在于 <xref:System.Data.DataSet>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-1075">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-1076">有关详细信息，请参阅[通过 Commandbuilder 生成命令](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)。</span><span class="sxs-lookup"><span data-stu-id="001d9-1076">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="001d9-1077"><xref:System.Data.Common.DbDataAdapter.Update%2A> 方法支持这样的方案： <xref:System.Data.DataSet> 包含多个 <xref:System.Data.DataTable> 对象，这些对象的名称仅区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-1077">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method supports scenarios where the <xref:System.Data.DataSet> contains multiple <xref:System.Data.DataTable> objects whose names differ only by case.</span></span> <span data-ttu-id="001d9-1078">当 `DataSet`中存在具有相同名称但大小写不同的多个表时，<xref:System.Data.Common.DbDataAdapter.Update%2A> 执行区分大小写的比较来查找相应的表，如果不存在精确匹配，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-1078">When multiple tables with the same name, but different case, exist in a `DataSet`, <xref:System.Data.Common.DbDataAdapter.Update%2A> performs a case-sensitive comparison to find the corresponding table, and generates an exception if no exact match exists.</span></span> <span data-ttu-id="001d9-1079">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-1079">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet ds = new DataSet();  
 ds.Tables.Add("aaa");  
 ds.Tables.Add("AAA");  
 adapter.Update(ds, "aaa"); // Updates "aaa", which already exists in the DataSet.  
 adapter.Update(ds, "AAA"); // Updates "AAA", which already exists in the DataSet.  
    adapter.Update(ds, "Aaa"); // Results in an exception.  
```  
  
 <span data-ttu-id="001d9-1080">如果调用 <xref:System.Data.Common.DbDataAdapter.Update%2A> 且 <xref:System.Data.DataSet> 只包含一个名称只是大小写不同的 <xref:System.Data.DataTable>，则将更新该 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1080">If <xref:System.Data.Common.DbDataAdapter.Update%2A> is called and the <xref:System.Data.DataSet> contains only one <xref:System.Data.DataTable> whose name differs only by case, that <xref:System.Data.DataTable> is updated.</span></span> <span data-ttu-id="001d9-1081">在这种情况下，比较不区分大小写。</span><span class="sxs-lookup"><span data-stu-id="001d9-1081">In this scenario, the comparison is case insensitive.</span></span> <span data-ttu-id="001d9-1082">下面C#的代码演示了此行为。</span><span class="sxs-lookup"><span data-stu-id="001d9-1082">The following C# code illustrates this behavior.</span></span>  
  
```  
DataSet dataset = new DataSet();  
 dataset.Tables.Add("aaa");  
    adapter.Update(dataset, "AAA"); // Updates table "aaa" because only one similarly named table is in the DataSet.  
```  
  
 <span data-ttu-id="001d9-1083">在执行更新之前，<xref:System.Data.Common.DbDataAdapter.Update%2A> 方法从第一个映射中列出的表中检索行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1083">The <xref:System.Data.Common.DbDataAdapter.Update%2A> method retrieves rows from the table listed in the first mapping before performing an update.</span></span> <span data-ttu-id="001d9-1084">然后，<xref:System.Data.Common.DbDataAdapter.Update%2A> 使用 <xref:System.Data.IDbCommand.UpdatedRowSource%2A> 属性的值刷新该行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1084">The <xref:System.Data.Common.DbDataAdapter.Update%2A> then refreshes the row using the value of the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property.</span></span> <span data-ttu-id="001d9-1085">将忽略返回的任何其他行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1085">Any additional rows returned are ignored.</span></span>  
  
 <span data-ttu-id="001d9-1086">将任何数据加载回 <xref:System.Data.DataSet>后，将引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件，从而允许用户检查已协调的 <xref:System.Data.DataSet> 行和该命令返回的任何输出参数。</span><span class="sxs-lookup"><span data-stu-id="001d9-1086">After any data is loaded back into the <xref:System.Data.DataSet>, the <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised, allowing the user to inspect the reconciled <xref:System.Data.DataSet> row and any output parameters returned by the command.</span></span> <span data-ttu-id="001d9-1087">成功更新行后，将接受对该行所做的更改。</span><span class="sxs-lookup"><span data-stu-id="001d9-1087">After a row updates successfully, the changes to that row are accepted.</span></span>  
  
 <span data-ttu-id="001d9-1088">使用 <xref:System.Data.Common.DbDataAdapter.Update%2A>时，执行顺序如下所示：</span><span class="sxs-lookup"><span data-stu-id="001d9-1088">When using <xref:System.Data.Common.DbDataAdapter.Update%2A>, the order of execution is as follows:</span></span>  
  
1.  <span data-ttu-id="001d9-1089"><xref:System.Data.DataRow> 中的值将移至参数值。</span><span class="sxs-lookup"><span data-stu-id="001d9-1089">The values in the <xref:System.Data.DataRow> are moved to the parameter values.</span></span>  
  
2.  <span data-ttu-id="001d9-1090">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-1090">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A> event is raised.</span></span>  
  
3.  <span data-ttu-id="001d9-1091">命令执行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1091">The command executes.</span></span>  
  
4.  <span data-ttu-id="001d9-1092">如果命令设置为 `FirstReturnedRecord`，则将第一个返回的结果放置在 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-1092">If the command is set to `FirstReturnedRecord`, then the first returned result is placed in the <xref:System.Data.DataRow>.</span></span>  
  
5.  <span data-ttu-id="001d9-1093">如果有输出参数，它们会置于 <xref:System.Data.DataRow>中。</span><span class="sxs-lookup"><span data-stu-id="001d9-1093">If there are output parameters, they are placed in the <xref:System.Data.DataRow>.</span></span>  
  
6.  <span data-ttu-id="001d9-1094">引发 <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> 事件。</span><span class="sxs-lookup"><span data-stu-id="001d9-1094">The <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> event is raised.</span></span>  
  
7.  <span data-ttu-id="001d9-1095">调用 <xref:System.Data.DataRow.AcceptChanges%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1095"><xref:System.Data.DataRow.AcceptChanges%2A> is called.</span></span>  
  
 <span data-ttu-id="001d9-1096">与 <xref:System.Data.Common.DbDataAdapter> 关联的每个命令通常都具有与之关联的参数集合。</span><span class="sxs-lookup"><span data-stu-id="001d9-1096">Each command associated with the <xref:System.Data.Common.DbDataAdapter> usually has a parameters collection associated with it.</span></span> <span data-ttu-id="001d9-1097">通过 `SourceColumn` 和 `SourceVersion` .NET Framework 数据提供程序的 `Parameter` 类的属性，将参数映射到当前行。</span><span class="sxs-lookup"><span data-stu-id="001d9-1097">Parameters are mapped to the current row through the `SourceColumn` and `SourceVersion` properties of a .NET Framework data provider's `Parameter` class.</span></span> <span data-ttu-id="001d9-1098">`SourceColumn` 指 <xref:System.Data.Common.DbDataAdapter> 为获取当前行的参数值而引用的 <xref:System.Data.DataTable> 列。</span><span class="sxs-lookup"><span data-stu-id="001d9-1098">`SourceColumn` refers to a <xref:System.Data.DataTable> column that the <xref:System.Data.Common.DbDataAdapter> references to obtain parameter values for the current row.</span></span>  
  
 <span data-ttu-id="001d9-1099">在应用任何表映射之前，`SourceColumn` 引用未映射的列名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-1099">`SourceColumn` refers to the unmapped column name before any table mappings have been applied.</span></span> <span data-ttu-id="001d9-1100">如果 `SourceColumn` 引用不存在的列，则执行的操作取决于下列 <xref:System.Data.MissingMappingAction> 值之一。</span><span class="sxs-lookup"><span data-stu-id="001d9-1100">If `SourceColumn` refers to a nonexistent column, the action taken depends on one of the following <xref:System.Data.MissingMappingAction> values.</span></span>  
  
|<span data-ttu-id="001d9-1101">枚举值</span><span class="sxs-lookup"><span data-stu-id="001d9-1101">Enumeration value</span></span>|<span data-ttu-id="001d9-1102">执行的操作</span><span class="sxs-lookup"><span data-stu-id="001d9-1102">Action taken</span></span>|  
|-----------------------|------------------|  
|`MissingMappingAction.Passthrough`|<span data-ttu-id="001d9-1103">如果不存在任何映射，请使用 <xref:System.Data.DataSet> 中的源列名称和表名称。</span><span class="sxs-lookup"><span data-stu-id="001d9-1103">Use the source column names and table names in the <xref:System.Data.DataSet> if no mapping is present.</span></span>|  
|`MissingMappingAction.Ignore`|<span data-ttu-id="001d9-1104">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1104">A <xref:System.SystemException> is generated.</span></span> <span data-ttu-id="001d9-1105">当显式设置映射时，缺少输入参数的映射通常是由错误引起的。</span><span class="sxs-lookup"><span data-stu-id="001d9-1105">When the mappings are explicitly set, a missing mapping for an input parameter is usually the result of an error.</span></span>|  
|`MissingMappingAction.Error`|<span data-ttu-id="001d9-1106">生成一个 <xref:System.SystemException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1106">A <xref:System.SystemException> is generated.</span></span>|  
  
 <span data-ttu-id="001d9-1107">`SourceColumn` 属性还用于将输出或输入/输出参数的值映射回 `DataSet`。</span><span class="sxs-lookup"><span data-stu-id="001d9-1107">The `SourceColumn` property is also used to map the value for output or input/output parameters back to the `DataSet`.</span></span> <span data-ttu-id="001d9-1108">如果引用不存在的列，则会生成异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-1108">An exception is generated if it refers to a nonexistent column.</span></span>  
  
 <span data-ttu-id="001d9-1109">.NET Framework 数据提供程序的 `Parameter` 类的 `SourceVersion` 属性确定是否使用列值的原始版本、当前版本或建议版本。</span><span class="sxs-lookup"><span data-stu-id="001d9-1109">The `SourceVersion` property of a .NET Framework data provider's `Parameter` class determines whether to use the Original, Current, or Proposed version of the column value.</span></span> <span data-ttu-id="001d9-1110">此功能通常用于在 UPDATE 语句的 WHERE 子句中包含原始值，以检查是否存在开放式并发冲突。</span><span class="sxs-lookup"><span data-stu-id="001d9-1110">This capability is often used to include original values in the WHERE clause of an UPDATE statement to check for optimistic concurrency violations.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="001d9-1111">如果在更新行时出现错误，则会引发异常并中止执行更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-1111">If an error occurs while updating a row, an exception is thrown and execution of the update is discontinued.</span></span> <span data-ttu-id="001d9-1112">若要在遇到错误时继续执行更新操作而不生成异常，请在调用 <xref:System.Data.Common.DbDataAdapter.Update%2A>之前将 <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> 属性设置为 `true`。</span><span class="sxs-lookup"><span data-stu-id="001d9-1112">To continue the update operation without generating exceptions when an error is encountered, set the <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> property to `true` before calling <xref:System.Data.Common.DbDataAdapter.Update%2A>.</span></span> <span data-ttu-id="001d9-1113">您还可以在 DataAdapter 的 `RowUpdated` 事件内每行响应错误。</span><span class="sxs-lookup"><span data-stu-id="001d9-1113">You may also respond to errors on a per-row basis within the `RowUpdated` event of a DataAdapter.</span></span> <span data-ttu-id="001d9-1114">若要在 `RowUpdated` 事件中继续执行更新操作而不生成异常，请将 <xref:System.Data.Common.RowUpdatedEventArgs> 的 <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> 属性设置为 "<xref:System.Data.UpdateStatus.Continue>"。</span><span class="sxs-lookup"><span data-stu-id="001d9-1114">To continue the update operation without generating an exception within the `RowUpdated` event, set the <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> property of the <xref:System.Data.Common.RowUpdatedEventArgs> to <xref:System.Data.UpdateStatus.Continue>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-1115">下面的示例使用派生类 <xref:System.Data.OleDb.OleDbDataAdapter>来更新数据源。</span><span class="sxs-lookup"><span data-stu-id="001d9-1115">The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to update the data source.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.Update3#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.Update3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="001d9-1116"><see cref="T:System.Data.DataSet" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-1116">The <see cref="T:System.Data.DataSet" /> is invalid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="001d9-1117">源表无效。</span><span class="sxs-lookup"><span data-stu-id="001d9-1117">The source table is invalid.</span></span></exception>
        <exception cref="T:System.Data.DBConcurrencyException"><span data-ttu-id="001d9-1118">尝试执行 INSERT、UPDATE 或 DELETE 语句，但没有记录受到影响。</span><span class="sxs-lookup"><span data-stu-id="001d9-1118">An attempt to execute an INSERT, UPDATE, or DELETE statement resulted in zero records affected.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-1119">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1119">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-1120">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1120">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-1121">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-1121">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateBatchSize">
      <MemberSignature Language="C#" Value="public virtual int UpdateBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UpdateBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UpdateBatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateBatchSize : int with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateBatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-1122">获取或设置一个值，该值启用或禁用批处理支持，并且指定可在一次批处理中执行的命令的数量。</span><span class="sxs-lookup"><span data-stu-id="001d9-1122">Gets or sets a value that enables or disables batch processing support, and specifies the number of commands that can be executed in a batch.</span></span></summary>
        <value><span data-ttu-id="001d9-1123">每个批处理要处理的行数。</span><span class="sxs-lookup"><span data-stu-id="001d9-1123">The number of rows to process per batch.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="001d9-1124">值为</span><span class="sxs-lookup"><span data-stu-id="001d9-1124">Value is</span></span> 
 </term><description> <span data-ttu-id="001d9-1125">效果</span><span class="sxs-lookup"><span data-stu-id="001d9-1125">Effect</span></span> 
 </description></listheader><item><term> <span data-ttu-id="001d9-1126">0</span><span class="sxs-lookup"><span data-stu-id="001d9-1126">0</span></span> 
 </term><description> <span data-ttu-id="001d9-1127">批大小没有限制。</span><span class="sxs-lookup"><span data-stu-id="001d9-1127">There is no limit on the batch size.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="001d9-1128">1</span><span class="sxs-lookup"><span data-stu-id="001d9-1128">1</span></span> 
 </term><description> <span data-ttu-id="001d9-1129">禁用批量更新。</span><span class="sxs-lookup"><span data-stu-id="001d9-1129">Disables batch updating.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="001d9-1130">&gt; 1</span><span class="sxs-lookup"><span data-stu-id="001d9-1130">&gt; 1</span></span> 
 </term><description> <span data-ttu-id="001d9-1131">更改是使用 <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> 操作的批处理一次性发送的。</span><span class="sxs-lookup"><span data-stu-id="001d9-1131">Changes are sent using batches of <see cref="P:System.Data.Common.DbDataAdapter.UpdateBatchSize" /> operations at a time.</span></span>  
  
 </description></item></list>  

 <span data-ttu-id="001d9-1132">将此值设置为1以外的值时，与 <see cref="T:System.Data.Common.DbDataAdapter" /> 关联的所有命令都必须将其 <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> 属性设置为**None**或**OutputParameters**。</span><span class="sxs-lookup"><span data-stu-id="001d9-1132">When setting this to a value other than 1, all the commands associated with the <see cref="T:System.Data.Common.DbDataAdapter" /> must have their <see cref="P:System.Data.IDbCommand.UpdatedRowSource" /> property set to **None** or **OutputParameters**.</span></span> <span data-ttu-id="001d9-1133">否则，将引发异常。</span><span class="sxs-lookup"><span data-stu-id="001d9-1133">An exception will be thrown otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-1134">使用 <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> 属性可通过 <xref:System.Data.DataSet>更新数据源。</span><span class="sxs-lookup"><span data-stu-id="001d9-1134">Use the <xref:System.Data.Common.DbDataAdapter.UpdateBatchSize%2A> property to update a data source with changes from a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="001d9-1135">如果数据访问接口支持批处理，则这可能会减少到服务器的往返次数，从而提高应用程序的性能。</span><span class="sxs-lookup"><span data-stu-id="001d9-1135">If the data provider supports batch processing, this can increase application performance by reducing the number of round-trips to the server.</span></span> <span data-ttu-id="001d9-1136">在 ADO.NET 2.0 中，SQL Server （SqlClient）和 Oracle 的 .NET 数据提供程序（System.data.oracleclient）支持此属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-1136">In ADO.NET 2.0, this property is supported for the .NET data providers for SQL Server (SqlClient) and Oracle (OracleClient).</span></span>  
  
 <span data-ttu-id="001d9-1137">执行极大的批处理会降低性能。</span><span class="sxs-lookup"><span data-stu-id="001d9-1137">Executing an extremely large batch could decrease performance.</span></span> <span data-ttu-id="001d9-1138">因此，在实现应用程序前应进行测试以得到最佳的批大小。</span><span class="sxs-lookup"><span data-stu-id="001d9-1138">Therefore, you should test for the optimum batch size setting before implementing your application.</span></span>  
  
 <span data-ttu-id="001d9-1139">如果将值设置为小于零的数字，将会引发 <xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1139">An <xref:System.ArgumentOutOfRangeException> will be thrown if the value is set to a number less than zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-1140">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1140">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-1141">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1141">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-1142">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-1142">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ UpdateCommand { System::Data::Common::DbCommand ^ get(); void set(System::Data::Common::DbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.Common.DbCommand with get, set" Usage="System.Data.Common.DbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="001d9-1143">获取或设置用于更新数据源中的记录的命令。</span><span class="sxs-lookup"><span data-stu-id="001d9-1143">Gets or sets a command used to update records in the data source.</span></span></summary>
        <value><span data-ttu-id="001d9-1144">在 <see cref="T:System.Data.IDbCommand" /> 过程中使用的 <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" />，它针对数据集中已修改的行更新数据源中的记录。</span><span class="sxs-lookup"><span data-stu-id="001d9-1144">A <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="001d9-1145">在 <xref:System.Data.Common.DbDataAdapter.Update%2A>过程中，如果未设置此属性，并且 <xref:System.Data.DataSet>中存在主键信息，则将自动生成 <xref:System.Data.IDbDataAdapter.UpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="001d9-1145">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> will be automatically generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="001d9-1146">下面的示例创建派生类 <xref:System.Data.OleDb.OleDbDataAdapter>，并设置其一些属性。</span><span class="sxs-lookup"><span data-stu-id="001d9-1146">The following example creates the derived class <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/retrieving-and-modifying-data.md"><span data-ttu-id="001d9-1147">操作数据 (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1147">Manipulating Data (ADO.NET)</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/2a8e2640-3a49-42a1-a3a9-b43026907ae1"><span data-ttu-id="001d9-1148">DbProviderFactories (ADO.NET)</span><span class="sxs-lookup"><span data-stu-id="001d9-1148">DbProviderFactories (ADO.NET)</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="001d9-1149">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="001d9-1149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
