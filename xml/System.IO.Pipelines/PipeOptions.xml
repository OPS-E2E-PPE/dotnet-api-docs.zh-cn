<Type Name="PipeOptions" FullName="System.IO.Pipelines.PipeOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7b16e23a40cb9e5d5bdb0439eac08f2f96cc160" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75132772" /></Metadata><TypeSignature Language="C#" Value="public class PipeOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PipeOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipelines.PipeOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class PipeOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeOptions" />
  <TypeSignature Language="F#" Value="type PipeOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipelines</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2173a-101">表示一组 <see cref="T:System.IO.Pipelines.Pipe" /> 选项。</span><span class="sxs-lookup"><span data-stu-id="2173a-101">Represents a set of <see cref="T:System.IO.Pipelines.Pipe" /> options.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PipeOptions (System.Buffers.MemoryPool&lt;byte&gt; pool = null, System.IO.Pipelines.PipeScheduler readerScheduler = null, System.IO.Pipelines.PipeScheduler writerScheduler = null, long pauseWriterThreshold = 32768, long resumeWriterThreshold = 16384, int minimumSegmentSize = 2048, bool useSynchronizationContext = true);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Buffers.MemoryPool`1&lt;unsigned int8&gt; pool, class System.IO.Pipelines.PipeScheduler readerScheduler, class System.IO.Pipelines.PipeScheduler writerScheduler, int64 pauseWriterThreshold, int64 resumeWriterThreshold, int32 minimumSegmentSize, bool useSynchronizationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeOptions.#ctor(System.Buffers.MemoryPool{System.Byte},System.IO.Pipelines.PipeScheduler,System.IO.Pipelines.PipeScheduler,System.Int64,System.Int64,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional pool As MemoryPool(Of Byte) = null, Optional readerScheduler As PipeScheduler = null, Optional writerScheduler As PipeScheduler = null, Optional pauseWriterThreshold As Long = 32768, Optional resumeWriterThreshold As Long = 16384, Optional minimumSegmentSize As Integer = 2048, Optional useSynchronizationContext As Boolean = true)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="new System.IO.Pipelines.PipeOptions : System.Buffers.MemoryPool&lt;byte&gt; * System.IO.Pipelines.PipeScheduler * System.IO.Pipelines.PipeScheduler * int64 * int64 * int * bool -&gt; System.IO.Pipelines.PipeOptions" Usage="new System.IO.Pipelines.PipeOptions (pool, readerScheduler, writerScheduler, pauseWriterThreshold, resumeWriterThreshold, minimumSegmentSize, useSynchronizationContext)" />
      <MemberSignature Language="C#" Value="public PipeOptions (System.Buffers.MemoryPool&lt;byte&gt; pool = null, System.IO.Pipelines.PipeScheduler readerScheduler = null, System.IO.Pipelines.PipeScheduler writerScheduler = null, long pauseWriterThreshold = -1, long resumeWriterThreshold = -1, int minimumSegmentSize = -1, bool useSynchronizationContext = true);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional pool As MemoryPool(Of Byte) = null, Optional readerScheduler As PipeScheduler = null, Optional writerScheduler As PipeScheduler = null, Optional pauseWriterThreshold As Long = -1, Optional resumeWriterThreshold As Long = -1, Optional minimumSegmentSize As Integer = -1, Optional useSynchronizationContext As Boolean = true)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pool" Type="System.Buffers.MemoryPool&lt;System.Byte&gt;" />
        <Parameter Name="readerScheduler" Type="System.IO.Pipelines.PipeScheduler" />
        <Parameter Name="writerScheduler" Type="System.IO.Pipelines.PipeScheduler" />
        <Parameter Name="pauseWriterThreshold" Type="System.Int64" />
        <Parameter Name="resumeWriterThreshold" Type="System.Int64" />
        <Parameter Name="minimumSegmentSize" Type="System.Int32" />
        <Parameter Name="useSynchronizationContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pool"><span data-ttu-id="2173a-102">用于缓冲区管理的内存块池。</span><span class="sxs-lookup"><span data-stu-id="2173a-102">The pool of memory blocks to be used for buffer management.</span></span></param>
        <param name="readerScheduler"><span data-ttu-id="2173a-103">用于执行 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 回调和异步延续的 <see cref="T:System.IO.Pipelines.PipeReader" />。</span><span class="sxs-lookup"><span data-stu-id="2173a-103">The <see cref="T:System.IO.Pipelines.PipeScheduler" /> to be used to execute <see cref="T:System.IO.Pipelines.PipeReader" /> callbacks and async continuations.</span></span></param>
        <param name="writerScheduler"><span data-ttu-id="2173a-104">用于执行 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 回调和异步延续的 <see cref="T:System.IO.Pipelines.PipeWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2173a-104">The <see cref="T:System.IO.Pipelines.PipeScheduler" /> used to execute <see cref="T:System.IO.Pipelines.PipeWriter" /> callbacks and async continuations.</span></span></param>
        <param name="pauseWriterThreshold"><span data-ttu-id="2173a-105">在 <see cref="T:System.IO.Pipelines.Pipe" /> 开始阻止之前，<see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2173a-105">The number of bytes in the <see cref="T:System.IO.Pipelines.Pipe" /> before <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> starts blocking.</span></span> <span data-ttu-id="2173a-106">负值可防止 <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 进行阻止，从而有效地使 <see cref="T:System.IO.Pipelines.Pipe" /> 中的字节数无限制。</span><span class="sxs-lookup"><span data-stu-id="2173a-106">A negative value prevents <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> from ever blocking, effectively making the number of bytes in the <see cref="T:System.IO.Pipelines.Pipe" /> unlimited.</span></span></param>
        <param name="resumeWriterThreshold"><span data-ttu-id="2173a-107">在 <see cref="T:System.IO.Pipelines.Pipe" /> 停止阻止时，<see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2173a-107">The number of bytes in the <see cref="T:System.IO.Pipelines.Pipe" /> when <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> stops blocking.</span></span></param>
        <param name="minimumSegmentSize"><span data-ttu-id="2173a-108">从 <paramref name="pool" /> 请求的段的最小大小。</span><span class="sxs-lookup"><span data-stu-id="2173a-108">The minimum size of the segment requested from <paramref name="pool" />.</span></span></param>
        <param name="useSynchronizationContext"><span data-ttu-id="2173a-109">如果应在捕获异步延续的 <see langword="true" /> 上执行异步延续，则为 <see cref="T:System.Threading.SynchronizationContext" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2173a-109"><see langword="true" /> if asynchronous continuations should be executed on the <see cref="T:System.Threading.SynchronizationContext" /> they were captured on; <see langword="false" /> otherwise.</span></span> <span data-ttu-id="2173a-110">这将优先于 <see cref="P:System.IO.Pipelines.PipeOptions.ReaderScheduler" /> 和 <see cref="P:System.IO.Pipelines.PipeOptions.WriterScheduler" /> 中指定的计划程序。</span><span class="sxs-lookup"><span data-stu-id="2173a-110">This takes precedence over the schedulers specified in <see cref="P:System.IO.Pipelines.PipeOptions.ReaderScheduler" /> and <see cref="P:System.IO.Pipelines.PipeOptions.WriterScheduler" />.</span></span></param>
        <summary><span data-ttu-id="2173a-111">使用指定的参数初始化 <see cref="T:System.IO.Pipelines.PipeOptions" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2173a-111">Initializes a new instance of the <see cref="T:System.IO.Pipelines.PipeOptions" /> class with the specified parameters.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeOptions Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.Pipelines.PipeOptions Default" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As PipeOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::IO::Pipelines::PipeOptions ^ Default { System::IO::Pipelines::PipeOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.IO.Pipelines.PipeOptions" Usage="System.IO.Pipelines.PipeOptions.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-112">获取 <see cref="T:System.IO.Pipelines.PipeOptions" /> 的默认实例。</span><span class="sxs-lookup"><span data-stu-id="2173a-112">Gets the default instance of <see cref="T:System.IO.Pipelines.PipeOptions" />.</span></span></summary>
        <value><span data-ttu-id="2173a-113">使用默认参数初始化的 <see cref="T:System.IO.Pipelines.PipeOptions" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2173a-113">A <see cref="T:System.IO.Pipelines.PipeOptions" /> object initialized with default parameters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSegmentSize">
      <MemberSignature Language="C#" Value="public int MinimumSegmentSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumSegmentSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.MinimumSegmentSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinimumSegmentSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumSegmentSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSegmentSize : int" Usage="System.IO.Pipelines.PipeOptions.MinimumSegmentSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-114">获取从 <see cref="P:System.IO.Pipelines.PipeOptions.Pool" /> 请求的段的最小大小。</span><span class="sxs-lookup"><span data-stu-id="2173a-114">Gets the minimum size of the segment requested from the <see cref="P:System.IO.Pipelines.PipeOptions.Pool" />.</span></span></summary>
        <value><span data-ttu-id="2173a-115">从 <see cref="P:System.IO.Pipelines.PipeOptions.Pool" />请求的段的最小大小。</span><span class="sxs-lookup"><span data-stu-id="2173a-115">The minimum size of the segment requested from the <see cref="P:System.IO.Pipelines.PipeOptions.Pool" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PauseWriterThreshold">
      <MemberSignature Language="C#" Value="public long PauseWriterThreshold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PauseWriterThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.PauseWriterThreshold" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PauseWriterThreshold As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long PauseWriterThreshold { long get(); };" />
      <MemberSignature Language="F#" Value="member this.PauseWriterThreshold : int64" Usage="System.IO.Pipelines.PipeOptions.PauseWriterThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-116">在 <see cref="T:System.IO.Pipelines.Pipe" /> 开始阻止时，获取 <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2173a-116">Gets the number of bytes in the <see cref="T:System.IO.Pipelines.Pipe" /> when <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> starts blocking.</span></span></summary>
        <value><span data-ttu-id="2173a-117">当 <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 开始阻塞时，<see cref="T:System.IO.Pipelines.Pipe" /> 中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2173a-117">The number of bytes in the <see cref="T:System.IO.Pipelines.Pipe" /> when <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> starts blocking.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pool">
      <MemberSignature Language="C#" Value="public System.Buffers.MemoryPool&lt;byte&gt; Pool { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Buffers.MemoryPool`1&lt;unsigned int8&gt; Pool" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.Pool" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pool As MemoryPool(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Buffers::MemoryPool&lt;System::Byte&gt; ^ Pool { System::Buffers::MemoryPool&lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pool : System.Buffers.MemoryPool&lt;byte&gt;" Usage="System.IO.Pipelines.PipeOptions.Pool" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.MemoryPool&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-118">获取用于缓冲区管理的 <see cref="T:System.Buffers.MemoryPool`1" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2173a-118">Gets the <see cref="T:System.Buffers.MemoryPool`1" /> object used for buffer management.</span></span></summary>
        <value><span data-ttu-id="2173a-119">用于缓冲区管理的内存块池。</span><span class="sxs-lookup"><span data-stu-id="2173a-119">A pool of memory blocks used for buffer management.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderScheduler">
      <MemberSignature Language="C#" Value="public System.IO.Pipelines.PipeScheduler ReaderScheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Pipelines.PipeScheduler ReaderScheduler" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.ReaderScheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderScheduler As PipeScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Pipelines::PipeScheduler ^ ReaderScheduler { System::IO::Pipelines::PipeScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReaderScheduler : System.IO.Pipelines.PipeScheduler" Usage="System.IO.Pipelines.PipeOptions.ReaderScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-120">获取用于执行 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 回调和异步延续的 <see cref="T:System.IO.Pipelines.PipeReader" />。</span><span class="sxs-lookup"><span data-stu-id="2173a-120">Gets the <see cref="T:System.IO.Pipelines.PipeScheduler" /> used to execute <see cref="T:System.IO.Pipelines.PipeReader" /> callbacks and async continuations.</span></span></summary>
        <value><span data-ttu-id="2173a-121">用于执行 <see cref="T:System.IO.Pipelines.PipeReader" /> 回调和异步延续的 <see cref="T:System.IO.Pipelines.PipeScheduler" />。</span><span class="sxs-lookup"><span data-stu-id="2173a-121">A <see cref="T:System.IO.Pipelines.PipeScheduler" /> that is used to execute <see cref="T:System.IO.Pipelines.PipeReader" /> callbacks and async continuations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResumeWriterThreshold">
      <MemberSignature Language="C#" Value="public long ResumeWriterThreshold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ResumeWriterThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.ResumeWriterThreshold" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ResumeWriterThreshold As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ResumeWriterThreshold { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ResumeWriterThreshold : int64" Usage="System.IO.Pipelines.PipeOptions.ResumeWriterThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-122">在 <see cref="T:System.IO.Pipelines.Pipe" /> 停止阻止时，获取 <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2173a-122">Gets the number of bytes in the <see cref="T:System.IO.Pipelines.Pipe" /> when <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> stops blocking.</span></span></summary>
        <value><span data-ttu-id="2173a-123">在 <see cref="T:System.IO.Pipelines.Pipe" /> 停止阻止时，<see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> 中的字节数。</span><span class="sxs-lookup"><span data-stu-id="2173a-123">The number of bytes in the <see cref="T:System.IO.Pipelines.Pipe" /> when <see cref="M:System.IO.Pipelines.PipeWriter.FlushAsync(System.Threading.CancellationToken)" /> stops blocking.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSynchronizationContext">
      <MemberSignature Language="C#" Value="public bool UseSynchronizationContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.UseSynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseSynchronizationContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSynchronizationContext { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UseSynchronizationContext : bool" Usage="System.IO.Pipelines.PipeOptions.UseSynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-124">获取可确定是否应在捕获异步回调和延续的 <see cref="T:System.Threading.SynchronizationContext" /> 上执行异步回调和延续的值。</span><span class="sxs-lookup"><span data-stu-id="2173a-124">Gets a value that determines if asynchronous callbacks and continuations should be executed on the <see cref="T:System.Threading.SynchronizationContext" /> they were captured on.</span></span> <span data-ttu-id="2173a-125">这将优先于 <see cref="P:System.IO.Pipelines.PipeOptions.ReaderScheduler" /> 和 <see cref="P:System.IO.Pipelines.PipeOptions.WriterScheduler" /> 中指定的计划程序。</span><span class="sxs-lookup"><span data-stu-id="2173a-125">This takes precedence over the schedulers specified in <see cref="P:System.IO.Pipelines.PipeOptions.ReaderScheduler" /> and <see cref="P:System.IO.Pipelines.PipeOptions.WriterScheduler" />.</span></span></summary>
        <value><span data-ttu-id="2173a-126"><see langword="true" /> 是否应在捕获它们的 <see cref="T:System.Threading.SynchronizationContext" /> 上执行异步回调和延续。否则，<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2173a-126"><see langword="true" /> if asynchronous callbacks and continuations should be executed on the <see cref="T:System.Threading.SynchronizationContext" /> they were captured on; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriterScheduler">
      <MemberSignature Language="C#" Value="public System.IO.Pipelines.PipeScheduler WriterScheduler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Pipelines.PipeScheduler WriterScheduler" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipelines.PipeOptions.WriterScheduler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WriterScheduler As PipeScheduler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Pipelines::PipeScheduler ^ WriterScheduler { System::IO::Pipelines::PipeScheduler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WriterScheduler : System.IO.Pipelines.PipeScheduler" Usage="System.IO.Pipelines.PipeOptions.WriterScheduler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeScheduler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2173a-127">获取用于执行 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 回调和异步延续的 <see cref="T:System.IO.Pipelines.PipeWriter" />。</span><span class="sxs-lookup"><span data-stu-id="2173a-127">Gets the <see cref="T:System.IO.Pipelines.PipeScheduler" /> used to execute <see cref="T:System.IO.Pipelines.PipeWriter" /> callbacks and async continuations.</span></span></summary>
        <value><span data-ttu-id="2173a-128">用于执行 <see cref="T:System.IO.Pipelines.PipeWriter" /> 回调和异步延续的 <see cref="T:System.IO.Pipelines.PipeScheduler" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="2173a-128">A <see cref="T:System.IO.Pipelines.PipeScheduler" /> object used to execute <see cref="T:System.IO.Pipelines.PipeWriter" /> callbacks and async continuations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
