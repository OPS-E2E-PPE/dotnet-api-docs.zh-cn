<Type Name="ExceptionRegionEncoder" FullName="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3e7fbe3f9e8264f2b80ce570f2dd72fd947eb667" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82409214" /></Metadata><TypeSignature Language="C#" Value="public struct ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ExceptionRegionEncoder extends System.ValueType" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="VB.NET" Value="Public Structure ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="C++ CLI" Value="public value class ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="F#" Value="type ExceptionRegionEncoder = struct" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Metadata</AssemblyName>
    <AssemblyVersion>1.4.1.0</AssemblyVersion>
    <AssemblyVersion>1.4.2.0</AssemblyVersion>
    <AssemblyVersion>1.4.3.0</AssemblyVersion>
    <AssemblyVersion>1.4.4.0</AssemblyVersion>
    <AssemblyVersion>1.4.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder Add (System.Reflection.Metadata.ExceptionRegionKind kind, int tryOffset, int tryLength, int handlerOffset, int handlerLength, System.Reflection.Metadata.EntityHandle catchType = default, int filterOffset = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder Add(valuetype System.Reflection.Metadata.ExceptionRegionKind kind, int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength, valuetype System.Reflection.Metadata.EntityHandle catchType, int32 filterOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Add(System.Reflection.Metadata.ExceptionRegionKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (kind As ExceptionRegionKind, tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer, Optional catchType As EntityHandle = null, Optional filterOffset As Integer = 0) As ExceptionRegionEncoder" />
      <MemberSignature Language="F#" Value="member this.Add : System.Reflection.Metadata.ExceptionRegionKind * int * int * int * int * System.Reflection.Metadata.EntityHandle * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.Add (kind, tryOffset, tryLength, handlerOffset, handlerLength, catchType, filterOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="System.Reflection.Metadata.ExceptionRegionKind" Index="0" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="tryOffset" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="tryLength" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerOffset" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerLength" Type="System.Int32" Index="4" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="catchType" Type="System.Reflection.Metadata.EntityHandle" Index="5" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="filterOffset" Type="System.Int32" Index="6" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="kind"><span data-ttu-id="783c9-101">子句类型。</span><span class="sxs-lookup"><span data-stu-id="783c9-101">Clause kind.</span></span></param>
        <param name="tryOffset"><span data-ttu-id="783c9-102">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-102">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="783c9-103">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-103">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="783c9-104">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-104">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="783c9-105">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-105">Handler length.</span></span></param>
        <param name="catchType"><span data-ttu-id="783c9-106"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />；如果 <paramref name="kind" /> 不是 <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Catch" />，则为 nil</span><span class="sxs-lookup"><span data-stu-id="783c9-106"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />, or nil if <paramref name="kind" /> is not <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Catch" /></span></span></param>
        <param name="filterOffset"><span data-ttu-id="783c9-107">筛选器块的偏移量；如果 <paramref name="kind" /> 不是 <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Filter" />，则为 0。</span><span class="sxs-lookup"><span data-stu-id="783c9-107">Offset of the filter block, or 0 if the <paramref name="kind" /> is not <see cref="F:System.Reflection.Metadata.ExceptionRegionKind.Filter" />.</span></span></param>
        <summary><span data-ttu-id="783c9-108">添加异常子句。</span><span class="sxs-lookup"><span data-stu-id="783c9-108">Adds an exception clause.</span></span></summary>
        <returns><span data-ttu-id="783c9-109">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="783c9-109">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCatch">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddCatch (int tryOffset, int tryLength, int handlerOffset, int handlerLength, System.Reflection.Metadata.EntityHandle catchType);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddCatch(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength, valuetype System.Reflection.Metadata.EntityHandle catchType) cil managed" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddCatch(System.Int32,System.Int32,System.Int32,System.Int32,System.Reflection.Metadata.EntityHandle)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Function AddCatch (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer, catchType As EntityHandle) As ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddCatch(int tryOffset, int tryLength, int handlerOffset, int handlerLength, System::Reflection::Metadata::EntityHandle catchType);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.AddCatch : int * int * int * int * System.Reflection.Metadata.EntityHandle -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddCatch (tryOffset, tryLength, handlerOffset, handlerLength, catchType)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="tryLength" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerOffset" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerLength" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="catchType" Type="System.Reflection.Metadata.EntityHandle" Index="4" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="783c9-110">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-110">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="783c9-111">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-111">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="783c9-112">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-112">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="783c9-113">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-113">Handler length.</span></span></param>
        <param name="catchType"><span data-ttu-id="783c9-114"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />、<see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> 或 <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />。</span><span class="sxs-lookup"><span data-stu-id="783c9-114"><see cref="T:System.Reflection.Metadata.TypeDefinitionHandle" />, <see cref="T:System.Reflection.Metadata.TypeReferenceHandle" /> or <see cref="T:System.Reflection.Metadata.TypeSpecificationHandle" />.</span></span></param>
        <summary><span data-ttu-id="783c9-115">添加 fault 子句。</span><span class="sxs-lookup"><span data-stu-id="783c9-115">Adds a fault clause.</span></span></summary>
        <returns><span data-ttu-id="783c9-116">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="783c9-116">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFault">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFault (int tryOffset, int tryLength, int handlerOffset, int handlerLength);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFault(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength) cil managed" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFault(System.Int32,System.Int32,System.Int32,System.Int32)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFault (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer) As ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddFault(int tryOffset, int tryLength, int handlerOffset, int handlerLength);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.AddFault : int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddFault (tryOffset, tryLength, handlerOffset, handlerLength)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="tryLength" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerOffset" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerLength" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="783c9-117">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-117">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="783c9-118">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-118">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="783c9-119">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-119">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="783c9-120">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-120">Handler length.</span></span></param>
        <summary><span data-ttu-id="783c9-121">添加 fault 子句。</span><span class="sxs-lookup"><span data-stu-id="783c9-121">Adds a fault clause.</span></span></summary>
        <returns><span data-ttu-id="783c9-122">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="783c9-122">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFilter">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFilter (int tryOffset, int tryLength, int handlerOffset, int handlerLength, int filterOffset);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFilter(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength, int32 filterOffset) cil managed" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFilter(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFilter (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer, filterOffset As Integer) As ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddFilter(int tryOffset, int tryLength, int handlerOffset, int handlerLength, int filterOffset);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.AddFilter : int * int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddFilter (tryOffset, tryLength, handlerOffset, handlerLength, filterOffset)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="tryLength" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerOffset" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerLength" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="filterOffset" Type="System.Int32" Index="4" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="783c9-123">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-123">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="783c9-124">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-124">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="783c9-125">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-125">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="783c9-126">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-126">Handler length.</span></span></param>
        <param name="filterOffset"><span data-ttu-id="783c9-127">筛选器块的偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-127">Offset of the filter block.</span></span></param>
        <summary><span data-ttu-id="783c9-128">添加 fault 子句。</span><span class="sxs-lookup"><span data-stu-id="783c9-128">Adds a fault clause.</span></span></summary>
        <returns><span data-ttu-id="783c9-129">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="783c9-129">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFinally">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFinally (int tryOffset, int tryLength, int handlerOffset, int handlerLength);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder AddFinally(int32 tryOffset, int32 tryLength, int32 handlerOffset, int32 handlerLength) cil managed" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.AddFinally(System.Int32,System.Int32,System.Int32,System.Int32)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Function AddFinally (tryOffset As Integer, tryLength As Integer, handlerOffset As Integer, handlerLength As Integer) As ExceptionRegionEncoder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Metadata::Ecma335::ExceptionRegionEncoder AddFinally(int tryOffset, int tryLength, int handlerOffset, int handlerLength);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.AddFinally : int * int * int * int -&gt; System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder" Usage="exceptionRegionEncoder.AddFinally (tryOffset, tryLength, handlerOffset, handlerLength)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tryOffset" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="tryLength" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerOffset" Type="System.Int32" Index="2" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="handlerLength" Type="System.Int32" Index="3" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="tryOffset"><span data-ttu-id="783c9-130">Try 块初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-130">Try block start offset.</span></span></param>
        <param name="tryLength"><span data-ttu-id="783c9-131">Try 块长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-131">Try block length.</span></span></param>
        <param name="handlerOffset"><span data-ttu-id="783c9-132">处理程序初始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-132">Handler start offset.</span></span></param>
        <param name="handlerLength"><span data-ttu-id="783c9-133">处理程序长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-133">Handler length.</span></span></param>
        <summary><span data-ttu-id="783c9-134">添加 finally 子句。</span><span class="sxs-lookup"><span data-stu-id="783c9-134">Adds a finally clause.</span></span></summary>
        <returns><span data-ttu-id="783c9-135">下一子句的编码器。</span><span class="sxs-lookup"><span data-stu-id="783c9-135">Encoder for the next clause.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Builder">
      <MemberSignature Language="C#" Value="public System.Reflection.Metadata.BlobBuilder Builder { get; }" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Metadata.BlobBuilder Builder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Builder As BlobBuilder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Metadata::BlobBuilder ^ Builder { System::Reflection::Metadata::BlobBuilder ^ get(); };" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="member this.Builder : System.Reflection.Metadata.BlobBuilder" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.Builder" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Metadata.BlobBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="783c9-136">基础生成器。</span><span class="sxs-lookup"><span data-stu-id="783c9-136">The underlying builder.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSmallFormat">
      <MemberSignature Language="C#" Value="public bool HasSmallFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSmallFormat" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasSmallFormat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasSmallFormat { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasSmallFormat : bool" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.HasSmallFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="783c9-137">如果编码器使用小格式，则为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="783c9-137"><see langword="true" /> if the encoder uses small format.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSmallExceptionRegion">
      <MemberSignature Language="C#" Value="public static bool IsSmallExceptionRegion (int startOffset, int length);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSmallExceptionRegion(int32 startOffset, int32 length) cil managed" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion(System.Int32,System.Int32)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSmallExceptionRegion (startOffset As Integer, length As Integer) As Boolean" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSmallExceptionRegion(int startOffset, int length);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member IsSmallExceptionRegion : int * int -&gt; bool" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallExceptionRegion (startOffset, length)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startOffset" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="length" Type="System.Int32" Index="1" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="startOffset"><span data-ttu-id="783c9-138">区域的起始偏移量。</span><span class="sxs-lookup"><span data-stu-id="783c9-138">Start offset of the region.</span></span></param>
        <param name="length"><span data-ttu-id="783c9-139">区域的长度。</span><span class="sxs-lookup"><span data-stu-id="783c9-139">Length of the region.</span></span></param>
        <summary><span data-ttu-id="783c9-140">如果区域适合小格式，则返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="783c9-140">Returns <see langword="true" /> if the region fits small format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSmallRegionCount">
      <MemberSignature Language="C#" Value="public static bool IsSmallRegionCount (int exceptionRegionCount);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSmallRegionCount(int32 exceptionRegionCount) cil managed" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount(System.Int32)" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSmallRegionCount (exceptionRegionCount As Integer) As Boolean" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSmallRegionCount(int exceptionRegionCount);" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="F#" Value="static member IsSmallRegionCount : int -&gt; bool" Usage="System.Reflection.Metadata.Ecma335.ExceptionRegionEncoder.IsSmallRegionCount exceptionRegionCount" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Metadata</AssemblyName>
        <AssemblyVersion>1.4.1.0</AssemblyVersion>
        <AssemblyVersion>1.4.2.0</AssemblyVersion>
        <AssemblyVersion>1.4.3.0</AssemblyVersion>
        <AssemblyVersion>1.4.4.0</AssemblyVersion>
        <AssemblyVersion>1.4.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionRegionCount" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="exceptionRegionCount"><span data-ttu-id="783c9-141">异常区域的数目。</span><span class="sxs-lookup"><span data-stu-id="783c9-141">Number of exception regions.</span></span></param>
        <summary><span data-ttu-id="783c9-142">如果异常区域的数目是第一小格式，则返回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="783c9-142">Returns <see langword="true" /> if the number of exception regions first small format.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
