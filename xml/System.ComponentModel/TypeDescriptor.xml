<Type Name="TypeDescriptor" FullName="System.ComponentModel.TypeDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8516506fa1da29ce186485d8f22da5e747208c6e" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83463875" /></Metadata><TypeSignature Language="C#" Value="public sealed class TypeDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TypeDescriptor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TypeDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptor sealed" />
  <TypeSignature Language="F#" Value="type TypeDescriptor = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.ComponentModel.TypeConverter" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a22e2-101">提供有关组件特征的信息，如组件的特性、属性和事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-101">Provides information about the characteristics for a component, such as its attributes, properties, and events.</span></span> <span data-ttu-id="a22e2-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-103">.NET Framework 提供了两种方法来访问类型的元数据： <xref:System.Reflection?displayProperty=nameWithType> 命名空间中提供的反射 API 和 <xref:System.ComponentModel.TypeDescriptor> 类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-103">The .NET Framework provides two ways to access metadata on a type: the reflection API provided in the <xref:System.Reflection?displayProperty=nameWithType> namespace, and the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="a22e2-104">反射是适用于所有类型的常规机制，因为它的基础是在根 <xref:System.Object> 类的 <xref:System.Object.GetType%2A> 方法中建立的。</span><span class="sxs-lookup"><span data-stu-id="a22e2-104">Reflection is a general mechanism available to all types because its foundation is established in the <xref:System.Object.GetType%2A> method of the root <xref:System.Object> class.</span></span> <span data-ttu-id="a22e2-105">它为类型返回的信息不是可扩展的，因为它不能在编译目标类型之后修改。</span><span class="sxs-lookup"><span data-stu-id="a22e2-105">The information it returns for a type is not extensible, in that it cannot be modified after compilation of the target type.</span></span> <span data-ttu-id="a22e2-106">有关详细信息，请参阅[反射](~/docs/framework/reflection-and-codedom/reflection.md)中的主题。</span><span class="sxs-lookup"><span data-stu-id="a22e2-106">For more information, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
 <span data-ttu-id="a22e2-107">与此相反，<xref:System.ComponentModel.TypeDescriptor> 是一种可扩展的组件检查机制：实现 <xref:System.ComponentModel.IComponent> 接口的类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-107">In contrast, <xref:System.ComponentModel.TypeDescriptor> is an extensible inspection mechanism for components: those classes that implement the <xref:System.ComponentModel.IComponent> interface.</span></span> <span data-ttu-id="a22e2-108">不同于反射，它不检查方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-108">Unlike reflection, it does not inspect for methods.</span></span> <span data-ttu-id="a22e2-109">可以通过目标组件的 <xref:System.ComponentModel.Component.Site%2A>提供的多个服务对 <xref:System.ComponentModel.TypeDescriptor> 进行动态扩展。</span><span class="sxs-lookup"><span data-stu-id="a22e2-109"><xref:System.ComponentModel.TypeDescriptor> can be dynamically extended by several services available through the target component's <xref:System.ComponentModel.Component.Site%2A>.</span></span> <span data-ttu-id="a22e2-110">下表显示了这些服务。</span><span class="sxs-lookup"><span data-stu-id="a22e2-110">The following table shows these services.</span></span>  
  
|<span data-ttu-id="a22e2-111">Service name</span><span class="sxs-lookup"><span data-stu-id="a22e2-111">Service name</span></span>|<span data-ttu-id="a22e2-112">说明</span><span class="sxs-lookup"><span data-stu-id="a22e2-112">Description</span></span>|  
|------------------|-----------------|  
|<xref:System.ComponentModel.IExtenderProvider>|<span data-ttu-id="a22e2-113">启用另一个类（如 <xref:System.Windows.Forms.ToolTip>）来向组件提供额外的属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-113">Enables another class, such as <xref:System.Windows.Forms.ToolTip>, to provide extra properties to a component.</span></span>|  
|<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>|<span data-ttu-id="a22e2-114">允许其他对象修改组件公开的标准元数据。</span><span class="sxs-lookup"><span data-stu-id="a22e2-114">Enables another object to modify the standard metadata that is exposed by a component.</span></span>|  
|<xref:System.ComponentModel.ICustomTypeDescriptor>|<span data-ttu-id="a22e2-115">使类能够完全并动态地指定其自己的元数据，从而替换 <xref:System.ComponentModel.TypeDescriptor>的标准检查机制。</span><span class="sxs-lookup"><span data-stu-id="a22e2-115">Enables a class to completely and dynamically specify its own metadata, replacing the standard inspection mechanism of <xref:System.ComponentModel.TypeDescriptor>.</span></span>|  
  
 <span data-ttu-id="a22e2-116"><xref:System.ComponentModel.TypeDescriptor> 提供的扩展性使组件的设计时表示形式不同于它的实际运行时表示形式，这使得 <xref:System.ComponentModel.TypeDescriptor> 对于构建设计时基础结构很有用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-116">The extensibility provided by <xref:System.ComponentModel.TypeDescriptor> allows the design-time representation of a component to differ from its actual run-time representation, which makes <xref:System.ComponentModel.TypeDescriptor> useful for building design-time infrastructure.</span></span>  
  
 <span data-ttu-id="a22e2-117"><xref:System.ComponentModel.TypeDescriptor> 中的所有方法都 `static`。</span><span class="sxs-lookup"><span data-stu-id="a22e2-117">All the methods in <xref:System.ComponentModel.TypeDescriptor> are `static`.</span></span> <span data-ttu-id="a22e2-118">不能创建此类的实例，也不能继承此类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-118">You cannot create an instance of this class, and this class cannot be inherited.</span></span>  
  
 <span data-ttu-id="a22e2-119">您可以通过两种不同的方式来设置属性和事件值：在组件类中指定它们或在设计时更改它们。</span><span class="sxs-lookup"><span data-stu-id="a22e2-119">You can set property and event values two different ways: specify them in the component class or change them at design time.</span></span> <span data-ttu-id="a22e2-120">由于可以通过两种方式设置这些值，因此 <xref:System.ComponentModel.TypeDescriptor> 的重载方法采用两种不同类型的参数：类类型或对象实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-120">Because you can set these values two ways, the overloaded methods of <xref:System.ComponentModel.TypeDescriptor> take two different types of parameters: a class type or an object instance.</span></span>  
  
 <span data-ttu-id="a22e2-121">如果要访问 <xref:System.ComponentModel.TypeDescriptor> 信息并且具有对象的实例，请使用调用组件的方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-121">When you want to access <xref:System.ComponentModel.TypeDescriptor> information and you have an instance of the object, use the method that calls for a component.</span></span> <span data-ttu-id="a22e2-122">仅当没有对象的实例时，才使用调用类类型的方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-122">Use the method that calls for the class type only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-123">属性和事件通过 <xref:System.ComponentModel.TypeDescriptor> 高速缓存。</span><span class="sxs-lookup"><span data-stu-id="a22e2-123">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="a22e2-124">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="a22e2-124">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="a22e2-125">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="a22e2-125">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="a22e2-126">如果是这种情况，则必须调用 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 方法来更新缓存。</span><span class="sxs-lookup"><span data-stu-id="a22e2-126">If this is the case, then the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method must be called to update the cache.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.EventDescriptor" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="N:System.Reflection" />
    <altmember cref="T:System.ComponentModel.IComponent" />
    <altmember cref="T:System.ComponentModel.ISite" />
    <related type="Article" href="https://msdn.microsoft.com/library/e81b8e2f-e06e-44fa-8129-7bdb0230101f"><span data-ttu-id="a22e2-127">类型说明符概述</span><span class="sxs-lookup"><span data-stu-id="a22e2-127">Type Descriptor Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/d1a58e7f-fb39-4d50-bf84-e3b8f9bf9775"><span data-ttu-id="a22e2-128">反射</span><span class="sxs-lookup"><span data-stu-id="a22e2-128">Reflection</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-129">向目标组件添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-129">Adds class-level attributes to the target component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (object instance, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(object instance, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (instance As Object, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(System::Object ^ instance, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : obj * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (instance, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="a22e2-130">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-130">An instance of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-131">要添加到组件的类的 <see cref="T:System.Attribute" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-131">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="a22e2-132">向目标组件实例添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-132">Adds class-level attributes to the target component instance.</span></span></summary>
        <returns><span data-ttu-id="a22e2-133">用于添加指定属性的新创建的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-133">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-134"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> 方法可向组件的指定实例添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-134">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Object%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified instance of a component.</span></span> <span data-ttu-id="a22e2-135">由于这是使用 Visual Studio Windows 窗体设计器和属性窗口的应用程序的常见要求，因此此方法通过创建将提供的特性与类中已存在的特性合并的类型说明提供程序来提供快捷方式。</span><span class="sxs-lookup"><span data-stu-id="a22e2-135">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="a22e2-136">返回值是用于添加特性的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-136">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="a22e2-137">以后不再需要已添加的属性时，可以将此提供程序传递到 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-137">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-138">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-138">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider AddAttributes (Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider AddAttributes(class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddAttributes(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddAttributes (type As Type, ParamArray attributes As Attribute()) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ AddAttributes(Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member AddAttributes : Type * Attribute[] -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.AddAttributes (type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="attributes" Type="System.Attribute[]" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a22e2-139">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-139">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-140">要添加到组件的类的 <see cref="T:System.Attribute" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-140">An array of <see cref="T:System.Attribute" /> objects to add to the component's class.</span></span></param>
        <summary><span data-ttu-id="a22e2-141">向目标组件类型添加类级别属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-141">Adds class-level attributes to the target component type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-142">用于添加指定属性的新创建的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-142">The newly created <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that was used to add the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-143"><xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> 方法将类级特性添加到组件的指定类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-143">The <xref:System.ComponentModel.TypeDescriptor.AddAttributes%28System.Type%2CSystem.Attribute%5B%5D%29> method adds class-level attributes to the specified type of a component.</span></span> <span data-ttu-id="a22e2-144">由于这是使用 Visual Studio Windows 窗体设计器和属性窗口的应用程序的常见要求，因此此方法通过创建将提供的特性与类中已存在的特性合并的类型说明提供程序来提供快捷方式。</span><span class="sxs-lookup"><span data-stu-id="a22e2-144">Because this is a common requirement of applications using the Visual Studio Windows Forms Designer and Properties window, this method provides a shortcut by creating a type description provider that merges the provided attributes with the attributes that already exist on the class.</span></span> <span data-ttu-id="a22e2-145">返回值是用于添加特性的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-145">The return value is the type description provider that was used to add the attributes.</span></span> <span data-ttu-id="a22e2-146">以后不再需要已添加的属性时，可以将此提供程序传递到 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-146">This provider can later be passed to the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method when the added attributes are no longer needed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-147">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-147">One or both of the parameters is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
      </Docs>
    </Member>
    <Member MemberName="AddEditorTable">
      <MemberSignature Language="C#" Value="public static void AddEditorTable (Type editorBaseType, System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddEditorTable(class System.Type editorBaseType, class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddEditorTable (editorBaseType As Type, table As Hashtable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddEditorTable(Type ^ editorBaseType, System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddEditorTable : Type * System.Collections.Hashtable -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddEditorTable (editorBaseType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="a22e2-148">要添加编辑器表的编辑器基类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-148">The editor base type to add the editor table for.</span></span> <span data-ttu-id="a22e2-149">如果针对此类型的表已存在，此方法将不起作用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-149">If a table already exists for this type, this method will do nothing.</span></span></param>
        <param name="table"><span data-ttu-id="a22e2-150">要添加的 <see cref="T:System.Collections.Hashtable" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-150">The <see cref="T:System.Collections.Hashtable" /> to add.</span></span></param>
        <summary><span data-ttu-id="a22e2-151">为给定的编辑器基类型添加编辑器表。</span><span class="sxs-lookup"><span data-stu-id="a22e2-151">Adds an editor table for the given editor base type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-152"><xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> 方法为给定的编辑器基类型添加编辑器表。</span><span class="sxs-lookup"><span data-stu-id="a22e2-152">The <xref:System.ComponentModel.TypeDescriptor.AddEditorTable%2A> method adds an editor table for the given editor base type.</span></span> <span data-ttu-id="a22e2-153">通常，在组件上将编辑器指定为元数据。</span><span class="sxs-lookup"><span data-stu-id="a22e2-153">Typically, editors are specified as metadata on a component.</span></span> <span data-ttu-id="a22e2-154">但是，如果在组件上找不到请求的编辑器基类型的元数据，则关联的 <xref:System.ComponentModel.TypeDescriptor> 将在编辑器表中搜索编辑器类型（如果可以找到）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-154">However, if no metadata for a requested editor base type can be found on the component, the associated <xref:System.ComponentModel.TypeDescriptor> will search an editor table for the editor type, if one can be found.</span></span> <span data-ttu-id="a22e2-155">将编辑器表添加到类型描述符后，不能将其移除并由类型描述符拥有。</span><span class="sxs-lookup"><span data-stu-id="a22e2-155">Once an editor table has been added to a type descriptor, it cannot be removed and is owned by the type descriptor.</span></span> <span data-ttu-id="a22e2-156">类型说明符可以自由地对此表进行修改。</span><span class="sxs-lookup"><span data-stu-id="a22e2-156">The type descriptor may freely make modifications to this table.</span></span>  
  
 <span data-ttu-id="a22e2-157">编辑器表的格式将数据类型用作键，并使用编辑器作为值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-157">The format for an editor table uses data types as keys and editors as values.</span></span> <span data-ttu-id="a22e2-158">表中某项的值部分表示一个编辑器实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-158">The value portion of an entry in the table represents an editor instance.</span></span> <span data-ttu-id="a22e2-159">它可以有三个值中的一个。</span><span class="sxs-lookup"><span data-stu-id="a22e2-159">It can have one of three values.</span></span> <span data-ttu-id="a22e2-160">如果它包含字符串，则类型描述符将假定这是类型的完全限定名称，然后加载对象的类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-160">If it contains a string, the type descriptor will assume this is a fully qualified name of a type, and then load the type for the object.</span></span> <span data-ttu-id="a22e2-161">如果它包含类型，则将创建此类型的实例以获取编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-161">If it contains a type, an instance of this type will be created to obtain an editor.</span></span> <span data-ttu-id="a22e2-162">最后，值部分可能包含实际的编辑器实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-162">Finally, the value portion may contain an actual editor instance.</span></span> <span data-ttu-id="a22e2-163">如果类型描述符将编辑器解析为实例，则会将该实例存储回表中供将来使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-163">If the type descriptor resolves an editor to an instance, it will store the instance back into the table for future use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-164">将类型描述提供程序添加到此类型描述符的提供程序的列表。</span><span class="sxs-lookup"><span data-stu-id="a22e2-164">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-165">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-165">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="a22e2-166">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-166">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-167">为某个组件的单个实例添加类型描述提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-167">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-168"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法添加一个类型说明提供程序，该提供程序为组件的单个实例提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="a22e2-168">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method adds a type description provider that supplies type information for a single instance of a component.</span></span> <span data-ttu-id="a22e2-169">如果通过此方法添加提供程序，则将不会调用该提供程序的 <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> 方法，因为该实例已存在。</span><span class="sxs-lookup"><span data-stu-id="a22e2-169">If a provider is added by this method, the provider's <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will not be called because the instance already exists.</span></span>  
  
 <span data-ttu-id="a22e2-170">此方法不保留对组件的硬引用，因此不会阻止组件完成。</span><span class="sxs-lookup"><span data-stu-id="a22e2-170">This method does not maintain a hard reference to the component, so it does not prevent the component from finalizing.</span></span>  
  
 <span data-ttu-id="a22e2-171">可以为同一类型或对象添加多个类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-171">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="a22e2-172">如果发生这种情况，则第一个提供类型信息的类型说明提供程序将独占使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-172">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="a22e2-173">由于类型信息提供程序存储在堆栈中，最后添加的提供程序将是查询的第一个提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-173">Since type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="a22e2-174">此行为允许使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 和 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> 方法根据特定方案的要求，推送和弹出类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-174">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="a22e2-175">如果成功，则此方法将对 `instance` 参数调用 <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-175">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Object%29> method on the `instance` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22e2-176">此方法的两个版本将生成具有不同范围的结果。</span><span class="sxs-lookup"><span data-stu-id="a22e2-176">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="a22e2-177">采用 <xref:System.Object> 参数的 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 方法仅影响指定的组件的单个实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-177">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="a22e2-178">相反，另一个重载采用 <xref:System.Type> 参数，它会影响该类型描述的组件的所有实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-178">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="a22e2-179">如果需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-179">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-180">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-180">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="AddProvider">
      <MemberSignature Language="C#" Value="public static void AddProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProvider (provider As TypeDescriptionProvider, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-181">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-181">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="a22e2-182">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-182">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-183">为组件类添加类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-183">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-184"><xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法添加一个类型说明提供程序，该提供程序为指定的类、派生类和这些类型的所有实例提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="a22e2-184">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method adds a type description provider that supplies type information for the specified class, derived classes, and all instances of these types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22e2-185">`type` 参数可以是任何类型，包括接口。</span><span class="sxs-lookup"><span data-stu-id="a22e2-185">The `type` parameter can be any type, including an interface.</span></span> <span data-ttu-id="a22e2-186">例如，若要为所有组件提供自定义类型和实例信息，需指定 `typeof(IComponent)`。</span><span class="sxs-lookup"><span data-stu-id="a22e2-186">For example, to provide custom type and instance information for all components, you would specify `typeof(IComponent)`.</span></span> <span data-ttu-id="a22e2-187">传递 `typeof(object)` 将调用提供程序，以便为所有类型提供类型信息。</span><span class="sxs-lookup"><span data-stu-id="a22e2-187">Passing `typeof(object)` will call the provider to supply type information for all types.</span></span>  
  
 <span data-ttu-id="a22e2-188">此方法不保留对任何对象的硬引用，因此不会阻止对象完成。</span><span class="sxs-lookup"><span data-stu-id="a22e2-188">This method does not maintain a hard reference to any object, so it does not prevent objects from finalizing.</span></span>  
  
 <span data-ttu-id="a22e2-189">可以为同一类型或对象添加多个类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-189">It is possible to add multiple type description providers for the same type or object.</span></span> <span data-ttu-id="a22e2-190">如果发生这种情况，则第一个提供类型信息的类型说明提供程序将独占使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-190">If this occurs, the first type description provider encountered that provides type information will be used exclusively.</span></span> <span data-ttu-id="a22e2-191">由于类型信息提供程序存储在堆栈中，最后添加的提供程序将是查询的第一个提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-191">Because type information providers are stored in a stack, the last provider added will be the first one queried.</span></span> <span data-ttu-id="a22e2-192">此行为允许使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 和 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> 方法根据特定方案的要求，推送和弹出类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-192">This behavior enables the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> and <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%2A> methods to be used to push and pop type description providers as required for particular scenarios.</span></span>  
  
 <span data-ttu-id="a22e2-193">如果成功，则此方法将对 `type` 参数调用 <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-193">If successful, this method calls the <xref:System.ComponentModel.TypeDescriptor.Refresh%28System.Type%29> method on the `type` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22e2-194">此方法的两个版本将生成具有不同范围的结果。</span><span class="sxs-lookup"><span data-stu-id="a22e2-194">The two versions of this method produce results with different scopes.</span></span> <span data-ttu-id="a22e2-195">采用 <xref:System.Object> 参数的 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 方法仅影响指定的组件的单个实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-195">The <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> method that takes an <xref:System.Object> parameter affects only that single instance of the component specified.</span></span> <span data-ttu-id="a22e2-196">相反，另一个重载采用 <xref:System.Type> 参数，它会影响该类型描述的组件的所有实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-196">In contrast, the other overload, which takes a <xref:System.Type> parameter, affects all instances of the component described by that type.</span></span>  
  
 <span data-ttu-id="a22e2-197">如果需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-197">Use the <xref:System.ComponentModel.TypeDescriptor.AddProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-198">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-198">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-199">将类型描述提供程序添加到此类型描述符的提供程序的列表。</span><span class="sxs-lookup"><span data-stu-id="a22e2-199">Adds a type description provider to the list of providers for this type descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-200">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-200">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="instance"><span data-ttu-id="a22e2-201">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-201">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-202">为某个组件的单个实例添加类型描述提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-202">Adds a type description provider for a single instance of a component.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-203">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-203">This method can be called from partially trusted code.</span></span> <span data-ttu-id="a22e2-204">如果定义了 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>，则调用方可以注册指定实例的提供程序（如果其类型也是部分受信任的）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-204">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="a22e2-205">如果不需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-205">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-206">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-206">One or both of the parameters are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddProviderTransparent">
      <MemberSignature Language="C#" Value="public static void AddProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.AddProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddProviderTransparent (provider As TypeDescriptionProvider, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member AddProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.AddProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-207">要添加的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-207">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to add.</span></span></param>
        <param name="type"><span data-ttu-id="a22e2-208">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-208">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-209">为组件类添加类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-209">Adds a type description provider for a component class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-210">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-210">This method can be called from partially trusted code.</span></span> <span data-ttu-id="a22e2-211">如果定义了 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>，则调用方可以注册指定类型的提供程序（如果它也是部分受信任的提供程序）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-211">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="a22e2-212">如果不需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-212">Use the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-213">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-213">One or both of the parameters are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ComNativeDescriptorHandler">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.IComNativeDescriptorHandler ComNativeDescriptorHandler" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ComNativeDescriptorHandler As IComNativeDescriptorHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::IComNativeDescriptorHandler ^ ComNativeDescriptorHandler { System::ComponentModel::IComNativeDescriptorHandler ^ get(); void set(System::ComponentModel::IComNativeDescriptorHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComNativeDescriptorHandler : System.ComponentModel.IComNativeDescriptorHandler with get, set" Usage="System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This property has been deprecated.  Use a type description provider to supply type information for COM types instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="net-5.0">
          <AttributeName>System.Obsolete("This property has been deprecated. Use a type description provider to supply type information for COM types instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComNativeDescriptorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22e2-214">获取或设置用于目标组件的组件对象模型 (COM) 类型信息的提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-214">Gets or sets the provider for the Component Object Model (COM) type information for the target component.</span></span></summary>
        <value><span data-ttu-id="a22e2-215"><see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> 实例，表示 COM 类型的信息提供程序实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-215">An <see cref="T:System.ComponentModel.IComNativeDescriptorHandler" /> instance representing the COM type information provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-216"><xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> 属性和 <xref:System.ComponentModel.IComNativeDescriptorHandler> 接口已过时。</span><span class="sxs-lookup"><span data-stu-id="a22e2-216">The <xref:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler%2A> property and the <xref:System.ComponentModel.IComNativeDescriptorHandler> interface are obsolete.</span></span> <span data-ttu-id="a22e2-217">有关详细信息，请参阅 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-217">For more information, see the <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      </Docs>
    </Member>
    <Member MemberName="ComObjectType">
      <MemberSignature Language="C#" Value="public static Type ComObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type ComObjectType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ComObjectType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ ComObjectType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComObjectType : Type" Usage="System.ComponentModel.TypeDescriptor.ComObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22e2-218">获取由目标组件表示的组件对象模型 (COM) 对象的类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-218">Gets the type of the Component Object Model (COM) object represented by the target component.</span></span></summary>
        <value><span data-ttu-id="a22e2-219">由此组件表示的 COM 对象的 <see cref="T:System.Type" />，或非 COM 对象的 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-219">The <see cref="T:System.Type" /> of the COM object represented by this component, or <see langword="null" /> for non-COM objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-220"><xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 属性返回一个类型，该类型可传递给 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法，以便为 COM 类型定义类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-220">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property returns a type that can be passed to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method to define a type description provider for COM types.</span></span>  
  
 <span data-ttu-id="a22e2-221">此类中的 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> 属性和其他成员替换了过时的 <xref:System.ComponentModel.IComNativeDescriptorHandler> 接口中的功能。</span><span class="sxs-lookup"><span data-stu-id="a22e2-221">The <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> property and other members in this class replace the functionality in the obsolete <xref:System.ComponentModel.IComNativeDescriptorHandler> interface.</span></span> <span data-ttu-id="a22e2-222">若要在 COM 对象和 <xref:System.ComponentModel.TypeDescriptor>之间实现映射层，请添加 <xref:System.ComponentModel.TypeDescriptionProvider> 来处理类型 <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>。</span><span class="sxs-lookup"><span data-stu-id="a22e2-222">To implement a mapping layer between a COM object and <xref:System.ComponentModel.TypeDescriptor>, add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle type <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.TypeDescriptor.ComNativeDescriptorHandler" />
      </Docs>
    </Member>
    <Member MemberName="CreateAssociation">
      <MemberSignature Language="C#" Value="public static void CreateAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CreateAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member CreateAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.CreateAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="a22e2-223">主要 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-223">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="a22e2-224">辅助 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-224">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-225">在两个对象之间创建主要和辅助关联。</span><span class="sxs-lookup"><span data-stu-id="a22e2-225">Creates a primary-secondary association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-226"><xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 方法创建主对象和辅助对象之间的关联。</span><span class="sxs-lookup"><span data-stu-id="a22e2-226">The <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method creates an association between a primary and a secondary object.</span></span> <span data-ttu-id="a22e2-227">创建关联后，设计器或其他筛选机制可以将路由到任一对象的属性添加到主对象的属性集中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-227">Once an association is created, a designer or other filtering mechanism can add properties that route to either object into the primary object's property set.</span></span> <span data-ttu-id="a22e2-228">当对主对象进行属性调用时，将调用 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 方法来解析与类型参数相关的实际对象实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-228">When a property invocation is made against the primary object, the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method will be called to resolve the actual object instance that is related to its type parameter.</span></span>  
  
 <span data-ttu-id="a22e2-229"><xref:System.WeakReference> 用于维护主对象和辅助对象之间的关联;因此，此方法不会阻止任何对象被垃圾回收终止和回收。</span><span class="sxs-lookup"><span data-stu-id="a22e2-229">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-230">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-230">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a22e2-231"><paramref name="primary" /> 等于 <paramref name="secondary" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-231"><paramref name="primary" /> is equal to <paramref name="secondary" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CreateDesigner">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.Design.IDesigner CreateDesigner (System.ComponentModel.IComponent component, Type designerBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.Design.IDesigner CreateDesigner(class System.ComponentModel.IComponent component, class System.Type designerBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDesigner (component As IComponent, designerBaseType As Type) As IDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::Design::IDesigner ^ CreateDesigner(System::ComponentModel::IComponent ^ component, Type ^ designerBaseType);" />
      <MemberSignature Language="F#" Value="static member CreateDesigner : System.ComponentModel.IComponent * Type -&gt; System.ComponentModel.Design.IDesigner" Usage="System.ComponentModel.TypeDescriptor.CreateDesigner (component, designerBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="designerBaseType" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-232">指定要与设计器关联的组件的 <see cref="T:System.ComponentModel.IComponent" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-232">An <see cref="T:System.ComponentModel.IComponent" /> that specifies the component to associate with the designer.</span></span></param>
        <param name="designerBaseType"><span data-ttu-id="a22e2-233">表示要创建的设计器的类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-233">A <see cref="T:System.Type" /> that represents the type of designer to create.</span></span></param>
        <summary><span data-ttu-id="a22e2-234">创建与指定组件关联的具有特定类型的设计器的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-234">Creates an instance of the designer associated with the specified component and of the specified type of designer.</span></span></summary>
        <returns><span data-ttu-id="a22e2-235">如果找到组件的设计器实例，则为 <see cref="T:System.ComponentModel.Design.IDesigner" />；如果未找到设计器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-235">An <see cref="T:System.ComponentModel.Design.IDesigner" /> that is an instance of the designer for the component, or <see langword="null" /> if no designer can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-236">如果此方法找不到有效的 <xref:System.ComponentModel.DesignerAttribute>，它将搜索设计器的类层次结构。</span><span class="sxs-lookup"><span data-stu-id="a22e2-236">If this method cannot find a valid <xref:System.ComponentModel.DesignerAttribute>, it searches up the class hierarchy for a designer.</span></span> <span data-ttu-id="a22e2-237">如果在类层次结构中找不到设计器，它将返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="a22e2-237">If it cannot find a designer in the class hierarchy, it returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IComponent" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-238">创建和现有事件描述符相同的新的事件描述符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-238">Creates a new event descriptor that is identical to an existing event descriptor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, System.ComponentModel.EventDescriptor oldEventDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, class System.ComponentModel.EventDescriptor oldEventDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.ComponentModel.EventDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, oldEventDescriptor As EventDescriptor, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::ComponentModel::EventDescriptor ^ oldEventDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * System.ComponentModel.EventDescriptor * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, oldEventDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldEventDescriptor" Type="System.ComponentModel.EventDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-239">要为其创建新事件的组件类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-239">The type of the component for which to create the new event.</span></span></param>
        <param name="oldEventDescriptor"><span data-ttu-id="a22e2-240">现有事件信息。</span><span class="sxs-lookup"><span data-stu-id="a22e2-240">The existing event information.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-241">新属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-241">The new attributes.</span></span></param>
        <summary><span data-ttu-id="a22e2-242">当传递现有的 <see cref="T:System.ComponentModel.EventDescriptor" /> 时，创建和现有事件描述符相同的新的事件描述符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-242">Creates a new event descriptor that is identical to an existing event descriptor, when passed the existing <see cref="T:System.ComponentModel.EventDescriptor" />.</span></span></summary>
        <returns><span data-ttu-id="a22e2-243">将指定元数据属性与现有元数据属性进行合并的新 <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-243">A new <see cref="T:System.ComponentModel.EventDescriptor" /> that has merged the specified metadata attributes with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor CreateEvent (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor CreateEvent(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateEvent(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvent (componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ CreateEvent(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateEvent : Type * string * Type * Attribute[] -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateEvent (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-244">该事件依赖的组件的类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-244">The type of the component the event lives on.</span></span></param>
        <param name="name"><span data-ttu-id="a22e2-245">事件的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-245">The name of the event.</span></span></param>
        <param name="type"><span data-ttu-id="a22e2-246">处理该事件的委托的类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-246">The type of the delegate that handles the event.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-247">此事件的属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-247">The attributes for this event.</span></span></param>
        <summary><span data-ttu-id="a22e2-248">通过从类型上的指定事件动态生成描述符信息，创建与现有事件描述符相同的新事件描述符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-248">Creates a new event descriptor that is identical to an existing event descriptor by dynamically generating descriptor information from a specified event on a type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-249">绑定到类型的 <see cref="T:System.ComponentModel.EventDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-249">An <see cref="T:System.ComponentModel.EventDescriptor" /> that is bound to a type.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="objectType" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="argTypes" Type="System.Type[]" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="3" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-250">提供 <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> 服务的服务提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-250">The service provider that provides a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> service.</span></span> <span data-ttu-id="a22e2-251">此参数可以为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-251">This parameter can be <see langword="null" />.</span></span></param>
        <param name="objectType"><span data-ttu-id="a22e2-252">要创建的对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-252">The <see cref="T:System.Type" /> of object to create.</span></span></param>
        <param name="argTypes"><span data-ttu-id="a22e2-253">要传递给对象的构造函数的可选参数类型数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-253">An optional array of parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="a22e2-254">此参数可以是 <see langword="null" /> 或长度为零的数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-254">This parameter can be <see langword="null" /> or an array of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="a22e2-255">要传递给对象的构造函数的可选参数值数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-255">An optional array of parameter values to pass to the object's constructor.</span></span> <span data-ttu-id="a22e2-256">如果不是 <see langword="null" />，元素数则必须与 <paramref name="argTypes" /> 相同。</span><span class="sxs-lookup"><span data-stu-id="a22e2-256">If not <see langword="null" />, the number of elements must be the same as <paramref name="argTypes" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-257">创建可替换为另一种数据类型的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-257">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-258">如果找到关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />，则为替代数据类型的实例；否则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-258">An instance of the substitute data type if an associated <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> is found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-259"><xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> 方法将搜索与指定 `objectType` 数据类型相关联的 <xref:System.ComponentModel.TypeDescriptionProvider>。</span><span class="sxs-lookup"><span data-stu-id="a22e2-259">The <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A> method will search for a <xref:System.ComponentModel.TypeDescriptionProvider> that is associated with the specified `objectType` data type.</span></span> <span data-ttu-id="a22e2-260">此方法首先尝试从 `provider` 参数获取类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-260">This method first tries to obtain a type description provider from the `provider` parameter.</span></span> <span data-ttu-id="a22e2-261">如果此操作失败，它将搜索其自己的提供程序的内部表（这些条目是通过以前对 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>的调用创建的）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-261">If this fails, it searches its own internal tables for a provider (these entries were created through previous calls to <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A>).</span></span> <span data-ttu-id="a22e2-262">如果找到提供程序，则此方法会将创建调用委托给该对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-262">If it finds a provider, this method will delegate the creation call to that object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-263"><paramref name="objectType" /> 是 <see langword="null" />，或者，当 <paramref name="argTypes" /> 不是 <see langword="null" /> 时，则 <paramref name="args" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-263"><paramref name="objectType" /> is <see langword="null" />, or <paramref name="args" /> is <see langword="null" /> when <paramref name="argTypes" /> is not <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a22e2-264"><paramref name="argTypes" /> 和 <paramref name="args" /> 具有不同的元素数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-264"><paramref name="argTypes" /> and <paramref name="args" /> have different number of elements.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="a22e2-265">如果派生类未提供替换实例，则此方法应调用基实现。</span><span class="sxs-lookup"><span data-stu-id="a22e2-265">If the derived class does not provide a substitute instance, this method should call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-266">为现有的组件属性创建新的属性描述符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-266">Creates a new property descriptor for an existing property of a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, class System.ComponentModel.PropertyDescriptor oldPropertyDescriptor, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.ComponentModel.PropertyDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, oldPropertyDescriptor As PropertyDescriptor, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::ComponentModel::PropertyDescriptor ^ oldPropertyDescriptor, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * System.ComponentModel.PropertyDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, oldPropertyDescriptor, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="oldPropertyDescriptor" Type="System.ComponentModel.PropertyDescriptor" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-267">属性是其一个成员的组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-267">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="oldPropertyDescriptor"><span data-ttu-id="a22e2-268">现有的属性描述符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-268">The existing property descriptor.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-269">此属性的新特性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-269">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="a22e2-270">使用指定的现有 <see cref="T:System.ComponentModel.PropertyDescriptor" /> 和特性数组，从现有的属性描述符创建一个新的属性描述符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-270">Creates a new property descriptor from an existing property descriptor, using the specified existing <see cref="T:System.ComponentModel.PropertyDescriptor" /> and attribute array.</span></span></summary>
        <returns><span data-ttu-id="a22e2-271">一个将指定的元数据属性与现有的元数据属性进行合并的新 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-271">A new <see cref="T:System.ComponentModel.PropertyDescriptor" /> that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor CreateProperty (Type componentType, string name, Type type, params Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor CreateProperty(class System.Type componentType, string name, class System.Type type, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.CreateProperty(System.Type,System.String,System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateProperty (componentType As Type, name As String, type As Type, ParamArray attributes As Attribute()) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ CreateProperty(Type ^ componentType, System::String ^ name, Type ^ type, ... cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member CreateProperty : Type * string * Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.CreateProperty (componentType, name, type, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-272">属性是其一个成员的组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-272">The <see cref="T:System.Type" /> of the component that the property is a member of.</span></span></param>
        <param name="name"><span data-ttu-id="a22e2-273">属性的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-273">The name of the property.</span></span></param>
        <param name="type"><span data-ttu-id="a22e2-274">属性的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-274">The <see cref="T:System.Type" /> of the property.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-275">此属性的新特性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-275">The new attributes for this property.</span></span></param>
        <summary><span data-ttu-id="a22e2-276">使用指定的属性名称、类型和属性数组创建属性描述符，并将其动态地绑定到类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-276">Creates and dynamically binds a property descriptor to a type, using the specified property name, type, and attribute array.</span></span></summary>
        <returns><span data-ttu-id="a22e2-277">绑定到指定类型并具有与现有元数据属性合并的指定元数据属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-277">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is bound to the specified type and that has the specified metadata attributes merged with the existing metadata attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetAssociation">
      <MemberSignature Language="C#" Value="public static object GetAssociation (Type type, object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetAssociation(class System.Type type, object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssociation (type As Type, primary As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetAssociation(Type ^ type, System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member GetAssociation : Type * obj -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetAssociation (type, primary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="primary" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a22e2-278">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-278">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="primary"><span data-ttu-id="a22e2-279">关联的主要对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-279">The primary object of the association.</span></span></param>
        <summary><span data-ttu-id="a22e2-280">返回与指定的主要对象关联的类型的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-280">Returns an instance of the type associated with the specified primary object.</span></span></summary>
        <returns><span data-ttu-id="a22e2-281">如果存在关联，则为已与主要对象相关联的辅助类型的一个实例；否则，如果不存在指定的关联，为 <paramref name="primary" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-281">An instance of the secondary type that has been associated with the primary object if an association exists; otherwise, <paramref name="primary" /> if no specified association exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-282">如果以前使用 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 方法对 `type` 参数进行了关联，则 <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 方法返回要为请求的类型调用的正确辅助对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-282">If a previous association has been made for the `type` parameter using the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method, then the <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> method returns the correct secondary object to invoke for the requested type.</span></span> <span data-ttu-id="a22e2-283">否则，<xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> 会搜索兼容设计器 `type` 并返回设计器（如果找到）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-283">Otherwise, <xref:System.ComponentModel.TypeDescriptor.GetAssociation%2A> searches for a compatible designer for `type` and returns the designer if one is found.</span></span> <span data-ttu-id="a22e2-284">此方法从不返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="a22e2-284">This method never returns `null`.</span></span>  
  
 <span data-ttu-id="a22e2-285"><xref:System.WeakReference> 用于维护主对象和辅助对象之间的关联;因此，此方法不会阻止主要或次要对象被垃圾回收终止和回收。</span><span class="sxs-lookup"><span data-stu-id="a22e2-285">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not prevent either the primary or secondary object from being finalized and reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-286">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-286">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.Design.IDesignerHost.GetDesigner(System.ComponentModel.IComponent)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAttributes">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-287">返回组件或类型的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-287">Returns the collection of attributes for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-288">要为其获取特性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-288">The component for which you want to get attributes.</span></span></param>
        <summary><span data-ttu-id="a22e2-289">返回指定组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-289">Returns the collection of attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-290">包含该组件的属性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-290">An <see cref="T:System.ComponentModel.AttributeCollection" /> containing the attributes for the component.</span></span> <span data-ttu-id="a22e2-291">如果 <paramref name="component" /> 为 <see langword="null" />，则此方法返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-291">If <paramref name="component" /> is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-292"><xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> 方法返回的属性可以通过扩展程序提供程序（<xref:System.ComponentModel.IExtenderProvider>）、筛选器服务（<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>）和特性筛选器的原始组件源列表进行动态修改。</span><span class="sxs-lookup"><span data-stu-id="a22e2-292">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original component's source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="a22e2-293">定义 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 设置为 `true`的自定义属性时，必须重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性，使其唯一。</span><span class="sxs-lookup"><span data-stu-id="a22e2-293">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="a22e2-294">如果属性的所有实例都是唯一的，请重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 以返回属性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="a22e2-294">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="a22e2-295">如果仅有一些属性实例是唯一的，则从 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 返回一个值，该值将在这些情况下返回相等性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-295">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="a22e2-296">例如，某些属性具有充当唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-296">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="a22e2-297">对于这些特性，从 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性返回构造函数参数的值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-297">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22e2-298"><xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 的默认实现将返回类型标识，而不考虑 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-298">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a22e2-299">为了从 <xref:System.ComponentModel.AttributeCollection>返回 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性的多个实例，你的属性必须重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-299">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-300">有关此方法的示例，请参阅 <xref:System.ComponentModel.AttributeCollection.Matches%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-300">For an example of this method, see the <xref:System.ComponentModel.AttributeCollection.Matches%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (componentType As Type) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : Type -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-301">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-301">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-302">返回指定组件类型的属性集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-302">Returns a collection of attributes for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-303">具有该组件类型的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-303">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the type of the component.</span></span> <span data-ttu-id="a22e2-304">如果组件为 <see langword="null" />，则此方法返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-304">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-305">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-305">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-306">对于 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 设置为 `true`的属性，属性集合将删除重复的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-306">For attributes with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, the attribute collection removes duplicate instances.</span></span> <span data-ttu-id="a22e2-307">它们是 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性返回相等值的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-307">These are instances in which the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property returns equal values.</span></span>  
  
 <span data-ttu-id="a22e2-308">定义 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 设置为 `true`的自定义属性时，必须重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性，使其唯一。</span><span class="sxs-lookup"><span data-stu-id="a22e2-308">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="a22e2-309">如果属性的所有实例都是唯一的，请重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 以返回属性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="a22e2-309">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="a22e2-310">如果仅有一些属性实例是唯一的，则从 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 返回一个值，该值将在这些情况下返回相等性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-310">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="a22e2-311">例如，某些属性具有充当唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-311">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="a22e2-312">对于这些特性，从 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性返回构造函数参数的值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-312">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22e2-313"><xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 的默认实现将返回类型标识，而不考虑 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-313">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a22e2-314">为了从 <xref:System.ComponentModel.AttributeCollection>返回 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性的多个实例，你的属性必须重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-314">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AttributeCollection GetAttributes (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AttributeCollection GetAttributes(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetAttributes(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAttributes (component As Object, noCustomTypeDesc As Boolean) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetAttributes : obj * bool -&gt; System.ComponentModel.AttributeCollection" Usage="System.ComponentModel.TypeDescriptor.GetAttributes (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-315">要为其获取特性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-315">The component for which you want to get attributes.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-316">如果 <paramref name="component" /> 的类型是 <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />，使用自定义类型说明符中特性的基准要求集时为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-316"><see langword="true" /> to use a baseline set of attributes from the custom type descriptor if <paramref name="component" /> is of type <see cref="T:System.ComponentModel.ICustomTypeDescriptor" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-317">为指定组件返回特性集合，并且创建了一个指示自定义类型描述符的布尔值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-317">Returns a collection of attributes for the specified component and a Boolean indicating that a custom type descriptor has been created.</span></span></summary>
        <returns><span data-ttu-id="a22e2-318">具有组件的特性的 <see cref="T:System.ComponentModel.AttributeCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-318">An <see cref="T:System.ComponentModel.AttributeCollection" /> with the attributes for the component.</span></span> <span data-ttu-id="a22e2-319">如果组件为 <see langword="null" />，则此方法返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-319">If the component is <see langword="null" />, this method returns an empty collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-320"><xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> 方法返回的属性可以通过扩展程序提供程序（<xref:System.ComponentModel.IExtenderProvider>）、筛选器服务（<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>）和属性筛选器的原始组件源列表进行动态修改。</span><span class="sxs-lookup"><span data-stu-id="a22e2-320">The attributes returned by the <xref:System.ComponentModel.TypeDescriptor.GetAttributes%2A> method may be dynamically modified from the original components source listing by extender providers (<xref:System.ComponentModel.IExtenderProvider>), filter services (<xref:System.ComponentModel.Design.ITypeDescriptorFilterService>), and attribute filters.</span></span>  
  
 <span data-ttu-id="a22e2-321">定义 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 设置为 `true`的自定义属性时，必须重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性，使其唯一。</span><span class="sxs-lookup"><span data-stu-id="a22e2-321">When you define a custom attribute with <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> set to `true`, you must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property to make it unique.</span></span> <span data-ttu-id="a22e2-322">如果属性的所有实例都是唯一的，请重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 以返回属性的对象标识。</span><span class="sxs-lookup"><span data-stu-id="a22e2-322">If all instances of your attribute are unique, override <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> to return the object identity of your attribute.</span></span> <span data-ttu-id="a22e2-323">如果仅有一些属性实例是唯一的，则从 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 返回一个值，该值将在这些情况下返回相等性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-323">If only some instances of your attribute are unique, return a value from <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> that would return equality in those cases.</span></span> <span data-ttu-id="a22e2-324">例如，某些属性具有充当唯一键的构造函数参数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-324">For example, some attributes have a constructor parameter that acts as a unique key.</span></span> <span data-ttu-id="a22e2-325">对于这些特性，从 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性返回构造函数参数的值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-325">For these attributes, return the value of the constructor parameter from the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a22e2-326"><xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 的默认实现将返回类型标识，而不考虑 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-326">The default implementation of <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> returns the type identity regardless of the value of the <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a22e2-327">为了从 <xref:System.ComponentModel.AttributeCollection>返回 <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> 属性的多个实例，你的属性必须重写 <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> 属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-327">In order to return multiple instances of an <xref:System.AttributeUsageAttribute.AllowMultiple%2A?displayProperty=nameWithType> attribute from the <xref:System.ComponentModel.AttributeCollection>, your attribute must override the <xref:System.Attribute.TypeId%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClassName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-328">返回指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-328">Returns the name of the class for the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-329">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-329">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="a22e2-330">使用默认类型描述符，返回指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-330">Returns the name of the class for the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-331">一个包含指定组件的类的名称的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-331">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-332">通常，此方法返回 `component` 参数类型的完整 <xref:System.Type> 名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-332">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="a22e2-333">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="a22e2-333">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="a22e2-334">如果 `component` 实现 <xref:System.ComponentModel.ICustomTypeDescriptor>，则它可以返回替代名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-334">If `component` implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 <span data-ttu-id="a22e2-335">此方法等效于重载的 <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> 方法，该方法具有 `false`的第二个参数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-335">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetClassName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-336"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-336"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (componentType As Type) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetClassName : Type -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-337">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-337">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-338">返回指定类型的类的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-338">Returns the name of the class for the specified type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-339">一个 <see cref="T:System.String" />，其中包含指定组件类型的类的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-339">A <see cref="T:System.String" /> containing the name of the class for the specified component type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-340">此方法使用指定类型的缓存自定义类型描述符来发现关联的类名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-340">This method uses the cached custom type descriptor for the specified type to discover the associated class name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-341"><paramref name="componentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-341"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public static string GetClassName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetClassName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetClassName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetClassName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetClassName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetClassName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetClassName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-342">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-342">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-343">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-343"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-344">使用自定义类型描述符返回指定组件的类的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-344">Returns the name of the class for the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-345">一个包含指定组件的类的名称的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-345">A <see cref="T:System.String" /> containing the name of the class for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-346">通常，此方法返回 `component` 参数类型的完整 <xref:System.Type> 名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-346">Typically, this method returns the full <xref:System.Type> name for the `component` parameter type.</span></span> <span data-ttu-id="a22e2-347">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="a22e2-347">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="a22e2-348">如果 `component` 参数实现 <xref:System.ComponentModel.ICustomTypeDescriptor>，则它可以返回替代名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-348">If the `component` parameter implements <xref:System.ComponentModel.ICustomTypeDescriptor>, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-349"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-349"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-350"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-350"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetClassName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetComponentName">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-351">返回指定的组件的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-351">Returns the name of the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-352">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-352">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <summary><span data-ttu-id="a22e2-353">使用默认类型描述符返回指定组件的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-353">Returns the name of the specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-354">包含指定组件的名称的 <see cref="T:System.String" />，如果没有任何组件名，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-354">A <see cref="T:System.String" /> containing the name of the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-355">通常，此方法返回组件的站点名称（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-355">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="a22e2-356">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="a22e2-356">For example, the class name for a button is "System.Windows.Forms.Button".</span></span>  
  
 <span data-ttu-id="a22e2-357">此方法等效于重载的 <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> 方法，该方法具有 `false`的第二个参数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-357">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetComponentName%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 <span data-ttu-id="a22e2-358">此方法在设计时用于检索组件实例的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-358">This method is used at design time to retrieve the name of an instance of a component.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-359"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-359"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-360"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-360"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <Member MemberName="GetComponentName">
      <MemberSignature Language="C#" Value="public static string GetComponentName (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComponentName(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetComponentName(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetComponentName (component As Object, noCustomTypeDesc As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetComponentName(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetComponentName : obj * bool -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetComponentName (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-361">需要其类名的 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-361">The <see cref="T:System.Object" /> for which you want the class name.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-362">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-362"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-363">使用自定义类型描述符返回指定组件的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-363">Returns the name of the specified component using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-364">为指定组件的类名，或者，如果不存在任何组件名，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-364">The name of the class for the specified component, or <see langword="null" /> if there is no component name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-365">此方法在设计时用于检索组件实例的名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-365">This method is used at design time to retrieve the name of an instance of a component.</span></span> <span data-ttu-id="a22e2-366">通常，此方法返回组件的站点名称（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-366">Typically, this method returns the name for the site of the component, if one exists.</span></span> <span data-ttu-id="a22e2-367">例如，按钮的类名称为 "System.web. Button"。</span><span class="sxs-lookup"><span data-stu-id="a22e2-367">For example, the class name for a button is "System.Windows.Forms.Button".</span></span> <span data-ttu-id="a22e2-368">如果组件实现 <xref:System.ComponentModel.ICustomTypeDescriptor> 接口，则它可以返回替代名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-368">If the component implements the <xref:System.ComponentModel.ICustomTypeDescriptor> interface, it can return an alternate name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-369"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-369"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-370"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-370"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetComponentName" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConverter">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-371">返回组件或类型的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-371">Returns a type converter for a component or a type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-372">要为其获取转换器的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-372">A component to get the converter for.</span></span></param>
        <summary><span data-ttu-id="a22e2-373">返回指定组件类型的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-373">Returns a type converter for the type of the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-374">指定组件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-374">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-375">此方法通过查找 <xref:System.ComponentModel.TypeConverterAttribute>来查找适当的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-375">This method locates an appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="a22e2-376">如果找不到 <xref:System.ComponentModel.TypeConverterAttribute>，它将遍历类的基类层次结构，直到它找到基元类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-376">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 <span data-ttu-id="a22e2-377">此方法等效于重载的 <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> 方法，该方法具有 `false`的第二个参数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-377">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method with a second parameter of `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-378">有关使用此方法的示例，请参见 <xref:System.ComponentModel.TypeConverter> 类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-378">For an example of using this method, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-379"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-379"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-380"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-380"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (type As Type) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetConverter : Type -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a22e2-381">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-381">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-382">返回指定类型的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-382">Returns a type converter for the specified type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-383">指定类型的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-383">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-384">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-384">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-385">此方法通过查找 <xref:System.ComponentModel.TypeConverterAttribute>查找适当的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-385">This method looks for the appropriate type converter by looking for a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="a22e2-386">如果找不到 <xref:System.ComponentModel.TypeConverterAttribute>，它将遍历类的基类层次结构，直到它找到基元类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-386">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-387"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-387"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeConverter GetConverter (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeConverter GetConverter(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetConverter(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetConverter (component As Object, noCustomTypeDesc As Boolean) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetConverter : obj * bool -&gt; System.ComponentModel.TypeConverter" Usage="System.ComponentModel.TypeDescriptor.GetConverter (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-388">要为其获取转换器的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-388">A component to get the converter for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-389">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-389"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-390">为具有自定义类型描述符的指定组件类型返回一个类型转换器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-390">Returns a type converter for the type of the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-391">指定组件的 <see cref="T:System.ComponentModel.TypeConverter" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-391">A <see cref="T:System.ComponentModel.TypeConverter" /> for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-392">此方法通过尝试查找 <xref:System.ComponentModel.TypeConverterAttribute>查找适当的类型转换器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-392">This method looks for the appropriate type converter by trying to find a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="a22e2-393">如果找不到 <xref:System.ComponentModel.TypeConverterAttribute>，它将遍历类的基类层次结构，直到它找到基元类型。</span><span class="sxs-lookup"><span data-stu-id="a22e2-393">If it cannot find a <xref:System.ComponentModel.TypeConverterAttribute>, it traverses the base class hierarchy of the class until it finds a primitive type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-394"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-394"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-395"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-395"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateDesigner(System.ComponentModel.IComponent,System.Type)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultEvent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-396">返回组件或类型的默认事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-396">Returns the default event for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-397">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-397">The component to get the event for.</span></span></param>
        <summary><span data-ttu-id="a22e2-398">返回指定组件的默认事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-398">Returns the default event for the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-399">如果有默认事件，则为 <see cref="T:System.ComponentModel.EventDescriptor" />，或者，如果没有任何事件，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-399">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-400">此方法等效于重载的 <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> 方法，该方法具有 `false`的第二个参数。</span><span class="sxs-lookup"><span data-stu-id="a22e2-400">This method is equivalent to the overloaded <xref:System.ComponentModel.TypeDescriptor.GetDefaultEvent%28System.Object%2CSystem.Boolean%29> method with a second parameter of `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-401"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-401"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-402"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-402"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (componentType As Type) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : Type -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-403">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-403">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-404">返回指定组件类型的默认事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-404">Returns the default event for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-405">如果有默认事件，则为 <see cref="T:System.ComponentModel.EventDescriptor" />，或者，如果没有任何事件，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-405">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-406">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-406">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-407"><paramref name="componentType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-407"><paramref name="componentType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptor GetDefaultEvent (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptor GetDefaultEvent(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultEvent(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultEvent (component As Object, noCustomTypeDesc As Boolean) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultEvent : obj * bool -&gt; System.ComponentModel.EventDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultEvent (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-408">要获取其事件的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-408">The component to get the event for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-409">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-409"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-410">返回具有自定义类型描述符的组件的默认事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-410">Returns the default event for a component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-411">如果有默认事件，则为 <see cref="T:System.ComponentModel.EventDescriptor" />，或者，如果没有任何事件，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-411">An <see cref="T:System.ComponentModel.EventDescriptor" /> with the default event, or <see langword="null" /> if there are no events.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-412"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-412"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-413"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-413"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.CustomTypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDefaultProperty">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-414">返回组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-414">Returns the default property for a component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-415">要获取其默认属性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-415">The component to get the default property for.</span></span></param>
        <summary><span data-ttu-id="a22e2-416">返回指定组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-416">Returns the default property for the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-417">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-417">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-418">如果 `null``component` 参数，则此方法返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="a22e2-418">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-419"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-419"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (componentType As Type) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : Type -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-420">表示要获取其属性的类的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-420">A <see cref="T:System.Type" /> that represents the class to get the property for.</span></span></param>
        <summary><span data-ttu-id="a22e2-421">返回指定类型组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-421">Returns the default property for the specified type of component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-422">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-422">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-423">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-423">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-424">如果 `null``componentType` 参数，则此方法返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="a22e2-424">If the `componentType` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetDefaultProperty(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultProperty (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetDefaultProperty : obj * bool -&gt; System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.TypeDescriptor.GetDefaultProperty (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-425">要获取其默认属性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-425">The component to get the default property for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-426">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-426"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-427">使用自定义类型描述符返回指定组件的默认属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-427">Returns the default property for the specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-428">具有默认属性的 <see cref="T:System.ComponentModel.PropertyDescriptor" />；如果没有属性，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-428">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> with the default property, or <see langword="null" /> if there are no properties.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-429">如果 `null``component` 参数，则此方法返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="a22e2-429">If the `component` parameter is `null`, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-430"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-430"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.DefaultPropertyAttribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEditor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-431">使用指定的基类型返回编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-431">Returns an editor with the specified base type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-432">要为其获取编辑器的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-432">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="a22e2-433">表示要查找的编辑器的基类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-433">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <summary><span data-ttu-id="a22e2-434">获取指定组件的具有指定基类型的编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-434">Gets an editor with the specified base type for the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-435">可转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-435">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-436">通常 <xref:System.Drawing.Design.UITypeEditor>`editorBaseType` 的类型，但也可以使用其他类型（例如，<xref:System.ComponentModel.ComponentEditor> 和 <xref:System.ComponentModel.InstanceCreationEditor>）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-436">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example, <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="a22e2-437">可以为一个属性定义多个编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-437">You can define multiple editors for a property.</span></span> <span data-ttu-id="a22e2-438">您可以使用此方法来选择要使用的编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-438">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-439"><paramref name="component" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-439"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-440"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-440"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="a22e2-441">用户界面类型编辑器概述</span><span class="sxs-lookup"><span data-stu-id="a22e2-441">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (Type type, Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(class System.Type type, class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (type As Type, editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(Type ^ type, Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="static member GetEditor : Type * Type -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (type, editorBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a22e2-442">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-442">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="a22e2-443">表示要查找的编辑器的基类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-443">A <see cref="T:System.Type" /> that represents the base type of the editor you are trying to find.</span></span></param>
        <summary><span data-ttu-id="a22e2-444">返回具有指定基类型的指定类型的编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-444">Returns an editor with the specified base type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-445">可转换为指定基类型的编辑器对象的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-445">An instance of the editor object that can be cast to the given base type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-446">通常 <xref:System.Drawing.Design.UITypeEditor>`editorBaseType` 的类型，但也可以使用其他类型（例如 <xref:System.ComponentModel.ComponentEditor> 和 <xref:System.ComponentModel.InstanceCreationEditor>）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-446">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="a22e2-447">可以为一个类型定义多个编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-447">You can define multiple editors for a type.</span></span> <span data-ttu-id="a22e2-448">您可以使用此方法来选择要使用的方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-448">You use this method to select the one you want to use.</span></span>  
  
 <span data-ttu-id="a22e2-449">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-449">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-450"><paramref name="type" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-450"><paramref name="type" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="a22e2-451">用户界面类型编辑器概述</span><span class="sxs-lookup"><span data-stu-id="a22e2-451">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public static object GetEditor (object component, Type editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetEditor(object component, class System.Type editorBaseType, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEditor(System.Object,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEditor (component As Object, editorBaseType As Type, noCustomTypeDesc As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetEditor(System::Object ^ component, Type ^ editorBaseType, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEditor : obj * Type * bool -&gt; obj" Usage="System.ComponentModel.TypeDescriptor.GetEditor (component, editorBaseType, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="editorBaseType" Type="System.Type" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-452">要为其获取编辑器的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-452">The component to get the editor for.</span></span></param>
        <param name="editorBaseType"><span data-ttu-id="a22e2-453">表示要查找的编辑器的基类型的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-453">A <see cref="T:System.Type" /> that represents the base type of the editor you want to find.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-454">表示是否应考虑自定义类型描述信息的标志。</span><span class="sxs-lookup"><span data-stu-id="a22e2-454">A flag indicating whether custom type description information should be considered.</span></span></param>
        <summary><span data-ttu-id="a22e2-455">为指定组件返回具有指定基类型和自定义类型描述符的编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-455">Returns an editor with the specified base type and with a custom type descriptor for the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-456">可转换为指定编辑器类型的编辑器的一个实例，如果找不到请求类型的编辑器，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-456">An instance of the editor that can be cast to the specified editor type, or <see langword="null" /> if no editor of the requested type can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-457">通常 <xref:System.Drawing.Design.UITypeEditor>`editorBaseType` 的类型，但也可以使用其他类型（例如 <xref:System.ComponentModel.ComponentEditor> 和 <xref:System.ComponentModel.InstanceCreationEditor>）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-457">The type of `editorBaseType` is usually <xref:System.Drawing.Design.UITypeEditor>, but you can also use other types (for example <xref:System.ComponentModel.ComponentEditor> and <xref:System.ComponentModel.InstanceCreationEditor>).</span></span>  
  
 <span data-ttu-id="a22e2-458">可以为一个属性定义多个编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-458">You can define multiple editors for a property.</span></span> <span data-ttu-id="a22e2-459">您可以使用此方法来选择要使用的编辑器。</span><span class="sxs-lookup"><span data-stu-id="a22e2-459">You use this method to select the editor you want to use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-460"><paramref name="component" /> 或 <paramref name="editorBaseType" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-460"><paramref name="component" /> or <paramref name="editorBaseType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-461"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-461"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.AddEditorTable(System.Type,System.Collections.Hashtable)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
        <related type="Article" href="https://msdn.microsoft.com/library/f068b4ea-6e8c-4c0b-aefd-188b337240da"><span data-ttu-id="a22e2-462">用户界面类型编辑器概述</span><span class="sxs-lookup"><span data-stu-id="a22e2-462">User Interface Type Editors Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-463">返回组件或类型的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-463">Returns the collection of events for a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-464">要为其获取事件的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-464">A component to get the events for.</span></span></param>
        <summary><span data-ttu-id="a22e2-465">返回指定组件的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-465">Returns the collection of events for the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-466">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-466">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-467">检索给定 `component` 参数实例提供的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-467">Retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="a22e2-468">此集合可能与类提供的事件集不同。</span><span class="sxs-lookup"><span data-stu-id="a22e2-468">This collection can differ from the set of events the class provides.</span></span> <span data-ttu-id="a22e2-469">如果 `component` 参数已占位，则站点可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-469">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="a22e2-470">如果 `null``component`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-470">If `component` is `null`, then an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-471">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-471">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-472">有关此方法的示例，请参见 <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-472">For an example of this method, see the <xref:System.ComponentModel.EventDescriptorCollection.Count%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-473"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-473"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-474">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-474">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-475">返回指定组件类型的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-475">Returns the collection of events for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-476">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-476">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-477">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-477">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-478">如果 `componentType` 参数 `null`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-478">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-479">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-479">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-480">要为其获取事件的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-480">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-481">可以用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-481">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="a22e2-482">通过将指定的属性数组用作筛选器来返回指定组件的事件集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-482">Returns the collection of events for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="a22e2-483">具有匹配此组件指定属性的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-483">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-484">`component` 参数的事件可能与类的事件不同，因为如果 `component` 参数已占位，则站点可以添加或删除事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-484">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="a22e2-485">`attributes` 数组可以混合使用 <xref:System.Type> 和 <xref:System.Attribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-485">The `attributes` array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="a22e2-486">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="a22e2-486">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="a22e2-487"><xref:System.Type> 被视为通配符;它匹配其特性集中具有 <xref:System.Type> 的任何事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-487">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="a22e2-488">如果某个事件没有相同类的 <xref:System.Attribute>，则返回的数组中不包含该事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-488">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-489">如果该属性是 <xref:System.Attribute> 类的实例，则该事件必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-489">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-490">如果指定了 <xref:System.Attribute> 实例并且它是默认事件，则即使在事件中没有 <xref:System.Attribute> 的实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-490">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="a22e2-491">如果 `null``component`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-491">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-492">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-492">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-493"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-493"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-494">要为其获取事件的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-494">A component to get the events for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-495">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-495"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-496">对具有自定义类型描述符的指定组件，返回事件集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-496">Returns the collection of events for a specified component with a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-497">具有此组件的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-497">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-498">此方法检索给定 `component` 参数实例提供的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-498">This method retrieves a collection of events that the given `component` parameter instance provides.</span></span> <span data-ttu-id="a22e2-499">这可能与类提供的事件集不同。</span><span class="sxs-lookup"><span data-stu-id="a22e2-499">This can differ from the set of events the class provides.</span></span> <span data-ttu-id="a22e2-500">如果 `component` 参数已占位，则站点可以添加或删除其他事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-500">If the `component` parameter is sited, the site can add or remove additional events.</span></span>  
  
 <span data-ttu-id="a22e2-501">如果 `null``component`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-501">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-502">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-502">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-503"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-503"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (componentType As Type, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetEvents : Type * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-504">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-504">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-505">可以用作筛选器的类型 <see cref="T:System.Attribute" /> 的数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-505">An array of type <see cref="T:System.Attribute" /> that you can use as a filter.</span></span></param>
        <summary><span data-ttu-id="a22e2-506">通过将指定的属性数组用作筛选器来返回指定组件类型的事件的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-506">Returns the collection of events for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="a22e2-507">具有匹配此组件指定属性的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-507">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-508">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-508">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-509">`attributes` 参数数组可以混合使用 <xref:System.Type> 和 <xref:System.Attribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-509">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="a22e2-510">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="a22e2-510">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="a22e2-511"><xref:System.Type> 被视为通配符;它匹配其特性集中具有 <xref:System.Type> 的任何事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-511">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="a22e2-512">如果某个事件没有相同类的 <xref:System.Attribute>，则返回的数组中不包含该事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-512">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-513">如果该属性是 <xref:System.Attribute> 类的实例，则该事件必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-513">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-514">如果指定了 <xref:System.Attribute> 实例并且它是默认事件，则即使在事件中没有 <xref:System.Attribute> 的实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-514">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="a22e2-515">如果 `componentType` 参数 `null`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-515">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-516">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-516">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetEvents(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvents (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetEvents : obj * Attribute[] * bool -&gt; System.ComponentModel.EventDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetEvents (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-517">要为其获取事件的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-517">A component to get the events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-518">要用作筛选器的类型 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-518">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-519">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-519"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-520">通过使用指定的属性数组作为筛选器，并使用自定义类型描述符来返回指定组件的事件集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-520">Returns the collection of events for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-521">具有匹配此组件指定属性的事件的 <see cref="T:System.ComponentModel.EventDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-521">An <see cref="T:System.ComponentModel.EventDescriptorCollection" /> with the events that match the specified attributes for this component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-522">`component` 参数的事件可能与类的事件不同，因为如果 `component` 参数已占位，则站点可以添加或删除事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-522">The events for the `component` parameter can differ from the events of a class, because the site can add or remove events if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="a22e2-523">`attributes` 参数数组可以混合使用 <xref:System.Type> 和 <xref:System.Attribute> 对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-523">The `attributes` parameter array can have a mix of <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="a22e2-524">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="a22e2-524">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="a22e2-525"><xref:System.Type> 被视为通配符;它匹配其特性集中具有 <xref:System.Type> 的任何事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-525">A <xref:System.Type> is treated as a wildcard; it matches any event that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="a22e2-526">如果某个事件没有相同类的 <xref:System.Attribute>，则返回的数组中不包含该事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-526">If an event does not have an <xref:System.Attribute> of the same class, the event is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-527">如果该属性是 <xref:System.Attribute> 类的实例，则该事件必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-527">If the attribute is an instance of the <xref:System.Attribute> class, the event must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-528">如果指定了 <xref:System.Attribute> 实例并且它是默认事件，则即使在事件中没有 <xref:System.Attribute> 的实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-528">If an <xref:System.Attribute> instance is specified and it is the default event, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the event.</span></span>  
  
 <span data-ttu-id="a22e2-529">如果 `null``component`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-529">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-530">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-530">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-531"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-531"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetEvents" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateEvent" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProperties" />
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public static string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetFullComponentName : obj -&gt; string" Usage="System.ComponentModel.TypeDescriptor.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-532">要为其查找名称的 <see cref="T:System.ComponentModel.Component" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-532">The <see cref="T:System.ComponentModel.Component" /> to find the name for.</span></span></param>
        <summary><span data-ttu-id="a22e2-533">返回组件的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="a22e2-533">Returns the fully qualified name of the component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-534">如果组件没有名称，则为指定组件的完全限定名称，或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-534">The fully qualified name of the specified component, or <see langword="null" /> if the component has no name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-535">在许多情况下，<xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> 方法将返回与 <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> 方法相同的值。</span><span class="sxs-lookup"><span data-stu-id="a22e2-535">In many cases, the <xref:System.ComponentModel.TypeDescriptor.GetFullComponentName%2A> method will return the same value as the <xref:System.ComponentModel.TypeDescriptor.GetComponentName%2A> method.</span></span> <span data-ttu-id="a22e2-536">但是，如果组件驻留在嵌套容器中或者具有其他嵌套语义，则它可能会返回不同的完全限定名称。</span><span class="sxs-lookup"><span data-stu-id="a22e2-536">However, if the component resides in a nested container or has other nested semantics, it may return a different fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-537"><paramref name="component" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-537"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-538">返回组件或类型的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-538">Returns the collection of properties on a component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-539">要为其获取属性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-539">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="a22e2-540">返回指定组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-540">Returns the collection of properties for a specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-541">具有指定组件的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-541">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-542">组件的属性可能不同于类的属性，因为如果组件已被放置，则站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-542">The properties for a component can differ from the properties of a class, because the site can add or remove properties if the component is sited.</span></span>  
  
 <span data-ttu-id="a22e2-543">如果 `component` 参数 `null`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-543">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-544">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-544">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-545">下面的代码示例演示如何使用 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 方法来访问控件的属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-545">The following code example demonstrates the use of the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method to access the properties of a control.</span></span> <span data-ttu-id="a22e2-546">此代码示例是为 <xref:System.ComponentModel.Design.ComponentDesigner> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a22e2-546">This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.ComponentDesigner> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/CS/Form1.cs#8)]
 [!code-vb[System.ComponentModel.Design.DesignerServices#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.Design.DesignerServices/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-547"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-547"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
        <related type="Article" href="https://msdn.microsoft.com/library/c186c4b6-076c-438d-9ed3-f13da29c8c1f"><span data-ttu-id="a22e2-548">如何：访问设计时服务</span><span class="sxs-lookup"><span data-stu-id="a22e2-548">How to: Access Design-time Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties componentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-549">一个 <see cref="T:System.Type" />，表示要为其获取属性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-549">A <see cref="T:System.Type" /> that represents the component to get properties for.</span></span></param>
        <summary><span data-ttu-id="a22e2-550">返回指定组件类型的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-550">Returns the collection of properties for a specified type of component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-551">具有指定组件类型的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-551">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-552">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-552">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-553">如果 `componentType` 参数 `null`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-553">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-554">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-554">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-555">要为其获取属性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-555">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-556">要用作筛选器的类型 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-556">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="a22e2-557">通过将指定的属性数组用作筛选器来返回指定组件的属性的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-557">Returns the collection of properties for a specified component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="a22e2-558">具有与指定组件的指定属性相匹配的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-558">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-559">`component` 参数的属性可能不同于类的属性，因为如果 `component` 参数已占位，则站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-559">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="a22e2-560">`attributes` 参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-560">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="a22e2-561">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="a22e2-561">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="a22e2-562">如果属性没有相同类的 <xref:System.Attribute>，则返回的数组中将不包含该属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-562">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-563">如果该特性是 <xref:System.Attribute> 类的实例，则该属性必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-563">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-564">如果指定了 <xref:System.Attribute> 实例并且它是默认属性，则即使属性中没有 <xref:System.Attribute> 的实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-564">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="a22e2-565">如果 `attributes` 有一个默认属性，则当属性未应用属性时，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 方法与该方法匹配。</span><span class="sxs-lookup"><span data-stu-id="a22e2-565">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="a22e2-566">如果 `null``component`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-566">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-567">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-567">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-568">下面的代码示例演示如何实现 <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-568">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="a22e2-569">此代码示例是为 <xref:System.Windows.Forms.Design.PropertyTab> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a22e2-569">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-570"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-570"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-571">要为其获取属性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-571">A component to get the properties for.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-572">若不考虑自定义类型描述信息时，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-572"><see langword="true" /> to not consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-573">使用默认类型描述符为指定组件返回属性集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-573">Returns the collection of properties for a specified component using the default type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-574">具有指定组件的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-574">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for a specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-575">`component` 参数的属性可能不同于类的属性，因为如果 `component` 参数已占位，则站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-575">The properties for the `component` parameter can differ from the properties of a class, because the site can add or remove properties if the `component` parameter is sited.</span></span>  
  
 <span data-ttu-id="a22e2-576">如果 `null``component`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-576">If `component` is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-577">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-577">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-578"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-578"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (Type componentType, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.Type componentType, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Type,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (componentType As Type, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(Type ^ componentType, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="static member GetProperties : Type * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (componentType, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="componentType"><span data-ttu-id="a22e2-579">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-579">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-580">要用作筛选器的类型 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-580">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="a22e2-581">通过将指定的属性数组用作筛选器来为指定类型的组件返回属性的集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-581">Returns the collection of properties for a specified type of component using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="a22e2-582">具有与该类型组件的指定属性相匹配的属性的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-582">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for this type of component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-583">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-583">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-584">`attributes` 参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-584">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="a22e2-585">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="a22e2-585">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="a22e2-586">如果属性没有相同类的 <xref:System.Attribute>，则返回的数组中将不包含该属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-586">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-587">如果该特性是 <xref:System.Attribute> 类的实例，则该属性必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-587">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-588">如果指定了 <xref:System.Attribute> 实例并且它是默认属性，则即使属性中没有 <xref:System.Attribute> 的实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-588">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="a22e2-589">如果 `attributes` 有一个默认属性，则当属性未应用属性时，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 方法与该方法匹配。</span><span class="sxs-lookup"><span data-stu-id="a22e2-589">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="a22e2-590">如果 `componentType` 参数 `null`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-590">If the `componentType` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-591">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-591">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-592">下面的代码示例演示如何实现 <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-592">The following code example demonstrates how to implement the <xref:System.Windows.Forms.Design.PropertyTab.GetProperties%2A> method.</span></span> <span data-ttu-id="a22e2-593">此代码示例是为 <xref:System.Windows.Forms.Design.PropertyTab> 类提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="a22e2-593">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Design.PropertyTab> class.</span></span>  
  
 [!code-cpp[PropertyTabExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyTabExample/CPP/class1.cpp#2)]
 [!code-csharp[PropertyTabExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyTabExample/CS/class1.cs#2)]
 [!code-vb[PropertyTabExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyTabExample/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes, bool noCustomTypeDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProperties(System.Object,System.Attribute[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProperties (component As Object, attributes As Attribute(), noCustomTypeDesc As Boolean) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes, bool noCustomTypeDesc);" />
      <MemberSignature Language="F#" Value="static member GetProperties : obj * Attribute[] * bool -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="System.ComponentModel.TypeDescriptor.GetProperties (component, attributes, noCustomTypeDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
        <Parameter Name="noCustomTypeDesc" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-594">要为其获取属性的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-594">A component to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="a22e2-595">要用作筛选器的类型 <see cref="T:System.Attribute" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-595">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <param name="noCustomTypeDesc"><span data-ttu-id="a22e2-596">如果为 <see langword="true" />，则考虑自定义类型描述信息；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-596"><see langword="true" /> to consider custom type description information; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-597">通过使用指定的属性数组作为筛选器，并使用自定义类型描述符来返回指定组件的属性集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-597">Returns the collection of properties for a specified component using a specified array of attributes as a filter and using a custom type descriptor.</span></span></summary>
        <returns><span data-ttu-id="a22e2-598">具有与指定组件的指定属性相匹配的事件的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-598">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the events that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-599">`component` 的属性可能不同于类的属性，这是因为当 `component` 的位置时，站点可以添加或删除属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-599">The properties for a `component` can differ from the properties of a class, because the site can add or remove properties if the `component` is sited.</span></span>  
  
 <span data-ttu-id="a22e2-600">`attributes` 参数数组用于筛选数组。</span><span class="sxs-lookup"><span data-stu-id="a22e2-600">The `attributes` parameter array is used to filter the array.</span></span> <span data-ttu-id="a22e2-601">筛选由以下规则定义：</span><span class="sxs-lookup"><span data-stu-id="a22e2-601">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="a22e2-602">如果属性没有相同类的 <xref:System.Attribute>，则返回的数组中将不包含该属性。</span><span class="sxs-lookup"><span data-stu-id="a22e2-602">If a property does not have an <xref:System.Attribute> of the same class, the property is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-603">如果该特性是 <xref:System.Attribute> 类的实例，则该属性必须是完全匹配项，否则它不会包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-603">If the attribute is an instance of the <xref:System.Attribute> class, the property must be an exact match or it is not included in the returned array.</span></span>  
  
-   <span data-ttu-id="a22e2-604">如果指定了 <xref:System.Attribute> 实例并且它是默认属性，则即使属性中没有 <xref:System.Attribute> 的实例，也会将其包含在返回的数组中。</span><span class="sxs-lookup"><span data-stu-id="a22e2-604">If an <xref:System.Attribute> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
-   <span data-ttu-id="a22e2-605">如果 `attributes` 有一个默认属性，则当属性未应用属性时，<xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 方法与该方法匹配。</span><span class="sxs-lookup"><span data-stu-id="a22e2-605">If `attributes` has a default attribute, the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method matches the case when the property does not have the attribute applied.</span></span>  
  
 <span data-ttu-id="a22e2-606">如果 `component` 参数 `null`，则返回一个空集合。</span><span class="sxs-lookup"><span data-stu-id="a22e2-606">If the `component` parameter is `null`, an empty collection is returned.</span></span>  
  
 <span data-ttu-id="a22e2-607">返回的集合的顺序并不保证在两次调用之间是相同的，因此在使用之前始终对其进行排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-607">The order of the returned collection is not guaranteed to be identical between calls, so always order it before use.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a22e2-608"><paramref name="component" /> 是一个跨进程进行远程处理的对象。</span><span class="sxs-lookup"><span data-stu-id="a22e2-608"><paramref name="component" /> is a cross-process remoted object.</span></span></exception>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.CustomTypeDescriptor.GetProperties" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetDefaultProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.CreateProperty" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetAttributes" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEvents" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-609">返回组件或类型的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-609">Returns the type description provider for the component or type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (instance As Object) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetProvider : obj -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="a22e2-610">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-610">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-611">返回指定组件的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-611">Returns the type description provider for the specified component.</span></span></summary>
        <returns><span data-ttu-id="a22e2-612">一个与特定的组件关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-612">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-613"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> 方法将始终返回类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-613">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="a22e2-614">即使默认 <xref:System.ComponentModel.TypeDescriptor> 实现也是在 <xref:System.ComponentModel.TypeDescriptionProvider>上构建的。</span><span class="sxs-lookup"><span data-stu-id="a22e2-614">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-615"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-615"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetProvider">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.TypeDescriptionProvider GetProvider (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.TypeDescriptionProvider GetProvider(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetProvider(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetProvider (type As Type) As TypeDescriptionProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::TypeDescriptionProvider ^ GetProvider(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetProvider : Type -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="System.ComponentModel.TypeDescriptor.GetProvider type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeDescriptionProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a22e2-616">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-616">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-617">返回指定类型的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-617">Returns the type description provider for the specified type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-618">与指定类型关联的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-618">A <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-619"><xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> 方法将始终返回类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-619">The <xref:System.ComponentModel.TypeDescriptor.GetProvider%2A> method will always return a type description provider.</span></span> <span data-ttu-id="a22e2-620">即使默认 <xref:System.ComponentModel.TypeDescriptor> 实现也是在 <xref:System.ComponentModel.TypeDescriptionProvider>上构建的。</span><span class="sxs-lookup"><span data-stu-id="a22e2-620">Even the default <xref:System.ComponentModel.TypeDescriptor> implementation is built on a <xref:System.ComponentModel.TypeDescriptionProvider>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-621"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-621"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.RemoveProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetReflectionType" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetEditor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetConverter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-622">返回可用于执行反射的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-622">Returns a <see cref="T:System.Type" /> that can be used to perform reflection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : obj -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="a22e2-623">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-623">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-624">如果给定对象，则返回可用于执行反射的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-624">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given an object.</span></span></summary>
        <returns><span data-ttu-id="a22e2-625">所指定对象的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-625">A <see cref="T:System.Type" /> for the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-626"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 方法是 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> 方法的低级别版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-626">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="a22e2-627">当找不到某个对象的自定义类型说明符时，通常使用 <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 对该对象执行标准反射。</span><span class="sxs-lookup"><span data-stu-id="a22e2-627"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against an object when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-628"><paramref name="instance" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-628"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public static Type GetReflectionType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetReflectionType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReflectionType (type As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetReflectionType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetReflectionType : Type -&gt; Type" Usage="System.ComponentModel.TypeDescriptor.GetReflectionType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a22e2-629">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-629">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-630">如果给定类类型，则返回可用于执行反射的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-630">Returns a <see cref="T:System.Type" /> that can be used to perform reflection, given a class type.</span></span></summary>
        <returns><span data-ttu-id="a22e2-631">指定类的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-631">A <see cref="T:System.Type" /> of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-632"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 方法是 <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> 方法的低级别版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-632">The <xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> method is a low-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="a22e2-633">当找不到任何自定义类型说明符时，<xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> 通常用于对类执行标准反射。</span><span class="sxs-lookup"><span data-stu-id="a22e2-633"><xref:System.ComponentModel.TypeDescriptor.GetReflectionType%2A> is typically used to perform standard reflection against a class when no custom type descriptor can be located for it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-634"><paramref name="type" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-634"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetClassName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetComponentName" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public static Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.ComponentModel.TypeDescriptor.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22e2-635">获取一个类型，它表示所有接口类型的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-635">Gets a type that represents a type description provider for all interface types.</span></span></summary>
        <value><span data-ttu-id="a22e2-636">一个 <see cref="T:System.Type" />，它表示所有接口类型的自定义类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-636">A <see cref="T:System.Type" /> that represents a custom type description provider for all interface types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-637"><xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> 属性获取一个 <xref:System.Type> 对象，您可以将该对象传递给 <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> 方法，以定义接口类型的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-637">The <xref:System.ComponentModel.TypeDescriptor.InterfaceType%2A> property gets a <xref:System.Type> object that you can pass to the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods to define a type description provider for interface types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-638">清除缓存中的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-638">Clears the properties and events from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="static member Refresh : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="a22e2-639">已更改属性或事件的组件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-639">A component for which the properties or events have changed.</span></span></param>
        <summary><span data-ttu-id="a22e2-640">从缓存中清除指定组件的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-640">Clears the properties and events for the specified component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-641">属性和事件通过 <xref:System.ComponentModel.TypeDescriptor> 高速缓存。</span><span class="sxs-lookup"><span data-stu-id="a22e2-641">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="a22e2-642">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="a22e2-642">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="a22e2-643">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="a22e2-643">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="a22e2-644">如果是这样，则应调用此方法以清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-644">If they do, they should call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="a22e2-645">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-645">This method is used only at design time.</span></span> <span data-ttu-id="a22e2-646">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-646">It is not used during run time.</span></span>  
  
 <span data-ttu-id="a22e2-647">当组件的属性或事件发生更改时，此方法还会引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-647">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="a22e2-648">仅当之前调用了缓存信息的 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 或 <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> 方法时，才会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-648">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-649">有关使用此方法的示例，请参见 <xref:System.ComponentModel.RefreshEventHandler> 类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-649">For an example of using this method, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (assembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Assembly -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="a22e2-650">表示要刷新的程序集的 <see cref="T:System.Reflection.Assembly" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-650">The <see cref="T:System.Reflection.Assembly" /> that represents the assembly to refresh.</span></span> <span data-ttu-id="a22e2-651">将刷新此程序集中的每个 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-651">Each <see cref="T:System.Type" /> in this assembly will be refreshed.</span></span></param>
        <summary><span data-ttu-id="a22e2-652">从缓存中清除指定程序集的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-652">Clears the properties and events for the specified assembly from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-653">属性和事件通过 <xref:System.ComponentModel.TypeDescriptor> 高速缓存。</span><span class="sxs-lookup"><span data-stu-id="a22e2-653">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="a22e2-654">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="a22e2-654">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="a22e2-655">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="a22e2-655">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="a22e2-656">如果用户这样做，则可以调用此方法来清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-656">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="a22e2-657">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-657">This method is used only at design time.</span></span> <span data-ttu-id="a22e2-658">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-658">It is not used during run time.</span></span>  
  
 <span data-ttu-id="a22e2-659">在调用 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 方法以清除缓存之前，需要先调用特定程序集的 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 方法以缓存该信息。</span><span class="sxs-lookup"><span data-stu-id="a22e2-659">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific assembly to cache the information first.</span></span>  
  
 <span data-ttu-id="a22e2-660">此方法还会引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件，以通知在组件的属性集更改时希望收到通知的所有类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-660">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Assembly" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (System.Reflection.Module module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Reflection.Module module) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (module As Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(System::Reflection::Module ^ module);" />
      <MemberSignature Language="F#" Value="static member Refresh : System.Reflection.Module -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh module" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="module"><span data-ttu-id="a22e2-661">表示要刷新的模块的 <see cref="T:System.Reflection.Module" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-661">The <see cref="T:System.Reflection.Module" /> that represents the module to refresh.</span></span> <span data-ttu-id="a22e2-662">将刷新此模块中的每个 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-662">Each <see cref="T:System.Type" /> in this module will be refreshed.</span></span></param>
        <summary><span data-ttu-id="a22e2-663">从缓存中清除指定模块的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-663">Clears the properties and events for the specified module from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-664">属性和事件通过 <xref:System.ComponentModel.TypeDescriptor> 高速缓存。</span><span class="sxs-lookup"><span data-stu-id="a22e2-664">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="a22e2-665">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="a22e2-665">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="a22e2-666">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="a22e2-666">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="a22e2-667">如果用户这样做，则可以调用此方法来清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-667">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="a22e2-668">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-668">This method is used only at design time.</span></span> <span data-ttu-id="a22e2-669">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-669">It is not used during run time.</span></span>  
  
 <span data-ttu-id="a22e2-670">在调用 <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> 方法以清除缓存之前，需要先调用特定模块的 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 方法以缓存该信息。</span><span class="sxs-lookup"><span data-stu-id="a22e2-670">Before you make a call to the <xref:System.ComponentModel.TypeDescriptor.Refresh%2A> method to clear the cache, you need to call the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> method for the specific module to cache the information first.</span></span>  
  
 <span data-ttu-id="a22e2-671">此方法还会引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件，以通知在组件的属性集更改时希望收到通知的所有类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-671">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to notify all classes that want to be notified when the property set of a component changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static void Refresh (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Refresh(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.Refresh(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Refresh (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Refresh(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member Refresh : Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.Refresh type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a22e2-672">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-672">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-673">从缓存中清除指定类型的组件的属性和事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-673">Clears the properties and events for the specified type of component from the cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-674">仅当没有对象的实例时，才调用此方法的此版本。</span><span class="sxs-lookup"><span data-stu-id="a22e2-674">Call this version of this method only when you do not have an instance of the object.</span></span>  
  
 <span data-ttu-id="a22e2-675">属性和事件通过 <xref:System.ComponentModel.TypeDescriptor> 高速缓存。</span><span class="sxs-lookup"><span data-stu-id="a22e2-675">Properties and events are cached by <xref:System.ComponentModel.TypeDescriptor> for speed.</span></span> <span data-ttu-id="a22e2-676">通常，它们在对象的生存期内保持不变。</span><span class="sxs-lookup"><span data-stu-id="a22e2-676">Typically, they are constant for the lifetime of an object.</span></span> <span data-ttu-id="a22e2-677">但是，扩展程序提供程序和设计器可以更改对象的属性集。</span><span class="sxs-lookup"><span data-stu-id="a22e2-677">However, extender providers and designers can change the set of properties on an object.</span></span> <span data-ttu-id="a22e2-678">如果用户这样做，则可以调用此方法来清除对象的属性和事件说明符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-678">If they do, they can call this method to clear the property and event descriptors of the object.</span></span> <span data-ttu-id="a22e2-679">此方法仅在设计时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-679">This method is used only at design time.</span></span> <span data-ttu-id="a22e2-680">它不会在运行时使用。</span><span class="sxs-lookup"><span data-stu-id="a22e2-680">It is not used during run time.</span></span>  
  
 <span data-ttu-id="a22e2-681">当组件的属性或事件发生更改时，此方法还会引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-681">This method also raises a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event when the properties or events of a component change.</span></span> <span data-ttu-id="a22e2-682">仅当之前调用了缓存信息的 <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> 或 <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> 方法时，才会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-682">This event is only raised if there was a prior call to the <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> or <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> method that cached the information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.IExtenderProvider" />
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
        <altmember cref="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      </Docs>
    </Member>
    <Member MemberName="Refreshed">
      <MemberSignature Language="C#" Value="public static event System.ComponentModel.RefreshEventHandler Refreshed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.RefreshEventHandler Refreshed" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.TypeDescriptor.Refreshed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Refreshed As RefreshEventHandler " FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::ComponentModel::RefreshEventHandler ^ Refreshed;" />
      <MemberSignature Language="F#" Value="member this.Refreshed : System.ComponentModel.RefreshEventHandler " Usage="member this.Refreshed : System.ComponentModel.RefreshEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event Refreshed As RefreshEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.RefreshEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a22e2-683">清除了组件的缓存时发生。</span><span class="sxs-lookup"><span data-stu-id="a22e2-683">Occurs when the cache for a component is cleared.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-684">有关如何处理事件的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="a22e2-684">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a22e2-685">有关使用此事件的示例，请参见 <xref:System.ComponentModel.RefreshEventHandler> 类。</span><span class="sxs-lookup"><span data-stu-id="a22e2-685">For an example of using this event, see the <xref:System.ComponentModel.RefreshEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociation">
      <MemberSignature Language="C#" Value="public static void RemoveAssociation (object primary, object secondary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociation(object primary, object secondary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociation(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociation (primary As Object, secondary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociation(System::Object ^ primary, System::Object ^ secondary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociation : obj * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociation (primary, secondary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="secondary" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="a22e2-686">主要 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-686">The primary <see cref="T:System.Object" />.</span></span></param>
        <param name="secondary"><span data-ttu-id="a22e2-687">辅助 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-687">The secondary <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="a22e2-688">删除两个对象之间的关联。</span><span class="sxs-lookup"><span data-stu-id="a22e2-688">Removes an association between two objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-689"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> 方法将删除两个对象之间的关联，这些对象由 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 方法构成。</span><span class="sxs-lookup"><span data-stu-id="a22e2-689">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociation%2A> method removes an association between two objects formed by the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="a22e2-690"><xref:System.WeakReference> 用于维护主对象和辅助对象之间的关联;因此，此方法不会影响通过垃圾回收完成或回收对象的时间。</span><span class="sxs-lookup"><span data-stu-id="a22e2-690">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either object is finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-691">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-691">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAssociations">
      <MemberSignature Language="C#" Value="public static void RemoveAssociations (object primary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveAssociations(object primary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveAssociations(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveAssociations (primary As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveAssociations(System::Object ^ primary);" />
      <MemberSignature Language="F#" Value="static member RemoveAssociations : obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveAssociations primary" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primary" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="primary"><span data-ttu-id="a22e2-692">关联中的主要 <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-692">The primary <see cref="T:System.Object" /> in an association.</span></span></param>
        <summary><span data-ttu-id="a22e2-693">删除主要对象的所有关联。</span><span class="sxs-lookup"><span data-stu-id="a22e2-693">Removes all associations for a primary object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-694"><xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> 方法将删除主对象与其所有辅助对象之间的所有关联，这些关联是通过调用 <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> 方法创建的。</span><span class="sxs-lookup"><span data-stu-id="a22e2-694">The <xref:System.ComponentModel.TypeDescriptor.RemoveAssociations%2A> method removes all associations between a primary object and all of its secondary objects, created by calls to the <xref:System.ComponentModel.TypeDescriptor.CreateAssociation%2A> method.</span></span>  
  
 <span data-ttu-id="a22e2-695"><xref:System.WeakReference> 用于维护主对象和辅助对象之间的关联;因此，当通过垃圾回收来完成或回收辅助对象的主要对象时，此方法不会影响。</span><span class="sxs-lookup"><span data-stu-id="a22e2-695">A <xref:System.WeakReference> is used to maintain the association between the primary and secondary object; therefore, this method does not influence when either the primary of secondary objects are finalized or reclaimed by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-696"><paramref name="primary" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-696"><paramref name="primary" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateAssociation(System.Object,System.Object)" />
        <altmember cref="M:System.ComponentModel.TypeDescriptor.GetAssociation(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProvider">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-697">删除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-697">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-698">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-698">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="a22e2-699">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-699">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-700">移除以前添加的与指定对象关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-700">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-701">此方法使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法删除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-701">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="a22e2-702">删除提供程序会导致为关联的对象引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-702">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="a22e2-703">如果需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-703">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-704">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-704">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <Member MemberName="RemoveProvider">
      <MemberSignature Language="C#" Value="public static void RemoveProvider (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProvider(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProvider(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProvider (provider As TypeDescriptionProvider, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProvider(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProvider : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProvider (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-705">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-705">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="a22e2-706">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-706">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-707">删除以前添加的与指定类型关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-707">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-708">此方法使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法删除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-708">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="a22e2-709">删除提供程序会导致为关联的类型引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-709">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="a22e2-710">如果需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-710">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-711">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-711">One or both of the parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeDescriptionProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.GetProvider" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveProviderTransparent">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a22e2-712">删除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-712">Removes a previously added type description provider.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * obj -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-713">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-713">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="instance"><span data-ttu-id="a22e2-714">目标组件的实例。</span><span class="sxs-lookup"><span data-stu-id="a22e2-714">An instance of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-715">移除以前添加的与指定对象关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-715">Removes a previously added type description provider that is associated with the specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-716">此方法使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法删除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-716">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method.</span></span> <span data-ttu-id="a22e2-717">删除提供程序会导致为关联的对象引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-717">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated object.</span></span>  
  
 <span data-ttu-id="a22e2-718">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-718">This method can be called from partially trusted code.</span></span> <span data-ttu-id="a22e2-719">如果定义了 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>，则调用方可以注册指定实例的提供程序（如果其类型也是部分受信任的）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-719">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can register a provider for the specified instance if its type is also partially trusted.</span></span>  
  
 <span data-ttu-id="a22e2-720">如果不需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-720">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Object%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-721">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-721">One or both of the parameters are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveProviderTransparent">
      <MemberSignature Language="C#" Value="public static void RemoveProviderTransparent (System.ComponentModel.TypeDescriptionProvider provider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveProviderTransparent(class System.ComponentModel.TypeDescriptionProvider provider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.RemoveProviderTransparent(System.ComponentModel.TypeDescriptionProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveProviderTransparent (provider As TypeDescriptionProvider, type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveProviderTransparent(System::ComponentModel::TypeDescriptionProvider ^ provider, Type ^ type);" />
      <MemberSignature Language="F#" Value="static member RemoveProviderTransparent : System.ComponentModel.TypeDescriptionProvider * Type -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.RemoveProviderTransparent (provider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.TypeDescriptionProvider" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="a22e2-722">要移除的 <see cref="T:System.ComponentModel.TypeDescriptionProvider" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-722">The <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> to remove.</span></span></param>
        <param name="type"><span data-ttu-id="a22e2-723">目标组件的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-723">The <see cref="T:System.Type" /> of the target component.</span></span></param>
        <summary><span data-ttu-id="a22e2-724">删除以前添加的与指定类型关联的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-724">Removes a previously added type description provider that is associated with the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a22e2-725">此方法使用 <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法删除以前添加的类型说明提供程序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-725">This method removes a type description provider previously added with the <xref:System.ComponentModel.TypeDescriptor.AddProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method.</span></span> <span data-ttu-id="a22e2-726">删除提供程序会导致为关联的类型引发 <xref:System.ComponentModel.TypeDescriptor.Refreshed> 事件。</span><span class="sxs-lookup"><span data-stu-id="a22e2-726">Removing a provider causes a <xref:System.ComponentModel.TypeDescriptor.Refreshed> event to be raised for the associated type.</span></span>  
  
 <span data-ttu-id="a22e2-727">可从部分受信任的代码调用此方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-727">This method can be called from partially trusted code.</span></span> <span data-ttu-id="a22e2-728">如果定义了 <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess>，则调用方可以取消注册指定类型的提供程序（如果该提供程序也是部分受信任的提供程序）。</span><span class="sxs-lookup"><span data-stu-id="a22e2-728">If <xref:System.Security.Permissions.TypeDescriptorPermissionFlags.RestrictedRegistrationAccess> is defined, the caller can unregister a provider for the specified type if it is also partially trusted.</span></span>  
  
 <span data-ttu-id="a22e2-729">如果不需要从部分受信任的代码调用，请使用 <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> 方法。</span><span class="sxs-lookup"><span data-stu-id="a22e2-729">Use the <xref:System.ComponentModel.TypeDescriptor.RemoveProvider%28System.ComponentModel.TypeDescriptionProvider%2CSystem.Type%29> method if you do not need to call from partially trusted code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-730">两个参数之一或两个参数均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-730">One or both of the parameters are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SortDescriptorArray">
      <MemberSignature Language="C#" Value="public static void SortDescriptorArray (System.Collections.IList infos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SortDescriptorArray(class System.Collections.IList infos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptor.SortDescriptorArray(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SortDescriptorArray (infos As IList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SortDescriptorArray(System::Collections::IList ^ infos);" />
      <MemberSignature Language="F#" Value="static member SortDescriptorArray : System.Collections.IList -&gt; unit" Usage="System.ComponentModel.TypeDescriptor.SortDescriptorArray infos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="infos" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="infos"><span data-ttu-id="a22e2-731">一个 <see cref="T:System.Collections.IList" />，其中包含要排序的描述符。</span><span class="sxs-lookup"><span data-stu-id="a22e2-731">An <see cref="T:System.Collections.IList" /> that contains the descriptors to sort.</span></span></param>
        <summary><span data-ttu-id="a22e2-732">使用描述符的名称对描述符排序。</span><span class="sxs-lookup"><span data-stu-id="a22e2-732">Sorts descriptors using the name of the descriptor.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a22e2-733"><paramref name="infos" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a22e2-733"><paramref name="infos" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptor.Refresh" />
      </Docs>
    </Member>
  </Members>
</Type>
