<Type Name="DoWorkEventHandler" FullName="System.ComponentModel.DoWorkEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22f942d0e0d8bc177fda8aa592b80c35dbb135ad" /><Meta Name="ms.sourcegitcommit" Value="355778a8154b2dab885accd76cc040b19ea80e32" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/03/2020" /><Meta Name="ms.locfileid" Value="78242321" /></Metadata><TypeSignature Language="C#" Value="public delegate void DoWorkEventHandler(object sender, DoWorkEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DoWorkEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DoWorkEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub DoWorkEventHandler(sender As Object, e As DoWorkEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void DoWorkEventHandler(System::Object ^ sender, DoWorkEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type DoWorkEventHandler = delegate of obj * DoWorkEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.DoWorkEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">事件源。</param>
    <param name="e">包含事件数据的 <see cref="T:System.ComponentModel.DoWorkEventArgs" />。</param>
    <summary>表示用来处理 <see cref="E:System.ComponentModel.BackgroundWorker.DoWork" /> 事件的方法。 无法继承此类。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 创建 <xref:System.ComponentModel.DoWorkEventHandler> 委托时，需要标识将处理该事件的方法。 若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。 只要事件发生，就会调用事件处理程序方法，除非删除委托。 有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.ComponentModel.DoWorkEventHandler> 委托处理 <xref:System.ComponentModel.BackgroundWorker.DoWork> 事件。 有关完整的代码清单，请参阅[如何：在后台运行操作](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)。  
  
 [!code-csharp[System.ComponentModel.BackgroundWorker.Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.Example/CS/Form1.cs#2)]
 [!code-vb[System.ComponentModel.BackgroundWorker.Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker.Example/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.BackgroundWorker" />
    <related type="Article" href="~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md">如何：在后台运行操作</related>
  </Docs>
</Type>
