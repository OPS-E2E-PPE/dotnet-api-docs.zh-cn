<Type Name="EventLogTraceListener" FullName="System.Diagnostics.EventLogTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19f707d8461d5d806c8241907bc8897dbfb60741" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82480870" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.EventLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogTraceListener sealed : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type EventLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4f9ff-101">提供一个简单的侦听器，该侦听器将跟踪或调试输出指引至 <see cref="T:System.Diagnostics.EventLog" />。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-101">Provides a simple listener that directs tracing or debugging output to an <see cref="T:System.Diagnostics.EventLog" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f9ff-102">此 <xref:System.Diagnostics.EventLogTraceListener> 的实例可以添加到 <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>或 <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> 集合，以将跟踪或调试的输出发送到 <xref:System.Diagnostics.EventLog>。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-102">An instance of this <xref:System.Diagnostics.EventLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType>, <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType>, or <xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=nameWithType> collections to send output from tracing or debugging to an <xref:System.Diagnostics.EventLog>.</span></span> <span data-ttu-id="4f9ff-103">您可以在代码中添加该实例，或在应用程序配置文件中指定它。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-103">You can add the instance in your code or specify it in the application configuration file.</span></span> <span data-ttu-id="4f9ff-104">若要使用应用程序配置文件添加 <xref:System.Diagnostics.EventLogTraceListener>，请在 [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] 项目中编辑对应于应用程序名称或 app.config 文件的文件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-104">To add an <xref:System.Diagnostics.EventLogTraceListener> using an application configuration file, edit the file that corresponds to the name of your application or the app.config file in a [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] project.</span></span> <span data-ttu-id="4f9ff-105">在此文件中，为 <xref:System.Diagnostics.EventLogTraceListener?displayProperty=nameWithType> 类型插入元素。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-105">In this file, insert an element for a <xref:System.Diagnostics.EventLogTraceListener?displayProperty=nameWithType> type.</span></span>  
  
 <span data-ttu-id="4f9ff-106">下面的示例将名为 `myListener` 的 <xref:System.Diagnostics.EventLogTraceListener> 对象添加到 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 集合。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-106">The following example adds a <xref:System.Diagnostics.EventLogTraceListener> object named `myListener` to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="4f9ff-107">`initializeData` 参数指定要传递到 <xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29> 构造函数的事件日志源的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-107">The `initializeData` parameter specifies the name of the event log source that is to be passed to the <xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29> constructor.</span></span>  
  
```xml  
<configuration>  
  <system.diagnostics>  
    <trace autoflush="false" indentsize="4">  
      <listeners>  
        <add name="myListener"  
          type="System.Diagnostics.EventLogTraceListener"  
          initializeData="TraceListenerLog" />  
      </listeners>  
    </trace>  
  </system.diagnostics>  
</configuration>  
```  
  
 <span data-ttu-id="4f9ff-108">有关如何在应用程序配置文件中添加跟踪侦听器的详细信息，请参阅或。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-108">For more information about how to add trace listeners in the application configuration file, see  or .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f9ff-109">如果与 <xref:System.Diagnostics.EventLogTraceListener> 实例关联的事件日志的 <xref:System.Diagnostics.EventLog.Source%2A> 不存在，则将创建一个新的事件源。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-109">If the <xref:System.Diagnostics.EventLog.Source%2A> for the event log that is associated with the <xref:System.Diagnostics.EventLogTraceListener> instance does not exist, a new event source is created.</span></span> <span data-ttu-id="4f9ff-110">若要在 Windows Vista、Windows XP Professional 或 Windows Server 2003 中创建事件源，您必须拥有管理特权。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-110">To create an event source in Windows Vista, Windows XP Professional, or Windows Server 2003, you must have administrative privileges.</span></span>  
>   
>  <span data-ttu-id="4f9ff-111">此要求的原因是必须搜索所有事件日志（包括安全性），以确定事件源是否唯一。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-111">The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</span></span> <span data-ttu-id="4f9ff-112">在 Windows Vista 中，用户无权访问安全日志；因此将引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-112">In Windows Vista, users do not have permission to access the security log; therefore, a <xref:System.Security.SecurityException> is thrown.</span></span>  
>   
>  <span data-ttu-id="4f9ff-113">在 Windows Vista 中，用户帐户控制 (UAC) 决定用户的特权。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-113">In Windows Vista, User Account Control (UAC) determines the privileges of a user.</span></span> <span data-ttu-id="4f9ff-114">如果您是内置的 Administrators 组的成员，将为您分配两个运行时访问令牌：一个标准用户访问令牌和一个管理员访问令牌。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-114">If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</span></span> <span data-ttu-id="4f9ff-115">默认情况下，您拥有标准用户角色。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-115">By default, you are in the standard user role.</span></span> <span data-ttu-id="4f9ff-116">若要执行访问安全日志的代码，必须首先将你的特权从标准用户提升到管理员。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-116">To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</span></span> <span data-ttu-id="4f9ff-117">你可以通过以下方式执行此操作：右键单击应用程序图标并指示需以管理员身份运行。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-117">You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</span></span>  
  
 <span data-ttu-id="4f9ff-118">类提供 <xref:System.Diagnostics.EventLogTraceListener.EventLog%2A> 属性，用于获取或设置接收跟踪或调试输出的事件日志，以及用于保存 <xref:System.Diagnostics.EventLogTraceListener>名称的 <xref:System.Diagnostics.EventLogTraceListener.Name%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-118">The class provides the <xref:System.Diagnostics.EventLogTraceListener.EventLog%2A> property to get or set the event log that receives the tracing or debugging output, and the <xref:System.Diagnostics.EventLogTraceListener.Name%2A> property to hold the name of the <xref:System.Diagnostics.EventLogTraceListener>.</span></span>  
  
 <span data-ttu-id="4f9ff-119"><xref:System.Diagnostics.EventLogTraceListener.Close%2A> 方法会关闭事件日志，使其不再接收跟踪或调试输出。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-119">The <xref:System.Diagnostics.EventLogTraceListener.Close%2A> method closes the event log so it no longer receives tracing or debugging output.</span></span> <span data-ttu-id="4f9ff-120"><xref:System.Diagnostics.EventLogTraceListener.Write%2A> 和 <xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A> 方法将消息写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-120">The <xref:System.Diagnostics.EventLogTraceListener.Write%2A> and <xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A> methods write a message to the event log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f9ff-121">为了避免向事件日志写入大量数据的可能性，<xref:System.Diagnostics.EventLogTraceListener> 不会输出 <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> 属性指定的可选跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-121">To avoid the possibility of writing large amounts of data to the event log, the <xref:System.Diagnostics.EventLogTraceListener> does not output the optional trace data specified by the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4f9ff-122">下面的示例创建一个将输出发送到事件日志的跟踪侦听器。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-122">The following example creates a trace listener that sends output to an event log.</span></span> <span data-ttu-id="4f9ff-123">首先，该代码创建一个使用源 `myEventLogSource`的新 <xref:System.Diagnostics.EventLogTraceListener>。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-123">First, the code creates a new <xref:System.Diagnostics.EventLogTraceListener> that uses the source `myEventLogSource`.</span></span> <span data-ttu-id="4f9ff-124">接下来，`myTraceListener` 添加到 <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> 集合。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-124">Next, `myTraceListener` is added to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collection.</span></span> <span data-ttu-id="4f9ff-125">最后，该示例将一个输出行发送到 <xref:System.Diagnostics.Trace.Listeners%2A> 的对象。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-125">Finally, the example sends a line of output to the <xref:System.Diagnostics.Trace.Listeners%2A> object.</span></span>  
  
 [!code-cpp[Classic EventLogTraceListener Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/CPP/source.cpp#1)]
 [!code-csharp[Classic EventLogTraceListener Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/CS/source.cs#1)]
 [!code-vb[Classic EventLogTraceListener Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic EventLogTraceListener Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="4f9ff-126">此类型是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-126">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Diagnostics.TraceListener" />
    <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
    <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
    <altmember cref="T:System.Diagnostics.EventLog" />
    <altmember cref="T:System.IO.Stream" />
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Diagnostics.Debug" />
    <altmember cref="T:System.Diagnostics.Trace" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f9ff-127">初始化 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-127">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f9ff-128">在没有跟踪侦听器的情况下，初始化 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-128">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogTraceListener" /> class without a trace listener.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogTraceListener (System.Diagnostics.EventLog eventLog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.EventLog eventLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.#ctor(System.Diagnostics.EventLog)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventLog As EventLog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogTraceListener(System::Diagnostics::EventLog ^ eventLog);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLogTraceListener : System.Diagnostics.EventLog -&gt; System.Diagnostics.EventLogTraceListener" Usage="new System.Diagnostics.EventLogTraceListener eventLog" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventLog" Type="System.Diagnostics.EventLog" />
      </Parameters>
      <Docs>
        <param name="eventLog"><span data-ttu-id="4f9ff-129">要写入的事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-129">The event log to write to.</span></span></param>
        <summary><span data-ttu-id="4f9ff-130">使用指定的事件日志初始化 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-130">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogTraceListener" /> class using the specified event log.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogTraceListener (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogTraceListener(System::String ^ source);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.EventLogTraceListener : string -&gt; System.Diagnostics.EventLogTraceListener" Usage="new System.Diagnostics.EventLogTraceListener source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="4f9ff-131">现有的事件日志源的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-131">The name of an existing event log source.</span></span></param>
        <summary><span data-ttu-id="4f9ff-132">使用指定的源初始化 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-132">Initializes a new instance of the <see cref="T:System.Diagnostics.EventLogTraceListener" /> class using the specified source.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="eventLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f9ff-133">关闭事件日志，以使其不再接收跟踪或调试输出。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-133">Closes the event log so that it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="eventLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public System.Diagnostics.EventLog EventLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogTraceListener.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public Property EventLog As EventLog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::EventLog ^ EventLog { System::Diagnostics::EventLog ^ get(); void set(System::Diagnostics::EventLog ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EventLog : System.Diagnostics.EventLog with get, set" Usage="System.Diagnostics.EventLogTraceListener.EventLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f9ff-134">获取或设置要写入的事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-134">Gets or sets the event log to write to.</span></span></summary>
        <value><span data-ttu-id="4f9ff-135">要写入的事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-135">The event log to write to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.EventLogTraceListener.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Diagnostics.EventLogTraceListener.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f9ff-136">获取或设置此 <see cref="T:System.Diagnostics.EventLogTraceListener" /> 的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-136">Gets or sets the name of this <see cref="T:System.Diagnostics.EventLogTraceListener" />.</span></span></summary>
        <value><span data-ttu-id="4f9ff-137">此跟踪侦听器的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-137">The name of this trace listener.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f9ff-138">此属性默认为事件日志的源名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-138">This property defaults to the source name of the event log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f9ff-139">将跟踪数据写入事件日志中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-139">Writes trace data to the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, object data);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, object data) cil managed" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, data As Object)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, System::Object ^ data);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="eventLogTraceListener.TraceData (eventCache, source, severity, id, data)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="eventLogTraceListener.TraceData (eventCache, source, eventType, id, data)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="source" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Object" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="4f9ff-140">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-140">An object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="4f9ff-141">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-141">A name used to identify the output; typically the name of the application that generated the trace event.</span></span></param>
        <param name="severity"><span data-ttu-id="4f9ff-142">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-142">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="eventType"><span data-ttu-id="4f9ff-143">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-143">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="4f9ff-144">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-144">A numeric identifier for the event.</span></span> <span data-ttu-id="4f9ff-145"><paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-145">The combination of <paramref name="source" /> and <paramref name="id" /> uniquely identifies an event.</span></span></param>
        <param name="data"><span data-ttu-id="4f9ff-146">要向输出文件或流中写入的数据对象。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-146">A data object to write to the output file or stream.</span></span></param>
        <summary><span data-ttu-id="4f9ff-147">将跟踪信息、数据对象和事件信息写入事件日志中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-147">Writes trace information, a data object, and event information to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f9ff-148">不应由应用程序代码调用 <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-148">The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="4f9ff-149">它们由 <xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>和 <xref:System.Diagnostics.TraceSource> 类的方法调用，用于输出跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-149">They are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to output trace data.</span></span>  
  
 <span data-ttu-id="4f9ff-150"><xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> 方法（如 <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> 方法）用于自动工具，但也允许将其他对象（例如异常实例）附加到跟踪。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-150">The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> method, like the <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</span></span>  
  
 <span data-ttu-id="4f9ff-151">`eventCache` 和 `source` 参数用于确定是否应跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-151">The `eventCache` and `source` parameters are used to determine if the event should be traced.</span></span> <span data-ttu-id="4f9ff-152">`id` 用于创建 <xref:System.Diagnostics.EventInstance> 对象，<xref:System.Diagnostics.TraceEventType> 被等同到 <xref:System.Diagnostics.EventInstance.EntryType%2A> 属性的 <xref:System.Diagnostics.EventLogEntryType> 中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-152">`id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property.</span></span> <span data-ttu-id="4f9ff-153">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法，将 <xref:System.Diagnostics.EventInstance> 写入包含 `data` 对象的事件日志，格式为字符串。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-153">The <xref:System.Diagnostics.EventInstance> is written to the event log with the `data` object, formatted as a string, using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f9ff-154">`id` 参数的最大值为65535。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-154">The maximum value of the `id` parameter is 65,535.</span></span> <span data-ttu-id="4f9ff-155">如果指定的 `id` 值大于65535，则使用最大值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-155">If the `id` value specified is greater than 65,535, the maximum value is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f9ff-156">未指定 <paramref name="source" />。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-156"><paramref name="source" /> is not specified.</span></span>  
  
<span data-ttu-id="4f9ff-157">-或-</span><span class="sxs-lookup"><span data-stu-id="4f9ff-157">-or-</span></span> 
<span data-ttu-id="4f9ff-158">日志项超过 32,766 个字符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-158">The log entry string exceeds 32,766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, params object[] data);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, object[] data) cil managed" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, ParamArray data As Object())" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="eventLogTraceListener.TraceData (eventCache, source, severity, id, data)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="eventLogTraceListener.TraceData (eventCache, source, eventType, id, data)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="source" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="data" Type="System.Object[]" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="4f9ff-159">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-159">An object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="4f9ff-160">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-160">A name used to identify the output; typically the name of the application that generated the trace event.</span></span></param>
        <param name="severity"><span data-ttu-id="4f9ff-161">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-161">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="eventType"><span data-ttu-id="4f9ff-162">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-162">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="4f9ff-163">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-163">A numeric identifier for the event.</span></span> <span data-ttu-id="4f9ff-164"><paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-164">The combination of <paramref name="source" /> and <paramref name="id" /> uniquely identifies an event.</span></span></param>
        <param name="data"><span data-ttu-id="4f9ff-165">数据对象的数组。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-165">An array of data objects.</span></span></param>
        <summary><span data-ttu-id="4f9ff-166">将跟踪信息、数据对象的数组和事件信息写入事件日志中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-166">Writes trace information, an array of data objects, and event information to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f9ff-167">不应由应用程序代码调用 <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-167">The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="4f9ff-168">它们由 <xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>和 <xref:System.Diagnostics.TraceSource> 类的方法调用，用于输出跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-168">They are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to output trace data.</span></span>  
  
 <span data-ttu-id="4f9ff-169"><xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> 方法（如 <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> 方法）用于自动工具，但也允许将其他对象（例如异常实例）附加到跟踪。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-169">The <xref:System.Diagnostics.EventLogTraceListener.TraceData%2A> method, like the <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</span></span>  
  
 <span data-ttu-id="4f9ff-170">`severity` 和 `id` 参数数据用于创建 <xref:System.Diagnostics.EventInstance> 对象，该对象使用数据对象数组中的数据写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-170">The `severity` and `id` parameter data is used to create an <xref:System.Diagnostics.EventInstance> object, which is written to the event log with the data from the array of data objects.</span></span>  
  
 <span data-ttu-id="4f9ff-171">`eventCache` 和 `source` 参数用于确定是否应跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-171">The `eventCache` and `source` parameters are used to determine if the event should be traced.</span></span> <span data-ttu-id="4f9ff-172">`id` 用于创建 <xref:System.Diagnostics.EventInstance> 对象，<xref:System.Diagnostics.TraceEventType> 被等同到 <xref:System.Diagnostics.EventInstance.EntryType%2A> 属性的 <xref:System.Diagnostics.EventLogEntryType> 中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-172">`id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property.</span></span> <span data-ttu-id="4f9ff-173">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法，将 <xref:System.Diagnostics.EventInstance> 写入包含 `data` 对象数组的事件日志，格式为字符串数组。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-173">The <xref:System.Diagnostics.EventInstance> is written to the event log with the `data` object array, formatted as a string array, using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f9ff-174">`id` 参数的最大值为65535。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-174">The maximum value of the `id` parameter is 65,535.</span></span> <span data-ttu-id="4f9ff-175">如果指定的 `id` 值大于65535，则使用最大值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-175">If the `id` value specified is greater than 65,535, the maximum value is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f9ff-176">未指定 <paramref name="source" />。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-176"><paramref name="source" /> is not specified.</span></span>  
  
<span data-ttu-id="4f9ff-177">-或-</span><span class="sxs-lookup"><span data-stu-id="4f9ff-177">-or-</span></span> 
<span data-ttu-id="4f9ff-178">日志项超过 32,766 个字符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-178">The log entry string exceeds 32,766 characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f9ff-179">将事件跟踪信息写入事件日志中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-179">Writes event trace information to the event log.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string message);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, string message) cil managed" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, message As String)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, System::String ^ message);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="eventLogTraceListener.TraceEvent (eventCache, source, severity, id, message)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="eventLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="source" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="message" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="4f9ff-180">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-180">An object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="4f9ff-181">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-181">A name used to identify the output; typically the name of the application that generated the trace event.</span></span></param>
        <param name="severity"><span data-ttu-id="4f9ff-182">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-182">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="eventType"><span data-ttu-id="4f9ff-183">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-183">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="4f9ff-184">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-184">A numeric identifier for the event.</span></span> <span data-ttu-id="4f9ff-185"><paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-185">The combination of <paramref name="source" /> and <paramref name="id" /> uniquely identifies an event.</span></span></param>
        <param name="message"><span data-ttu-id="4f9ff-186">跟踪消息。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-186">The trace message.</span></span></param>
        <summary><span data-ttu-id="4f9ff-187">将跟踪信息、消息和事件信息写入事件日志中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-187">Writes trace information, a message, and event information to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f9ff-188">不应由应用程序代码调用 <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-188">The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="4f9ff-189">这些方法由 <xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>和 <xref:System.Diagnostics.TraceSource> 类的方法调用，用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-189">These methods are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 <span data-ttu-id="4f9ff-190"><xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> 方法旨在跟踪工具可自动处理的事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-190">The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="4f9ff-191">例如，如果特定的事件由特定的源跟踪，监视工具可以通知管理员。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-191">For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="4f9ff-192">`eventCache` 和 `source` 参数用于确定是否应跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-192">The `eventCache` and `source` parameters are used to determine if the event should be traced.</span></span> <span data-ttu-id="4f9ff-193">`id` 用于创建 <xref:System.Diagnostics.EventInstance> 对象，<xref:System.Diagnostics.TraceEventType> 被等同到 <xref:System.Diagnostics.EventInstance.EntryType%2A> 属性的 <xref:System.Diagnostics.EventLogEntryType> 中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-193">`id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property.</span></span> <span data-ttu-id="4f9ff-194">使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法将 <xref:System.Diagnostics.EventInstance> 写入包含 `message` 数据的事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-194">The <xref:System.Diagnostics.EventInstance> is written to the event log with the `message` data using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f9ff-195">`id` 参数的最大值为65535。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-195">The maximum value of the `id` parameter is 65,535.</span></span> <span data-ttu-id="4f9ff-196">如果指定的 `id` 值大于65535，则使用最大值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-196">If the `id` value specified is greater than 65,535, the maximum value is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f9ff-197">未指定 <paramref name="source" />。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-197"><paramref name="source" /> is not specified.</span></span>  
  
<span data-ttu-id="4f9ff-198">-或-</span><span class="sxs-lookup"><span data-stu-id="4f9ff-198">-or-</span></span> 
<span data-ttu-id="4f9ff-199">日志项超过 32,766 个字符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-199">The log entry string exceeds 32,766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType severity, int id, string format, params object[] args);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType severity, int32 id, string format, object[] args) cil managed" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, severity As TraceEventType, id As Integer, format As String, ParamArray args As Object())" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType severity, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="eventLogTraceListener.TraceEvent (eventCache, source, severity, id, format, args)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="eventLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="source" Type="System.String" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="severity" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" Index="2" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="id" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="4" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="args" Type="System.Object[]" Index="5" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="4f9ff-200">包含当前进程 ID、线程 ID 以及堆栈跟踪信息的对象。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-200">An object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="4f9ff-201">标识输出时使用的名称，通常为生成跟踪事件的应用程序的名称。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-201">A name used to identify the output; typically the name of the application that generated the trace event.</span></span></param>
        <param name="severity"><span data-ttu-id="4f9ff-202">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-202">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="eventType"><span data-ttu-id="4f9ff-203">指定引发跟踪的事件的类型的其中一个枚举值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-203">One of the enumeration values that specifies the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="4f9ff-204">事件的数值标识符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-204">A numeric identifier for the event.</span></span> <span data-ttu-id="4f9ff-205"><paramref name="source" /> 和 <paramref name="id" /> 的组合可以唯一地标识一个事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-205">The combination of <paramref name="source" /> and <paramref name="id" /> uniquely identifies an event.</span></span></param>
        <param name="format"><span data-ttu-id="4f9ff-206">包含零个或多个格式项的格式字符串，这些项与 <paramref name="args" /> 数组中的对象相对应。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-206">A format string that contains zero or more format items that correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="4f9ff-207">包含零个或多个要格式化的对象的 <see langword="object" /> 数组。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-207">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="4f9ff-208">将跟踪信息、格式化对象数组和事件信息写入事件日志中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-208">Writes trace information, a formatted array of objects, and event information to the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="4f9ff-209">不应由应用程序代码调用 <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-209">The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="4f9ff-210">这些方法由 <xref:System.Diagnostics.Debug>、<xref:System.Diagnostics.Trace>和 <xref:System.Diagnostics.TraceSource> 类的方法调用，用于写入跟踪数据。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-210">These methods are called by methods of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data.</span></span>  
  
 <span data-ttu-id="4f9ff-211"><xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> 方法旨在跟踪工具可自动处理的事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-211">The <xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A> method is intended to trace events that can be processed automatically by tools.</span></span> <span data-ttu-id="4f9ff-212">例如，如果特定的事件由特定的源跟踪，监视工具可以通知管理员。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-212">For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</span></span>  
  
 <span data-ttu-id="4f9ff-213">`eventCache` 和 `source` 参数用于确定是否应跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-213">The `eventCache` and `source` parameters are used to determine if the event should be traced.</span></span> <span data-ttu-id="4f9ff-214">`id` 用于创建 <xref:System.Diagnostics.EventInstance> 对象，<xref:System.Diagnostics.TraceEventType> 被等同到 <xref:System.Diagnostics.EventInstance.EntryType%2A> 属性的 <xref:System.Diagnostics.EventLogEntryType> 中。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-214">`id` is used to create an <xref:System.Diagnostics.EventInstance> object and the <xref:System.Diagnostics.TraceEventType> is equated to an <xref:System.Diagnostics.EventLogEntryType> for the <xref:System.Diagnostics.EventInstance.EntryType%2A> property.</span></span> <span data-ttu-id="4f9ff-215"><xref:System.Diagnostics.EventInstance> 使用 <xref:System.Diagnostics.EventLog.WriteEvent%2A> 方法写入事件日志，并使用从 `format` 和 `args` 参数获取的消息写入事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-215">The <xref:System.Diagnostics.EventInstance> is written to the event log, using the <xref:System.Diagnostics.EventLog.WriteEvent%2A> method, with the message obtained from the `format` and `args` parameters.</span></span> <span data-ttu-id="4f9ff-216">使用 <xref:System.String.Format%2A> 方法将 `args` 对象数组转换为字符串，同时传递 `format` 字符串和 `args` 数组，以将字符串设置为事件日志的消息格式。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-216">The `args` object array is converted to a string using the <xref:System.String.Format%2A> method, passing the `format` string and `args` array to format the string as the message for the event log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4f9ff-217">`id` 参数的最大值为65535。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-217">The maximum value of the `id` parameter is 65,535.</span></span> <span data-ttu-id="4f9ff-218">如果指定的 `id` 值大于65535，则使用最大值。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-218">If the `id` value specified is greater than 65,535, the maximum value is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f9ff-219">未指定 <paramref name="source" />。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-219"><paramref name="source" /> is not specified.</span></span>  
  
<span data-ttu-id="4f9ff-220">-或-</span><span class="sxs-lookup"><span data-stu-id="4f9ff-220">-or-</span></span> 
<span data-ttu-id="4f9ff-221">日志项超过 32,766 个字符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-221">The log entry string exceeds 32,766 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="eventLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4f9ff-222">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-222">The message to write.</span></span></param>
        <summary><span data-ttu-id="4f9ff-223">将消息写入此实例的事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-223">Writes a message to the event log for this instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f9ff-224"><paramref name="message" /> 的长度超过 32,766 个字符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-224"><paramref name="message" /> exceeds 32,766 characters.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.EventLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="eventLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="4f9ff-225">要写入的消息。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-225">The message to write.</span></span></param>
        <summary><span data-ttu-id="4f9ff-226">将消息写入此实例的事件日志。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-226">Writes a message to the event log for this instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4f9ff-227"><paramref name="message" /> 的长度超过 32,766 个字符。</span><span class="sxs-lookup"><span data-stu-id="4f9ff-227"><paramref name="message" /> exceeds 32,766 characters.</span></span></exception>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:System.Diagnostics.DefaultTraceListener" />
        <altmember cref="T:System.Diagnostics.TextWriterTraceListener" />
        <altmember cref="T:System.Diagnostics.EventLog" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Diagnostics.Debug" />
        <altmember cref="T:System.Diagnostics.Trace" />
      </Docs>
    </Member>
  </Members>
</Type>
