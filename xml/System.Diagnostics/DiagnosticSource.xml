<Type Name="DiagnosticSource" FullName="System.Diagnostics.DiagnosticSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ff875544f469d2aca56952e94f24ea271147da35" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82368249" /></Metadata><TypeSignature Language="C#" Value="public abstract class DiagnosticSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DiagnosticSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.DiagnosticSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DiagnosticSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class DiagnosticSource abstract" />
  <TypeSignature Language="F#" Value="type DiagnosticSource = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.1</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3534d-101">一个抽象类，它允许针对丰富数据有效负载的生产时日志记录检测代码，以在被检测的进程中使用。</span><span class="sxs-lookup"><span data-stu-id="3534d-101">An abstract class that allows code to be instrumented for production-time logging of rich data payloads for consumption within the process that was instrumented.</span></span></summary>
    <remarks><span data-ttu-id="3534d-102">有关详细信息，请参阅[DiagnosticSource 用户指南](https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.DiagnosticSource/src/DiagnosticSourceUsersGuide.md)。</span><span class="sxs-lookup"><span data-stu-id="3534d-102">For more information, see [DiagnosticSource User's Guide](https://github.com/dotnet/runtime/blob/master/src/libraries/System.Diagnostics.DiagnosticSource/src/DiagnosticSourceUsersGuide.md).</span></span></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DiagnosticSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DiagnosticSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3534d-103">初始化 <see cref="T:System.Diagnostics.DiagnosticSource" /> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="3534d-103">Initializes an instance of the <see cref="T:System.Diagnostics.DiagnosticSource" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public abstract bool IsEnabled (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsEnabled (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsEnabled(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : string -&gt; bool" Usage="diagnosticSource.IsEnabled name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3534d-104">正在写入的事件的名称。</span><span class="sxs-lookup"><span data-stu-id="3534d-104">The name of the event being written.</span></span></param>
        <summary><span data-ttu-id="3534d-105">验证通知事件是否已启用。</span><span class="sxs-lookup"><span data-stu-id="3534d-105">Verifies if the notification event is enabled.</span></span></summary>
        <returns><span data-ttu-id="3534d-106">如果通知事件已启用，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3534d-106"><see langword="true" /> if the notification event is enabled, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="3534d-107">如果有大量的通知设置，可以在执行此设置之前调用 IsEnabled。</span><span class="sxs-lookup"><span data-stu-id="3534d-107">If there is expensive setup for the notification, you can call IsEnabled before performing this setup.</span></span> <span data-ttu-id="3534d-108">使用者不应假定他们仅获取 IsEnabled 为 true 的通知。</span><span class="sxs-lookup"><span data-stu-id="3534d-108">Consumers should not assume that they only get notifications for which IsEnabled is true.</span></span> <span data-ttu-id="3534d-109">不过，对于创建者调用此 API，它是可选的。</span><span class="sxs-lookup"><span data-stu-id="3534d-109">However, it is optional for producers to call this API.</span></span> <span data-ttu-id="3534d-110">该名称应与传递给 <see cref="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)" />的名称相同。</span><span class="sxs-lookup"><span data-stu-id="3534d-110">The name should be the same as that passed to <see cref="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)" />.</span></span>

           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsEnabled (string name, object arg1, object arg2 = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEnabled(string name, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.IsEnabled(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEnabled (name As String, arg1 As Object, Optional arg2 As Object = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsEnabled : string * obj * obj -&gt; bool&#xA;override this.IsEnabled : string * obj * obj -&gt; bool" Usage="diagnosticSource.IsEnabled (name, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="arg1" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="arg2" Type="System.Object" Index="2" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3534d-111">正在写入的事件的名称。</span><span class="sxs-lookup"><span data-stu-id="3534d-111">The name of the event being written.</span></span></param>
        <param name="arg1"><span data-ttu-id="3534d-112">一个对象，它表示 IsEnabled 的附加上下文。</span><span class="sxs-lookup"><span data-stu-id="3534d-112">An object that represents the additional context for IsEnabled.</span></span> <span data-ttu-id="3534d-113">使用者应会收到 <see langword="null" />，它可能表示生成方已调用纯 IsEnabled(string) 来检查使用者是否确实要获取此类事件的通知。</span><span class="sxs-lookup"><span data-stu-id="3534d-113">Consumers should expect to receive <see langword="null" /> which may indicate that producer called pure IsEnabled(string) to check if consumer wants to get notifications for such events at all.</span></span> <span data-ttu-id="3534d-114">基于此，生成方可使用非 <see langword="null" /> 上下文再次调用 IsEnabled(string, object, object)。</span><span class="sxs-lookup"><span data-stu-id="3534d-114">Based on that, producer may call IsEnabled(string, object, object) again with non-<see langword="null" /> context.</span></span></param>
        <param name="arg2"><span data-ttu-id="3534d-115">可选。</span><span class="sxs-lookup"><span data-stu-id="3534d-115">Optional.</span></span> <span data-ttu-id="3534d-116">一个对象，它表示 IsEnabled 的附加上下文。</span><span class="sxs-lookup"><span data-stu-id="3534d-116">An object that represents the additional context for IsEnabled.</span></span> <span data-ttu-id="3534d-117">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3534d-117"><see langword="null" /> by default.</span></span> <span data-ttu-id="3534d-118">使用者应会收到 <see langword="null" />，它可能表示生成方已调用纯 IsEnabled(string) 或者已在 <paramref name="arg1" /> 中传递所有必要的上下文。</span><span class="sxs-lookup"><span data-stu-id="3534d-118">Consumers should expect to receive <see langword="null" /> which may indicate that producer called pure IsEnabled(string) or producer passed all necessary context in <paramref name="arg1" />.</span></span></param>
        <summary><span data-ttu-id="3534d-119">验证通知事件是否已启用。</span><span class="sxs-lookup"><span data-stu-id="3534d-119">Verifies it the notification event is enabled.</span></span></summary>
        <returns><span data-ttu-id="3534d-120">如果通知事件已启用，为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3534d-120"><see langword="true" /> if the notification event is enabled, <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
<span data-ttu-id="3534d-121">如果有大量的通知设置，可以在执行安装程序之前调用此方法并提供上下文。</span><span class="sxs-lookup"><span data-stu-id="3534d-121">If there is expensive setup for the notification, you can call this method and provide context before performing the setup.</span></span>
          
           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityExport">
      <MemberSignature Language="C#" Value="public virtual void OnActivityExport (System.Diagnostics.Activity activity, object payload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActivityExport(class System.Diagnostics.Activity activity, object payload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.OnActivityExport(System.Diagnostics.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnActivityExport (activity As Activity, payload As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnActivityExport(System::Diagnostics::Activity ^ activity, System::Object ^ payload);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityExport : System.Diagnostics.Activity * obj -&gt; unit&#xA;override this.OnActivityExport : System.Diagnostics.Activity * obj -&gt; unit" Usage="diagnosticSource.OnActivityExport (activity, payload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Diagnostics.Activity" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="payload" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="3534d-122">受外部事件影响的活动。</span><span class="sxs-lookup"><span data-stu-id="3534d-122">The activity affected by an external event.</span></span></param>
        <param name="payload"><span data-ttu-id="3534d-123">一个表示传出请求的对象。</span><span class="sxs-lookup"><span data-stu-id="3534d-123">An object that represents the outgoing request.</span></span></param>
        <summary><span data-ttu-id="3534d-124">将状态从活动转移到将在进程外发生的某些事件或操作，例如传出 HTTP 请求。</span><span class="sxs-lookup"><span data-stu-id="3534d-124">Transfers state from an activity to some event or operation, such as an outgoing HTTP request, that will occur outside the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="3534d-125">如果检测站点位于活动离开进程的位置（如传出 HTTP 请求），则该站点将需要将状态从活动传输到传出请求。</span><span class="sxs-lookup"><span data-stu-id="3534d-125">If an instrumentation site is at a location where activities leave the process (such as outgoing HTTP requests), that site will want to transfer state from the activity to the outgoing request.</span></span>

<span data-ttu-id="3534d-126">在可能的情况下，应通过检测站点来完成此操作，因为在检测站点的 <xref:System.Diagnostics.Activity> 与 ougoing 请求逻辑之间存在一个约定。</span><span class="sxs-lookup"><span data-stu-id="3534d-126">To the extent possible, this should be done by the instrumentation site, because there is a contract between an <xref:System.Diagnostics.Activity> and the ougoing request logic at the instrumentation site.</span></span>   <span data-ttu-id="3534d-127">不过，检测站点无法处理策略（例如，出于兼容性原因，是否应禁用或以较旧的格式编写活动信息）。</span><span class="sxs-lookup"><span data-stu-id="3534d-127">However, the instrumentation site can't handle policy (for example, whether activity information should be disabled or written in an older format for compatibility reasons).</span></span>
<span data-ttu-id="3534d-128">为此，检测站点需要回调到日志记录系统，并要求它解析策略。</span><span class="sxs-lookup"><span data-stu-id="3534d-128">For this, the instrumentation site needs to call back out to the logging system and ask it to resolve policy.</span></span> <span data-ttu-id="3534d-129">这是 `OnActivityExport` 方法的目的。</span><span class="sxs-lookup"><span data-stu-id="3534d-129">This is the purpose of the `OnActivityExport` method.</span></span>

<span data-ttu-id="3534d-130">向 `OnActivityExport` 方法提供 <xref:System.Diagnostics.Activity> 以及表示传出请求的负载对象。</span><span class="sxs-lookup"><span data-stu-id="3534d-130">The `OnActivityExport` method is given the <xref:System.Diagnostics.Activity> as well as a payload object that represents the outgoing request.</span></span> <span data-ttu-id="3534d-131">然后，<xref:System.Diagnostics.DiagnosticSource> 订户可以在发送传出请求之前对其进行更新。</span><span class="sxs-lookup"><span data-stu-id="3534d-131">A <xref:System.Diagnostics.DiagnosticSource> subscriber then has the ability to update the outgoing request before it is sent.</span></span>
 
<span data-ttu-id="3534d-132">请注意，此方法很少用在检测站点（只有位于进程传出边界的站点）。</span><span class="sxs-lookup"><span data-stu-id="3534d-132">Note that this method is rarely used at instrumentation sites (only those sites that are on an outgoing boundary of the process).</span></span>   <span data-ttu-id="3534d-133">而且，通常情况下，检测站点执行的默认策略（例如，传输特定传出约定中的所有活动状态）可能会很好。</span><span class="sxs-lookup"><span data-stu-id="3534d-133">Moreover, typically the default policy that the instrumentation site performs (for example, to transfer all activity state in a particular outgoing convention) is likely to be fine.</span></span> <span data-ttu-id="3534d-134">此方法仅适用于这是问题的情况。</span><span class="sxs-lookup"><span data-stu-id="3534d-134">This method is only for cases where that is a problem.</span></span> <span data-ttu-id="3534d-135">因此，此方法应很少使用，但在这里，我们的 `OnActivityImport` symetry 和未来的校对都是如此。</span><span class="sxs-lookup"><span data-stu-id="3534d-135">Thus, this method should be used very rarely and is mostly here for symetry with `OnActivityImport` and future-proofing.</span></span>

<span data-ttu-id="3534d-136">请注意，`payload` 在此处键入为 <xref:System.Object>，但任何特定检测站点和订阅服务器应该知道有效负载的类型，因此在必要时对其进行强制转换和解码。</span><span class="sxs-lookup"><span data-stu-id="3534d-136">Note that `payload` is typed as an <xref:System.Object> here, but any particular instrumentation site and subscriber should know the type of the payload and thus cast and decode it if necessary.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivityImport">
      <MemberSignature Language="C#" Value="public virtual void OnActivityImport (System.Diagnostics.Activity activity, object payload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnActivityImport(class System.Diagnostics.Activity activity, object payload) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.OnActivityImport(System.Diagnostics.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnActivityImport (activity As Activity, payload As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnActivityImport(System::Diagnostics::Activity ^ activity, System::Object ^ payload);" />
      <MemberSignature Language="F#" Value="abstract member OnActivityImport : System.Diagnostics.Activity * obj -&gt; unit&#xA;override this.OnActivityImport : System.Diagnostics.Activity * obj -&gt; unit" Usage="diagnosticSource.OnActivityImport (activity, payload)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Diagnostics.Activity" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
        <Parameter Name="payload" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="3534d-137">受外部事件影响的活动。</span><span class="sxs-lookup"><span data-stu-id="3534d-137">The activity affected by an external event.</span></span></param>
        <param name="payload"><span data-ttu-id="3534d-138">表示传入请求的有效负载。</span><span class="sxs-lookup"><span data-stu-id="3534d-138">A payload that represents the incoming request.</span></span></param>
        <summary><span data-ttu-id="3534d-139">将状态从将在进程外发生的某些事件或操作（例如传入请求）转移到活动。</span><span class="sxs-lookup"><span data-stu-id="3534d-139">Transfers state to an activity from some event or operation, such as an incoming request, that occurred outside the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="3534d-140">如果检测站点创建新活动以响应进程外的某个事件（例如传入 HTTP 请求），则 `OnActivityImport` 方法允许该站点创建新的活动，并将传入请求的状态传输到活动。</span><span class="sxs-lookup"><span data-stu-id="3534d-140">If an instrumentation site creates a new activity in response to some event outside the process, such as an incomming HTTP request), the `OnActivityImport` method allows that site will want to create a new activity and transfer state from the incoming request to the activity.</span></span> 

<span data-ttu-id="3534d-141">在可能的情况下，应通过检测站点来完成此操作，因为在检测站点的 <xref:System.Diagnostics.Activity> 与传入请求逻辑之间存在一个约定。</span><span class="sxs-lookup"><span data-stu-id="3534d-141">To the extent possible, this should be done by the instrumentation site, because there is a contract between the <xref:System.Diagnostics.Activity> and the incomming request logic at the instrumentation site.</span></span>   <span data-ttu-id="3534d-142">不过，检测站点无法处理策略。</span><span class="sxs-lookup"><span data-stu-id="3534d-142">However, the instrumentation site can't handle policy.</span></span> <span data-ttu-id="3534d-143">（例如，如果执行了采样，应确切地采样哪些请求？）在这些情况下，检测站点需要回调到日志记录系统，并要求其解决策略（例如，决定是否应设置活动的 "采样" 位）。</span><span class="sxs-lookup"><span data-stu-id="3534d-143">(For example, if sampling is done, exactly which requests should be sampled?) In these cases, the instrumentation site needs to call back out to the logging system and ask it to resolve policy (for example, to decide if the activity's "sampling" bit should be set).</span></span> <span data-ttu-id="3534d-144">这是 `OnActivityImport` 方法的目的。</span><span class="sxs-lookup"><span data-stu-id="3534d-144">This is the purpose of the `OnActivityImport` method.</span></span> <span data-ttu-id="3534d-145">向其提供活动以及表示传入请求的负载对象。</span><span class="sxs-lookup"><span data-stu-id="3534d-145">It is given the activity as well as a payload object that represents the incomming request.</span></span> <span data-ttu-id="3534d-146">然后，<xref:System.Diagnostics.DiagnosticSource> 的订阅者可以根据需要更新此活动。</span><span class="sxs-lookup"><span data-stu-id="3534d-146">The subscribers to the <xref:System.Diagnostics.DiagnosticSource> then have the opportunity to update this activity as desired.</span></span> 

<span data-ttu-id="3534d-147">此方法很少用于检测站点（仅限位于进程边界的站点），instrumetation 站点实现某些默认策略（它以*某种*方式设置活动），因此，如果该默认策略正常，则无需重写此方法。</span><span class="sxs-lookup"><span data-stu-id="3534d-147">This method is rarely used at instrumentation sites (only those sites that are on the boundary of the process), and the instrumetation site implements some default policy (it sets the activity in *some* way), and so it is not necessary to override this method if that default policy is fine.</span></span> <span data-ttu-id="3534d-148">换句话说，此方法应在非常罕见（但通常很重要）的情况下重写。</span><span class="sxs-lookup"><span data-stu-id="3534d-148">In other words, this method should be overridden in very rare (but often important) cases.</span></span>

<span data-ttu-id="3534d-149">请注意，`payload` 在此处键入为 <xref:System.Object>，但任何特定检测站点和订阅服务器都将知道有效负载的类型，因此在必要时对其进行强制转换和解码。</span><span class="sxs-lookup"><span data-stu-id="3534d-149">Note that `payload` is typed as <xref:System.Object> here, but any particular instrumentation site and subscriber will know the type of the payload and thus cast and decode it if necessary.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Activity StartActivity (System.Diagnostics.Activity activity, object args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.Activity StartActivity(class System.Diagnostics.Activity activity, object args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.StartActivity(System.Diagnostics.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartActivity (activity As Activity, args As Object) As Activity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::Activity ^ StartActivity(System::Diagnostics::Activity ^ activity, System::Object ^ args);" />
      <MemberSignature Language="F#" Value="member this.StartActivity : System.Diagnostics.Activity * obj -&gt; System.Diagnostics.Activity" Usage="diagnosticSource.StartActivity (activity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Diagnostics.Activity" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="args" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="3534d-150">要启动的 <see cref="T:System.Diagnostics.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="3534d-150">The <see cref="T:System.Diagnostics.Activity" /> to be started.</span></span></param>
        <param name="args"><span data-ttu-id="3534d-151">一个对象，它表示作为事件的有效负载传递的值。</span><span class="sxs-lookup"><span data-stu-id="3534d-151">An object that represent the value being passed as a payload for the event.</span></span></param>
        <summary><span data-ttu-id="3534d-152">启动 <see cref="T:System.Diagnostics.Activity" /> 并写入启动事件。</span><span class="sxs-lookup"><span data-stu-id="3534d-152">Starts an <see cref="T:System.Diagnostics.Activity" /> and writes a start event.</span></span></summary>
        <returns><span data-ttu-id="3534d-153">便于链接的已启动的活动。</span><span class="sxs-lookup"><span data-stu-id="3534d-153">The started activity for convenient chaining.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
           
<span data-ttu-id="3534d-154"><xref:System.Diagnostics.Activity> 描述了逻辑操作、其上下文和父关系;当前 <xref:System.Diagnostics.Activity> 流过操作处理。</span><span class="sxs-lookup"><span data-stu-id="3534d-154">The <xref:System.Diagnostics.Activity> describes the logical operation, its context, and parent relation; the current <xref:System.Diagnostics.Activity> flows through the operation processing.</span></span>

<span data-ttu-id="3534d-155">此方法启动给定的 <xref:System.Diagnostics.Activity>，维护给定 <xref:System.Diagnostics.Activity>的全局 <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType> 和 <xref:System.Diagnostics.Activity.Parent?displayProperty=nameWithType> 活动，并通知使用者启动了新的 <xref:System.Diagnostics.Activity>。</span><span class="sxs-lookup"><span data-stu-id="3534d-155">This method starts the given <xref:System.Diagnostics.Activity>, maintains a global <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType> and <xref:System.Diagnostics.Activity.Parent?displayProperty=nameWithType> activity for the given <xref:System.Diagnostics.Activity>, and notifies consumers that a new <xref:System.Diagnostics.Activity> was started.</span></span> <span data-ttu-id="3534d-156">使用者可以访问 <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType> 来添加上下文和/或增加遥测数据。</span><span class="sxs-lookup"><span data-stu-id="3534d-156">Consumers can access <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType> to add context and/or augment telemetry.</span></span>

<span data-ttu-id="3534d-157">创建者可以向有效负载中的使用者传递其他详细信息。</span><span class="sxs-lookup"><span data-stu-id="3534d-157">Producers may pass additional details to the consumer in the payload.</span></span>

           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopActivity">
      <MemberSignature Language="C#" Value="public void StopActivity (System.Diagnostics.Activity activity, object args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopActivity(class System.Diagnostics.Activity activity, object args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.StopActivity(System.Diagnostics.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopActivity (activity As Activity, args As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopActivity(System::Diagnostics::Activity ^ activity, System::Object ^ args);" />
      <MemberSignature Language="F#" Value="member this.StopActivity : System.Diagnostics.Activity * obj -&gt; unit" Usage="diagnosticSource.StopActivity (activity, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Diagnostics.Activity" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
        <Parameter Name="args" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="3534d-158">要停止的活动。</span><span class="sxs-lookup"><span data-stu-id="3534d-158">The activity to be stopped.</span></span></param>
        <param name="args"><span data-ttu-id="3534d-159">一个对象，它表示作为事件的有效负载传递的值。</span><span class="sxs-lookup"><span data-stu-id="3534d-159">An object that represents the value passed as a payload for the event.</span></span></param>
        <summary><span data-ttu-id="3534d-160">停止给定的 <see cref="T:System.Diagnostics.Activity" />，维护全局 <see cref="P:System.Diagnostics.Activity.Current" /> 活动，并通知使用者 <see cref="T:System.Diagnostics.Activity" /> 已停止。</span><span class="sxs-lookup"><span data-stu-id="3534d-160">Stops the given <see cref="T:System.Diagnostics.Activity" />, maintains the global <see cref="P:System.Diagnostics.Activity.Current" /> activity, and notifies consumers that the <see cref="T:System.Diagnostics.Activity" /> was stopped.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="3534d-161">创建者可以向有效负载中的使用者传递其他详细信息。</span><span class="sxs-lookup"><span data-stu-id="3534d-161">Producers may pass additional details to the consumer in the payload.</span></span>

<span data-ttu-id="3534d-162">使用者可以访问 <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType> 来添加上下文和/或增加遥测数据。</span><span class="sxs-lookup"><span data-stu-id="3534d-162">Consumers can access <xref:System.Diagnostics.Activity.Current?displayProperty=nameWithType> to add context and/or augment telemetry.</span></span>


         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.DiagnosticSource.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Write (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit" Usage="diagnosticSource.Write (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.DiagnosticSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.1</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3534d-163">正在写入的事件的名称。</span><span class="sxs-lookup"><span data-stu-id="3534d-163">The name of the event being written.</span></span></param>
        <param name="value"><span data-ttu-id="3534d-164">一个对象，它表示作为事件的有效负载传递的值。</span><span class="sxs-lookup"><span data-stu-id="3534d-164">An object that represents the value being passed as a payload for the event.</span></span> <span data-ttu-id="3534d-165">这通常是一个包含多个子值的匿名类型。</span><span class="sxs-lookup"><span data-stu-id="3534d-165">This is often an anonymous type which contains several sub-values.</span></span></param>
        <summary><span data-ttu-id="3534d-166">提供记录复杂有效负载的通用方法。</span><span class="sxs-lookup"><span data-stu-id="3534d-166">Provides a generic way of logging complex payloads.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="3534d-167">为每个通知提供一个标识它的名称，以及一个对象（通常为匿名类型），该对象提供要传递给通知的任意信息。</span><span class="sxs-lookup"><span data-stu-id="3534d-167">Each notification is given a name that identifies it, as well as an object (typically an anonymous type) that provides arbitrary information to pass to the notification.</span></span>  

<span data-ttu-id="3534d-168">`name` 应为 short。</span><span class="sxs-lookup"><span data-stu-id="3534d-168">`name` should be short.</span></span> <span data-ttu-id="3534d-169">不要使用完全限定的名称，除非您不得不避免多义性，因为 `name` 必须是全局唯一的。</span><span class="sxs-lookup"><span data-stu-id="3534d-169">Don't use a fully qualified name unless you have to to avoid ambiguity, since `name` must be globally unique.</span></span> <span data-ttu-id="3534d-170">通常， *componentName*（其中*ComponentName*和*事件名称*是小于10个字符的字符串）是一个很好的折衷。</span><span class="sxs-lookup"><span data-stu-id="3534d-170">Typically, *componentName.eventName*, where *componentName* and *eventName* are strings less than 10 characters, are a good compromise.</span></span>

<span data-ttu-id="3534d-171">通知名称不应具有 `.`，因为组件名称具有点，并且它们都具有点来导致歧义。</span><span class="sxs-lookup"><span data-stu-id="3534d-171">Notification names should not have `.` in them because component names have dots, and for them both to have dots leads to ambiguity.</span></span> <span data-ttu-id="3534d-172">建议改用 `_`。</span><span class="sxs-lookup"><span data-stu-id="3534d-172">We suggest that you use `_` instead.</span></span>

<span data-ttu-id="3534d-173">假定侦听器将使用字符串前缀来筛选组。</span><span class="sxs-lookup"><span data-stu-id="3534d-173">Assume that listeners will use string prefixing to filter groups.</span></span> <span data-ttu-id="3534d-174">因此，具有组件名称的层次结构是一种很好的做法。</span><span class="sxs-lookup"><span data-stu-id="3534d-174">Therefore, having a hierarchy of component names is a good practice.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
