<Type Name="TraceEventCache" FullName="System.Diagnostics.TraceEventCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="beed9b880fd88ff7ca65451e83411dffbdfc7f0a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75137114" /></Metadata><TypeSignature Language="C#" Value="public class TraceEventCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraceEventCache extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.TraceEventCache" />
  <TypeSignature Language="VB.NET" Value="Public Class TraceEventCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraceEventCache" />
  <TypeSignature Language="F#" Value="type TraceEventCache = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6cb4e-101">提供特定于线程和进程的跟踪事件数据。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-101">Provides trace event data specific to a thread and a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6cb4e-102">为跟踪侦听器调用而设计为性能优化的 <xref:System.Diagnostics.TraceEventCache> 类仅对创建自定义跟踪侦听器的开发人员有意义。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-102">The <xref:System.Diagnostics.TraceEventCache> class, designed as a performance optimization for trace listener calls, is of interest only to developers creating custom trace listeners.</span></span>  
  
 <span data-ttu-id="6cb4e-103"><xref:System.Diagnostics.TraceEventCache> 类作为跟踪方法中的参数，用于准确标识跟踪事件的源。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-103">The <xref:System.Diagnostics.TraceEventCache> class is used as a parameter in tracing methods to accurately identify the source of a trace event.</span></span> <span data-ttu-id="6cb4e-104">使用 <xref:System.Diagnostics.TraceEventCache> 的方法的示例 <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> 和 <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-104">Examples of methods that use <xref:System.Diagnostics.TraceEventCache> are <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6cb4e-105"><xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> 属性包含可用于将跟踪与相关跟踪相关联的数据。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-105">The <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A> property contains data that can be used to correlate the trace with related traces.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraceEventCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.TraceEventCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraceEventCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6cb4e-106">初始化 <see cref="T:System.Diagnostics.TraceEventCache" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-106">Initializes a new instance of the <see cref="T:System.Diagnostics.TraceEventCache" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Callstack">
      <MemberSignature Language="C#" Value="public string Callstack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Callstack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Callstack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Callstack As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Callstack { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Callstack : string" Usage="System.Diagnostics.TraceEventCache.Callstack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb4e-107">获取当前线程的调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-107">Gets the call stack for the current thread.</span></span></summary>
        <value><span data-ttu-id="6cb4e-108">包含堆栈跟踪信息的字符串。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-108">A string containing stack trace information.</span></span> <span data-ttu-id="6cb4e-109">此值可以是空字符串 ("")。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-109">This value can be an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb4e-110"><xref:System.Diagnostics.TraceEventCache.Callstack%2A> 属性从 <xref:System.Environment> 类的 <xref:System.Environment.StackTrace%2A> 属性获取调用堆栈。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-110">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property gets the call stack from the <xref:System.Environment.StackTrace%2A> property of the <xref:System.Environment> class.</span></span> <span data-ttu-id="6cb4e-111">属性值按时间顺序反向列出方法调用。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-111">The property value lists method calls in reverse chronological order.</span></span> <span data-ttu-id="6cb4e-112">也就是说，首先描述最近的方法调用。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-112">That is, the most recent method call is described first.</span></span> <span data-ttu-id="6cb4e-113">为堆栈上的每个方法调用列出一行堆栈跟踪信息。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-113">One line of stack trace information is listed for each method call on the stack.</span></span> <span data-ttu-id="6cb4e-114">有关详细信息，请参阅 <xref:System.Environment.StackTrace%2A>。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-114">For more information, see <xref:System.Environment.StackTrace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="6cb4e-115">获取对受权限保护的资源的完全访问权限。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-115">for full access to the resource protected by the permission.</span></span> <span data-ttu-id="6cb4e-116">关联的枚举： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="6cb4e-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DateTime">
      <MemberSignature Language="C#" Value="public DateTime DateTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateTime" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.DateTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateTime : DateTime" Usage="System.Diagnostics.TraceEventCache.DateTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb4e-117">获取事件跟踪发生的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-117">Gets the date and time at which the event trace occurred.</span></span></summary>
        <value><span data-ttu-id="6cb4e-118"><see cref="T:System.DateTime" /> 结构，其值是以协调通用时间 (UTC) 格式表示的日期和时间。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-118">A <see cref="T:System.DateTime" /> structure whose value is a date and time expressed in Coordinated Universal Time (UTC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb4e-119">第一次在 <xref:System.Diagnostics.TraceEventCache> 类的实例中访问该属性时，将返回当前时间。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-119">The first time the property is accessed in an instance of the <xref:System.Diagnostics.TraceEventCache> class, the current time is returned.</span></span> <span data-ttu-id="6cb4e-120">在该实例中，此属性的后续查询将返回相同的 <xref:System.DateTime> 值，以允许将其用作时间戳。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-120">Subsequent queries of this property in that instance return that same <xref:System.DateTime> value, allowing it to be used as a timestamp.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOperationStack">
      <MemberSignature Language="C#" Value="public System.Collections.Stack LogicalOperationStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack LogicalOperationStack" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalOperationStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Stack ^ LogicalOperationStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalOperationStack : System.Collections.Stack" Usage="System.Diagnostics.TraceEventCache.LogicalOperationStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb4e-121">获取堆栈中包含的关联数据。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-121">Gets the correlation data, contained in a stack.</span></span></summary>
        <value><span data-ttu-id="6cb4e-122">包含相关数据的 <see cref="T:System.Collections.Stack" />。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-122">A <see cref="T:System.Collections.Stack" /> containing correlation data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb4e-123">相关数据以对象的形式存储在调用上下文中，名称为 "CorrelationManagerSlot"。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-123">The correlation data is stored as an object in the call context with the name "System.Diagnostics.Trace.CorrelationManagerSlot".</span></span> <span data-ttu-id="6cb4e-124"><xref:System.Diagnostics.CorrelationManager> 类提供了一些方法，这些方法用于在线程绑定的上下文中存储逻辑操作标识，并使用存储的标识自动标记线程生成的每个跟踪事件。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-124">The <xref:System.Diagnostics.CorrelationManager> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</span></span> <span data-ttu-id="6cb4e-125"><xref:System.Diagnostics.CorrelationManager> 通过 <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> 属性进行访问。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-125">The <xref:System.Diagnostics.CorrelationManager> is accessed through the <xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6cb4e-126">对 <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> 方法的每次调用都会将新的逻辑操作标识推送到堆栈上。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-126">Each call to the <xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> method pushes a new logical operation identity onto the stack.</span></span> <span data-ttu-id="6cb4e-127">每次调用 <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> 方法都会从堆栈中弹出一个逻辑操作标识</span><span class="sxs-lookup"><span data-stu-id="6cb4e-127">Each call to the <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A> method pops a logical operation identity from the stack</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessId">
      <MemberSignature Language="C#" Value="public int ProcessId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProcessId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProcessId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProcessId { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ProcessId : int" Usage="System.Diagnostics.TraceEventCache.ProcessId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb4e-128">获取当前进程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-128">Gets the unique identifier of the current process.</span></span></summary>
        <value><span data-ttu-id="6cb4e-129">系统生成的当前进程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-129">The system-generated unique identifier of the current process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb4e-130">在进程终止之前，进程标识符唯一标识整个系统中的进程。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-130">Until the process terminates, the process identifier uniquely identifies the process throughout the system.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="6cb4e-131">用于调用非托管代码。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-131">for the ability to call unmanaged code.</span></span> <span data-ttu-id="6cb4e-132">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="6cb4e-132">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ThreadId">
      <MemberSignature Language="C#" Value="public string ThreadId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThreadId" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThreadId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThreadId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThreadId : string" Usage="System.Diagnostics.TraceEventCache.ThreadId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb4e-133">获取当前托管线程的唯一标识符。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-133">Gets a unique identifier for the current managed thread.</span></span></summary>
        <value><span data-ttu-id="6cb4e-134">表示此托管线程的唯一整数标识符的字符串。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-134">A string that represents a unique integer identifier for this managed thread.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb4e-135">线程标识符是格式为字符串的 <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-135">The thread identifier is the value of the <xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=nameWithType> property formatted as a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Timestamp { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="System.Diagnostics.TraceEventCache.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.TraceSource</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb4e-136">获取计时器机制中的当前刻度数。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-136">Gets the current number of ticks in the timer mechanism.</span></span></summary>
        <value><span data-ttu-id="6cb4e-137">基础计时器机制的最小时间单位计数值。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-137">The tick counter value of the underlying timer mechanism.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb4e-138">Get 访问器调用 <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> 方法来获取时间戳。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-138">The get accessor calls the <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=nameWithType> method to get the timestamp.</span></span> <span data-ttu-id="6cb4e-139">如果 <xref:System.Diagnostics.Stopwatch> 类使用高分辨率性能计数器，则 <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> 返回该计数器的当前值。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-139">If the <xref:System.Diagnostics.Stopwatch> class uses a high-resolution performance counter, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the current value of that counter.</span></span> <span data-ttu-id="6cb4e-140">如果 <xref:System.Diagnostics.Stopwatch> 类使用系统计时器，则 <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> 返回 <xref:System.DateTime.Now%2A?displayProperty=nameWithType>的 <xref:System.DateTime.Ticks%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="6cb4e-140">If the <xref:System.Diagnostics.Stopwatch> class uses the system timer, <xref:System.Diagnostics.Stopwatch.GetTimestamp%2A> returns the <xref:System.DateTime.Ticks%2A> property of <xref:System.DateTime.Now%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
