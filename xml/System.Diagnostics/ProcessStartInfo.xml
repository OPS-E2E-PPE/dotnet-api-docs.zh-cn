<Type Name="ProcessStartInfo" FullName="System.Diagnostics.ProcessStartInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80269b78b0c598a7ca4187f196a46e4d0c145fbe" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75137361" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProcessStartInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ProcessStartInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.ProcessStartInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProcessStartInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProcessStartInfo sealed" />
  <TypeSignature Language="F#" Value="type ProcessStartInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Process</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e981d-101">指定启动进程时使用的一组值。</span><span class="sxs-lookup"><span data-stu-id="e981d-101">Specifies a set of values that are used when you start a process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-102"><xref:System.Diagnostics.ProcessStartInfo> 与 <xref:System.Diagnostics.Process> 组件一起使用。</span><span class="sxs-lookup"><span data-stu-id="e981d-102"><xref:System.Diagnostics.ProcessStartInfo> is used together with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="e981d-103">使用 <xref:System.Diagnostics.Process> 类启动进程时，除了附加到正在运行的进程外，还可以访问处理信息。</span><span class="sxs-lookup"><span data-stu-id="e981d-103">When you start a process using the <xref:System.Diagnostics.Process> class, you have access to process information in addition to that available when attaching to a running process.</span></span>  
  
 <span data-ttu-id="e981d-104">您可以使用 <xref:System.Diagnostics.ProcessStartInfo> 类来更好地控制所启动的进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-104">You can use the <xref:System.Diagnostics.ProcessStartInfo> class for better control over the process you start.</span></span> <span data-ttu-id="e981d-105">至少必须设置 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性，无论是手动还是使用构造函数。</span><span class="sxs-lookup"><span data-stu-id="e981d-105">You must at least set the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, either manually or using the constructor.</span></span> <span data-ttu-id="e981d-106">文件名为任何应用程序或文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-106">The file name is any application or document.</span></span> <span data-ttu-id="e981d-107">此处的文档定义为具有与之关联的打开或默认操作的任何文件类型。</span><span class="sxs-lookup"><span data-stu-id="e981d-107">Here a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="e981d-108">可以使用 "**文件夹选项**" 对话框（可通过操作系统获得）查看计算机的已注册文件类型及其关联的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-108">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="e981d-109">"**高级**" 按钮会出现一个对话框，该对话框显示是否存在与特定注册文件类型相关联的打开操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-109">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="e981d-110">此外，还可以设置其他属性，这些属性定义要对该文件执行的操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-110">In addition, you can set other properties that define actions to take with that file.</span></span> <span data-ttu-id="e981d-111">您可以指定特定于 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 属性的 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性的类型的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-111">You can specify a value specific to the type of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span> <span data-ttu-id="e981d-112">例如，可以指定文档类型的 "打印"。</span><span class="sxs-lookup"><span data-stu-id="e981d-112">For example, you can specify "print" for a document type.</span></span> <span data-ttu-id="e981d-113">此外，您还可以指定 <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 属性值作为命令行参数传递到文件的打开过程。</span><span class="sxs-lookup"><span data-stu-id="e981d-113">Additionally, you can specify <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property values to be command-line arguments to pass to the file's open procedure.</span></span> <span data-ttu-id="e981d-114">例如，如果在 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性中指定文本编辑器应用程序，则可以使用 <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 属性来指定编辑器要打开的文本文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-114">For example, if you specify a text editor application in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property, you can use the <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property to specify a text file to be opened by the editor.</span></span>  
  
 <span data-ttu-id="e981d-115">标准输入通常是键盘，而标准输出和标准错误通常是监视屏幕。</span><span class="sxs-lookup"><span data-stu-id="e981d-115">Standard input is usually the keyboard, and standard output and standard error are usually the monitor screen.</span></span> <span data-ttu-id="e981d-116">但是，可以使用 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>、<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>和 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> 属性，使进程从文件或其他设备获取输入或将输出返回到文件或其他设备。</span><span class="sxs-lookup"><span data-stu-id="e981d-116">However, you can use the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, and <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties to cause the process to get input from or return output to a file or other device.</span></span> <span data-ttu-id="e981d-117">如果在 <xref:System.Diagnostics.Process> 组件上使用 <xref:System.Diagnostics.Process.StandardInput%2A>、<xref:System.Diagnostics.Process.StandardOutput%2A>或 <xref:System.Diagnostics.Process.StandardError%2A> 属性，则必须先在 "<xref:System.Diagnostics.ProcessStartInfo>" 属性上设置相应的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-117">If you use the <xref:System.Diagnostics.Process.StandardInput%2A>, <xref:System.Diagnostics.Process.StandardOutput%2A>, or <xref:System.Diagnostics.Process.StandardError%2A> properties on the <xref:System.Diagnostics.Process> component, you must first set the corresponding value on the <xref:System.Diagnostics.ProcessStartInfo> property.</span></span> <span data-ttu-id="e981d-118">否则，系统会在读取或写入流时引发异常。</span><span class="sxs-lookup"><span data-stu-id="e981d-118">Otherwise, the system throws an exception when you read or write to the stream.</span></span>  
  
 <span data-ttu-id="e981d-119">设置 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性以指定是否使用操作系统 shell 启动进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-119">Set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to specify whether to start the process by using the operating system shell.</span></span> <span data-ttu-id="e981d-120">如果 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 设置为 `false`，则新进程将继承调用进程的标准输入、标准输出和标准错误流，除非分别设置为 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> 的 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>、<xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>或 `true`属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-120">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is set to `false`, the new process inherits the standard input, standard output, and standard error streams of the calling process, unless the <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A>, <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A>, or <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> properties, respectively, are set to `true`.</span></span> 
  
 <span data-ttu-id="e981d-121">可以将任何 <xref:System.Diagnostics.ProcessStartInfo> 属性的值更改为进程启动的时间。</span><span class="sxs-lookup"><span data-stu-id="e981d-121">You can change the value of any <xref:System.Diagnostics.ProcessStartInfo> property up to the time that the process starts.</span></span> <span data-ttu-id="e981d-122">开始该过程后，更改这些值不起作用。</span><span class="sxs-lookup"><span data-stu-id="e981d-122">After you start the process, changing these values has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-123">此类包含类级别的链接要求，该请求应用于所有成员。</span><span class="sxs-lookup"><span data-stu-id="e981d-123">This class contains a link demand at the class level that applies to all members.</span></span> <span data-ttu-id="e981d-124">当直接调用方不具有完全信任权限时，将引发 <xref:System.Security.SecurityException>。</span><span class="sxs-lookup"><span data-stu-id="e981d-124">A <xref:System.Security.SecurityException> is thrown when the immediate caller does not have full-trust permission.</span></span> <span data-ttu-id="e981d-125">有关安全要求的详细信息，请参阅[链接需求](~/docs/framework/misc/link-demands.md)。</span><span class="sxs-lookup"><span data-stu-id="e981d-125">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e981d-126">下面的代码示例演示如何使用 <xref:System.Diagnostics.ProcessStartInfo> 类启动 Internet Explorer，并将目标 Url 提供为 <xref:System.Diagnostics.ProcessStartInfo> 参数。</span><span class="sxs-lookup"><span data-stu-id="e981d-126">The following code example demonstrates how to use the <xref:System.Diagnostics.ProcessStartInfo> class to start Internet Explorer, providing the destination URLs as <xref:System.Diagnostics.ProcessStartInfo> arguments.</span></span>  
  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="e981d-127">用于调用 <see cref="T:System.Diagnostics.ProcessStartInfo" />的成员。</span><span class="sxs-lookup"><span data-stu-id="e981d-127">for calling members of <see cref="T:System.Diagnostics.ProcessStartInfo" />.</span></span> <span data-ttu-id="e981d-128">需求值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />;<see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/4652tyx7(v=vs.100)">命名权限集</see>： <see langword="FullTrust" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-128">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/4652tyx7(v=vs.100)">Named Permission Sets</see>: <see langword="FullTrust" />.</span></span></permission>
    <altmember cref="T:System.Diagnostics.Process" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e981d-129">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e981d-129">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e981d-130">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，而不指定启动进程时使用的文件名。</span><span class="sxs-lookup"><span data-stu-id="e981d-130">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class without specifying a file name with which to start the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-131">在开始此过程之前，必须至少设置 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-131">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="e981d-132">文件名为任何应用程序或文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-132">The file name is any application or document.</span></span> <span data-ttu-id="e981d-133">在这种情况下，文档被定义为具有与之关联的打开或默认操作的任何文件类型。</span><span class="sxs-lookup"><span data-stu-id="e981d-133">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="e981d-134">可以使用 "**文件夹选项**" 对话框（可通过操作系统获得）查看计算机的已注册文件类型及其关联的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-134">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="e981d-135">"**高级**" 按钮会出现一个对话框，该对话框显示是否存在与特定注册文件类型相关联的打开操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-135">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="e981d-136">另外，还可以在启动进程之前设置其他属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-136">Optionally, you can also set other properties before you start the process.</span></span> <span data-ttu-id="e981d-137"><xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 属性提供了要执行的操作（如 "print"）以及 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性中指示的文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-137">The <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property supplies actions to take, such as "print", with the file indicated in the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="e981d-138">当系统打开文件时，<xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 属性提供了一种将命令行参数传递给该文件的方法。</span><span class="sxs-lookup"><span data-stu-id="e981d-138">The <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> property supplies a way to pass command-line arguments to the file when the system opens it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="e981d-139">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="e981d-139">for full trust for the immediate caller.</span></span> <span data-ttu-id="e981d-140">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="e981d-140">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo fileName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="e981d-141">启动进程时使用的应用程序或文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-141">An application or document with which to start a process.</span></span></param>
        <summary><span data-ttu-id="e981d-142">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，并指定启动进程时使用的诸如应用程序或文档的文件名。</span><span class="sxs-lookup"><span data-stu-id="e981d-142">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class and specifies a file name such as an application or document with which to start the process.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-143">文件名为任何应用程序或文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-143">The file name is any application or document.</span></span> <span data-ttu-id="e981d-144">在这种情况下，文档被定义为具有与之关联的打开或默认操作的任何文件类型。</span><span class="sxs-lookup"><span data-stu-id="e981d-144">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="e981d-145">可以使用 "**文件夹选项**" 对话框（可通过操作系统获得）查看计算机的已注册文件类型及其关联的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-145">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="e981d-146">"**高级**" 按钮会出现一个对话框，该对话框显示是否存在与特定注册文件类型相关联的打开操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-146">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="e981d-147">调用此构造函数后，可以更改 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性，直到进程开始。</span><span class="sxs-lookup"><span data-stu-id="e981d-147">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="e981d-148">开始该过程后，更改这些值不起作用。</span><span class="sxs-lookup"><span data-stu-id="e981d-148">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="e981d-149">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="e981d-149">for full trust for the immediate caller.</span></span> <span data-ttu-id="e981d-150">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="e981d-150">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProcessStartInfo (string fileName, string arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, arguments As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProcessStartInfo(System::String ^ fileName, System::String ^ arguments);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.ProcessStartInfo : string * string -&gt; System.Diagnostics.ProcessStartInfo" Usage="new System.Diagnostics.ProcessStartInfo (fileName, arguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="arguments" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="e981d-151">启动进程时使用的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-151">An application with which to start a process.</span></span></param>
        <param name="arguments"><span data-ttu-id="e981d-152">进程启动时要传递给应用程序的命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e981d-152">Command-line arguments to pass to the application when the process starts.</span></span></param>
        <summary><span data-ttu-id="e981d-153">初始化 <see cref="T:System.Diagnostics.ProcessStartInfo" /> 类的新实例，指定启动该进程时使用的应用程序文件名以及要传递给该应用程序的一组命令行自变量。</span><span class="sxs-lookup"><span data-stu-id="e981d-153">Initializes a new instance of the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class, specifies an application file name with which to start the process, and specifies a set of command-line arguments to pass to the application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-154">文件名为任何应用程序或文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-154">The file name is any application or document.</span></span> <span data-ttu-id="e981d-155">在这种情况下，文档被定义为具有与之关联的打开或默认操作的任何文件类型。</span><span class="sxs-lookup"><span data-stu-id="e981d-155">In this case, a document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="e981d-156">可以使用 "**文件夹选项**" 对话框（可通过操作系统获得）查看计算机的已注册文件类型及其关联的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-156">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="e981d-157">"**高级**" 按钮会出现一个对话框，该对话框显示是否存在与特定注册文件类型相关联的打开操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-157">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="e981d-158">调用此构造函数后，可以更改 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 或 <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> 属性，直到进程开始。</span><span class="sxs-lookup"><span data-stu-id="e981d-158">You can change the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> or <xref:System.Diagnostics.ProcessStartInfo.Arguments%2A> properties after you call this constructor, up to the time that the process starts.</span></span> <span data-ttu-id="e981d-159">开始该过程后，更改这些值不起作用。</span><span class="sxs-lookup"><span data-stu-id="e981d-159">After you start the process, changing these values has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="e981d-160">完全信任直接调用方。</span><span class="sxs-lookup"><span data-stu-id="e981d-160">for full trust for the immediate caller.</span></span> <span data-ttu-id="e981d-161">部分信任的程式碼無法使用此成員。</span><span class="sxs-lookup"><span data-stu-id="e981d-161">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; ArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As Collection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ ArgumentList { System::Collections::ObjectModel::Collection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="System.Diagnostics.ProcessStartInfo.ArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-162">获取启动应用程序时要使用的命令行参数集合。</span><span class="sxs-lookup"><span data-stu-id="e981d-162">Gets a collection of command-line arguments to use when starting the application.</span></span></summary>
        <value><span data-ttu-id="e981d-163">命令行参数的集合。</span><span class="sxs-lookup"><span data-stu-id="e981d-163">A collection of command-line arguments.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
<span data-ttu-id="e981d-164">`ArgumentList`，从 .NET Core 2.1 和 .NET Standard 2.1 开始支持，<xref:System.Diagnostics.ProcessStartInfo.Arguments> 属性彼此独立。</span><span class="sxs-lookup"><span data-stu-id="e981d-164">`ArgumentList`, which is supported starting with .NET Core 2.1 and .NET Standard 2.1, and the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property are independent of one another.</span></span> <span data-ttu-id="e981d-165">也就是说，分配给 `ArgumentList` 集合的字符串不用于填充 <xref:System.Diagnostics.ProcessStartInfo.Arguments> 属性，分配给 <xref:System.Diagnostics.ProcessStartInfo.Arguments> 属性的字符串不会解析为分配给 `ArgumentList` 集合的单个字符串。</span><span class="sxs-lookup"><span data-stu-id="e981d-165">That is, the strings assigned to the `ArgumentList` collection are not used to populate the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property, and the string assigned to the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property is not parsed into individual strings that are assigned to `ArgumentList` collection.</span></span> 

<span data-ttu-id="e981d-166">`ArgumentList` 比 <xref:System.Diagnostics.ProcessStartInfo.Arguments> 属性更易于使用。</span><span class="sxs-lookup"><span data-stu-id="e981d-166">`ArgumentList` is easier to use than the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property.</span></span> <span data-ttu-id="e981d-167">由于每个字符串都已分配给集合的成员，因此您可以使用单引号分隔的多个三转义字符串。</span><span class="sxs-lookup"><span data-stu-id="e981d-167">Because each string is assigned to a member of the collection, you can single- rather than triple-escape strings that are delimited by quotation marks.</span></span> <span data-ttu-id="e981d-168">例如，下面的示例将 `-full "Mary Smith"` 包含为 `ArgumentList` 集合的成员：</span><span class="sxs-lookup"><span data-stu-id="e981d-168">For example, the following example include `-full "Mary Smith"` as a member of the `ArgumentList` collection:</span></span>

```csharp
info.ArgumentList.Add("-full \"Mary Smith\"");
```

<span data-ttu-id="e981d-169">与 <xref:System.Diagnostics.ProcessStartInfo.Arguments> 属性对应的赋值为：</span><span class="sxs-lookup"><span data-stu-id="e981d-169">The corresponding assignment to the <xref:System.Diagnostics.ProcessStartInfo.Arguments> property is:</span></span>

```csharp
info.Arguments = "-full \"\"\"Mary Smith\"\"\""
```

<span data-ttu-id="e981d-170">如果使用此属性来设置命令行参数，则必须将 <xref:System.Diagnostics.ProcessStartInfo.Arguments> 设置为空字符串。</span><span class="sxs-lookup"><span data-stu-id="e981d-170">If you use this property to set command-line arguments, <xref:System.Diagnostics.ProcessStartInfo.Arguments> must be set to an empty string.</span></span>

## Examples

<span data-ttu-id="e981d-171">此示例将两个参数添加到进程启动信息。</span><span class="sxs-lookup"><span data-stu-id="e981d-171">This example adds two arguments to the process start info.</span></span>

```csharp
var info = new System.Diagnostics.ProcessStartInfo("names.exe");
info.ArgumentList.Add("-first Mary");
info.ArgumentList.Add("-last Smith");
```
```vb
Dim info As New System.Diagnostics.ProcessStartInfo("names.exe")
info.ArgumentList.Add("-first Mary")
info.ArgumentList.Add("-last Smith")
```
]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Command line arguments that will be passed to the application specified by the FileName property.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessArguments")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-172">获取或设置启动应用程序时要使用的一组命令行参数。</span><span class="sxs-lookup"><span data-stu-id="e981d-172">Gets or sets the set of command-line arguments to use when starting the application.</span></span></summary>
        <value><span data-ttu-id="e981d-173">单个字符串包含要传递给在 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性中指定的目标应用程序的参数。</span><span class="sxs-lookup"><span data-stu-id="e981d-173">A single string containing the arguments to pass to the target application specified in the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span> <span data-ttu-id="e981d-174">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="e981d-174">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

<span data-ttu-id="e981d-175">分配给 `Arguments` 属性的字符串的长度必须小于32699。</span><span class="sxs-lookup"><span data-stu-id="e981d-175">The length of the string assigned to the `Arguments` property must be less than 32,699.</span></span>
  
<span data-ttu-id="e981d-176">自变量由目标应用程序进行分析和解释，因此必须与该应用程序的预期保持一致。</span><span class="sxs-lookup"><span data-stu-id="e981d-176">Arguments are parsed and interpreted by the target application, so must align with the expectations of that application.</span></span> <span data-ttu-id="e981d-177">对于下面的示例中所示的 .NET 应用程序，空格被解释为多个参数之间的分隔符。</span><span class="sxs-lookup"><span data-stu-id="e981d-177">For .NET applications as demonstrated in the Examples below, spaces are interpreted as a separator between multiple arguments.</span></span> <span data-ttu-id="e981d-178">包含空格的单个参数必须用引号引起来，但这些引号不会传递到目标应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-178">A single argument that includes spaces must be surrounded by quotation marks, but those quotation marks are not carried through to the target application.</span></span> <span data-ttu-id="e981d-179">若要在最终分析的参数中包含引号，请将每个标记三次转义。</span><span class="sxs-lookup"><span data-stu-id="e981d-179">To include quotation marks in the final parsed argument, triple-escape each mark.</span></span>
<span data-ttu-id="e981d-180">如果使用此属性来设置命令行参数，则 <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> 不得包含任何元素。</span><span class="sxs-lookup"><span data-stu-id="e981d-180">If you use this property to set command-line arguments, <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> must not contain any elements.</span></span>
  
<span data-ttu-id="e981d-181">从 .NET Core 2.1 和 .NET Standard 2.1 开始支持 `Arguments` 和 <xref:System.Diagnostics.ProcessStartInfo.ArgumentList>彼此之间相互独立。</span><span class="sxs-lookup"><span data-stu-id="e981d-181">`Arguments` and <xref:System.Diagnostics.ProcessStartInfo.ArgumentList>, which is supported starting with .NET Core 2.1 and .NET Standard 2.1, are independent of one another.</span></span> <span data-ttu-id="e981d-182">也就是说，分配给 `Arguments` 属性的字符串不填充 <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> 集合，<xref:System.Diagnostics.ProcessStartInfo.ArgumentList> 集合的成员未分配给 `Arguments` 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-182">That is, the string assigned to the `Arguments` property does not populate the <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> collection, and the members of the <xref:System.Diagnostics.ProcessStartInfo.ArgumentList> collection are not assigned to the `Arguments` property.</span></span>

## Examples  
 <span data-ttu-id="e981d-183">第一个示例创建一个小型应用程序（argsecho），该应用程序将其参数回显到控制台。</span><span class="sxs-lookup"><span data-stu-id="e981d-183">The first example creates a small application (argsecho.exe) that echos its arguments to the console.</span></span> <span data-ttu-id="e981d-184">第二个示例创建一个应用程序，该应用程序调用 argsecho 来演示 `Arguments` 属性的不同变体。</span><span class="sxs-lookup"><span data-stu-id="e981d-184">The second example creates an application that invokes argsecho.exe to demonstrate different variations for the `Arguments` property.</span></span>  
  
 [!code-cpp[Process.Start_static#3](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#3)]
 [!code-csharp[Process.Start_static#3](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#3)]
 [!code-vb[Process.Start_static#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#3)]  
  
 [!code-cpp[Process.Start_static#2](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#2)]
 [!code-csharp[Process.Start_static#2](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#2)]
 [!code-vb[Process.Start_static#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNoWindow">
      <MemberSignature Language="C#" Value="public bool CreateNoWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CreateNoWindow" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property CreateNoWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CreateNoWindow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CreateNoWindow : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.CreateNoWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to start the process without creating a new window to contain it.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessCreateNoWindow")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-185">获取或设置指示是否在新窗口中启动该进程的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-185">Gets or sets a value indicating whether to start the process in a new window.</span></span></summary>
        <value><span data-ttu-id="e981d-186">如果应启动该进程而不创建包含它的新窗口，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-186"><see langword="true" /> if the process should be started without creating a new window to contain it; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e981d-187">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-187">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-188">如果 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性为 `true`，或者 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 和 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 属性不为 `null`，则将忽略 <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> 属性值并创建一个新窗口。</span><span class="sxs-lookup"><span data-stu-id="e981d-188">If the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property is `true` or the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties are not `null`, the <xref:System.Diagnostics.ProcessStartInfo.CreateNoWindow%2A> property value is ignored and a new window is created.</span></span>  

 <span data-ttu-id="e981d-189">.NET Core 不支持直接在类似于 Unix 的平台（包括 macOS 和 Linux）上创建 windows。</span><span class="sxs-lookup"><span data-stu-id="e981d-189">.NET Core does not support creating windows directly on Unix-like platforms, including macOS and Linux.</span></span> <span data-ttu-id="e981d-190">此属性在此类平台上被忽略。</span><span class="sxs-lookup"><span data-stu-id="e981d-190">This property is ignored on such platforms.</span></span>
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-191">获取或设置确定要在启动进程时使用的域的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-191">Gets or sets a value that identifies the domain to use when starting the process.</span></span> <span data-ttu-id="e981d-192">如果此值为 <see langword="null" />，则必须以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-192">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span></span></summary>
        <value><span data-ttu-id="e981d-193">要在启动进程时使用的 Active Directory 域。</span><span class="sxs-lookup"><span data-stu-id="e981d-193">The Active Directory domain to use when starting the process.</span></span> <span data-ttu-id="e981d-194">如果此值为 <see langword="null" />，则必须以 UPN 格式指定 <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-194">If this value is <see langword="null" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.UserName" /> property must be specified in UPN format.</span></span></value>
        <remarks><span data-ttu-id="e981d-195">此属性主要与使用 Active Directory 的企业环境中的用户相关。</span><span class="sxs-lookup"><span data-stu-id="e981d-195">This property is primarily of interest to users within enterprise environments that use Active Directory.</span></span></remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Environment" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Environment { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Environment : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Diagnostics.ProcessStartInfo.Environment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-196">获取应用于此进程及其子进程的环境变量。</span><span class="sxs-lookup"><span data-stu-id="e981d-196">Gets the environment variables that apply to this process and its child processes.</span></span></summary>
        <value><span data-ttu-id="e981d-197">一个泛型字典，包含应用于此进程及其子进程的环境变量。</span><span class="sxs-lookup"><span data-stu-id="e981d-197">A generic dictionary containing the environment variables that apply to this process and its child processes.</span></span> <span data-ttu-id="e981d-198">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-198">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-199">环境变量包含文件的搜索路径、临时文件的目录、应用程序特定的选项和其他类似信息。</span><span class="sxs-lookup"><span data-stu-id="e981d-199">The environment variables contain search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span> <span data-ttu-id="e981d-200">尽管不能直接设置 <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> 属性，但可以修改属性返回的泛型字典。</span><span class="sxs-lookup"><span data-stu-id="e981d-200">Although you cannot directly set the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property, you can modify the generic dictionary returned by the property.</span></span> <span data-ttu-id="e981d-201">例如，以下代码将添加 TempPath 环境变量： `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`。</span><span class="sxs-lookup"><span data-stu-id="e981d-201">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.Environment.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="e981d-202">必须将 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性设置为 `false`，才能在更改 <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> 属性后开始处理。</span><span class="sxs-lookup"><span data-stu-id="e981d-202">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property.</span></span> <span data-ttu-id="e981d-203">如果 `true`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>，则在调用 <xref:System.Diagnostics.Process.Start%2A> 方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e981d-203">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 <span data-ttu-id="e981d-204">在 .NET Framework 应用程序上，使用 <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> 属性与使用 <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> 属性相同。</span><span class="sxs-lookup"><span data-stu-id="e981d-204">On .NET Framework applications, using the <xref:System.Diagnostics.ProcessStartInfo.Environment%2A> property is the same as using the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="M:System.Diagnostics.Process.Start" />
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringDictionary EnvironmentVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvironmentVariables As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringDictionary ^ EnvironmentVariables { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : System.Collections.Specialized.StringDictionary" Usage="System.Diagnostics.ProcessStartInfo.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Set of environment variables that apply to this process and child processes.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessEnvironmentVariables")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StringDictionaryEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-205">获取文件的搜索路径、临时文件的目录、应用程序特定的选项和其他类似信息。</span><span class="sxs-lookup"><span data-stu-id="e981d-205">Gets search paths for files, directories for temporary files, application-specific options, and other similar information.</span></span></summary>
        <value><span data-ttu-id="e981d-206">提供应用于此进程和子进程的环境变量的字符串字典。</span><span class="sxs-lookup"><span data-stu-id="e981d-206">A string dictionary that provides environment variables that apply to this process and child processes.</span></span> <span data-ttu-id="e981d-207">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-207">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-208">尽管不能设置 <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> 属性，但可以修改属性返回的 <xref:System.Collections.Specialized.StringDictionary>。</span><span class="sxs-lookup"><span data-stu-id="e981d-208">Although you cannot set the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property, you can modify the <xref:System.Collections.Specialized.StringDictionary> returned by the property.</span></span> <span data-ttu-id="e981d-209">例如，以下代码将添加 TempPath 环境变量： `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`。</span><span class="sxs-lookup"><span data-stu-id="e981d-209">For example, the following code adds a TempPath environment variable: `myProcess.StartInfo.EnvironmentVariables.Add("TempPath", "C:\\Temp")`.</span></span>  <span data-ttu-id="e981d-210">必须将 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性设置为 `false`，才能在更改 <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> 属性后开始处理。</span><span class="sxs-lookup"><span data-stu-id="e981d-210">You must set the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property to `false` to start the process after changing the <xref:System.Diagnostics.ProcessStartInfo.EnvironmentVariables%2A> property.</span></span> <span data-ttu-id="e981d-211">如果 `true`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>，则在调用 <xref:System.Diagnostics.Process.Start%2A> 方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e981d-211">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, an <xref:System.InvalidOperationException> is thrown when the <xref:System.Diagnostics.Process.Start%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialog">
      <MemberSignature Language="C#" Value="public bool ErrorDialog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ErrorDialog" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ErrorDialog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialog : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to show an error dialog to the user if there is an error.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessErrorDialog")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-212">获取或设置指示不能启动进程时是否向用户显示错误对话框的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-212">Gets or sets a value indicating whether an error dialog box is displayed to the user if the process cannot be started.</span></span></summary>
        <value><span data-ttu-id="e981d-213">如果在不能启动进程时在屏幕上显示错误对话框，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-213"><see langword="true" /> if an error dialog box should be displayed on the screen if the process cannot be started; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e981d-214">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-214">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="e981d-215">如果要将 <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> 设置为 `true`，则必须 `true` <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>。</span><span class="sxs-lookup"><span data-stu-id="e981d-215"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> must be `true` if you want to set <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDialogParentHandle">
      <MemberSignature Language="C#" Value="public IntPtr ErrorDialogParentHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ErrorDialogParentHandle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorDialogParentHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ErrorDialogParentHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorDialogParentHandle : nativeint with get, set" Usage="System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-216">获取或设置在为不能启动的进程显示错误对话框时要使用的窗口句柄。</span><span class="sxs-lookup"><span data-stu-id="e981d-216">Gets or sets the window handle to use when an error dialog box is shown for a process that cannot be started.</span></span></summary>
        <value><span data-ttu-id="e981d-217">一个指针，标识因进程启动失败而产生的错误对话框的句柄。</span><span class="sxs-lookup"><span data-stu-id="e981d-217">A pointer to the handle of the error dialog box that results from a process start failure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-218">如果 `true`<xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A>，则 <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> 属性指定显示的对话框的父窗口。</span><span class="sxs-lookup"><span data-stu-id="e981d-218">If <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialogParentHandle%2A> property specifies the parent window for the dialog box that is shown.</span></span> <span data-ttu-id="e981d-219">指定一个父项有助于在应用程序前面保留对话框。</span><span class="sxs-lookup"><span data-stu-id="e981d-219">It is useful to specify a parent to keep the dialog box in front of the application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The name of the application, document or URL to start.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessFileName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.StartFileNameEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-220">获取或设置要启动的应用程序或文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-220">Gets or sets the application or document to start.</span></span></summary>
        <value><span data-ttu-id="e981d-221">要启动的应用程序的名称或某文件类型的文档的名称，该文件类型与应用程序关联并且拥有可用的默认打开操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-221">The name of the application to start, or the name of a document of a file type that is associated with an application and that has a default open action available to it.</span></span> <span data-ttu-id="e981d-222">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="e981d-222">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-223">在开始此过程之前，必须至少设置 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-223">You must set at least the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property before you start the process.</span></span> <span data-ttu-id="e981d-224">文件名为任何应用程序或文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-224">The file name is any application or document.</span></span> <span data-ttu-id="e981d-225">文档定义为具有与之关联的打开或默认操作的任何文件类型。</span><span class="sxs-lookup"><span data-stu-id="e981d-225">A document is defined to be any file type that has an open or default action associated with it.</span></span> <span data-ttu-id="e981d-226">可以使用 "**文件夹选项**" 对话框（可通过操作系统获得）查看计算机的已注册文件类型及其关联的应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-226">You can view registered file types and their associated applications for your computer by using the **Folder Options** dialog box, which is available through the operating system.</span></span> <span data-ttu-id="e981d-227">"**高级**" 按钮会出现一个对话框，该对话框显示是否存在与特定注册文件类型相关联的打开操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-227">The **Advanced** button leads to a dialog box that shows whether there is an open action associated with a specific registered file type.</span></span>  
  
 <span data-ttu-id="e981d-228">可供您使用的文件类型集取决于 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-228">The set of file types available to you depends in part on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property.</span></span> <span data-ttu-id="e981d-229">如果 `true`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A>，则可以启动任何文档，并对该文件执行操作（如打印）以及 <xref:System.Diagnostics.Process> 组件。</span><span class="sxs-lookup"><span data-stu-id="e981d-229">If <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, you can start any document and perform operations on the file, such as printing, with the <xref:System.Diagnostics.Process> component.</span></span> <span data-ttu-id="e981d-230">`false`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 时，只能启动具有 <xref:System.Diagnostics.Process> 组件的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-230">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, you can start only executables with the <xref:System.Diagnostics.Process> component.</span></span>  
  
 <span data-ttu-id="e981d-231">可以通过将 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性设置为最初安装应用程序的位置（例如，Web 地址）来启动 ClickOnce 应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-231">You can start a ClickOnce application by setting the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property to the location (for example, a Web address) from which you originally installed the application.</span></span> <span data-ttu-id="e981d-232">不要通过在硬盘上指定它的安装位置来启动 ClickOnce 应用程序。</span><span class="sxs-lookup"><span data-stu-id="e981d-232">Do not start a ClickOnce application by specifying its installed location on your hard disk.</span></span>  
  
   
  
## Examples  
 [!code-cpp[Process.Start_instance#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_instance/CPP/processstart.cpp#1)]
 [!code-csharp[Process.Start_instance#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_instance/CS/processstart.cs#1)]
 [!code-vb[Process.Start_instance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_instance/VB/processstart.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadUserProfile">
      <MemberSignature Language="C#" Value="public bool LoadUserProfile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadUserProfile" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadUserProfile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadUserProfile { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadUserProfile : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.LoadUserProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-233">获取或设置一个值，该值指示是否从注册表加载 Windows 用户配置文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-233">Gets or sets a value that indicates whether the Windows user profile is to be loaded from the registry.</span></span></summary>
        <value><span data-ttu-id="e981d-234">如果应加载 Windows 用户概况，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-234"><see langword="true" /> if the Windows user profile should be loaded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e981d-235">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-235">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-236">如果正在使用用户名、密码和域启动进程，则引用此属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-236">This property is referenced if the process is being started by using the user name, password, and domain.</span></span>  
  
 <span data-ttu-id="e981d-237">如果 `true`值，则会加载 `HKEY_USERS` 注册表项中的用户配置文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-237">If the value is `true`, the user's profile in the `HKEY_USERS` registry key is loaded.</span></span> <span data-ttu-id="e981d-238">加载配置文件可能非常耗时。</span><span class="sxs-lookup"><span data-stu-id="e981d-238">Loading the profile can be time-consuming.</span></span> <span data-ttu-id="e981d-239">因此，仅当必须访问 `HKEY_CURRENT_USER` 注册表项中的信息时，才最好使用此值。</span><span class="sxs-lookup"><span data-stu-id="e981d-239">Therefore, it is best to use this value only if you must access the information in the `HKEY_CURRENT_USER` registry key.</span></span>  
  
 <span data-ttu-id="e981d-240">在 Windows Server 2003 和 Windows 2000 中，在新进程终止后，该配置文件将被卸载，无论进程是否创建了子进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-240">In Windows Server 2003 and Windows 2000, the profile is unloaded after the new process has been terminated, regardless of whether the process has created child processes.</span></span>  
  
 <span data-ttu-id="e981d-241">在 Windows XP 中，配置文件在新进程已终止后被卸载。</span><span class="sxs-lookup"><span data-stu-id="e981d-241">In Windows XP, the profile is unloaded after the new process and all child processes it has created have been terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Password">
      <MemberSignature Language="C#" Value="public System.Security.SecureString Password { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString Password" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Password" />
      <MemberSignature Language="VB.NET" Value="Public Property Password As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ Password { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Password : System.Security.SecureString with get, set" Usage="System.Diagnostics.ProcessStartInfo.Password" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-242">获取或设置一个安全字符串，其中包含要在启动进程时使用的用户密码。</span><span class="sxs-lookup"><span data-stu-id="e981d-242">Gets or sets a secure string that contains the user password to use when starting the process.</span></span></summary>
        <value><span data-ttu-id="e981d-243">启动进程时使用的用户密码。</span><span class="sxs-lookup"><span data-stu-id="e981d-243">The user password to use when starting the process.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e981d-244">如果提供了 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 和 <xref:System.Diagnostics.ProcessStartInfo.Password%2A>，则必须设置 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-244">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="e981d-245">如果未设置该属性，则默认工作目录为%Systemroot%\system32</span><span class="sxs-lookup"><span data-stu-id="e981d-245">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-246">若要启动具有用户凭据的进程，建议在 <xref:System.Diagnostics.ProcessStartInfo> 对象中设置 <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>、<xref:System.Diagnostics.ProcessStartInfo.UserName%2A>和 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-246">Setting the <xref:System.Diagnostics.ProcessStartInfo.Domain%2A>, <xref:System.Diagnostics.ProcessStartInfo.UserName%2A>, and the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> properties in a <xref:System.Diagnostics.ProcessStartInfo> object is the recommended practice for starting a process with user credentials.</span></span>  
  
 <span data-ttu-id="e981d-247"><xref:System.Security.SecureString> 对象类似于 <xref:System.String> 对象，因为它具有一个文本值。</span><span class="sxs-lookup"><span data-stu-id="e981d-247">A <xref:System.Security.SecureString> object is like a <xref:System.String> object in that it has a text value.</span></span> <span data-ttu-id="e981d-248">但是，<xref:System.Security.SecureString> 对象的值将自动加密，因此可以对其进行修改，直到应用程序将其标记为只读，并可通过应用程序或 .NET Framework 垃圾回收器将其从计算机内存中删除。</span><span class="sxs-lookup"><span data-stu-id="e981d-248">However, the value of a <xref:System.Security.SecureString> object is automatically encrypted, it can be modified until your application marks it as read-only, and it can be deleted from computer memory by either your application or the .NET Framework garbage collector.</span></span>  
  
 <span data-ttu-id="e981d-249">有关安全字符串和如何获取用于设置此属性的密码的示例的详细信息，请参见 <xref:System.Security.SecureString> 类。</span><span class="sxs-lookup"><span data-stu-id="e981d-249">For more information about secure strings and an example of how to obtain a password to set this property, see the <xref:System.Security.SecureString> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-250">如果为 <xref:System.Diagnostics.ProcessStartInfo.Password%2A> 属性提供一个值，<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性必须 `false`，否则在调用 <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> 方法时将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="e981d-250">If you provide a value for the <xref:System.Diagnostics.ProcessStartInfo.Password%2A> property, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordInClearText">
      <MemberSignature Language="C#" Value="public string PasswordInClearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordInClearText" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberSignature Language="VB.NET" Value="Public Property PasswordInClearText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PasswordInClearText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PasswordInClearText : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.PasswordInClearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-251">获取或设置明文形式的用户密码以便在开始进程时使用。</span><span class="sxs-lookup"><span data-stu-id="e981d-251">Gets or sets the user password in clear text to use when starting the process.</span></span></summary>
        <value><span data-ttu-id="e981d-252">明文形式的用户密码。</span><span class="sxs-lookup"><span data-stu-id="e981d-252">The user password in clear text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardError">
      <MemberSignature Language="C#" Value="public bool RedirectStandardError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardError" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardError : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process's error output is written to the Process instance's StandardError member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardError")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-253">获取或设置指示是否将应用程序的错误输出写入 <see cref="P:System.Diagnostics.Process.StandardError" /> 流中的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-253">Gets or sets a value that indicates whether the error output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardError" /> stream.</span></span></summary>
        <value><span data-ttu-id="e981d-254">如果错误输出应写入 <see langword="true" />，则为 <see cref="P:System.Diagnostics.Process.StandardError" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-254"><see langword="true" /> if error output should be written to <see cref="P:System.Diagnostics.Process.StandardError" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e981d-255">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-255">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-256">当 <xref:System.Diagnostics.Process> 向其标准错误流写入文本时，该文本通常显示在控制台上。</span><span class="sxs-lookup"><span data-stu-id="e981d-256">When a <xref:System.Diagnostics.Process> writes text to its standard error stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="e981d-257">通过重定向 <xref:System.Diagnostics.Process.StandardError%2A> 流，你可以操作或取消进程的错误输出。</span><span class="sxs-lookup"><span data-stu-id="e981d-257">By redirecting the <xref:System.Diagnostics.Process.StandardError%2A> stream, you can manipulate or suppress the error output of a process.</span></span> <span data-ttu-id="e981d-258">例如，你可以筛选文本，以不同的方式对其进行格式设置，或者将输出写入控制台和指定的日志文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-258">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-259">如果要将 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> 设置为 `true`，则必须将 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="e981d-259">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardError%2A> to `true`.</span></span> <span data-ttu-id="e981d-260">否则，从 <xref:System.Diagnostics.Process.StandardError%2A> 流中读取会引发异常。</span><span class="sxs-lookup"><span data-stu-id="e981d-260">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="e981d-261">重定向的 <xref:System.Diagnostics.Process.StandardError%2A> 流可以同步或异步读取。</span><span class="sxs-lookup"><span data-stu-id="e981d-261">The redirected <xref:System.Diagnostics.Process.StandardError%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="e981d-262"><xref:System.IO.StreamReader.Read%2A>、<xref:System.IO.StreamReader.ReadLine%2A> 和 <xref:System.IO.StreamReader.ReadToEnd%2A> 等方法执行进程的错误输出流上的同步读取操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-262">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A> and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the error output stream of the process.</span></span> <span data-ttu-id="e981d-263">在关联的 <xref:System.Diagnostics.Process> 写入其 <xref:System.Diagnostics.Process.StandardError%2A> 流或关闭流之前，这些同步读取操作不会完成。</span><span class="sxs-lookup"><span data-stu-id="e981d-263">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardError%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="e981d-264">与此相反，<xref:System.Diagnostics.Process.BeginErrorReadLine%2A> 会对 <xref:System.Diagnostics.Process.StandardError%2A> 流启动异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-264">In contrast, <xref:System.Diagnostics.Process.BeginErrorReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="e981d-265">此方法将为流输出启用指定的事件处理程序，并立即返回到调用方，当流输出定向到事件处理程序时，该处理程序可以执行其他操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-265">This method enables a designated event handler for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-266">处理异步输出的应用程序应调用 <xref:System.Diagnostics.Process.WaitForExit%2A?displayProperty=nameWithType> 方法，以确保刷新了输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e981d-266">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A?displayProperty=nameWithType> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="e981d-267">同步读取操作会在调用方之间引入依赖关系，从 <xref:System.Diagnostics.Process.StandardError%2A> 流读取，子进程写入该流。</span><span class="sxs-lookup"><span data-stu-id="e981d-267">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardError%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="e981d-268">这些依赖项可能会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-268">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="e981d-269">当调用方从子进程的重定向流中进行读取时，它依赖于子进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-269">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="e981d-270">调用方等待读取操作，直到子级写入流或关闭流为止。</span><span class="sxs-lookup"><span data-stu-id="e981d-270">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="e981d-271">当子进程写入足够的数据以填充其重定向流时，它依赖于父进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-271">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="e981d-272">子进程等待下一次写入操作，直到父进程从整个流中读取或关闭流为止。</span><span class="sxs-lookup"><span data-stu-id="e981d-272">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="e981d-273">当调用方和子进程等待彼此完成操作时，就会发生死锁条件，这两种情况都不会继续。</span><span class="sxs-lookup"><span data-stu-id="e981d-273">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="e981d-274">您可以通过计算调用方和子进程之间的依赖关系来避免死锁。</span><span class="sxs-lookup"><span data-stu-id="e981d-274">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  

<span data-ttu-id="e981d-275">本节中的最后两个示例使用 <xref:System.Diagnostics.Process.Start%2A> 方法来启动一个名为*Write500Lines*的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-275">The last two examples in this section use the <xref:System.Diagnostics.Process.Start%2A> method to launch an executable named *Write500Lines.exe*.</span></span> <span data-ttu-id="e981d-276">下面的示例包含它的源代码。</span><span class="sxs-lookup"><span data-stu-id="e981d-276">The following example contains its source code.</span></span>

[!code-csharp[Executable launched by Process.Start](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/write500lines.cs)]
[!code-vb[Executable launched by Process.Start](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/write500lines.vb)]

<span data-ttu-id="e981d-277">下面的示例演示如何从重定向的错误流中读取并等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="e981d-277">The following example shows how to read from a redirected error stream and wait for the child process to exit.</span></span> <span data-ttu-id="e981d-278">它通过在 `p.WaitForExit`之前调用 `p.StandardError.ReadToEnd` 来避免死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-278">It avoids a deadlock condition by calling `p.StandardError.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="e981d-279">如果父进程在 `p.StandardError.ReadToEnd` 之前调用了 `p.WaitForExit`，并且子进程写入足够多的文本以填充重定向的流，则会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-279">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardError.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="e981d-280">父进程会无限期地等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="e981d-280">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="e981d-281">子进程会无限期地等待父进程从完整的 <xref:System.Diagnostics.Process.StandardError%2A> 流中读取。</span><span class="sxs-lookup"><span data-stu-id="e981d-281">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>   

[!code-csharp[Reading from the error stream](~/samples/snippets/csharp/api/system.diagnostics/process/standarderror/stderror-sync.cs)]
[!code-vb[Reading from the error stream](~/samples/snippets/visualbasic/api/system.diagnostics/process/standarderror/stderror-sync.vb)]  
  
<span data-ttu-id="e981d-282">从标准输出和标准错误流中读取所有文本时，会出现类似的问题。</span><span class="sxs-lookup"><span data-stu-id="e981d-282">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="e981d-283">例如， C#下面的代码对这两个流执行读取操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-283">The following C# code, for example, performs a read operation on both streams.</span></span> <span data-ttu-id="e981d-284">它通过对 <xref:System.Diagnostics.Process.StandardError%2A> 流执行异步读取操作来避免死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-284">It avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="e981d-285">如果父进程调用 `p.StandardOutput.ReadToEnd` 后跟 `p.StandardError.ReadToEnd` 并且子进程写入足够多的文本以填充其错误流，则会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-285">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="e981d-286">父进程会无限期地等待子进程关闭其 <xref:System.Diagnostics.Process.StandardOutput%2A> 流。</span><span class="sxs-lookup"><span data-stu-id="e981d-286">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="e981d-287">子进程会无限期地等待父进程从完整的 <xref:System.Diagnostics.Process.StandardError%2A> 流中读取。</span><span class="sxs-lookup"><span data-stu-id="e981d-287">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>  
[!code-csharp[Reading from both streams](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/stdoutput-async.cs)]
[!code-vb[Reading from both streams](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/stdoutput-async.vb)]  

<span data-ttu-id="e981d-288">您可以使用异步读取操作来避免这些依赖项及其死锁。</span><span class="sxs-lookup"><span data-stu-id="e981d-288">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="e981d-289">或者，您可以通过创建两个线程并在单独的线程上读取每个流的输出来避免出现死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-289">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e981d-290">下面的示例将 `net use` 命令与用户提供的参数一起使用，以映射网络资源。</span><span class="sxs-lookup"><span data-stu-id="e981d-290">The following example uses the `net use` command together with a user-supplied argument to map a network resource.</span></span> <span data-ttu-id="e981d-291">然后，它读取 net 命令的标准错误流并将其写入控制台。</span><span class="sxs-lookup"><span data-stu-id="e981d-291">It then reads the standard error stream of the net command and writes it to console.</span></span>  
  
 [!code-cpp[Process_StandardError#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardError/CPP/source.cpp#1)]
 [!code-csharp[Process_StandardError#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardError/CS/source.cs#1)]
 [!code-vb[Process_StandardError#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardError/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardError" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardInput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardInput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardInput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process command input is read from the Process instance's StandardInput member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardInput")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-292">获取或设置指示应用程序的输入是否从 <see cref="P:System.Diagnostics.Process.StandardInput" /> 流中读取的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-292">Gets or sets a value indicating whether the input for an application is read from the <see cref="P:System.Diagnostics.Process.StandardInput" /> stream.</span></span></summary>
        <value><span data-ttu-id="e981d-293">如果应从 <see langword="true" /> 读取输入，则为 <see cref="P:System.Diagnostics.Process.StandardInput" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-293"><see langword="true" /> if input should be read from <see cref="P:System.Diagnostics.Process.StandardInput" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e981d-294">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-294">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-295"><xref:System.Diagnostics.Process> 可以从其标准输入流（通常是键盘）读取输入文本。</span><span class="sxs-lookup"><span data-stu-id="e981d-295">A <xref:System.Diagnostics.Process> can read input text from its standard input stream, typically the keyboard.</span></span> <span data-ttu-id="e981d-296">通过重定向 <xref:System.Diagnostics.Process.StandardInput%2A> 流，你可以通过编程方式指定进程的输入。</span><span class="sxs-lookup"><span data-stu-id="e981d-296">By redirecting the <xref:System.Diagnostics.Process.StandardInput%2A> stream, you can programmatically specify the input of a process.</span></span> <span data-ttu-id="e981d-297">例如，可以从指定文件的内容或其他应用程序的输出中提供文本，而不使用键盘输入。</span><span class="sxs-lookup"><span data-stu-id="e981d-297">For example, instead of using keyboard input, you can provide text from the contents of a designated file or output from another application.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-298">如果要将 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> 设置为 `true`，则必须将 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="e981d-298">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardInput%2A> to `true`.</span></span> <span data-ttu-id="e981d-299">否则，写入 <xref:System.Diagnostics.Process.StandardInput%2A> 流时将引发异常。</span><span class="sxs-lookup"><span data-stu-id="e981d-299">Otherwise, writing to the <xref:System.Diagnostics.Process.StandardInput%2A> stream throws an exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e981d-300">下面的示例演示如何重定向进程的 <xref:System.Diagnostics.Process.StandardInput%2A> 流。</span><span class="sxs-lookup"><span data-stu-id="e981d-300">The following example illustrates how to redirect the <xref:System.Diagnostics.Process.StandardInput%2A> stream of a process.</span></span> <span data-ttu-id="e981d-301">`sort` 命令是一种控制台应用程序，用于读取和排序文本输入。</span><span class="sxs-lookup"><span data-stu-id="e981d-301">The `sort` command is a console application that reads and sorts text input.</span></span>  
  
 <span data-ttu-id="e981d-302">该示例通过重定向的输入启动 `sort` 命令。</span><span class="sxs-lookup"><span data-stu-id="e981d-302">The example starts the `sort` command with redirected input.</span></span> <span data-ttu-id="e981d-303">然后，它会提示用户输入文本，并通过重定向的 <xref:System.Diagnostics.Process.StandardInput%2A> 流将文本传递到 `sort` 进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-303">It then prompts the user for text, and passes the text to the `sort` process through the redirected <xref:System.Diagnostics.Process.StandardInput%2A> stream.</span></span> <span data-ttu-id="e981d-304">`sort` 结果在控制台上显示给用户。</span><span class="sxs-lookup"><span data-stu-id="e981d-304">The `sort` results are displayed to the user on the console.</span></span>  
  
 [!code-cpp[Process_StandardInput#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process_StandardInput/CPP/process_standardinput.cpp#1)]
 [!code-csharp[Process_StandardInput#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process_StandardInput/CS/process_standardinput.cs#1)]
 [!code-vb[Process_StandardInput#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process_StandardInput/VB/process_standardinput.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardInput" />
      </Docs>
    </Member>
    <Member MemberName="RedirectStandardOutput">
      <MemberSignature Language="C#" Value="public bool RedirectStandardOutput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RedirectStandardOutput" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberSignature Language="VB.NET" Value="Public Property RedirectStandardOutput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RedirectStandardOutput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RedirectStandardOutput : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether the process output is written to the Process instance's StandardOutput member.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessRedirectStandardOutput")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-305">获取或设置指示是否将应用程序的文本输出写入 <see cref="P:System.Diagnostics.Process.StandardOutput" /> 流中的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-305">Gets or sets a value that indicates whether the textual output of an application is written to the <see cref="P:System.Diagnostics.Process.StandardOutput" /> stream.</span></span></summary>
        <value><span data-ttu-id="e981d-306">如果输出应写入 <see langword="true" />，则为 <see cref="P:System.Diagnostics.Process.StandardOutput" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-306"><see langword="true" /> if output should be written to <see cref="P:System.Diagnostics.Process.StandardOutput" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e981d-307">默认值为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-307">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-308">当 <xref:System.Diagnostics.Process> 将文本写入其标准流时，该文本通常显示在控制台上。</span><span class="sxs-lookup"><span data-stu-id="e981d-308">When a <xref:System.Diagnostics.Process> writes text to its standard stream, that text is typically displayed on the console.</span></span> <span data-ttu-id="e981d-309">通过将 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> 设置为 `true` 重定向 <xref:System.Diagnostics.Process.StandardOutput%2A> 流，你可以操作或取消进程的输出。</span><span class="sxs-lookup"><span data-stu-id="e981d-309">By setting <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true` to redirect the <xref:System.Diagnostics.Process.StandardOutput%2A> stream, you can manipulate or suppress the output of a process.</span></span> <span data-ttu-id="e981d-310">例如，你可以筛选文本，以不同的方式对其进行格式设置，或者将输出写入控制台和指定的日志文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-310">For example, you can filter the text, format it differently, or write the output to both the console and a designated log file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-311">如果要将 <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> 设置为 `true`，则必须将 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 设置为 `false`。</span><span class="sxs-lookup"><span data-stu-id="e981d-311">You must set <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> to `false` if you want to set <xref:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput%2A> to `true`.</span></span> <span data-ttu-id="e981d-312">否则，从 <xref:System.Diagnostics.Process.StandardOutput%2A> 流中读取会引发异常。</span><span class="sxs-lookup"><span data-stu-id="e981d-312">Otherwise, reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream throws an exception.</span></span>  
  
 <span data-ttu-id="e981d-313">重定向的 <xref:System.Diagnostics.Process.StandardOutput%2A> 流可以同步或异步读取。</span><span class="sxs-lookup"><span data-stu-id="e981d-313">The redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream can be read synchronously or asynchronously.</span></span> <span data-ttu-id="e981d-314"><xref:System.IO.StreamReader.Read%2A>、<xref:System.IO.StreamReader.ReadLine%2A>和 <xref:System.IO.StreamReader.ReadToEnd%2A> 等方法在进程的输出流上执行同步读取操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-314">Methods such as <xref:System.IO.StreamReader.Read%2A>, <xref:System.IO.StreamReader.ReadLine%2A>, and <xref:System.IO.StreamReader.ReadToEnd%2A> perform synchronous read operations on the output stream of the process.</span></span> <span data-ttu-id="e981d-315">在关联的 <xref:System.Diagnostics.Process> 写入其 <xref:System.Diagnostics.Process.StandardOutput%2A> 流或关闭流之前，这些同步读取操作不会完成。</span><span class="sxs-lookup"><span data-stu-id="e981d-315">These synchronous read operations do not complete until the associated <xref:System.Diagnostics.Process> writes to its <xref:System.Diagnostics.Process.StandardOutput%2A> stream, or closes the stream.</span></span>  
  
 <span data-ttu-id="e981d-316">与此相反，<xref:System.Diagnostics.Process.BeginOutputReadLine%2A> 会对 <xref:System.Diagnostics.Process.StandardOutput%2A> 流启动异步读取操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-316">In contrast, <xref:System.Diagnostics.Process.BeginOutputReadLine%2A> starts asynchronous read operations on the <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="e981d-317">此方法将为流输出启用指定的事件处理程序（请参阅 <xref:System.Diagnostics.Process.OutputDataReceived>），并立即返回到调用方，当流输出定向到事件处理程序时，该处理程序可以执行其他操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-317">This method enables a designated event handler (see <xref:System.Diagnostics.Process.OutputDataReceived>) for the stream output and immediately returns to the caller, which can perform other work while the stream output is directed to the event handler.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-318">处理异步输出的应用程序应调用 <xref:System.Diagnostics.Process.WaitForExit%2A> 方法，以确保刷新了输出缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e981d-318">The application that is processing the asynchronous output should call the <xref:System.Diagnostics.Process.WaitForExit%2A> method to ensure that the output buffer has been flushed.</span></span>  
  
 <span data-ttu-id="e981d-319">同步读取操作会在调用方之间引入依赖关系，从 <xref:System.Diagnostics.Process.StandardOutput%2A> 流读取，子进程写入该流。</span><span class="sxs-lookup"><span data-stu-id="e981d-319">Synchronous read operations introduce a dependency between the caller reading from the <xref:System.Diagnostics.Process.StandardOutput%2A> stream and the child process writing to that stream.</span></span> <span data-ttu-id="e981d-320">这些依赖项可能会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-320">These dependencies can cause deadlock conditions.</span></span> <span data-ttu-id="e981d-321">当调用方从子进程的重定向流中进行读取时，它依赖于子进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-321">When the caller reads from the redirected stream of a child process, it is dependent on the child.</span></span> <span data-ttu-id="e981d-322">调用方等待读取操作，直到子级写入流或关闭流为止。</span><span class="sxs-lookup"><span data-stu-id="e981d-322">The caller waits for the read operation until the child writes to the stream or closes the stream.</span></span> <span data-ttu-id="e981d-323">当子进程写入足够的数据以填充其重定向流时，它依赖于父进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-323">When the child process writes enough data to fill its redirected stream, it is dependent on the parent.</span></span> <span data-ttu-id="e981d-324">子进程等待下一次写入操作，直到父进程从整个流中读取或关闭流为止。</span><span class="sxs-lookup"><span data-stu-id="e981d-324">The child process waits for the next write operation until the parent reads from the full stream or closes the stream.</span></span> <span data-ttu-id="e981d-325">当调用方和子进程等待彼此完成操作时，就会发生死锁条件，这两种情况都不会继续。</span><span class="sxs-lookup"><span data-stu-id="e981d-325">The deadlock condition results when the caller and child process wait for each other to complete an operation, and neither can continue.</span></span> <span data-ttu-id="e981d-326">您可以通过计算调用方和子进程之间的依赖关系来避免死锁。</span><span class="sxs-lookup"><span data-stu-id="e981d-326">You can avoid deadlocks by evaluating dependencies between the caller and child process.</span></span>  
  
<span data-ttu-id="e981d-327">本节中的最后两个示例使用 <xref:System.Diagnostics.Process.Start%2A> 方法来启动一个名为*Write500Lines*的可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-327">The last two examples in this section use the <xref:System.Diagnostics.Process.Start%2A> method to launch an executable named *Write500Lines.exe*.</span></span> <span data-ttu-id="e981d-328">下面的示例包含它的源代码。</span><span class="sxs-lookup"><span data-stu-id="e981d-328">The following example contains its source code.</span></span>

[!code-csharp[Executable launched by Process.Start](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/write500lines.cs)]
[!code-vb[Executable launched by Process.Start](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/write500lines.vb)]

<span data-ttu-id="e981d-329">下面的示例演示如何从重定向流中读取并等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="e981d-329">The following example shows how to read from a redirected stream and wait for the child process to exit.</span></span> <span data-ttu-id="e981d-330">该示例通过在 `p.WaitForExit`之前调用 `p.StandardOutput.ReadToEnd` 来避免死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-330">The example avoids a deadlock condition by calling `p.StandardOutput.ReadToEnd` before `p.WaitForExit`.</span></span> <span data-ttu-id="e981d-331">如果父进程在 `p.StandardOutput.ReadToEnd` 之前调用了 `p.WaitForExit`，并且子进程写入足够多的文本以填充重定向的流，则会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-331">A deadlock condition can result if the parent process calls `p.WaitForExit` before `p.StandardOutput.ReadToEnd` and the child process writes enough text to fill the redirected stream.</span></span> <span data-ttu-id="e981d-332">父进程会无限期地等待子进程退出。</span><span class="sxs-lookup"><span data-stu-id="e981d-332">The parent process would wait indefinitely for the child process to exit.</span></span> <span data-ttu-id="e981d-333">子进程会无限期地等待父进程从完整的 <xref:System.Diagnostics.Process.StandardOutput%2A> 流中读取。</span><span class="sxs-lookup"><span data-stu-id="e981d-333">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span>  

[!code-csharp[Reading synchronously from a redirected output stream](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/stdoutput-sync.cs)]  
[!code-vb[Reading synchronously from a redirected output stream](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/stdoutput-sync.vb)] 

<span data-ttu-id="e981d-334">从标准输出和标准错误流中读取所有文本时，会出现类似的问题。</span><span class="sxs-lookup"><span data-stu-id="e981d-334">There is a similar issue when you read all text from both the standard output and standard error streams.</span></span> <span data-ttu-id="e981d-335">下面的示例对两个流执行读取操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-335">The following example performs a read operation on both streams.</span></span> <span data-ttu-id="e981d-336">它通过对 <xref:System.Diagnostics.Process.StandardError%2A> 流执行异步读取操作来避免死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-336">It avoids the deadlock condition by performing asynchronous read operations on the <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span> <span data-ttu-id="e981d-337">如果父进程调用 `p.StandardOutput.ReadToEnd` 后跟 `p.StandardError.ReadToEnd` 并且子进程写入足够多的文本以填充其错误流，则会导致死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-337">A deadlock condition results if the parent process calls `p.StandardOutput.ReadToEnd` followed by `p.StandardError.ReadToEnd` and the child process writes enough text to fill its error stream.</span></span> <span data-ttu-id="e981d-338">父进程会无限期地等待子进程关闭其 <xref:System.Diagnostics.Process.StandardOutput%2A> 流。</span><span class="sxs-lookup"><span data-stu-id="e981d-338">The parent process would wait indefinitely for the child process to close its <xref:System.Diagnostics.Process.StandardOutput%2A> stream.</span></span> <span data-ttu-id="e981d-339">子进程会无限期地等待父进程从完整的 <xref:System.Diagnostics.Process.StandardError%2A> 流中读取。</span><span class="sxs-lookup"><span data-stu-id="e981d-339">The child process would wait indefinitely for the parent to read from the full <xref:System.Diagnostics.Process.StandardError%2A> stream.</span></span>   
[!code-csharp[Reading from a redirected output and error stream](~/samples/snippets/csharp/api/system.diagnostics/process/standardoutput/stdoutput-async.cs)]  
[!code-vb[Reading from a redirected output and error stream](~/samples/snippets/visualbasic/api/system.diagnostics/process/standardoutput/stdoutput-async.vb)]    

<span data-ttu-id="e981d-340">您可以使用异步读取操作来避免这些依赖项及其死锁。</span><span class="sxs-lookup"><span data-stu-id="e981d-340">You can use asynchronous read operations to avoid these dependencies and their deadlock potential.</span></span> <span data-ttu-id="e981d-341">或者，您可以通过创建两个线程并在单独的线程上读取每个流的输出来避免出现死锁情况。</span><span class="sxs-lookup"><span data-stu-id="e981d-341">Alternately, you can avoid the deadlock condition by creating two threads and reading the output of each stream on a separate thread.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
 [!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
 [!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
        <altmember cref="P:System.Diagnostics.Process.StandardOutput" />
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardErrorEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardErrorEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-342">获取或设置错误输出的首选编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-342">Gets or sets the preferred encoding for error output.</span></span></summary>
        <value><span data-ttu-id="e981d-343">表示错误输出的首选编码的对象。</span><span class="sxs-lookup"><span data-stu-id="e981d-343">An object that represents the preferred encoding for error output.</span></span> <span data-ttu-id="e981d-344">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-344">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-345">如果 `null`<xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> 属性的值，则进程会将默认的标准错误编码用于错误输出。</span><span class="sxs-lookup"><span data-stu-id="e981d-345">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property is `null`, the process uses the default standard error encoding for error output.</span></span> <span data-ttu-id="e981d-346">必须先设置 <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> 属性，然后才能启动进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-346">The <xref:System.Diagnostics.ProcessStartInfo.StandardErrorEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="e981d-347">设置此属性并不保证进程将使用指定的编码;此过程将仅使用它所支持的编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-347">Setting this property does not guarantee that the process will use the specified encoding; the process will use only those encodings that it supports.</span></span> <span data-ttu-id="e981d-348">应该对应用程序进行测试，以确定支持哪些编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-348">The application should be tested to determine which encodings are supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardInputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardInputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardInputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardInputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardInputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardInputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardInputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-349">获取或设置标准输入的首选编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-349">Gets or sets the preferred encoding for standard input.</span></span></summary>
        <value><span data-ttu-id="e981d-350">一个对象，表示标准输入的首选编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-350">An object that represents the preferred encoding for standard input.</span></span> <span data-ttu-id="e981d-351">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-351">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-352">如果 `null``StandardInputEncoding` 属性的值，则该过程将使用标准输入的默认标准输入编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-352">If the value of the `StandardInputEncoding` property is `null`, the process uses the default standard input encoding for the standard input.</span></span> <span data-ttu-id="e981d-353">必须先设置 `StandardInputEncoding` 属性，然后才能启动进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-353">The `StandardInputEncoding` property must be set before the process is started.</span></span> <span data-ttu-id="e981d-354">设置此属性并不保证进程将使用指定的编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-354">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="e981d-355">应该对应用程序进行测试，以确定进程支持哪些编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-355">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding StandardOutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputEncoding : System.Text.Encoding with get, set" Usage="System.Diagnostics.ProcessStartInfo.StandardOutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-356">获取或设置标准输出的首选编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-356">Gets or sets the preferred encoding for standard output.</span></span></summary>
        <value><span data-ttu-id="e981d-357">表示标准输出的首选编码的对象。</span><span class="sxs-lookup"><span data-stu-id="e981d-357">An object that represents the preferred encoding for standard output.</span></span> <span data-ttu-id="e981d-358">默认值为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-358">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-359">如果 `null`<xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> 属性的值，该过程将使用标准输出的默认标准输出编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-359">If the value of the <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property is `null`, the process uses the default standard output encoding for the standard output.</span></span> <span data-ttu-id="e981d-360">必须先设置 <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> 属性，然后才能启动进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-360">The <xref:System.Diagnostics.ProcessStartInfo.StandardOutputEncoding%2A> property must be set before the process is started.</span></span> <span data-ttu-id="e981d-361">设置此属性并不保证进程将使用指定的编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-361">Setting this property does not guarantee that the process will use the specified encoding.</span></span> <span data-ttu-id="e981d-362">应该对应用程序进行测试，以确定进程支持哪些编码。</span><span class="sxs-lookup"><span data-stu-id="e981d-362">The application should be tested to determine which encodings the process supports.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberSignature Language="VB.NET" Value="Public Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-363">获取或设置在启动进程时使用的用户名。</span><span class="sxs-lookup"><span data-stu-id="e981d-363">Gets or sets the user name to use when starting the process.</span></span> <span data-ttu-id="e981d-364">如果使用 UPN 格式，<paramref name="user" />@<paramref name="DNS_domain_name" />，则 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 属性必须为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-364">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="e981d-365">启动进程时使用的用户名。</span><span class="sxs-lookup"><span data-stu-id="e981d-365">The user name to use when starting the process.</span></span> <span data-ttu-id="e981d-366">如果使用 UPN 格式，<paramref name="user" />@<paramref name="DNS_domain_name" />，则 <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> 属性必须为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-366">If you use the UPN format, <paramref name="user" />@<paramref name="DNS_domain_name" />, the <see cref="P:System.Diagnostics.ProcessStartInfo.Domain" /> property must be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e981d-367">如果提供了 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 和 <xref:System.Diagnostics.ProcessStartInfo.Password%2A>，则必须设置 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-367">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="e981d-368">如果未设置该属性，则默认工作目录为%Systemroot%\system32</span><span class="sxs-lookup"><span data-stu-id="e981d-368">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="e981d-369">如果 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 属性不 `null` 或为空字符串，则 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 属性必须 `false`，否则在调用 <xref:System.InvalidOperationException> 方法时将引发 <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e981d-369">If the <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> property is not `null` or an empty string, the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> property must be `false`, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start%28System.Diagnostics.ProcessStartInfo%29?displayProperty=nameWithType> method is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseShellExecute">
      <MemberSignature Language="C#" Value="public bool UseShellExecute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseShellExecute" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberSignature Language="VB.NET" Value="Public Property UseShellExecute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseShellExecute { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseShellExecute : bool with get, set" Usage="System.Diagnostics.ProcessStartInfo.UseShellExecute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("Whether to use the operating system shell to start the process.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessUseShellExecute")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-370">获取或设置指示是否使用操作系统 shell 启动进程的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-370">Gets or sets a value indicating whether to use the operating system shell to start the process.</span></span></summary>
        <value><span data-ttu-id="e981d-371">如果应在启动进程时使用 shell，则为 <see langword="true" />；如果直接从可执行文件创建进程，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-371"><see langword="true" /> if the shell should be used when starting the process; <see langword="false" /> if the process should be created directly from the executable file.</span></span> <span data-ttu-id="e981d-372">默认值为 .NET Core 应用上 .NET Framework 应用和 <see langword="false" /> 上的 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-372">The default is <see langword="true" /> on .NET Framework apps and <see langword="false" /> on .NET Core apps.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[## Remarks

<span data-ttu-id="e981d-373">将此属性设置为 `false` 可重定向输入、输出和错误流。</span><span class="sxs-lookup"><span data-stu-id="e981d-373">Setting this property to `false` enables you to redirect input, output, and error streams.</span></span>

<span data-ttu-id="e981d-374">此上下文（`UseShellExecute`）中的 "shell" 一词是指图形 shell （类似于 Windows shell）而不是命令行界面（例如，`bash` 或 `sh`），允许用户启动图形应用程序或打开的文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-374">The word "shell" in this context (`UseShellExecute`) refers to a graphical shell (similar to the Windows shell) rather than command shells (for example, `bash` or `sh`) and lets users launch graphical applications or open documents.</span></span>

> [!NOTE]
> <span data-ttu-id="e981d-375">如果 <xref:System.Diagnostics.ProcessStartInfo.UserName> 属性 `null` 为或空字符串，则 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 必须 `false`，否则在调用 <xref:System.InvalidOperationException> 方法时将引发 <xref:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="e981d-375"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be `false` if the <xref:System.Diagnostics.ProcessStartInfo.UserName> property is not `null` or an empty string, or an <xref:System.InvalidOperationException> will be thrown when the <xref:System.Diagnostics.Process.Start(System.Diagnostics.ProcessStartInfo)?displayProperty=nameWithType> method is called.</span></span>

<span data-ttu-id="e981d-376">在使用操作系统 shell 启动进程时，可以使用 <xref:System.Diagnostics.Process> 对象启动任何文档（可以是与具有默认打开操作的可执行文件关联的任何注册文件）并对该文件执行操作（如打印）。</span><span class="sxs-lookup"><span data-stu-id="e981d-376">When you use the operating system shell to start processes, you can start any document (which is any registered file type associated with an executable that has a default open action) and perform operations on the file, such as printing, by using the <xref:System.Diagnostics.Process> object.</span></span> <span data-ttu-id="e981d-377">当 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 为 `false` 时，仅可使用 <xref:System.Diagnostics.Process> 对象启动可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-377">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, you can start only executables by using the <xref:System.Diagnostics.Process> object.</span></span>

> [!NOTE]
> <span data-ttu-id="e981d-378">如果将 <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog> 属性设置为 `true`，则必须 `true` <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute>。</span><span class="sxs-lookup"><span data-stu-id="e981d-378"><xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be `true` if you set the <xref:System.Diagnostics.ProcessStartInfo.ErrorDialog> property to `true`.</span></span>

<span data-ttu-id="e981d-379">如果将 <xref:System.Diagnostics.ProcessStartInfo.WindowStyle> 设置为 "<xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>，则 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 必须设置为" `true`"。</span><span class="sxs-lookup"><span data-stu-id="e981d-379">If you set the <xref:System.Diagnostics.ProcessStartInfo.WindowStyle> to <xref:System.Diagnostics.ProcessWindowStyle.Hidden?displayProperty=nameWithType>, <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> must be set to `true`.</span></span>

### <a name="workingdirectory"></a><span data-ttu-id="e981d-380">WorkingDirectory</span><span class="sxs-lookup"><span data-stu-id="e981d-380">WorkingDirectory</span></span>

<span data-ttu-id="e981d-381"><xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> 属性的行为随 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 属性的值而异。</span><span class="sxs-lookup"><span data-stu-id="e981d-381">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property behaves differently depending on the value of the <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> property.</span></span> <span data-ttu-id="e981d-382">`true`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 时，<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> 属性指定可执行文件的位置。</span><span class="sxs-lookup"><span data-stu-id="e981d-382">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property specifies the location of the executable.</span></span> <span data-ttu-id="e981d-383">如果 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory*> 是一个空字符串，则假定当前目录包含可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-383">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory*> is an empty string, it is assumed that the current directory contains the executable.</span></span>

<span data-ttu-id="e981d-384">当 `false`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 时，<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> 属性不用于查找可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-384">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory> property is not used to find the executable.</span></span> <span data-ttu-id="e981d-385">相反，它只能由已启动的进程使用，并且仅在新进程的上下文中有意义。</span><span class="sxs-lookup"><span data-stu-id="e981d-385">Instead, it is used only by the process that is started and has meaning only within the context of the new process.</span></span> <span data-ttu-id="e981d-386">`false`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> 时，<xref:System.Diagnostics.ProcessStartInfo.FileName> 属性可以是可执行文件的完全限定路径，也可以是系统将在 PATH 环境变量指定的文件夹内尝试查找的简单可执行名称。</span><span class="sxs-lookup"><span data-stu-id="e981d-386">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.FileName> property can be either a fully qualified path to the executable, or a simple executable name that the system will attempt to find within folders specified by the PATH environment variable.</span></span>

## Examples

[!code-cpp[ProcessOneStream#1](~/samples/snippets/cpp/VS_Snippets_CLR/ProcessOneStream/CPP/stdstr.cpp#1)]
[!code-csharp[ProcessOneStream#1](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessOneStream/CS/stdstr.cs#1)]
[!code-vb[ProcessOneStream#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessOneStream/VB/stdstr.vb#1)]

]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="e981d-387">尝试在通用 Windows 平台 (UWP) 应用上将值设置为 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-387">An attempt to set the value to <see langword="true" /> on Universal Windows Platform (UWP) apps occurs.</span></span></exception>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardInput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardOutput" />
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.RedirectStandardError" />
      </Docs>
    </Member>
    <Member MemberName="Verb">
      <MemberSignature Language="C#" Value="public string Verb { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Verb" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberSignature Language="VB.NET" Value="Public Property Verb As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Verb { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Verb : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.Verb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The verb to apply to the document specified by the FileName property.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessVerb")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.VerbConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-388">获取或设置打开 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性指定的应用程序或文档时要使用的谓词。</span><span class="sxs-lookup"><span data-stu-id="e981d-388">Gets or sets the verb to use when opening the application or document specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></summary>
        <value><span data-ttu-id="e981d-389">要对进程打开的文件执行的操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-389">The action to take with the file that the process opens.</span></span> <span data-ttu-id="e981d-390">默认值为空字符串 ("")，它表示没有操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-390">The default is an empty string (""), which signifies no action.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-391">每个文件扩展名都具有自己的一组谓词，可通过使用 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 属性来获取。</span><span class="sxs-lookup"><span data-stu-id="e981d-391">Each file name extension has its own set of verbs, which can be obtained by using the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span> <span data-ttu-id="e981d-392">例如，"`print`" 谓词将打印使用 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>指定的文档。</span><span class="sxs-lookup"><span data-stu-id="e981d-392">For example, the "`print`" verb will print a document specified by using <xref:System.Diagnostics.ProcessStartInfo.FileName%2A>.</span></span> <span data-ttu-id="e981d-393">可以通过使用空字符串（""）来指定默认谓词。</span><span class="sxs-lookup"><span data-stu-id="e981d-393">The default verb can be specified by using an empty string ("").</span></span> <span data-ttu-id="e981d-394">谓词的示例包括 "编辑"、"打开"、"OpenAsReadOnly"、"打印" 和 "Printto"。</span><span class="sxs-lookup"><span data-stu-id="e981d-394">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span> <span data-ttu-id="e981d-395">只应使用 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 属性返回的谓词集中出现的谓词。</span><span class="sxs-lookup"><span data-stu-id="e981d-395">You should use only verbs that appear in the set of verbs returned by the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 <span data-ttu-id="e981d-396">如果使用 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 属性，则在设置 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性的值时，必须包含文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="e981d-396">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="e981d-397">如果手动输入 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 属性的值，则文件名不需要具有扩展名。</span><span class="sxs-lookup"><span data-stu-id="e981d-397">The file name does not need to have an extension if you manually enter a value for the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e981d-398">下面的代码示例使用指定的谓词和文件名启动一个新进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-398">The following code example starts a new process by using the specified verb and file name.</span></span> <span data-ttu-id="e981d-399">此代码示例是为 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 属性提供的更大示例的一部分。</span><span class="sxs-lookup"><span data-stu-id="e981d-399">This code example is part of a larger example provided for the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#4](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#4)]
 [!code-vb[ProcessVerbs_Diagnostics#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      </Docs>
    </Member>
    <Member MemberName="Verbs">
      <MemberSignature Language="C#" Value="public string[] Verbs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Verbs" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Verbs As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Verbs { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Verbs : string[]" Usage="System.Diagnostics.ProcessStartInfo.Verbs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-400">获取与 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性指定的文件类型关联的一组谓词。</span><span class="sxs-lookup"><span data-stu-id="e981d-400">Gets the set of verbs associated with the type of file specified by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></summary>
        <value><span data-ttu-id="e981d-401">系统可应用于 <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> 属性所指示文件的操作。</span><span class="sxs-lookup"><span data-stu-id="e981d-401">The actions that the system can apply to the file indicated by the <see cref="P:System.Diagnostics.ProcessStartInfo.FileName" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e981d-402">利用 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 属性，您可以确定可与 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性指定的文件一起使用的谓词。</span><span class="sxs-lookup"><span data-stu-id="e981d-402">The <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property enables you to determine the verbs that can be used with the file specified by the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="e981d-403">可以将 <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> 属性设置为集中任何谓词的值。</span><span class="sxs-lookup"><span data-stu-id="e981d-403">You can set the <xref:System.Diagnostics.ProcessStartInfo.Verb%2A> property to the value of any verb in the set.</span></span> <span data-ttu-id="e981d-404">谓词的示例包括 "编辑"、"打开"、"OpenAsReadOnly"、"打印" 和 "Printto"。</span><span class="sxs-lookup"><span data-stu-id="e981d-404">Examples of verbs are "Edit", "Open", "OpenAsReadOnly", "Print", and "Printto".</span></span>  
  
 <span data-ttu-id="e981d-405">如果使用 <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> 属性，则在设置 <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> 属性的值时，必须包含文件扩展名。</span><span class="sxs-lookup"><span data-stu-id="e981d-405">When you use the <xref:System.Diagnostics.ProcessStartInfo.Verbs%2A> property, you must include the file name extension when you set the value of the <xref:System.Diagnostics.ProcessStartInfo.FileName%2A> property.</span></span> <span data-ttu-id="e981d-406">文件扩展名确定一组可能的谓词。</span><span class="sxs-lookup"><span data-stu-id="e981d-406">The file name extension determines the set of possible verbs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e981d-407">下面的代码示例显示所选文件名的已定义谓词。</span><span class="sxs-lookup"><span data-stu-id="e981d-407">The following code example displays the defined verbs for the chosen file name.</span></span> <span data-ttu-id="e981d-408">如果用户选择一个已定义的谓词，此示例将使用所选谓词和输入文件名启动一个新进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-408">If the user selects one of the defined verbs, the example starts a new process using the selected verb and the input file name.</span></span>  
  
 [!code-csharp[ProcessVerbs_Diagnostics#3](~/samples/snippets/csharp/VS_Snippets_CLR/ProcessVerbs_Diagnostics/CS/source.cs#3)]
 [!code-vb[ProcessVerbs_Diagnostics#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ProcessVerbs_Diagnostics/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Diagnostics.ProcessStartInfo.Verb" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Diagnostics.ProcessWindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.ProcessWindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As ProcessWindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::ProcessWindowStyle WindowStyle { System::Diagnostics::ProcessWindowStyle get(); void set(System::Diagnostics::ProcessWindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Diagnostics.ProcessWindowStyle with get, set" Usage="System.Diagnostics.ProcessStartInfo.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("How the main window should be created when the process starts.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessWindowStyle")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessWindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-409">获取或设置启动进程时使用的窗口状态。</span><span class="sxs-lookup"><span data-stu-id="e981d-409">Gets or sets the window state to use when the process is started.</span></span></summary>
        <value><span data-ttu-id="e981d-410">枚举值之一，它指示是在最大化窗口、最小化窗口、正常(即非最大化也非最小化)窗口还是在不可见的窗口中启动进程。</span><span class="sxs-lookup"><span data-stu-id="e981d-410">One of the enumeration values that indicates whether the process is started in a window that is maximized, minimized, normal (neither maximized nor minimized), or not visible.</span></span> <span data-ttu-id="e981d-411">默认值为 <see langword="Normal" />。</span><span class="sxs-lookup"><span data-stu-id="e981d-411">The default is <see langword="Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[Process.Start_static#1](~/samples/snippets/cpp/VS_Snippets_CLR/Process.Start_static/CPP/processstartstatic.cpp#1)]
 [!code-csharp[Process.Start_static#1](~/samples/snippets/csharp/VS_Snippets_CLR/Process.Start_static/CS/processstartstatic.cs#1)]
 [!code-vb[Process.Start_static#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Process.Start_static/VB/processstartstatic.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="e981d-412">窗口样式不是 <see cref="T:System.Diagnostics.ProcessWindowStyle" /> 枚举成员之一。</span><span class="sxs-lookup"><span data-stu-id="e981d-412">The window style is not one of the <see cref="T:System.Diagnostics.ProcessWindowStyle" /> enumeration members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Diagnostics.ProcessStartInfo.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Process</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("The initial working directory for the process.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ProcessWorkingDirectory")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.WorkingDirectoryEditor, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.5.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e981d-413">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性为 <see langword="false" /> 时，将获取或设置要启动的进程的工作目录。</span><span class="sxs-lookup"><span data-stu-id="e981d-413">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, gets or sets the working directory for the process to be started.</span></span> <span data-ttu-id="e981d-414">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 为 <see langword="true" /> 时，获取或设置包含要启动的进程的目录。</span><span class="sxs-lookup"><span data-stu-id="e981d-414">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, gets or sets the directory that contains the process to be started.</span></span></summary>
        <value><span data-ttu-id="e981d-415">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 为 <see langword="true" /> 时，是包含要启动的进程的目录的完全限定名。</span><span class="sxs-lookup"><span data-stu-id="e981d-415">When <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> is <see langword="true" />, the fully qualified name of the directory that contains the process to be started.</span></span> <span data-ttu-id="e981d-416">当 <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> 属性为 <see langword="false" /> 时，则为要启动的进程的工作目录。</span><span class="sxs-lookup"><span data-stu-id="e981d-416">When the <see cref="P:System.Diagnostics.ProcessStartInfo.UseShellExecute" /> property is <see langword="false" />, the working directory for the process to be started.</span></span> <span data-ttu-id="e981d-417">默认值为空字符串("")。</span><span class="sxs-lookup"><span data-stu-id="e981d-417">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="e981d-418">如果提供了 <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> 和 <xref:System.Diagnostics.ProcessStartInfo.Password%2A>，则必须设置 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="e981d-418">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property must be set if <xref:System.Diagnostics.ProcessStartInfo.UserName%2A> and <xref:System.Diagnostics.ProcessStartInfo.Password%2A> are provided.</span></span> <span data-ttu-id="e981d-419">如果未设置该属性，则默认工作目录为%Systemroot%\system32</span><span class="sxs-lookup"><span data-stu-id="e981d-419">If the property is not set, the default working directory is %SYSTEMROOT%\system32.</span></span>  
  
 <span data-ttu-id="e981d-420">如果该目录已是系统路径变量的一部分，则无需在此属性中重复该目录的位置。</span><span class="sxs-lookup"><span data-stu-id="e981d-420">If the directory is already part of the system path variable, you do not have to repeat the directory's location in this property.</span></span>  
  
 <span data-ttu-id="e981d-421">当 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> `true` 与 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> `false`时，<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 属性的行为有所不同。</span><span class="sxs-lookup"><span data-stu-id="e981d-421">The <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property behaves differently when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true` than when <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`.</span></span> <span data-ttu-id="e981d-422">`true`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 时，<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 属性指定可执行文件的位置。</span><span class="sxs-lookup"><span data-stu-id="e981d-422">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property specifies the location of the executable.</span></span> <span data-ttu-id="e981d-423">如果 <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 为空字符串，则了解当前目录，以包含可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-423">If <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> is an empty string, the current directory is understood to contain the executable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e981d-424">当 <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 是 `true` 时，启动可执行文件的应用程序的工作目录也是该可执行文件的工作目录。</span><span class="sxs-lookup"><span data-stu-id="e981d-424">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `true`, the working directory of the application that starts the executable is also the working directory of the executable.</span></span>  
  
 <span data-ttu-id="e981d-425">当 `false`<xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> 时，<xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> 属性不用于查找可执行文件。</span><span class="sxs-lookup"><span data-stu-id="e981d-425">When <xref:System.Diagnostics.ProcessStartInfo.UseShellExecute%2A> is `false`, the <xref:System.Diagnostics.ProcessStartInfo.WorkingDirectory%2A> property is not used to find the executable.</span></span> <span data-ttu-id="e981d-426">相反，其值应用于已启动的进程，并且仅在新进程的上下文中有意义。</span><span class="sxs-lookup"><span data-stu-id="e981d-426">Instead, its value applies to the process that is started and only has meaning within the context of the new process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
