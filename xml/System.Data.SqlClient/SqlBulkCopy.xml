<Type Name="SqlBulkCopy" FullName="System.Data.SqlClient.SqlBulkCopy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fed3f20baf9f56771cec691ca62d69c30905e4fc" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82476411" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlBulkCopy : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlBulkCopy extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.SqlClient.SqlBulkCopy" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlBulkCopy&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlBulkCopy sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type SqlBulkCopy = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="01bb9-101">使你可以有效地大容量加载带有来自其他源的数据的 SQL Server 表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-101">Lets you efficiently bulk load a SQL Server table with data from another source.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-102">Microsoft SQL Server 包含一个用于将数据从一个表移到另一个**表的常用**命令提示实用工具，无论是在单个服务器上还是在服务器之间。</span><span class="sxs-lookup"><span data-stu-id="01bb9-102">Microsoft SQL Server includes a popular command-prompt utility named **bcp** for moving data from one table to another, whether on a single server or between servers.</span></span> <span data-ttu-id="01bb9-103">利用 <xref:System.Data.SqlClient.SqlBulkCopy> 类，您可以编写提供类似功能的托管代码解决方案。</span><span class="sxs-lookup"><span data-stu-id="01bb9-103">The <xref:System.Data.SqlClient.SqlBulkCopy> class lets you write managed code solutions that provide similar functionality.</span></span> <span data-ttu-id="01bb9-104">还可以通过其他方式将数据加载到 SQL Server 表中（例如 INSERT 语句），但 <xref:System.Data.SqlClient.SqlBulkCopy> 对它们提供显著的性能优势。</span><span class="sxs-lookup"><span data-stu-id="01bb9-104">There are other ways to load data into a SQL Server table (INSERT statements, for example), but <xref:System.Data.SqlClient.SqlBulkCopy> offers a significant performance advantage over them.</span></span>  
  
 <span data-ttu-id="01bb9-105"><xref:System.Data.SqlClient.SqlBulkCopy> 类可用于只将数据写入 SQL Server 表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-105">The <xref:System.Data.SqlClient.SqlBulkCopy> class can be used to write data only to SQL Server tables.</span></span> <span data-ttu-id="01bb9-106">但是，数据源不限于 SQL Server;可以使用任何数据源，只要数据可以加载到 <xref:System.Data.DataTable> 实例或使用 <xref:System.Data.IDataReader> 实例进行读取即可。</span><span class="sxs-lookup"><span data-stu-id="01bb9-106">However, the data source is not limited to SQL Server; any data source can be used, as long as the data can be loaded to a <xref:System.Data.DataTable> instance or read with a <xref:System.Data.IDataReader> instance.</span></span>  
  
 <span data-ttu-id="01bb9-107">在将类型 <xref:System.Data.SqlTypes.SqlDateTime> 的 <xref:System.Data.DataTable> 列大容量加载到类型为 SQL Server 2008 中添加的日期/时间类型之一的 SQL Server 列时，<xref:System.Data.SqlClient.SqlBulkCopy> 将会失败。</span><span class="sxs-lookup"><span data-stu-id="01bb9-107"><xref:System.Data.SqlClient.SqlBulkCopy> will fail when bulk loading a <xref:System.Data.DataTable> column of type <xref:System.Data.SqlTypes.SqlDateTime> into a SQL Server column whose type is one of the date/time types added in SQL Server 2008.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-108">下面的控制台应用程序演示了如何使用 <xref:System.Data.SqlClient.SqlBulkCopy> 类加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-108">The following console application demonstrates how to load data using the <xref:System.Data.SqlClient.SqlBulkCopy> class.</span></span> <span data-ttu-id="01bb9-109">在此示例中，<xref:System.Data.SqlClient.SqlDataReader> 用于将数据从 SQL Server AdventureWorks 数据库的 Production.Product 表复制到相同数据库的一个类似的表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-109">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-110">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-110">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-111">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-111">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-112">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-112">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-113">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-113">Bulk Copy Operations in SQL Server</span></span></related>
    <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-114">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-114">ADO.NET Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01bb9-115">初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-115">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-116">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-116">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="01bb9-117">将用于执行批量复制操作的已经打开的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-117">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy operation.</span></span> <span data-ttu-id="01bb9-118">如果连接字符串不使用 <see langword="Integrated Security = true" />，则可以使用 <see cref="T:System.Data.SqlClient.SqlCredential" /> 来传递用户 ID 和密码，这比将用户 ID 和密码指定为连接字符串中的文本更安全。</span><span class="sxs-lookup"><span data-stu-id="01bb9-118">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <summary><span data-ttu-id="01bb9-119">使用 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 的指定打开实例初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-119">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the specified open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-120">由于在初始化 <xref:System.Data.SqlClient.SqlBulkCopy> 实例时连接已打开，因此在关闭 <xref:System.Data.SqlClient.SqlBulkCopy> 实例之后，连接仍保持打开状态。</span><span class="sxs-lookup"><span data-stu-id="01bb9-120">Because the connection is already open when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is initialized, the connection remains open after the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="01bb9-121">如果 `connection` 参数为 null，则会引发 <xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-121">If the `connection` argument is null, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-122">下面的控制台应用程序演示如何使用已打开的连接大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-122">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="01bb9-123">在此示例中，<xref:System.Data.SqlClient.SqlDataReader> 用于将数据从 SQL Server AdventureWorks 数据库的 Production.Product 表复制到相同数据库的一个类似的表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-123">In this example, a <xref:System.Data.SqlClient.SqlDataReader> is used to copy data from the **Production.Product** table in the SQL Server **AdventureWorks** database to a similar table in the same database.</span></span> <span data-ttu-id="01bb9-124">此示例只为了方便演示。</span><span class="sxs-lookup"><span data-stu-id="01bb9-124">This example is for demonstration purposes only.</span></span> <span data-ttu-id="01bb9-125">在生产应用程序中，不能使用 `SqlBulkCopy` 将数据从一个表移到同一数据库的另一个表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-125">You would not use `SqlBulkCopy` to move data from one table to another in the same database in a production application.</span></span> <span data-ttu-id="01bb9-126">请注意，源数据不必位于 SQL Server 上;可以使用任何可读取到 <xref:System.Data.IDataReader> 或加载到 <xref:System.Data.DataTable>的数据源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-126">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-127">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-127">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-128">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-128">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-129">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-129">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks BulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks BulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks BulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-130">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-130">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-131">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-131">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="01bb9-132">定义将打开供 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 实例使用的连接的字符串。</span><span class="sxs-lookup"><span data-stu-id="01bb9-132">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span> <span data-ttu-id="01bb9-133">如果该连接字符串不使用 <see langword="Integrated Security = true" />，则可以使用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> 或 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> 和 <see cref="T:System.Data.SqlClient.SqlCredential" /> 来传递用户 ID 和密码，这比将用户 ID 和密码指定为连接字符串中的文本更安全。</span><span class="sxs-lookup"><span data-stu-id="01bb9-133">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <summary><span data-ttu-id="01bb9-134">基于提供的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 初始化并打开 <paramref name="connectionString" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-134">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span></span> <span data-ttu-id="01bb9-135">该构造函数使用 <see cref="T:System.Data.SqlClient.SqlConnection" /> 来初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-135">The constructor uses the <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-136">在大容量复制操作结束时，连接会自动关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-136">The connection is automatically closed at the end of the bulk copy operation.</span></span>  
  
 <span data-ttu-id="01bb9-137">如果 `connectionString` 为 null，则会引发 <xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-137">If `connectionString` is null, an <xref:System.ArgumentNullException> is thrown.</span></span> <span data-ttu-id="01bb9-138">如果 `connectionString` 为空字符串，则会引发 <xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-138">If `connectionString` is an empty string, an <xref:System.ArgumentException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-139">下面的控制台应用程序演示如何使用指定为字符串的连接大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-139">The following console application demonstrates how to bulk load data by using a connection specified as a string.</span></span> <span data-ttu-id="01bb9-140">当 <xref:System.Data.SqlClient.SqlBulkCopy> 实例关闭时，连接会自动关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-140">The connection is automatically closed when the <xref:System.Data.SqlClient.SqlBulkCopy> instance is closed.</span></span>  
  
 <span data-ttu-id="01bb9-141">在此示例中，首先将源数据从 SQL Server 表读取到 <xref:System.Data.SqlClient.SqlDataReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-141">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="01bb9-142">源数据不必位于 SQL Server 上;可以使用任何可读取到 <xref:System.Data.IDataReader> 或加载到 <xref:System.Data.DataTable>的数据源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-142">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-143">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-143">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-144">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-144">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-145">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-145">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-146">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-146">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-147">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-147">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (string connectionString, System.Data.SqlClient.SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.String,System.Data.SqlClient.SqlBulkCopyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, copyOptions As SqlBulkCopyOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::String ^ connectionString, System::Data::SqlClient::SqlBulkCopyOptions copyOptions);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : string * System.Data.SqlClient.SqlBulkCopyOptions -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connectionString, copyOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="01bb9-148">定义将打开供 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 实例使用的连接的字符串。</span><span class="sxs-lookup"><span data-stu-id="01bb9-148">The string defining the connection that will be opened for use by the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span> <span data-ttu-id="01bb9-149">如果该连接字符串不使用 <see langword="Integrated Security = true" />，则可以使用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> 或 <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> 和 <see cref="T:System.Data.SqlClient.SqlCredential" /> 来传递用户 ID 和密码，这比将用户 ID 和密码指定为连接字符串中的文本更安全。</span><span class="sxs-lookup"><span data-stu-id="01bb9-149">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection)" /> or <see cref="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" /> and <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <param name="copyOptions"><span data-ttu-id="01bb9-150"><see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 枚举中的值的组合，可确定将哪些数据源行复制到目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-150">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-151">基于提供的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 初始化并打开 <paramref name="connectionString" /> 的新实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-151">Initializes and opens a new instance of <see cref="T:System.Data.SqlClient.SqlConnection" /> based on the supplied <paramref name="connectionString" />.</span></span> <span data-ttu-id="01bb9-152">构造函数使用该 <see cref="T:System.Data.SqlClient.SqlConnection" /> 来初始化 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-152">The constructor uses that <see cref="T:System.Data.SqlClient.SqlConnection" /> to initialize a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span> <span data-ttu-id="01bb9-153"><see cref="T:System.Data.SqlClient.SqlConnection" /> 实例的行为取决于 <paramref name="copyOptions" /> 参数中提供的选项。</span><span class="sxs-lookup"><span data-stu-id="01bb9-153">The <see cref="T:System.Data.SqlClient.SqlConnection" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-154">您可以获取有关 <xref:System.Data.SqlClient.SqlBulkCopyOptions> 主题中的所有大容量复制选项的详细信息。</span><span class="sxs-lookup"><span data-stu-id="01bb9-154">You can obtain detailed information about all the bulk copy options in the <xref:System.Data.SqlClient.SqlBulkCopyOptions> topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-155">下面的控制台应用程序演示如何使用指定为字符串的连接执行大容量加载。</span><span class="sxs-lookup"><span data-stu-id="01bb9-155">The following console application demonstrates how to perform a bulk load by using a connection specified as a string.</span></span> <span data-ttu-id="01bb9-156">在加载目标表时，选项设置为使用源表的 "标识" 列中的值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-156">An option is set to use the value in the identity column of the source table when you load the destination table.</span></span> <span data-ttu-id="01bb9-157">在此示例中，首先将源数据从 SQL Server 表读取到 <xref:System.Data.SqlClient.SqlDataReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-157">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="01bb9-158">源表和目标表每个都包含一个标识列。</span><span class="sxs-lookup"><span data-stu-id="01bb9-158">The source table and destination table each include an Identity column.</span></span> <span data-ttu-id="01bb9-159">默认情况下，在目标表中为添加的每个行生成**标识**列的新值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-159">By default, a new value for the **Identity** column is generated in the destination table for each row added.</span></span> <span data-ttu-id="01bb9-160">在此示例中，当打开连接时，将设置一个选项，该选项强制大容量加载进程改为使用源表中的**标识**值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-160">In this example, an option is set when the connection is opened that forces the bulk load process to use the **Identity** values from the source table instead.</span></span> <span data-ttu-id="01bb9-161">若要查看选项如何更改大容量加载的工作方式，请运行包含 dbo 的示例 **。BulkCopyDemoMatchingColumns**表为空。</span><span class="sxs-lookup"><span data-stu-id="01bb9-161">To see how the option changes the way the bulk load works, run the sample with the **dbo.BulkCopyDemoMatchingColumns** table empty.</span></span> <span data-ttu-id="01bb9-162">从源加载所有行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-162">All rows load from the source.</span></span> <span data-ttu-id="01bb9-163">然后再次运行该示例而不清空该表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-163">Then run the sample again without emptying the table.</span></span> <span data-ttu-id="01bb9-164">引发异常，并且代码向控制台写入一条消息，通知您由于 primary key 约束冲突而未添加行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-164">An exception is thrown and the code writes a message to the console notifying you that rows weren't added because of primary key constraint violations.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-165">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-165">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-166">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-166">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-167">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-167">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.KeepIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.KeepIdentity/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-168">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-168">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-169">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-169">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlBulkCopy (System.Data.SqlClient.SqlConnection connection, System.Data.SqlClient.SqlBulkCopyOptions copyOptions, System.Data.SqlClient.SqlTransaction externalTransaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.SqlClient.SqlConnection connection, valuetype System.Data.SqlClient.SqlBulkCopyOptions copyOptions, class System.Data.SqlClient.SqlTransaction externalTransaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.#ctor(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlBulkCopyOptions,System.Data.SqlClient.SqlTransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As SqlConnection, copyOptions As SqlBulkCopyOptions, externalTransaction As SqlTransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlBulkCopy(System::Data::SqlClient::SqlConnection ^ connection, System::Data::SqlClient::SqlBulkCopyOptions copyOptions, System::Data::SqlClient::SqlTransaction ^ externalTransaction);" />
      <MemberSignature Language="F#" Value="new System.Data.SqlClient.SqlBulkCopy : System.Data.SqlClient.SqlConnection * System.Data.SqlClient.SqlBulkCopyOptions * System.Data.SqlClient.SqlTransaction -&gt; System.Data.SqlClient.SqlBulkCopy" Usage="new System.Data.SqlClient.SqlBulkCopy (connection, copyOptions, externalTransaction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.SqlClient.SqlConnection" />
        <Parameter Name="copyOptions" Type="System.Data.SqlClient.SqlBulkCopyOptions" />
        <Parameter Name="externalTransaction" Type="System.Data.SqlClient.SqlTransaction" />
      </Parameters>
      <Docs>
        <param name="connection"><span data-ttu-id="01bb9-170">将用于执行批量复制操作的已经打开的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-170">The already open <see cref="T:System.Data.SqlClient.SqlConnection" /> instance that will be used to perform the bulk copy.</span></span> <span data-ttu-id="01bb9-171">如果连接字符串不使用 <see langword="Integrated Security = true" />，则可以使用 <see cref="T:System.Data.SqlClient.SqlCredential" /> 来传递用户 ID 和密码，这比将用户 ID 和密码指定为连接字符串中的文本更安全。</span><span class="sxs-lookup"><span data-stu-id="01bb9-171">If your connection string does not use <see langword="Integrated Security = true" />, you can use <see cref="T:System.Data.SqlClient.SqlCredential" /> to pass the user ID and password more securely than by specifying the user ID and password as text in the connection string.</span></span></param>
        <param name="copyOptions"><span data-ttu-id="01bb9-172"><see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> 枚举中的值的组合，可确定将哪些数据源行复制到目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-172">A combination of values from the <see cref="T:System.Data.SqlClient.SqlBulkCopyOptions" /> enumeration that determines which data source rows are copied to the destination table.</span></span></param>
        <param name="externalTransaction"><span data-ttu-id="01bb9-173">现有的 <see cref="T:System.Data.SqlClient.SqlTransaction" /> 实例，批量复制操作将在该实例下进行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-173">An existing <see cref="T:System.Data.SqlClient.SqlTransaction" /> instance under which the bulk copy will occur.</span></span></param>
        <summary><span data-ttu-id="01bb9-174">使用提供的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 的现有打开实例初始化 <see cref="T:System.Data.SqlClient.SqlConnection" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-174">Initializes a new instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class using the supplied existing open instance of <see cref="T:System.Data.SqlClient.SqlConnection" />.</span></span> <span data-ttu-id="01bb9-175"><see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 实例的行为取决于 <paramref name="copyOptions" /> 参数中提供的选项。</span><span class="sxs-lookup"><span data-stu-id="01bb9-175">The <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance behaves according to options supplied in the <paramref name="copyOptions" /> parameter.</span></span> <span data-ttu-id="01bb9-176">如果提供非空 <see cref="T:System.Data.SqlClient.SqlTransaction" />，则复制操作将在该事务中执行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-176">If a non-null <see cref="T:System.Data.SqlClient.SqlTransaction" /> is supplied, the copy operations will be performed within that transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-177">如果选项包括 `UseInternalTransaction` 并且 `externalTransaction` 参数不为 null，则会引发**InvalidArgumentException** 。</span><span class="sxs-lookup"><span data-stu-id="01bb9-177">If options include `UseInternalTransaction` and the `externalTransaction` argument is not null, an **InvalidArgumentException** is thrown.</span></span>  
  
 <span data-ttu-id="01bb9-178">有关演示如何在事务中使用 `SqlBulkCopy` 的示例，请参阅[事务和大容量复制操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-178">For examples demonstrating how to use `SqlBulkCopy` in a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-179">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-179">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-180">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-180">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BatchSize">
      <MemberSignature Language="C#" Value="public int BatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BatchSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property BatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BatchSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BatchSize : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BatchSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01bb9-181">每批中的行数。</span><span class="sxs-lookup"><span data-stu-id="01bb9-181">Number of rows in each batch.</span></span> <span data-ttu-id="01bb9-182">在每批结束时，会将批中的行发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="01bb9-182">At the end of each batch, the rows in the batch are sent to the server.</span></span></summary>
        <value><span data-ttu-id="01bb9-183"><see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> 属性的整数值；如果未设置任何值，则为零。</span><span class="sxs-lookup"><span data-stu-id="01bb9-183">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BatchSize" /> property, or zero if no value has been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-184">当处理 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 行或没有更多的行要发送到目标数据源时，批处理完成。</span><span class="sxs-lookup"><span data-stu-id="01bb9-184">A batch is complete when <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows have been processed or there are no more rows to send to the destination data source.</span></span>  
  
 <span data-ttu-id="01bb9-185">零（默认值）指示每个 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 操作都是一个批处理。</span><span class="sxs-lookup"><span data-stu-id="01bb9-185">Zero (the default) indicates that each <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is a single batch.</span></span>  
  
 <span data-ttu-id="01bb9-186">如果在未使用 "<xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>" 选项的情况下声明了 <xref:System.Data.SqlClient.SqlBulkCopy> 实例，则会一次向服务器 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 行发送行，但不会执行与事务相关的操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-186">If the <xref:System.Data.SqlClient.SqlBulkCopy> instance has been declared without the <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> option in effect, rows are sent to the server <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> rows at a time, but no transaction-related action is taken.</span></span> <span data-ttu-id="01bb9-187">如果 <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> 有效，则每批行都作为单独的事务插入。</span><span class="sxs-lookup"><span data-stu-id="01bb9-187">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is in effect, each batch of rows is inserted as a separate transaction.</span></span>  
  
 <span data-ttu-id="01bb9-188"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 属性可随时设置。</span><span class="sxs-lookup"><span data-stu-id="01bb9-188">The <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> property can be set at any time.</span></span> <span data-ttu-id="01bb9-189">如果大容量复制已在进行中，则根据以前的批大小调整当前批的大小。</span><span class="sxs-lookup"><span data-stu-id="01bb9-189">If a bulk copy is already in progress, the current batch is sized according to the previous batch size.</span></span> <span data-ttu-id="01bb9-190">后续批次使用新的大小。</span><span class="sxs-lookup"><span data-stu-id="01bb9-190">Subsequent batches use the new size.</span></span> <span data-ttu-id="01bb9-191">如果 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 初始为零并在 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 操作已在进行时更改，则该操作将以单个批处理的方式加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-191">If the <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> is initially zero and changed while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is already in progress, that operation loads the data as a single batch.</span></span> <span data-ttu-id="01bb9-192">对同一 <xref:System.Data.SqlClient.SqlBulkCopy> 实例执行的任何后续 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 操作都使用新 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-192">Any subsequent <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operations on the same <xref:System.Data.SqlClient.SqlBulkCopy> instance use the new <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-193">下面的控制台应用程序演示如何以批处理50行的方式大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-193">The following console application demonstrates how to bulk load data in batches of 50 rows.</span></span> <span data-ttu-id="01bb9-194">有关演示 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 如何与事务一起使用的示例，请参阅[事务和大容量复制操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-194">For an example illustrating how <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> works with a transaction, see [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md).</span></span>  
  
 <span data-ttu-id="01bb9-195">在此示例中，首先将源数据从 SQL Server 表读取到 <xref:System.Data.SqlClient.SqlDataReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-195">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="01bb9-196">源数据不必位于 SQL Server 上;可以使用任何可读取到 <xref:System.Data.IDataReader> 或加载到 <xref:System.Data.DataTable>的数据源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-196">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-197">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-197">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-198">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-198">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-199">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-199">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.BatchSize#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.BatchSize/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-200">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-200">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-201">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-201">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="BulkCopyTimeout">
      <MemberSignature Language="C#" Value="public int BulkCopyTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BulkCopyTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property BulkCopyTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BulkCopyTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BulkCopyTimeout : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01bb9-202">操作在多少秒内完成才不算超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-202">Number of seconds for the operation to complete before it times out.</span></span></summary>
        <value><span data-ttu-id="01bb9-203"><see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> 属性的整数值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-203">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.BulkCopyTimeout" /> property.</span></span> <span data-ttu-id="01bb9-204">默认为 30 秒。</span><span class="sxs-lookup"><span data-stu-id="01bb9-204">The default is 30 seconds.</span></span> <span data-ttu-id="01bb9-205">值为 0 表示没有限制；大容量复制将无限期等待。</span><span class="sxs-lookup"><span data-stu-id="01bb9-205">A value of 0 indicates no limit; the bulk copy will wait indefinitely.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-206">如果操作超时，则不会提交事务，并从目标表中删除所有复制的行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-206">If the operation does time out, the transaction is not committed and all copied rows are removed from the destination table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-207">下面的控制台应用程序演示如何在大容量加载数据时修改超时时间为60秒。</span><span class="sxs-lookup"><span data-stu-id="01bb9-207">The following console application demonstrates how to modify the time-out to 60 seconds when bulk loading data.</span></span>  
  
 <span data-ttu-id="01bb9-208">在此示例中，首先将源数据从 SQL Server 表读取到 <xref:System.Data.SqlClient.SqlDataReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-208">In this example, the source data is first read from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="01bb9-209">源数据不必位于 SQL Server 上;可以使用任何可读取到 <xref:System.Data.IDataReader> 或加载到 <xref:System.Data.DataTable>的数据源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-209">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-210">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-210">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-211">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-211">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-212">如果源表和目标表位于同一个 SQL Server 实例中，则使用 [!INCLUDE[tsql](~/includes/tsql-md.md)]`INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-212">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a [!INCLUDE[tsql](~/includes/tsql-md.md)]`INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Timeout#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Timeout/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-213">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-213">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-214">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-214">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="sqlBulkCopy.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01bb9-215">关闭 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-215">Closes the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-216">对 <xref:System.Data.SqlClient.SqlBulkCopy> 对象调用 <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> 后，其他操作将不会成功。</span><span class="sxs-lookup"><span data-stu-id="01bb9-216">After you call a <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> on the <xref:System.Data.SqlClient.SqlBulkCopy> object, no other operation will succeed.</span></span> <span data-ttu-id="01bb9-217">对 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 方法的调用将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-217">Calls to the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="01bb9-218">从 <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> 事件调用 <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> 方法将导致引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-218">Calling the <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method from the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event causes an <xref:System.InvalidOperationException> to be thrown.</span></span>  
  
 <span data-ttu-id="01bb9-219">请注意，打开的 <xref:System.Data.SqlClient.SqlBulkCopy> 实例在 `using` 块的末尾隐式关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-219">Note that open <xref:System.Data.SqlClient.SqlBulkCopy> instances are closed implicitly at the end of a `using` block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-220">下面的示例使用同一个 <xref:System.Data.SqlClient.SqlBulkCopy> 实例将销售订单及其关联详细信息添加到两个目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-220">The following example uses the same <xref:System.Data.SqlClient.SqlBulkCopy> instance to add sales orders and their associated details to two destination tables.</span></span> <span data-ttu-id="01bb9-221">由于**AdventureWorks**销售订单表很大，因此该示例只读取某个帐号号下的订单，并将这些订单和详细信息大容量复制到目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-221">Because the **AdventureWorks** sales order tables are large, the sample reads only orders placed by a certain account number and bulk copies those orders and details to the destination tables.</span></span> <span data-ttu-id="01bb9-222">仅当大容量复制操作完成后，才使用 <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-222">The <xref:System.Data.SqlClient.SqlBulkCopy.Close%2A> method is used only after both bulk copy operations are complete.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-223">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-223">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-224">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-224">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-225">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-225">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.OrdersDetails#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.OrdersDetails/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-226">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-226">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-227">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-227">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ColumnMappings">
      <MemberSignature Language="C#" Value="public System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlClient.SqlBulkCopyColumnMappingCollection ColumnMappings" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnMappings As SqlBulkCopyColumnMappingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ ColumnMappings { System::Data::SqlClient::SqlBulkCopyColumnMappingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMappings : System.Data.SqlClient.SqlBulkCopyColumnMappingCollection" Usage="System.Data.SqlClient.SqlBulkCopy.ColumnMappings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlBulkCopyColumnMappingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01bb9-228">返回 <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> 项的集合。</span><span class="sxs-lookup"><span data-stu-id="01bb9-228">Returns a collection of <see cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" /> items.</span></span> <span data-ttu-id="01bb9-229">列映射定义数据源中的列与目标中的列之间的关系。</span><span class="sxs-lookup"><span data-stu-id="01bb9-229">Column mappings define the relationships between columns in the data source and columns in the destination.</span></span></summary>
        <value><span data-ttu-id="01bb9-230">列映射集合。</span><span class="sxs-lookup"><span data-stu-id="01bb9-230">A collection of column mappings.</span></span> <span data-ttu-id="01bb9-231">默认情况下为空集合。</span><span class="sxs-lookup"><span data-stu-id="01bb9-231">By default, it is an empty collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-232">如果数据源和目标表具有相同的列数，并且数据源中每个源列的序号位置与相应目标列的序号位置匹配，则不需要 <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 集合。</span><span class="sxs-lookup"><span data-stu-id="01bb9-232">If the data source and the destination table have the same number of columns, and the ordinal position of each source column within the data source matches the ordinal position of the corresponding destination column, the <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection is unnecessary.</span></span> <span data-ttu-id="01bb9-233">但是，如果列数不同，或者序号位置不一致，则必须使用 <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 确保将数据复制到正确的列。</span><span class="sxs-lookup"><span data-stu-id="01bb9-233">However, if the column counts differ, or the ordinal positions are not consistent, you must use <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> to make sure that data is copied into the correct columns.</span></span>  
  
 <span data-ttu-id="01bb9-234">在执行大容量复制操作期间，可以访问此集合，但不能对其进行更改。</span><span class="sxs-lookup"><span data-stu-id="01bb9-234">During the execution of a bulk copy operation, this collection can be accessed, but it cannot be changed.</span></span> <span data-ttu-id="01bb9-235">任何更改尝试都将引发 <xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-235">Any attempt to change it will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.SqlClient.SqlBulkCopyColumnMapping" />
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-236">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-236">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-237">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-237">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DestinationTableName">
      <MemberSignature Language="C#" Value="public string DestinationTableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DestinationTableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberSignature Language="VB.NET" Value="Public Property DestinationTableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DestinationTableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DestinationTableName : string with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.DestinationTableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01bb9-238">服务器上的目标表的名称。</span><span class="sxs-lookup"><span data-stu-id="01bb9-238">Name of the destination table on the server.</span></span></summary>
        <value><span data-ttu-id="01bb9-239"><see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 属性的字符串值，如果未提供任何值，则为 null。</span><span class="sxs-lookup"><span data-stu-id="01bb9-239">The string value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property, or null if none as been supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-240">如果调用 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 时未设置 <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A>，将引发 <xref:System.ArgumentNullException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-240">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> has not been set when <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> is called, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="01bb9-241">如果 <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> 在 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 操作运行时修改，则更改不会影响当前操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-241">If <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is modified while a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is running, the change does not affect the current operation.</span></span> <span data-ttu-id="01bb9-242">新 <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> 值将在下一次调用 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 方法时使用。</span><span class="sxs-lookup"><span data-stu-id="01bb9-242">The new <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> value is used the next time a <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called.</span></span>  
  
 <span data-ttu-id="01bb9-243"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> 是由三部分组成的名称（`<database>.<owningschema>.<name>`）。</span><span class="sxs-lookup"><span data-stu-id="01bb9-243"><xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> is a three-part name (`<database>.<owningschema>.<name>`).</span></span> <span data-ttu-id="01bb9-244">可以使用表名称的数据库和所属架构（如果选择）对表名称进行限定。</span><span class="sxs-lookup"><span data-stu-id="01bb9-244">You can qualify the table name with its database and owning schema if you choose.</span></span> <span data-ttu-id="01bb9-245">但是，如果表名使用下划线（"_"）或任何其他特殊字符，则必须使用方括号（`[<database>.<owningschema>.<name_01>]`）对名称进行转义。</span><span class="sxs-lookup"><span data-stu-id="01bb9-245">However, if the table name uses an underscore ("_") or any other special characters, you must escape the name using surrounding brackets as in (`[<database>.<owningschema>.<name_01>]`).</span></span> <span data-ttu-id="01bb9-246">有关详细信息，请参阅 [Database Identifiers](/sql/relational-databases/databases/database-identifiers)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-246">For more information, see [Database Identifiers](/sql/relational-databases/databases/database-identifiers).</span></span>  
  
 <span data-ttu-id="01bb9-247">您可以使用 <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> 属性的值（例如 `tempdb..#table` 或 `tempdb.<owner>.#table`）将数据大容量复制到临时表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-247">You can bulk-copy data to a temporary table by using a value such as `tempdb..#table` or `tempdb.<owner>.#table` for the <xref:System.Data.SqlClient.SqlBulkCopy.DestinationTableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-248">下面的控制台应用程序演示如何使用已打开的连接大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-248">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="01bb9-249">目标表是**AdventureWorks**数据库中的表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-249">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="01bb9-250">在此示例中，首先使用连接来将 SQL Server 表中的数据读取到 <xref:System.Data.SqlClient.SqlDataReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-250">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="01bb9-251">源数据不必位于 SQL Server 上;可以使用任何可读取到 <xref:System.Data.IDataReader> 或加载到 <xref:System.Data.DataTable>的数据源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-251">The source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-252">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-252">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-253">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-253">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-254">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-254">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.Single#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.Single/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-255">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-255">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-256">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-256">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableStreaming">
      <MemberSignature Language="C#" Value="public bool EnableStreaming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableStreaming" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableStreaming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableStreaming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableStreaming : bool with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.EnableStreaming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01bb9-257">启用或禁用 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象，以流式传输 <see cref="T:System.Data.IDataReader" /> 对象中的数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-257">Enables or disables a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object to stream data from an <see cref="T:System.Data.IDataReader" /> object.</span></span></summary>
        <value><span data-ttu-id="01bb9-258">如果 <see langword="true" /> 对象可以流式传输 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象中的数据，则为 <see cref="T:System.Data.IDataReader" />；否则为 false。</span><span class="sxs-lookup"><span data-stu-id="01bb9-258"><see langword="true" /> if a <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object can stream data from an <see cref="T:System.Data.IDataReader" /> object; otherwise, false.</span></span> <span data-ttu-id="01bb9-259">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-259">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-260">`true`<xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A> 时，<xref:System.Data.SqlClient.SqlBulkCopy> 使用 <xref:System.Data.CommandBehavior.SequentialAccess>从 <xref:System.Data.IDataReader> 对象中读取内容，使用 <xref:System.Data.IDataReader> 流式处理功能优化内存使用。</span><span class="sxs-lookup"><span data-stu-id="01bb9-260">When <xref:System.Data.SqlClient.SqlBulkCopy.EnableStreaming%2A> is `true`, <xref:System.Data.SqlClient.SqlBulkCopy> reads from an <xref:System.Data.IDataReader> object using <xref:System.Data.CommandBehavior.SequentialAccess>, optimizing memory usage by using the <xref:System.Data.IDataReader> streaming capabilities.</span></span> <span data-ttu-id="01bb9-261">当该参数设置为 false 时，<xref:System.Data.SqlClient.SqlBulkCopy> 类将 <xref:System.Data.IDataReader> 对象返回的所有数据加载到内存中，然后将其发送到 SQL Server 或 SQL Azure。</span><span class="sxs-lookup"><span data-stu-id="01bb9-261">When it's set to false, the <xref:System.Data.SqlClient.SqlBulkCopy> class loads all the data returned by the <xref:System.Data.IDataReader> object into memory before sending it to SQL Server or SQL Azure.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyAfter">
      <MemberSignature Language="C#" Value="public int NotifyAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotifyAfter" />
      <MemberSignature Language="DocId" Value="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NotifyAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NotifyAfter : int with get, set" Usage="System.Data.SqlClient.SqlBulkCopy.NotifyAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01bb9-262">定义生成通知事件之前要处理的行数。</span><span class="sxs-lookup"><span data-stu-id="01bb9-262">Defines the number of rows to be processed before generating a notification event.</span></span></summary>
        <value><span data-ttu-id="01bb9-263"><see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> 属性的整数值，如果未设置任何属性，则为零。</span><span class="sxs-lookup"><span data-stu-id="01bb9-263">The integer value of the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property, or zero if the property has not been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-264">此属性设计用于阐释大容量复制操作进度的用户界面组件。</span><span class="sxs-lookup"><span data-stu-id="01bb9-264">This property is designed for user interface components that illustrate the progress of a bulk copy operation.</span></span> <span data-ttu-id="01bb9-265">它指示生成通知事件之前要处理的行数。</span><span class="sxs-lookup"><span data-stu-id="01bb9-265">It indicates the number of rows to be processed before generating a notification event.</span></span> <span data-ttu-id="01bb9-266">即使正在进行大容量复制操作，也可以随时设置 <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="01bb9-266">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property can be set at any time, even while a bulk copy operation is underway.</span></span> <span data-ttu-id="01bb9-267">在大容量复制操作过程中所做的更改将在下一次通知后生效。</span><span class="sxs-lookup"><span data-stu-id="01bb9-267">Changes made during a bulk copy operation take effect after the next notification.</span></span> <span data-ttu-id="01bb9-268">新设置适用于在同一实例上的所有后续操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-268">The new setting applies to all subsequent operations on the same instance.</span></span>  
  
 <span data-ttu-id="01bb9-269">如果 <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> 设置为小于零的数字，则会引发 <xref:System.ArgumentOutOfRangeException>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-269">If <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> is set to a number less than zero, an <xref:System.ArgumentOutOfRangeException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-270">下面的控制台应用程序演示如何使用已打开的连接大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-270">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="01bb9-271">设置 <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> 属性，以便在将每50行复制到表后调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="01bb9-271">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="01bb9-272">在此示例中，首先使用连接来将 SQL Server 表中的数据读取到 <xref:System.Data.SqlClient.SqlDataReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-272">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="01bb9-273">然后，打开第二个连接以大容量复制数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-273">Then a second connection is opened to bulk copy the data.</span></span> <span data-ttu-id="01bb9-274">请注意，源数据不必位于 SQL Server 上;可以使用任何可读取到 <xref:System.Data.IDataReader> 或加载到 <xref:System.Data.DataTable>的数据源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-274">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-275">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-275">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-276">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-276">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-277">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-277">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-278">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-278">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-279">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-279">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SqlRowsCopied">
      <MemberSignature Language="C#" Value="public event System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.SqlClient.SqlRowsCopiedEventHandler SqlRowsCopied" />
      <MemberSignature Language="DocId" Value="E:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SqlRowsCopied As SqlRowsCopiedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::SqlClient::SqlRowsCopiedEventHandler ^ SqlRowsCopied;" />
      <MemberSignature Language="F#" Value="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " Usage="member this.SqlRowsCopied : System.Data.SqlClient.SqlRowsCopiedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlClient.SqlRowsCopiedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01bb9-280">每当 <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> 属性指定的行数被处理后会发生。</span><span class="sxs-lookup"><span data-stu-id="01bb9-280">Occurs every time that the number of rows specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.NotifyAfter" /> property have been processed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-281">请注意，<xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> 和 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 的设置是独立的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-281">Note that the settings of <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> and <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> are independent.</span></span> <span data-ttu-id="01bb9-282">收到 <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> 事件并不意味着已将所有行发送到服务器或已提交。</span><span class="sxs-lookup"><span data-stu-id="01bb9-282">Receipt of a <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event does not imply that any rows have been sent to the server or committed.</span></span>  
  
 <span data-ttu-id="01bb9-283">不能从该事件调用 SqlBulkCopy （<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>）或 SqlConnection。关闭（<xref:System.Data.SqlClient.SqlConnection.Close%2A>）。</span><span class="sxs-lookup"><span data-stu-id="01bb9-283">You cannot call SqlBulkCopy.Close (<xref:System.Data.SqlClient.SqlBulkCopy.Close%2A>) or SqlConnection.Close (<xref:System.Data.SqlClient.SqlConnection.Close%2A>) from this event.</span></span> <span data-ttu-id="01bb9-284">执行此操作将导致引发 <xref:System.InvalidOperationException>，且 <xref:System.Data.SqlClient.SqlBulkCopy> 对象状态不会更改。</span><span class="sxs-lookup"><span data-stu-id="01bb9-284">Doing this will cause an <xref:System.InvalidOperationException> being thrown, and the <xref:System.Data.SqlClient.SqlBulkCopy> object state will not change.</span></span> <span data-ttu-id="01bb9-285">如果用户想要从事件中取消操作，则可以使用 <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> 的 <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="01bb9-285">If the user wants to cancel the operation from the event, the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property of the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs> can be used.</span></span> <span data-ttu-id="01bb9-286">（有关使用 <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> 属性的示例，请参阅[事务和批量复制操作](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md)。）</span><span class="sxs-lookup"><span data-stu-id="01bb9-286">(See [Transaction and Bulk Copy Operations](~/docs/framework/data/adonet/sql/transaction-and-bulk-copy-operations.md) for examples that use the <xref:System.Data.SqlClient.SqlRowsCopiedEventArgs.Abort%2A> property.)</span></span>  
  
 <span data-ttu-id="01bb9-287">在执行大容量复制操作期间，连接中不支持任何操作（例如事务活动），建议您不要使用 <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> 事件期间使用的相同连接。</span><span class="sxs-lookup"><span data-stu-id="01bb9-287">No action, such as transaction activity, is supported in the connection during the execution of the bulk copy operation, and it is recommended that you not use the same connection used during the <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> event.</span></span> <span data-ttu-id="01bb9-288">但是，你可以打开其他连接。</span><span class="sxs-lookup"><span data-stu-id="01bb9-288">However, you can open a different connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-289">下面的控制台应用程序演示如何使用已打开的连接大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-289">The following console application demonstrates how to bulk load data using a connection that is already open.</span></span> <span data-ttu-id="01bb9-290">设置 <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> 属性，以便在将每50行复制到表后调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="01bb9-290">The <xref:System.Data.SqlClient.SqlBulkCopy.NotifyAfter%2A> property is set so that the event handler is called after every 50 rows copied to the table.</span></span>  
  
 <span data-ttu-id="01bb9-291">在此示例中，首先使用连接来将 SQL Server 表中的数据读取到 <xref:System.Data.SqlClient.SqlDataReader> 实例。</span><span class="sxs-lookup"><span data-stu-id="01bb9-291">In this example, the connection is first used to read data from a SQL Server table to a <xref:System.Data.SqlClient.SqlDataReader> instance.</span></span> <span data-ttu-id="01bb9-292">请注意，源数据不必位于 SQL Server 上;可以使用任何可读取到 <xref:System.Data.IDataReader> 或加载到 <xref:System.Data.DataTable>的数据源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-292">Note that the source data does not have to be located on SQL Server; you can use any data source that can be read to an <xref:System.Data.IDataReader> or loaded to a <xref:System.Data.DataTable>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-293">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-293">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-294">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-294">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-295">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-295">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.NotifyAfter#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.NotifyAfter/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-296">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-296">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-297">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-297">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberSignature Language="F#" Value="abstract member System.IDisposable.Dispose : unit -&gt; unit&#xA;override this.System.IDisposable.Dispose : unit -&gt; unit" Usage="sqlBulkCopy.System.IDisposable.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01bb9-298">释放由 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 类的当前实例占用的所有资源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-298">Releases all resources used by the current instance of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-299">在完成使用 `Dispose` 后，应调用 <xref:System.Data.SqlClient.SqlBulkCopy>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-299">Call `Dispose` when you are finished using the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="01bb9-300">`Dispose` 方法使 <xref:System.Data.SqlClient.SqlBulkCopy> 处于不可用状态。</span><span class="sxs-lookup"><span data-stu-id="01bb9-300">The `Dispose` method leaves the <xref:System.Data.SqlClient.SqlBulkCopy> in an unusable state.</span></span> <span data-ttu-id="01bb9-301">调用 `Dispose`后，必须释放对 <xref:System.Data.SqlClient.SqlBulkCopy> 的所有引用，以便垃圾回收器可以回收 <xref:System.Data.SqlClient.SqlBulkCopy> 占用的内存。</span><span class="sxs-lookup"><span data-stu-id="01bb9-301">After calling `Dispose`, you must release all references to the <xref:System.Data.SqlClient.SqlBulkCopy> so the garbage collector can reclaim the memory that the <xref:System.Data.SqlClient.SqlBulkCopy> was occupying.</span></span>  
  
 <span data-ttu-id="01bb9-302">有关详细信息，请参阅[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[实现 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-302">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01bb9-303">每次释放对 `Dispose` 的最后一个引用前，均应调用 <xref:System.Data.SqlClient.SqlBulkCopy>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-303">Always call `Dispose` before you release your last reference to the <xref:System.Data.SqlClient.SqlBulkCopy>.</span></span> <span data-ttu-id="01bb9-304">否则，在垃圾回收器调用 <xref:System.Data.SqlClient.SqlBulkCopy> 对象的 `Finalize` 方法之前，该对象正在使用的资源不会被释放。</span><span class="sxs-lookup"><span data-stu-id="01bb9-304">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Data.SqlClient.SqlBulkCopy> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-305">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-305">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServer">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01bb9-306">将所有行从数据源复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-306">Copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-307">如果禁用多个活动的结果集（MARS），<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 会使连接繁忙。</span><span class="sxs-lookup"><span data-stu-id="01bb9-307">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="01bb9-308">如果启用了 MARS，则可以在同一连接中将对 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 的调用交替到其他命令。</span><span class="sxs-lookup"><span data-stu-id="01bb9-308">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-309">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-309">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-310">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-310">ADO.NET Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As DbDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.Common.DbDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="01bb9-311">一个 <see cref="T:System.Data.Common.DbDataReader" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-311">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-312">将所有行从提供的 <see cref="T:System.Data.Common.DbDataReader" /> 数组复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-312">Copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (rows As DataRow())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataRow[] -&gt; unit" Usage="sqlBulkCopy.WriteToServer rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="01bb9-313">将复制到目标表的 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="01bb9-313">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-314">将所有行从提供的 <see cref="T:System.Data.DataRow" /> 数组复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-314">Copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-315">当大容量复制操作正在进行时，关联的目标 <xref:System.Data.SqlClient.SqlConnection> 忙于提供服务，并且不能对该连接执行任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-315">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="01bb9-316"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 集合从 <xref:System.Data.DataRow> 列映射到目标数据库表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-316">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataRow> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-317">下面的控制台应用程序演示如何从 <xref:System.Data.DataRow> 数组大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-317">The following console application demonstrates how to bulk load data from a <xref:System.Data.DataRow> array.</span></span> <span data-ttu-id="01bb9-318">目标表是**AdventureWorks**数据库中的表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-318">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="01bb9-319">在此示例中，将在运行时创建 <xref:System.Data.DataTable>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-319">In this example, a <xref:System.Data.DataTable> is created at run time.</span></span> <span data-ttu-id="01bb9-320">将从要复制到目标表的 <xref:System.Data.DataTable> 中选择单个行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-320">A single row is selected from the <xref:System.Data.DataTable> to copy to the destination table.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-321">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-321">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-322">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-322">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-323">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-323">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.RowArray#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.RowArray/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-324">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-324">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-325">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-325">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable -&gt; unit" Usage="sqlBulkCopy.WriteToServer table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="01bb9-326">一个 <see cref="T:System.Data.DataTable" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-326">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-327">将所有行从提供的 <see cref="T:System.Data.DataTable" /> 复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-327">Copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-328"><xref:System.Data.DataTable> 中的所有行都将复制到目标表中，但已删除的行除外。</span><span class="sxs-lookup"><span data-stu-id="01bb9-328">All rows in the <xref:System.Data.DataTable> are copied to the destination table except those that have been deleted.</span></span>  
  
 <span data-ttu-id="01bb9-329">当大容量复制操作正在进行时，关联的目标 <xref:System.Data.SqlClient.SqlConnection> 忙于提供服务，并且不能对该连接执行任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-329">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="01bb9-330"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 集合从 <xref:System.Data.DataTable> 列映射到目标数据库表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-330">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-331">下面的控制台应用程序演示如何从 <xref:System.Data.DataTable>中大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-331">The following Console application demonstrates how to bulk load data from a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="01bb9-332">目标表是**AdventureWorks**数据库中的表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-332">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="01bb9-333">在此示例中，<xref:System.Data.DataTable> 在运行时创建，是 `SqlBulkCopy` 操作的源。</span><span class="sxs-lookup"><span data-stu-id="01bb9-333">In this example, a <xref:System.Data.DataTable> is created at run time and is the source of the `SqlBulkCopy` operation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-334">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-334">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-335">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-335">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-336">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-336">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataTable#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataTable/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-337">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-337">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-338">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-338">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.IDataReader -&gt; unit" Usage="sqlBulkCopy.WriteToServer reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="01bb9-339">一个 <see cref="T:System.Data.IDataReader" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-339">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-340">将所有行从提供的 <see cref="T:System.Data.IDataReader" /> 复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-340">Copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-341">复制操作从读取器中的下一个可用行开始。</span><span class="sxs-lookup"><span data-stu-id="01bb9-341">The copy operation starts at the next available row in the reader.</span></span> <span data-ttu-id="01bb9-342">大多数情况下，读取器只是由 <xref:System.Data.IDbCommand.ExecuteReader%2A> 或类似调用返回，因此下一个可用行是第一行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-342">Most of the time, the reader was just returned by <xref:System.Data.IDbCommand.ExecuteReader%2A> or a similar call, so the next available row is the first row.</span></span> <span data-ttu-id="01bb9-343">若要处理多个结果，请对数据读取器调用 <xref:System.Data.IDataReader.NextResult%2A> 并再次调用 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-343">To process multiple results, call <xref:System.Data.IDataReader.NextResult%2A> on the data reader and call <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> again.</span></span>  
  
 <span data-ttu-id="01bb9-344">请注意，使用 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 会修改读取器的状态。</span><span class="sxs-lookup"><span data-stu-id="01bb9-344">Note that using <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> modifies the state of the reader.</span></span> <span data-ttu-id="01bb9-345">方法将调用 <xref:System.Data.IDataReader.Read%2A>，直到该方法返回 false、中止操作或发生错误。</span><span class="sxs-lookup"><span data-stu-id="01bb9-345">The method will call <xref:System.Data.IDataReader.Read%2A> until it returns false, the operation is aborted, or an error occurs.</span></span> <span data-ttu-id="01bb9-346">这意味着，当 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 操作完成时，数据读取器将处于不同的状态，可能在结果集的末尾。</span><span class="sxs-lookup"><span data-stu-id="01bb9-346">This means that the data reader will be in a different state, probably at the end of the result set, when the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> operation is complete.</span></span>  
  
 <span data-ttu-id="01bb9-347">当大容量复制操作正在进行时，关联的目标 <xref:System.Data.SqlClient.SqlConnection> 忙于提供服务，并且不能对该连接执行任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-347">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="01bb9-348"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 集合将数据读取器列映射到目标数据库表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-348">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the data reader columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-349">下面的控制台应用程序演示如何从 <xref:System.Data.SqlClient.SqlDataReader>中大容量加载数据。</span><span class="sxs-lookup"><span data-stu-id="01bb9-349">The following console application demonstrates how to bulk load data from a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="01bb9-350">目标表是**AdventureWorks**数据库中的表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-350">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-351">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-351">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-352">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-352">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-353">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-353">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.ConnectionString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.ConnectionString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-354">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-354">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-355">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-355">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToServer">
      <MemberSignature Language="C#" Value="public void WriteToServer (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteToServer(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToServer (table As DataTable, rowState As DataRowState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteToServer(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServer : System.Data.DataTable * System.Data.DataRowState -&gt; unit" Usage="sqlBulkCopy.WriteToServer (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="01bb9-356">一个 <see cref="T:System.Data.DataTable" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-356">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="01bb9-357">一个来自 <see cref="T:System.Data.DataRowState" /> 枚举的值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-357">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="01bb9-358">只有与行状态匹配的行才会复制到目标中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-358">Only rows matching the row state are copied to the destination.</span></span></param>
        <summary><span data-ttu-id="01bb9-359">仅将与提供的 <see cref="T:System.Data.DataTable" /> 中提供的行状态匹配的行复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-359">Copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-360">仅在 `rowState` 参数中指示的状态 <xref:System.Data.DataTable> 中的行被复制到目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-360">Only rows in the <xref:System.Data.DataTable> that are in the states indicated in the `rowState` argument and have not been deleted are copied to the destination table.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="01bb9-361">如果指定 <xref:System.Data.DataRowState.Deleted>，则任何 <xref:System.Data.DataRowState.Unchanged>、<xref:System.Data.DataRowState.Added>和 <xref:System.Data.DataRowState.Modified> 行也将复制到服务器。</span><span class="sxs-lookup"><span data-stu-id="01bb9-361">If <xref:System.Data.DataRowState.Deleted> is specified, any <xref:System.Data.DataRowState.Unchanged>, <xref:System.Data.DataRowState.Added>, and <xref:System.Data.DataRowState.Modified> rows will also be copied to the server.</span></span> <span data-ttu-id="01bb9-362">不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="01bb9-362">No exception will be raised.</span></span>  
  
 <span data-ttu-id="01bb9-363">当大容量复制操作正在进行时，关联的目标 <xref:System.Data.SqlClient.SqlConnection> 忙于提供服务，并且不能对该连接执行任何其他操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-363">While the bulk copy operation is in progress, the associated destination <xref:System.Data.SqlClient.SqlConnection> is busy serving it, and no other operations can be performed on the connection.</span></span>  
  
 <span data-ttu-id="01bb9-364"><xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> 集合从 <xref:System.Data.DataTable> 列映射到目标数据库表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-364">The <xref:System.Data.SqlClient.SqlBulkCopy.ColumnMappings%2A> collection maps from the <xref:System.Data.DataTable> columns to the destination database table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01bb9-365">下面的控制台应用程序演示如何只大容量加载 <xref:System.Data.DataTable> 中与指定状态匹配的行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-365">The following Console application demonstrates how to bulk load only the rows in a <xref:System.Data.DataTable> that match a specified state.</span></span> <span data-ttu-id="01bb9-366">在这种情况下，只会添加未更改的行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-366">In this case, only unchanged rows are added.</span></span> <span data-ttu-id="01bb9-367">目标表是**AdventureWorks**数据库中的表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-367">The destination table is a table in the **AdventureWorks** database.</span></span>  
  
 <span data-ttu-id="01bb9-368">在此示例中，将在运行时创建一个 <xref:System.Data.DataTable>，并向其中添加三个行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-368">In this example, a <xref:System.Data.DataTable> is created at run time and three rows are added to it.</span></span> <span data-ttu-id="01bb9-369">在执行 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 方法之前，将对其中一行进行编辑。</span><span class="sxs-lookup"><span data-stu-id="01bb9-369">Before the <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is executed, one of the rows is edited.</span></span> <span data-ttu-id="01bb9-370">使用 `DataRowState.Unchanged` `rowState` 参数调用 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 方法，因此仅将两个未更改的行大容量复制到目标。</span><span class="sxs-lookup"><span data-stu-id="01bb9-370">The <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> method is called with a `DataRowState.Unchanged` `rowState` argument, so only the two unchanged rows are bulk copied to the destination.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="01bb9-371">除非已按照[大容量复制示例设置](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md)中所述创建了工作表，否则此示例将不会运行。</span><span class="sxs-lookup"><span data-stu-id="01bb9-371">This sample will not run unless you have created the work tables as described in [Bulk Copy Example Setup](~/docs/framework/data/adonet/sql/bulk-copy-example-setup.md).</span></span> <span data-ttu-id="01bb9-372">提供此代码是为了演示仅使用 SqlBulkCopy 时的语法。</span><span class="sxs-lookup"><span data-stu-id="01bb9-372">This code is provided to demonstrate the syntax for using **SqlBulkCopy** only.</span></span> <span data-ttu-id="01bb9-373">如果源表和目标表位于同一个 SQL Server 实例中，则使用 Transact-sql `INSERT ... SELECT` 语句复制数据会更加简单快捷。</span><span class="sxs-lookup"><span data-stu-id="01bb9-373">If the source and destination tables are in the same SQL Server instance, it is easier and faster to use a Transact-SQL `INSERT ... SELECT` statement to copy the data.</span></span>  
  
 [!code-csharp[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/CS/source.cs#1)]
 [!code-vb[DataWorks SqlBulkCopy.DataRowState#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlBulkCopy.DataRowState/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataRowState" />
        <related type="Article" href="~/docs/framework/data/adonet/sql/bulk-copy-operations-in-sql-server.md"><span data-ttu-id="01bb9-374">SQL Server 中的批量复制操作</span><span class="sxs-lookup"><span data-stu-id="01bb9-374">Bulk Copy Operations in SQL Server</span></span></related>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="01bb9-375">ADO.NET 概述</span><span class="sxs-lookup"><span data-stu-id="01bb9-375">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteToServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01bb9-376"><see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" /> 的异步版本，它将所有行从数据源复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-376">An asynchronous version of <see cref="Overload:System.Data.SqlClient.SqlBulkCopy.WriteToServer" />, which copies all rows from a data source to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-377">如果禁用多个活动的结果集（MARS），<xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 会使连接繁忙。</span><span class="sxs-lookup"><span data-stu-id="01bb9-377">If multiple active result sets (MARS) is disabled, <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> makes the connection busy.</span></span> <span data-ttu-id="01bb9-378">如果启用了 MARS，则可以在同一连接中将对 <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> 的调用交替到其他命令。</span><span class="sxs-lookup"><span data-stu-id="01bb9-378">If MARS is enabled, you can interleave calls to <xref:System.Data.SqlClient.SqlBulkCopy.WriteToServer%2A> with other commands in the same connection.</span></span>  
  
 <span data-ttu-id="01bb9-379">失败时回滚的行数取决于以下几项：</span><span class="sxs-lookup"><span data-stu-id="01bb9-379">The number of rows that are rolled back when one fails depends on several things:</span></span>  
  
-   <span data-ttu-id="01bb9-380">如果指定 <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction>。</span><span class="sxs-lookup"><span data-stu-id="01bb9-380">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is specified.</span></span>  
  
-   <span data-ttu-id="01bb9-381">如果有您自己的事务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-381">If you have your own transaction.</span></span>  
  
-   <span data-ttu-id="01bb9-382"><xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-382">The value of <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>.</span></span>  
  
 <span data-ttu-id="01bb9-383">如果在向服务器发送数据时出现错误，则将回滚当前批处理（由 <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>指定）。</span><span class="sxs-lookup"><span data-stu-id="01bb9-383">When there is an error while sending data to the server, the current batch (as specified by <xref:System.Data.SqlClient.SqlBulkCopy.BatchSize%2A>) will be rolled back.</span></span> <span data-ttu-id="01bb9-384">如果未指定 <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> 并且您有自己的事务，则将回滚整个事务（还包括以前的所有批处理）。</span><span class="sxs-lookup"><span data-stu-id="01bb9-384">If <xref:System.Data.SqlClient.SqlBulkCopyOptions.UseInternalTransaction> is not specified and you have your own transaction, the entire transaction will be rolled back (which includes all previous batches as well).</span></span>  
  
 <span data-ttu-id="01bb9-385">使用 <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> 了解已复制到服务器的行数。</span><span class="sxs-lookup"><span data-stu-id="01bb9-385">Use <xref:System.Data.SqlClient.SqlBulkCopy.SqlRowsCopied> to know how many rows were copied to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As DbDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="01bb9-386">一个 <see cref="T:System.Data.Common.DbDataReader" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-386">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-387"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /> 的异步版本，它将所有行从提供的 <see cref="T:System.Data.Common.DbDataReader" /> 数组复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-387">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-388">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-388">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="01bb9-389">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-389">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (rows As DataRow()) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync rows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="01bb9-390">将复制到目标表的 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="01bb9-390">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-391"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> 的异步版本，它将所有行从提供的 <see cref="T:System.Data.DataRow" /> 数组复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-391">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-392">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-392">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-393">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-393">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-394">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-394">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-395">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-395">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-396">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-396">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-397">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-397">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-398">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-398">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-399">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-399">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="01bb9-400">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-400"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-401">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-401">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="01bb9-402">一个 <see cref="T:System.Data.DataTable" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-402">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-403"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> 的异步版本，它将提供的 <see cref="T:System.Data.DataTable" /> 中的所有行复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-403">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-404">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-404">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-405">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-405">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-406">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-406">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-407">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-407">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-408">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-408">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-409">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-409">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-410">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-410">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-411">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-411">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="01bb9-412">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-412"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-413">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-413">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As IDataReader) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="01bb9-414">一个 <see cref="T:System.Data.IDataReader" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-414">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <summary><span data-ttu-id="01bb9-415"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> 的异步版本，它将提供的 <see cref="T:System.Data.IDataReader" /> 中的所有行复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-415">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-416">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-416">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-417">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-417">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-418">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-418">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-419">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-419">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-420">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-420">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-421">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-421">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-422">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-422">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-423">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-423">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
<span data-ttu-id="01bb9-424">在完成的 <see cref="T:System.Data.IDataReader" /> 返回之前，<see cref="T:System.Threading.Tasks.Task" /> 已关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-424">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
<span data-ttu-id="01bb9-425">在完成的 <see cref="T:System.Data.IDataReader" /> 返回之前，与 <see cref="T:System.Threading.Tasks.Task" /> 相关的连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-425">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
 <span data-ttu-id="01bb9-426">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-426"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-427">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-427">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.Common.DbDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.Common.DbDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As DbDataReader, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::Common::DbDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.Common.DbDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="01bb9-428">一个 <see cref="T:System.Data.Common.DbDataReader" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-428">A <see cref="T:System.Data.Common.DbDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="01bb9-429">取消指令。</span><span class="sxs-lookup"><span data-stu-id="01bb9-429">The cancellation instruction.</span></span> <span data-ttu-id="01bb9-430">此参数中的 <see cref="P:System.Threading.CancellationToken.None" /> 值将使此方法等效于 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-430">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.Common.DbDataReader)" />.</span></span></param>
        <summary><span data-ttu-id="01bb9-431"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" /> 的异步版本，它将所有行从提供的 <see cref="T:System.Data.Common.DbDataReader" /> 数组复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-431">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.Common.DbDataReader)" />, which copies all rows from the supplied <see cref="T:System.Data.Common.DbDataReader" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-432">返回 <see cref="T:System.Threading.Tasks.Task" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-432">Returns <see cref="T:System.Threading.Tasks.Task" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataRow[] rows, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataRow[] rows, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (rows As DataRow(), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(cli::array &lt;System::Data::DataRow ^&gt; ^ rows, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataRow[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (rows, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rows" Type="System.Data.DataRow[]" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="rows"><span data-ttu-id="01bb9-433">将复制到目标表的 <see cref="T:System.Data.DataRow" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="01bb9-433">An array of <see cref="T:System.Data.DataRow" /> objects that will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="01bb9-434">取消指令。</span><span class="sxs-lookup"><span data-stu-id="01bb9-434">The cancellation instruction.</span></span> <span data-ttu-id="01bb9-435">此参数中的 <see cref="P:System.Threading.CancellationToken.None" /> 值将使此方法等效于 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-435">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="01bb9-436"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> 的异步版本，它将所有行从提供的 <see cref="T:System.Data.DataRow" /> 数组复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-436">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />, which copies all rows from the supplied <see cref="T:System.Data.DataRow" /> array to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="01bb9-437">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-437">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="01bb9-438">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="01bb9-438">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-439">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-439">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-440">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-440">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-441">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-441">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-442">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-442">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataRow[])" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-443">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-443">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataRow[])" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-444">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-444">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-445">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-445">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-446">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-446">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="01bb9-447">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-447"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-448">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-448">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable, rowState As DataRowState) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="01bb9-449">一个 <see cref="T:System.Data.DataTable" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-449">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="01bb9-450">一个来自 <see cref="T:System.Data.DataRowState" /> 枚举的值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-450">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="01bb9-451">只有与行状态匹配的行才会复制到目标中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-451">Only rows matching the row state are copied to the destination.</span></span></param>
        <summary><span data-ttu-id="01bb9-452"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> 的异步版本，它只将匹配所提供 <see cref="T:System.Data.DataTable" /> 中所提供行状态的行复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-452">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-453">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-453">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-454">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-454">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-455">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-455">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-456">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-456">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-457">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-457">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-458">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-458">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-459">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-459">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-460">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-460">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="01bb9-461">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-461"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-462">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-462">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="01bb9-463">一个 <see cref="T:System.Data.DataTable" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-463">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="01bb9-464">取消指令。</span><span class="sxs-lookup"><span data-stu-id="01bb9-464">The cancellation instruction.</span></span> <span data-ttu-id="01bb9-465">此参数中的 <see cref="P:System.Threading.CancellationToken.None" /> 值将使此方法等效于 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-465">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="01bb9-466"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> 的异步版本，它将提供的 <see cref="T:System.Data.DataTable" /> 中的所有行复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-466">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />, which copies all rows in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="01bb9-467">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-467">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="01bb9-468">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="01bb9-468">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-469">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-469">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-470">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-470">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-471">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-471">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-472">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-472">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-473">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-473">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-474">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-474">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-475">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-475">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-476">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-476">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="01bb9-477">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-477"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-478">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-478">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.IDataReader reader, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.IDataReader reader, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (reader As IDataReader, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::IDataReader ^ reader, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.IDataReader * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (reader, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="01bb9-479">一个 <see cref="T:System.Data.IDataReader" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-479">A <see cref="T:System.Data.IDataReader" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="01bb9-480">取消指令。</span><span class="sxs-lookup"><span data-stu-id="01bb9-480">The cancellation instruction.</span></span> <span data-ttu-id="01bb9-481">此参数中的 <see cref="P:System.Threading.CancellationToken.None" /> 值将使此方法等效于 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-481">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="01bb9-482"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> 的异步版本，它将提供的 <see cref="T:System.Data.IDataReader" /> 中的所有行复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-482">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />, which copies all rows in the supplied <see cref="T:System.Data.IDataReader" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="01bb9-483">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-483">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="01bb9-484">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="01bb9-484">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-485">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-485">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-486">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-486">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-487">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-487">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-488">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-488">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.IDataReader)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-489">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-489">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.IDataReader)" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-490">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-490">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-491">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-491">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-492">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-492">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
<span data-ttu-id="01bb9-493">在完成的 <see cref="T:System.Data.IDataReader" /> 返回之前，<see cref="T:System.Threading.Tasks.Task" /> 已关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-493">The <see cref="T:System.Data.IDataReader" /> was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
<span data-ttu-id="01bb9-494">在完成的 <see cref="T:System.Data.IDataReader" /> 返回之前，与 <see cref="T:System.Threading.Tasks.Task" /> 相关的连接已关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-494">The <see cref="T:System.Data.IDataReader" />'s associated connection was closed before the completed <see cref="T:System.Threading.Tasks.Task" /> returned.</span></span>  
  
 <span data-ttu-id="01bb9-495">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-495"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-496">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-496">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteToServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteToServerAsync (System.Data.DataTable table, System.Data.DataRowState rowState, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WriteToServerAsync(class System.Data.DataTable table, valuetype System.Data.DataRowState rowState, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteToServerAsync (table As DataTable, rowState As DataRowState, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WriteToServerAsync(System::Data::DataTable ^ table, System::Data::DataRowState rowState, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WriteToServerAsync : System.Data.DataTable * System.Data.DataRowState * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sqlBulkCopy.WriteToServerAsync (table, rowState, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rowState" Type="System.Data.DataRowState" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="01bb9-497">一个 <see cref="T:System.Data.DataTable" />，其行将复制到目标表。</span><span class="sxs-lookup"><span data-stu-id="01bb9-497">A <see cref="T:System.Data.DataTable" /> whose rows will be copied to the destination table.</span></span></param>
        <param name="rowState"><span data-ttu-id="01bb9-498">一个来自 <see cref="T:System.Data.DataRowState" /> 枚举的值。</span><span class="sxs-lookup"><span data-stu-id="01bb9-498">A value from the <see cref="T:System.Data.DataRowState" /> enumeration.</span></span> <span data-ttu-id="01bb9-499">只有与行状态匹配的行才会复制到目标中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-499">Only rows matching the row state are copied to the destination.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="01bb9-500">取消指令。</span><span class="sxs-lookup"><span data-stu-id="01bb9-500">The cancellation instruction.</span></span> <span data-ttu-id="01bb9-501">此参数中的 <see cref="P:System.Threading.CancellationToken.None" /> 值将使此方法等效于 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-501">A <see cref="P:System.Threading.CancellationToken.None" /> value in this parameter makes this method equivalent to <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable)" />.</span></span></param>
        <summary><span data-ttu-id="01bb9-502"><see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> 的异步版本，它只将匹配所提供 <see cref="T:System.Data.DataTable" /> 中所提供行状态的行复制到 <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> 对象的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 属性指定的目标表中。</span><span class="sxs-lookup"><span data-stu-id="01bb9-502">The asynchronous version of <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />, which copies only rows that match the supplied row state in the supplied <see cref="T:System.Data.DataTable" /> to a destination table specified by the <see cref="P:System.Data.SqlClient.SqlBulkCopy.DestinationTableName" /> property of the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object.</span></span>  
  
<span data-ttu-id="01bb9-503">取消标记可用于请求在命令超时超过前放弃操作。</span><span class="sxs-lookup"><span data-stu-id="01bb9-503">The cancellation token can be used to request that the operation be abandoned before the command timeout elapses.</span></span>  <span data-ttu-id="01bb9-504">将通过返回的任务对象报告异常。</span><span class="sxs-lookup"><span data-stu-id="01bb9-504">Exceptions will be reported via the returned Task object.</span></span></summary>
        <returns><span data-ttu-id="01bb9-505">表示异步操作的任务。</span><span class="sxs-lookup"><span data-stu-id="01bb9-505">A task representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01bb9-506">有关 SQL Server 的 .NET Framework 数据提供程序中的异步编程的详细信息，请参阅[异步编程](~/docs/framework/data/adonet/asynchronous-programming.md)。</span><span class="sxs-lookup"><span data-stu-id="01bb9-506">For more information about asynchronous programming in the .NET Framework Data Provider for SQL Server, see [Asynchronous Programming](~/docs/framework/data/adonet/asynchronous-programming.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01bb9-507">在完成任务前，为同一个实例多次调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-507">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> multiple times for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-508">在完成任务前，为同一个实例调用 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 和 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-508">Calling <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> and <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServer(System.Data.DataTable,System.Data.DataRowState)" /> for the same instance before task completion.</span></span>  
  
<span data-ttu-id="01bb9-509">在执行 <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> 期间连接断开或关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-509">The connection drops or is closed during <see cref="M:System.Data.SqlClient.SqlBulkCopy.WriteToServerAsync(System.Data.DataTable,System.Data.DataRowState)" /> execution.</span></span>  
  
<span data-ttu-id="01bb9-510">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> 对象在执行方法时关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-510">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlBulkCopy" /> object was closed during the method execution.</span></span>  
  
<span data-ttu-id="01bb9-511">在任务对象中返回后存在连接池超时。</span><span class="sxs-lookup"><span data-stu-id="01bb9-511">Returned in the task object, there was a connection pool timeout.</span></span>  
  
<span data-ttu-id="01bb9-512">在任务对象中返回的 <see cref="T:System.Data.SqlClient.SqlConnection" /> 对象在执行方法前关闭。</span><span class="sxs-lookup"><span data-stu-id="01bb9-512">Returned in the task object, the <see cref="T:System.Data.SqlClient.SqlConnection" /> object is closed before method execution.</span></span>  
  
 <span data-ttu-id="01bb9-513">在连接字符串中指定 <see langword="Context Connection=true" />。</span><span class="sxs-lookup"><span data-stu-id="01bb9-513"><see langword="Context Connection=true" /> is specified in the connection string.</span></span></exception>
        <exception cref="T:System.Data.SqlClient.SqlException"><span data-ttu-id="01bb9-514">由 SQL Server 在任务对象中返回的任意错误，这些错误是打开连接时出现的。</span><span class="sxs-lookup"><span data-stu-id="01bb9-514">Returned in the task object, any error returned by SQL Server that occurred while opening the connection.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
