<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5201bf439fbb562b9a35df2772be864524a6e76c" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75180079" /></Metadata><TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type PresentationSource = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f3c9-101">提供将其他技术的内容呈现为互操作方案的一部分的抽象基类。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span></span> <span data-ttu-id="0f3c9-102">此外，此类还提供用于处理这些源的静态方法，以及基本可视层表示体系结构。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span></span></summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="0f3c9-103">从此类派生。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-103">to derive from this class.</span></span> <span data-ttu-id="0f3c9-104">关联的枚举：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-104">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span></span></permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f3c9-105">在由派生类的构造函数调用时，提供基类值的初始化。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-105">Provides initialization for base class values when called by the constructor of a derived class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberSignature Language="F#" Value="member this.AddSource : unit -&gt; unit" Usage="presentationSource.AddSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f3c9-106">将 <see cref="T:System.Windows.PresentationSource" /> 派生类实例添加到已知表示源的列表中。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-106">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f3c9-107">此方法应由派生类调用以指示需要跟踪这些方法。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-107">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.AddSourceChangedHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0f3c9-108">向其添加处理程序的元素。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-108">The element to add the handler to.</span></span></param>
        <param name="handler"><span data-ttu-id="0f3c9-109">要添加的处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-109">The handler implementation to add.</span></span></param>
        <summary><span data-ttu-id="0f3c9-110">将 <see langword="SourceChanged" /> 事件的处理程序添加到提供的元素中。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-110">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f3c9-111">不管此事件的语法块如何，都没有合法的 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 附加属性。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-111">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="0f3c9-112">不应尝试在 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]中添加处理程序，并且代码中的处理程序只应放置在用作表示形式（<xref:System.Windows.PresentationSource>）内容宿主的对象上。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-112">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="0f3c9-113">此类处理程序只应在对象初始化过程中附加，并且应在 Dispose 方法或等效的对象清理中显式删除。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-113">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="0f3c9-114">尽管这是路由事件，但由于典型应用程序方案中的元素数量相对较小，因此在此事件上存在一些特殊的限制，这与处理引发.</span><span class="sxs-lookup"><span data-stu-id="0f3c9-114">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="0f3c9-115">不能使用 <xref:System.Windows.UIElement> 或 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> 方法添加处理程序。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-115">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="0f3c9-116">您必须使用 <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-116">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="0f3c9-117">不C#支持 `+=` 和 `-=` 事件处理程序语法以及相关的特定于语言的处理程序语法，因为事件本身并不公开为公共的。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-117">The C# `+=` and `-=` event handler syntaxes, and related language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="0f3c9-118">仅支持直接添加和删除处理程序的 <xref:System.Windows.PresentationSource> 实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-118">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="0f3c9-119">不允许使用类处理程序。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-119">Class handlers are not allowed.</span></span> <span data-ttu-id="0f3c9-120">具体而言，你不能在类构造函数中调用此事件 <xref:System.Windows.EventManager.RegisterClassHandler%2A>，因为虽然 SourceChanged 存在标识符字段，但标识符不是公共的。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-120">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="0f3c9-121">即使其中一个处理程序尝试将参数标记为已处理，所有注册的处理程序也会接收 SourceChanged 事件。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-121">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="0f3c9-122">调用或实现此方法。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-122">to call or implement this method.</span></span> <span data-ttu-id="0f3c9-123">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-123">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberSignature Language="F#" Value="member this.ClearContentRenderedListeners : unit -&gt; unit" Usage="presentationSource.ClearContentRenderedListeners " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f3c9-124">将 <see cref="E:System.Windows.PresentationSource.ContentRendered" /> 事件的侦听器列表设置为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-124">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Media.CompositionTarget" Usage="System.Windows.PresentationSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f3c9-125">获取要在源中显示的视觉效果的可视目标。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-125">Gets the visual target for the visuals being presented in the source.</span></span></summary>
        <value><span data-ttu-id="0f3c9-126">可视目标（<see cref="T:System.Windows.Media.CompositionTarget" /> 派生类的实例）。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-126">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f3c9-127">此属性的返回依赖于 <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>的实现。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-127">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0f3c9-128">派生类可以选择隐藏此属性以提供特定于类型的值。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-128">Derived classes can choose to shadow this property to offer a type-specific value.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f3c9-129">在呈现内容并准备开始用户交互时发生。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-129">Occurs when content is rendered and ready for user interaction.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSources : System.Collections.IEnumerable" Usage="System.Windows.PresentationSource.CurrentSources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f3c9-130">返回源的列表。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-130">Returns a list of sources.</span></span></summary>
        <value><span data-ttu-id="0f3c9-131">弱引用的列表。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-131">A list of weak references.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f3c9-132">返回的列表支持对源列表的只读、线程安全副本进行枚举器，该副本与 <xref:System.Windows.PresentationSource.AddSource%2A>一起添加。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-132">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="0f3c9-133">枚举器将跳过列表中任何死弱引用。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-133">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="0f3c9-134">获取源。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-134">to get sources.</span></span> <span data-ttu-id="0f3c9-135">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member FromDependencyObject : System.Windows.DependencyObject -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromDependencyObject dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="0f3c9-136">要查找其源的 <see cref="T:System.Windows.DependencyObject" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-136">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="0f3c9-137">返回要在其中呈现所提供的 <see cref="T:System.Windows.DependencyObject" /> 的源。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-137">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="0f3c9-138">要在其中显示依赖项对象的 <see cref="T:System.Windows.PresentationSource" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-138">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="0f3c9-139">调用或实现此方法。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-139">to call or implement this method.</span></span> <span data-ttu-id="0f3c9-140">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="static member FromVisual : System.Windows.Media.Visual -&gt; System.Windows.PresentationSource" Usage="System.Windows.PresentationSource.FromVisual visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual"><span data-ttu-id="0f3c9-141">要查找其源的 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-141">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span></span></param>
        <summary><span data-ttu-id="0f3c9-142">返回要在其中呈现所提供的 <see cref="T:System.Windows.Media.Visual" /> 的源。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-142">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span></span></summary>
        <returns><span data-ttu-id="0f3c9-143">正在其中呈现视觉效果的 <see cref="T:System.Windows.PresentationSource" />；如果释放 <see langword="null" />，则为 <paramref name="visual" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-143">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f3c9-144"><paramref name="visual" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-144"><paramref name="visual" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="0f3c9-145">调用或实现此方法。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-145">to call or implement this method.</span></span> <span data-ttu-id="0f3c9-146">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-146">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="abstract member GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="presentationSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f3c9-147">在派生类中重写后，返回给定源的可视目标。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-147">When overridden in a derived class, returns a visual target for the given source.</span></span></summary>
        <returns><span data-ttu-id="0f3c9-148">返回呈现该视觉效果的目标 <see cref="T:System.Windows.Media.CompositionTarget" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-148">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0f3c9-149">重写此方法，以声明将返回 <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> 只读属性的值。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-149">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span></span>  
  
<span data-ttu-id="0f3c9-150">重写应返回用于互操作方案的 <see cref="T:System.Windows.Media.CompositionTarget" /> 派生类类型的特定于类型的实例。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-150">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.PresentationSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f3c9-151">在派生类中重写后，获取一个声明对象是否已被释放的值。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-151">When overridden in a derived class, gets a value that declares whether the object is disposed.</span></span></summary>
        <value><span data-ttu-id="0f3c9-152">如果释放对象，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-152"><see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0f3c9-153">派生类应该实现 <see cref="T:System.IDisposable" /> 或提供等效的行为。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-153">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberSignature Language="F#" Value="member this.RemoveSource : unit -&gt; unit" Usage="presentationSource.RemoveSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f3c9-154">从已知表示源的列表中移除 <see cref="T:System.Windows.PresentationSource" /> 派生类实例。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-154">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveSourceChangedHandler : System.Windows.IInputElement * System.Windows.SourceChangedEventHandler -&gt; unit" Usage="System.Windows.PresentationSource.RemoveSourceChangedHandler (e, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0f3c9-155">要从中移除处理程序的元素。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-155">The element to remove the handler from.</span></span></param>
        <param name="handler"><span data-ttu-id="0f3c9-156">要移除的处理程序实现。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-156">The handler implementation to remove.</span></span></param>
        <summary><span data-ttu-id="0f3c9-157">从所提供的元素中移除 <see langword="SourceChanged" /> 事件的处理程序。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-157">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f3c9-158">尽管这是路由事件，但由于典型应用程序方案中的元素数量相对较小，因此在此事件上存在一些特殊的限制，这与处理引发.</span><span class="sxs-lookup"><span data-stu-id="0f3c9-158">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="0f3c9-159">不能使用 <xref:System.Windows.UIElement> 或 <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> 方法来删除处理程序。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-159">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="0f3c9-160">您必须使用 <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-160">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="0f3c9-161">不C#支持 `+=` 和 `-=` 事件处理程序语法以及其他特定于语言的处理程序语法，因为事件本身并不公开为公共的。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-161">The C# `+=` and `-=` event handler syntaxes, and other language-specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="0f3c9-162">仅支持直接添加和删除处理程序的 <xref:System.Windows.PresentationSource> 实用工具方法。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-162">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberSignature Language="F#" Value="member this.RootChanged : System.Windows.Media.Visual * System.Windows.Media.Visual -&gt; unit" Usage="presentationSource.RootChanged (oldRoot, newRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot"><span data-ttu-id="0f3c9-163">旧的根 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-163">The old root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <param name="newRoot"><span data-ttu-id="0f3c9-164">新的根 <see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-164">The new root <see cref="T:System.Windows.Media.Visual" />.</span></span></param>
        <summary><span data-ttu-id="0f3c9-165">提供根 <see cref="T:System.Windows.Media.Visual" /> 已发生更改的通知。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-165">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f3c9-166">派生类应调用此方法以指示其根 <xref:System.Windows.Media.Visual> 已更改。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-166">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="0f3c9-167">当且仅当这些根视觉对象 <xref:System.Windows.FrameworkElement> 派生类时，调用此方法会导致在指定的根视觉对象上引发两个对象生存期事件。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-167">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="0f3c9-168">旧的根视觉对象将引发 <xref:System.Windows.FrameworkElement.Unloaded> 事件，并将处理其元素树，并将此事件广播给每个子元素。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-168">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="0f3c9-169">新的根视觉对象将引发 <xref:System.Windows.FrameworkElement.Loaded> 事件，并将处理其元素树，并将此事件广播给每个子元素。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-169">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.PresentationSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f3c9-170">在派生类中重写后，获取或设置要在源中显示的根视觉效果。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-170">When overridden in a derived class, gets or sets the root visual being presented in the source.</span></span></summary>
        <value><span data-ttu-id="0f3c9-171">根视觉效果。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-171">The root visual.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="0f3c9-172">重写属性（<see langword="InheritanceDemand" />）。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-172">to override the property (<see langword="InheritanceDemand" />).</span></span> <span data-ttu-id="0f3c9-173">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="0f3c9-173">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
