<Type Name="AbandonedMutexException" FullName="System.Threading.AbandonedMutexException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="112dacb7bd87a08eb6ee42854e6c10dc280befb5" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78782368" /></Metadata><TypeSignature Language="C#" Value="public class AbandonedMutexException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AbandonedMutexException extends System.Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="DocId" Value="T:System.Threading.AbandonedMutexException" />
  <TypeSignature Language="VB.NET" Value="Public Class AbandonedMutexException&#xA;Inherits Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C++ CLI" Value="public ref class AbandonedMutexException : Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="F#" Value="type AbandonedMutexException = class&#xA;    inherit Exception" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
  <TypeSignature Language="C#" Value="public class AbandonedMutexException : SystemException" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AbandonedMutexException extends System.SystemException" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class AbandonedMutexException&#xA;Inherits SystemException" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class AbandonedMutexException : SystemException" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type AbandonedMutexException = class&#xA;    inherit SystemException" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit AbandonedMutexException extends System.SystemException" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Threading" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="777f2-101">当某个线程获取由另一个线程放弃（即在未释放的情况下退出）的 <see cref="T:System.Threading.Mutex" /> 对象时引发的异常。</span><span class="sxs-lookup"><span data-stu-id="777f2-101">The exception that is thrown when one thread acquires a <see cref="T:System.Threading.Mutex" /> object that another thread has abandoned by exiting without releasing it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-102">当某个线程放弃互斥体时，该异常会在获取互斥体的下一个线程中引发。</span><span class="sxs-lookup"><span data-stu-id="777f2-102">When a thread abandons a mutex, the exception is thrown in the next thread that acquires the mutex.</span></span> <span data-ttu-id="777f2-103">线程可能会获取互斥体，因为它已在等待互斥体上，或者它在稍后进入互斥体。</span><span class="sxs-lookup"><span data-stu-id="777f2-103">The thread might acquire the mutex because it was already waiting on the mutex or because it enters the mutex at a later time.</span></span>  
  
 <span data-ttu-id="777f2-104">放弃的 mutex 表明出现了严重的编程错误。</span><span class="sxs-lookup"><span data-stu-id="777f2-104">An abandoned mutex indicates a serious programming error.</span></span> <span data-ttu-id="777f2-105">当线程在不释放 mutex 的情况下退出时，由 mutex 保护的数据结构可能不是一致的状态。</span><span class="sxs-lookup"><span data-stu-id="777f2-105">When a thread exits without releasing the mutex, the data structures protected by the mutex might not be in a consistent state.</span></span> <span data-ttu-id="777f2-106">在 .NET Framework 2.0 版之前，此类问题很难发现，因为如果在被放弃的 mutex 的结果中完成等待，则不会引发异常。</span><span class="sxs-lookup"><span data-stu-id="777f2-106">Prior to version 2.0 of the .NET Framework, such problems were hard to discover because no exception was thrown if a wait completed as the result of an abandoned mutex.</span></span> <span data-ttu-id="777f2-107">有关更多信息，请参见 <xref:System.Threading.Mutex> 类。</span><span class="sxs-lookup"><span data-stu-id="777f2-107">For more information, see the <xref:System.Threading.Mutex> class.</span></span>  
  
 <span data-ttu-id="777f2-108">如果可以验证数据结构的完整性，下一个请求 mutex 所有权的线程就可以处理此异常并继续进行。</span><span class="sxs-lookup"><span data-stu-id="777f2-108">The next thread to request ownership of the mutex can handle this exception and proceed, provided that the integrity of the data structures can be verified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="777f2-109">下面的代码示例执行一个丢弃五个互斥体的线程，演示它们对 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A>和 <xref:System.Threading.WaitHandle.WaitAll%2A> 方法的影响。</span><span class="sxs-lookup"><span data-stu-id="777f2-109">The following code example executes a thread that abandons five mutexes, demonstrating their effects on the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> methods.</span></span> <span data-ttu-id="777f2-110">为 <xref:System.Threading.WaitHandle.WaitAny%2A> 调用显示 <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="777f2-110">The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="777f2-111">对 <xref:System.Threading.WaitHandle.WaitAny%2A> 方法的调用被一个放弃的 mutex 中断。</span><span class="sxs-lookup"><span data-stu-id="777f2-111">The call to the <xref:System.Threading.WaitHandle.WaitAny%2A> method is interrupted by one of the abandoned mutexes.</span></span> <span data-ttu-id="777f2-112">另一个被放弃的互斥体仍可能会导致后续等待方法引发 <xref:System.Threading.AbandonedMutexException>。</span><span class="sxs-lookup"><span data-stu-id="777f2-112">The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.</span></span>  
  
 [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]
 [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]
 [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.Mutex" />
    <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-113">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-113">Mutex</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="777f2-114">初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-114">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="777f2-115">使用默认值初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-115">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with default values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-116">此构造函数将新实例的 <xref:System.Exception.Message%2A> 属性初始化为系统提供的描述错误的消息，如 "由于被放弃的互斥体而完成等待"。</span><span class="sxs-lookup"><span data-stu-id="777f2-116">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</span></span> <span data-ttu-id="777f2-117">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="777f2-117">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="777f2-118">下表显示 <xref:System.Threading.AbandonedMutexException> 的实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="777f2-118">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException>.</span></span>  
  
|<span data-ttu-id="777f2-119">Property</span><span class="sxs-lookup"><span data-stu-id="777f2-119">Property</span></span>|<span data-ttu-id="777f2-120">“值”</span><span class="sxs-lookup"><span data-stu-id="777f2-120">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="777f2-121">`null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-121">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="777f2-122">系统提供的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="777f2-122">The system-supplied error message string.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="777f2-123">`null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-123">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="777f2-124">-1 （减1）。</span><span class="sxs-lookup"><span data-stu-id="777f2-124">-1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-125">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-125">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="777f2-126">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="777f2-126">An error message that explains the reason for the exception.</span></span></param>
        <summary><span data-ttu-id="777f2-127">用指定的错误消息初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-127">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-128">`message` 的内容设计为易于理解。</span><span class="sxs-lookup"><span data-stu-id="777f2-128">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="777f2-129">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="777f2-129">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="777f2-130">下表显示了使用此构造函数初始化的 <xref:System.Threading.AbandonedMutexException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="777f2-130">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="777f2-131">Property</span><span class="sxs-lookup"><span data-stu-id="777f2-131">Property</span></span>|<span data-ttu-id="777f2-132">“值”</span><span class="sxs-lookup"><span data-stu-id="777f2-132">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="777f2-133">`null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-133">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="777f2-134">`message`。</span><span class="sxs-lookup"><span data-stu-id="777f2-134">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="777f2-135">`null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-135">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="777f2-136">-1 （减1）。</span><span class="sxs-lookup"><span data-stu-id="777f2-136">-1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-137">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-137">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(int location, System::Threading::WaitHandle ^ handle);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : int * System.Threading.WaitHandle -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (location, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="location"><span data-ttu-id="777f2-138">如果对 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法引发异常，则为等待句柄数组中被放弃的互斥体的索引，如果对 <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 或 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 方法引发异常，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="777f2-138">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or -1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span></span></param>
        <param name="handle"><span data-ttu-id="777f2-139">一个 <see cref="T:System.Threading.Mutex" /> 对象，表示被放弃的互斥体。</span><span class="sxs-lookup"><span data-stu-id="777f2-139">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span></span></param>
        <summary><span data-ttu-id="777f2-140">用被放弃的互斥体的指定索引（如果可用）和表示该互斥体的 <see cref="T:System.Threading.AbandonedMutexException" /> 对象初始化 <see cref="T:System.Threading.Mutex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-140">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified index for the abandoned mutex, if applicable, and a <see cref="T:System.Threading.Mutex" /> object that represents the mutex.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-141">此构造函数将新实例的 <xref:System.Exception.Message%2A> 属性初始化为系统提供的描述错误的消息，如 "由于被放弃的互斥体而完成等待"。</span><span class="sxs-lookup"><span data-stu-id="777f2-141">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error, such as "The wait completed due to an abandoned mutex."</span></span> <span data-ttu-id="777f2-142">此消息将当前系统区域性考虑在内。</span><span class="sxs-lookup"><span data-stu-id="777f2-142">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="777f2-143">下表显示了使用此构造函数初始化的 <xref:System.Threading.AbandonedMutexException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="777f2-143">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="777f2-144">Property</span><span class="sxs-lookup"><span data-stu-id="777f2-144">Property</span></span>|<span data-ttu-id="777f2-145">“值”</span><span class="sxs-lookup"><span data-stu-id="777f2-145">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="777f2-146">`null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-146">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="777f2-147">系统提供的错误消息字符串。</span><span class="sxs-lookup"><span data-stu-id="777f2-147">A system-supplied error message string.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="777f2-148">`handle`。</span><span class="sxs-lookup"><span data-stu-id="777f2-148">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="777f2-149">`location`。</span><span class="sxs-lookup"><span data-stu-id="777f2-149">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-150">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-150">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbandonedMutexException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AbandonedMutexException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="777f2-151">存放有关所引发异常的序列化对象数据的 <see cref="T:System.Runtime.Serialization.SerializationInfo" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="777f2-151">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized object data about the exception being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="777f2-152"><see cref="T:System.Runtime.Serialization.StreamingContext" /> 对象，它包含有关源或目标的上下文信息。</span><span class="sxs-lookup"><span data-stu-id="777f2-152">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="777f2-153">用序列化数据初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-153">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-154">此构造函数在反序列化过程中调用，以便重建通过流传输的异常对象。</span><span class="sxs-lookup"><span data-stu-id="777f2-154">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="777f2-155">有关详细信息，请参阅[XML 和 SOAP 序列化](~/docs/standard/serialization/xml-and-soap-serialization.md)。</span><span class="sxs-lookup"><span data-stu-id="777f2-155">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-156">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-156">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, Exception ^ inner);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string * Exception -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (message, inner)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="777f2-157">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="777f2-157">An error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="777f2-158">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="777f2-158">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="777f2-159">如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="777f2-159">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="777f2-160">用指定的错误信息和内部异常初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-160">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message and inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-161">`message` 的内容设计为易于理解。</span><span class="sxs-lookup"><span data-stu-id="777f2-161">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="777f2-162">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="777f2-162">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="777f2-163">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="777f2-163">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="777f2-164"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="777f2-164">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="777f2-165">下表显示了使用此构造函数初始化的 <xref:System.Threading.AbandonedMutexException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="777f2-165">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="777f2-166">Property</span><span class="sxs-lookup"><span data-stu-id="777f2-166">Property</span></span>|<span data-ttu-id="777f2-167">“值”</span><span class="sxs-lookup"><span data-stu-id="777f2-167">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="777f2-168">`inner`。</span><span class="sxs-lookup"><span data-stu-id="777f2-168">`inner`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="777f2-169">`message`。</span><span class="sxs-lookup"><span data-stu-id="777f2-169">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="777f2-170">`null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-170">`null`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="777f2-171">-1 （减1）。</span><span class="sxs-lookup"><span data-stu-id="777f2-171">-1 (minus one).</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-172">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-172">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, int location, System::Threading::WaitHandle ^ handle);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string * int * System.Threading.WaitHandle -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (message, location, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="777f2-173">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="777f2-173">An error message that explains the reason for the exception.</span></span></param>
        <param name="location"><span data-ttu-id="777f2-174">如果对 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法引发异常，则为等待句柄数组中被放弃的互斥体的索引，如果对 <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 或 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 方法引发异常，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="777f2-174">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or -1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span></span></param>
        <param name="handle"><span data-ttu-id="777f2-175">一个 <see cref="T:System.Threading.Mutex" /> 对象，表示被放弃的互斥体。</span><span class="sxs-lookup"><span data-stu-id="777f2-175">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span></span></param>
        <summary><span data-ttu-id="777f2-176">用指定的错误信息、被放弃的互斥体的索引（如果可用）以及被放弃的互斥体初始化 <see cref="T:System.Threading.AbandonedMutexException" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-176">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message, the index of the abandoned mutex, if applicable, and the abandoned mutex.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-177">`message` 的内容设计为易于理解。</span><span class="sxs-lookup"><span data-stu-id="777f2-177">The content of `message` is intended to be understood by humans.</span></span> <span data-ttu-id="777f2-178">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="777f2-178">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="777f2-179">下表显示了使用此构造函数初始化的 <xref:System.Threading.AbandonedMutexException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="777f2-179">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="777f2-180">Property</span><span class="sxs-lookup"><span data-stu-id="777f2-180">Property</span></span>|<span data-ttu-id="777f2-181">“值”</span><span class="sxs-lookup"><span data-stu-id="777f2-181">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="777f2-182">`null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-182">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="777f2-183">`message`。</span><span class="sxs-lookup"><span data-stu-id="777f2-183">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="777f2-184">`handle`。</span><span class="sxs-lookup"><span data-stu-id="777f2-184">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="777f2-185">`location`。</span><span class="sxs-lookup"><span data-stu-id="777f2-185">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-186">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-186">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbandonedMutexException (string message, Exception inner, int location, System.Threading.WaitHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner, int32 location, class System.Threading.WaitHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.AbandonedMutexException.#ctor(System.String,System.Exception,System.Int32,System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, inner As Exception, location As Integer, handle As WaitHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AbandonedMutexException(System::String ^ message, Exception ^ inner, int location, System::Threading::WaitHandle ^ handle);" />
      <MemberSignature Language="F#" Value="new System.Threading.AbandonedMutexException : string * Exception * int * System.Threading.WaitHandle -&gt; System.Threading.AbandonedMutexException" Usage="new System.Threading.AbandonedMutexException (message, inner, location, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
        <Parameter Name="location" Type="System.Int32" />
        <Parameter Name="handle" Type="System.Threading.WaitHandle" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="777f2-187">解释异常原因的错误消息。</span><span class="sxs-lookup"><span data-stu-id="777f2-187">An error message that explains the reason for the exception.</span></span></param>
        <param name="inner"><span data-ttu-id="777f2-188">导致当前异常的异常。</span><span class="sxs-lookup"><span data-stu-id="777f2-188">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="777f2-189">如果 <paramref name="inner" /> 参数不为 <see langword="null" />，则当前异常将在处理内部异常的 <see langword="catch" /> 块中引发。</span><span class="sxs-lookup"><span data-stu-id="777f2-189">If the <paramref name="inner" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <param name="location"><span data-ttu-id="777f2-190">如果对 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法引发异常，则为等待句柄数组中被放弃的互斥体的索引，如果对 <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> 或 <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> 方法引发异常，则为 -1。</span><span class="sxs-lookup"><span data-stu-id="777f2-190">The index of the abandoned mutex in the array of wait handles if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, or -1 if the exception is thrown for the <see cref="Overload:System.Threading.WaitHandle.WaitOne" /> or <see cref="Overload:System.Threading.WaitHandle.WaitAll" /> methods.</span></span></param>
        <param name="handle"><span data-ttu-id="777f2-191">一个 <see cref="T:System.Threading.Mutex" /> 对象，表示被放弃的互斥体。</span><span class="sxs-lookup"><span data-stu-id="777f2-191">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex.</span></span></param>
        <summary><span data-ttu-id="777f2-192">用指定的错误信息、内部异常、被放弃的互斥体的索引（如果可用）以及表示该互斥体的 <see cref="T:System.Threading.AbandonedMutexException" /> 对象初始化 <see cref="T:System.Threading.Mutex" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="777f2-192">Initializes a new instance of the <see cref="T:System.Threading.AbandonedMutexException" /> class with a specified error message, the inner exception, the index for the abandoned mutex, if applicable, and a <see cref="T:System.Threading.Mutex" /> object that represents the mutex.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-193">`message` 的内容是用于向用户通知异常的文本字符串。</span><span class="sxs-lookup"><span data-stu-id="777f2-193">The content of `message` is a text string intended to inform the user about the exception.</span></span> <span data-ttu-id="777f2-194">此构造函数的调用方需要确保此字符串已针对当前系统区域性进行了本地化。</span><span class="sxs-lookup"><span data-stu-id="777f2-194">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span>  
  
 <span data-ttu-id="777f2-195">因前一个异常而直接引发的异常应在 <xref:System.Exception.InnerException%2A> 属性中包含对前一个异常的引用。</span><span class="sxs-lookup"><span data-stu-id="777f2-195">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="777f2-196"><xref:System.Exception.InnerException%2A> 属性返回的值与传递到构造函数中的值相同；或者，如果 `null` 属性没有向构造函数提供内部异常值，则为 <xref:System.Exception.InnerException%2A>。</span><span class="sxs-lookup"><span data-stu-id="777f2-196">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="777f2-197">下表显示了使用此构造函数初始化的 <xref:System.Threading.AbandonedMutexException> 实例的初始属性值。</span><span class="sxs-lookup"><span data-stu-id="777f2-197">The following table shows the initial property values for an instance of <xref:System.Threading.AbandonedMutexException> initialized with this constructor.</span></span>  
  
|<span data-ttu-id="777f2-198">Property</span><span class="sxs-lookup"><span data-stu-id="777f2-198">Property</span></span>|<span data-ttu-id="777f2-199">“值”</span><span class="sxs-lookup"><span data-stu-id="777f2-199">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="777f2-200">`inner`。</span><span class="sxs-lookup"><span data-stu-id="777f2-200">`inner`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="777f2-201">`message`。</span><span class="sxs-lookup"><span data-stu-id="777f2-201">`message`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.Mutex%2A>|<span data-ttu-id="777f2-202">`handle`。</span><span class="sxs-lookup"><span data-stu-id="777f2-202">`handle`.</span></span>|  
|<xref:System.Threading.AbandonedMutexException.MutexIndex%2A>|<span data-ttu-id="777f2-203">`location`。</span><span class="sxs-lookup"><span data-stu-id="777f2-203">`location`.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-204">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-204">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Mutex">
      <MemberSignature Language="C#" Value="public System.Threading.Mutex Mutex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Mutex Mutex" />
      <MemberSignature Language="DocId" Value="P:System.Threading.AbandonedMutexException.Mutex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mutex As Mutex" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Mutex ^ Mutex { System::Threading::Mutex ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Mutex : System.Threading.Mutex" Usage="System.Threading.AbandonedMutexException.Mutex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Mutex</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="777f2-205">获取导致异常的被放弃的互斥体（如果已知的话）。</span><span class="sxs-lookup"><span data-stu-id="777f2-205">Gets the abandoned mutex that caused the exception, if known.</span></span></summary>
        <value><span data-ttu-id="777f2-206">如果未能识别被放弃的互斥体，则为表示该被放弃的互斥体的 <see cref="T:System.Threading.Mutex" /> 对象或 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="777f2-206">A <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex, or <see langword="null" /> if the abandoned mutex could not be identified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-207">如果在调用 <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> 方法时引发异常，则返回的 <xref:System.Threading.Mutex> 是被传递到 <xref:System.Threading.WaitHandle.WaitAny%2A>的 <xref:System.Threading.WaitHandle> 对象数组中具有最小索引的被放弃的互斥体，如果无法标识被放弃的互斥体，则为 `null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-207">If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> method, the <xref:System.Threading.Mutex> returned is the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or `null` if the abandoned mutex could not be identified.</span></span> <span data-ttu-id="777f2-208">如果在调用 <xref:System.Threading.WaitHandle.WaitOne%2A> 或 <xref:System.Threading.WaitHandle.WaitAll%2A>时引发异常，则此属性始终返回 `null`。</span><span class="sxs-lookup"><span data-stu-id="777f2-208">If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-209">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-209">Mutex</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MutexIndex">
      <MemberSignature Language="C#" Value="public int MutexIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MutexIndex" />
      <MemberSignature Language="DocId" Value="P:System.Threading.AbandonedMutexException.MutexIndex" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MutexIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexIndex : int" Usage="System.Threading.AbandonedMutexException.MutexIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="777f2-210">获取导致异常的被放弃的互斥体的索引（如果已知的话）。</span><span class="sxs-lookup"><span data-stu-id="777f2-210">Gets the index of the abandoned mutex that caused the exception, if known.</span></span></summary>
        <value><span data-ttu-id="777f2-211">传递给 <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> 方法的等待句柄数组中的索引，它表示被放弃的互斥体的 <see cref="T:System.Threading.Mutex" /> 对象; 如果无法确定被放弃的互斥体的索引，则为-1。</span><span class="sxs-lookup"><span data-stu-id="777f2-211">The index, in the array of wait handles passed to the <see cref="Overload:System.Threading.WaitHandle.WaitAny" /> method, of the <see cref="T:System.Threading.Mutex" /> object that represents the abandoned mutex, or -1 if the index of the abandoned mutex could not be determined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="777f2-212">如果在调用 <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> 方法时引发异常，则此属性将返回被传递到 <xref:System.Threading.WaitHandle.WaitAny%2A>的 <xref:System.Threading.WaitHandle> 对象的数组中具有最小索引的被放弃的互斥体的索引; 如果无法标识被放弃的互斥体，则返回-1。</span><span class="sxs-lookup"><span data-stu-id="777f2-212">If the exception is thrown on a call to the <xref:System.Threading.WaitHandle.WaitAny%2A?displayProperty=nameWithType> method, this property returns the index of the abandoned mutex with the lowest index in the array of <xref:System.Threading.WaitHandle> objects that was passed to <xref:System.Threading.WaitHandle.WaitAny%2A>, or -1 if the abandoned mutex could not be identified.</span></span> <span data-ttu-id="777f2-213">如果在调用 <xref:System.Threading.WaitHandle.WaitOne%2A> 或 <xref:System.Threading.WaitHandle.WaitAll%2A>时引发异常，则此属性始终返回-1。</span><span class="sxs-lookup"><span data-stu-id="777f2-213">If the exception is thrown on a call to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A>, this property always returns -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="777f2-214">下面的代码示例执行一个放弃五个互斥体的线程。</span><span class="sxs-lookup"><span data-stu-id="777f2-214">The following code example executes a thread that abandons five mutexes.</span></span> <span data-ttu-id="777f2-215">放弃的 mutex 用于演示对 <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>、<xref:System.Threading.WaitHandle.WaitAny%2A>和 <xref:System.Threading.WaitHandle.WaitAll%2A> 方法调用的影响。</span><span class="sxs-lookup"><span data-stu-id="777f2-215">The abandoned mutexes are used to demonstrate the effects on the <xref:System.Threading.WaitHandle.WaitOne%2A?displayProperty=nameWithType>, <xref:System.Threading.WaitHandle.WaitAny%2A>, and <xref:System.Threading.WaitHandle.WaitAll%2A> method calls.</span></span> <span data-ttu-id="777f2-216">为 <xref:System.Threading.WaitHandle.WaitAny%2A> 调用显示 <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="777f2-216">The value of the <xref:System.Threading.AbandonedMutexException.MutexIndex%2A> property is displayed for the <xref:System.Threading.WaitHandle.WaitAny%2A> call.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="777f2-217">对 <xref:System.Threading.WaitHandle.WaitAny%2A> 的调用被一个放弃的 mutex 中断。</span><span class="sxs-lookup"><span data-stu-id="777f2-217">The call to <xref:System.Threading.WaitHandle.WaitAny%2A> is interrupted by one of the abandoned mutexes.</span></span> <span data-ttu-id="777f2-218">另一个被放弃的互斥体仍可能会导致后续等待方法引发 <xref:System.Threading.AbandonedMutexException>。</span><span class="sxs-lookup"><span data-stu-id="777f2-218">The other abandoned mutex could still cause an <xref:System.Threading.AbandonedMutexException> to be thrown by subsequent wait methods.</span></span>  
  
 [!code-cpp[System.Threading.AbandonedMutexException#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CPP/koax.cpp#1)]
 [!code-csharp[System.Threading.AbandonedMutexException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/CS/koax.cs#1)]
 [!code-vb[System.Threading.AbandonedMutexException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.AbandonedMutexException/VB/koax.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Mutex" />
        <related type="Article" href="~/docs/standard/threading/mutexes.md"><span data-ttu-id="777f2-219">Mutex</span><span class="sxs-lookup"><span data-stu-id="777f2-219">Mutex</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
