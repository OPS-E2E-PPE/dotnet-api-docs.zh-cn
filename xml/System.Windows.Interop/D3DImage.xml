<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5d9d1694e2681a683419230efb2519cf50c93d26" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82355110" /></Metadata><TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit D3DImage extends System.Windows.Media.ImageSource" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <TypeSignature Language="F#" Value="type D3DImage = class&#xA;    inherit ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="21443-101">一个 <see cref="T:System.Windows.Media.ImageSource" />，它显示用户创建的 Direct3D 图面。</span><span class="sxs-lookup"><span data-stu-id="21443-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-102">使用 <xref:System.Windows.Interop.D3DImage> 类在 Windows Presentation Foundation （WPF）应用程序中托管 Direct3D 内容。</span><span class="sxs-lookup"><span data-stu-id="21443-102">Use the <xref:System.Windows.Interop.D3DImage> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</span></span>  
  
 <span data-ttu-id="21443-103">调用 <xref:System.Windows.Interop.D3DImage.Lock%2A> 方法以更改 <xref:System.Windows.Interop.D3DImage>显示的 Direct3D 内容。</span><span class="sxs-lookup"><span data-stu-id="21443-103">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the Direct3D content displayed by the <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="21443-104">调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法，将 Direct3D surface 分配给 <xref:System.Windows.Interop.D3DImage>。</span><span class="sxs-lookup"><span data-stu-id="21443-104">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to a <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="21443-105">调用 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> 方法来跟踪 Direct3D surface 更新。</span><span class="sxs-lookup"><span data-stu-id="21443-105">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to track updates to the Direct3D surface.</span></span> <span data-ttu-id="21443-106">调用 <xref:System.Windows.Interop.D3DImage.Unlock%2A> 方法以显示已更改的区域。</span><span class="sxs-lookup"><span data-stu-id="21443-106">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to display the changed areas.</span></span>  
  
 <span data-ttu-id="21443-107"><xref:System.Windows.Interop.D3DImage> 类管理两个显示缓冲区，这些缓冲区称为*后台*缓冲区和*前台缓冲区*。</span><span class="sxs-lookup"><span data-stu-id="21443-107">The <xref:System.Windows.Interop.D3DImage> class manages two display buffers, which are called the *back buffer* and the *front buffer*.</span></span> <span data-ttu-id="21443-108">后台缓冲区是 Direct3D surface。</span><span class="sxs-lookup"><span data-stu-id="21443-108">The back buffer is your Direct3D surface.</span></span>  <span data-ttu-id="21443-109">当你调用在硬件上显示的 <xref:System.Windows.Interop.D3DImage.Unlock%2A> 方法时，对后台缓冲区的更改将被转发到前台缓冲区。</span><span class="sxs-lookup"><span data-stu-id="21443-109">Changes to the back buffer are copied forward to the front buffer when you call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method, where it is displayed on the hardware.</span></span> <span data-ttu-id="21443-110">偶尔，前台缓冲区变为不可用。</span><span class="sxs-lookup"><span data-stu-id="21443-110">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="21443-111">此缺乏可用性的原因可能是屏幕锁定、全屏独占 Direct3D 应用程序、用户切换或其他系统活动。</span><span class="sxs-lookup"><span data-stu-id="21443-111">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="21443-112">出现这种情况时，将通过处理 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件来通知您的 WPF 应用程序。</span><span class="sxs-lookup"><span data-stu-id="21443-112">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="21443-113">应用程序响应前台缓冲区变为不可用的方式取决于是否允许 WPF 回退到软件呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-113">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="21443-114"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法的重载具有一个参数，该参数指定 WPF 是否回退到软件呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-114">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a><span data-ttu-id="21443-115">在 WPF 不回退到软件呈现时响应不可用的前台缓冲区</span><span class="sxs-lookup"><span data-stu-id="21443-115">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</span></span>  
 <span data-ttu-id="21443-116">调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> 重载时，或者调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> 重载，并将 `enableSoftwareFallback` 参数设置为 `false`时，呈现系统将在前台缓冲区变为不可用且不显示任何内容时释放对后台缓冲区的引用。</span><span class="sxs-lookup"><span data-stu-id="21443-116">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="21443-117">当前台缓冲区再次可用时，呈现系统会引发 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件来通知您的 WPF 应用程序。</span><span class="sxs-lookup"><span data-stu-id="21443-117">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="21443-118">可以为 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件创建事件处理程序，以便使用有效的 Direct3D surface 再次重新开始呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-118">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="21443-119">若要重新开始呈现，必须调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。</span><span class="sxs-lookup"><span data-stu-id="21443-119">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a><span data-ttu-id="21443-120">当 WPF 回退到软件呈现时响应不可用的前台缓冲区</span><span class="sxs-lookup"><span data-stu-id="21443-120">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</span></span>  
 <span data-ttu-id="21443-121">当你在将 `enableSoftwareFallback` 参数设置为 `true`时调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> 重载时，呈现系统将在前台缓冲区变为不可用时保留对后台缓冲区的引用，因此，无需在前台缓冲区再次可用时调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。</span><span class="sxs-lookup"><span data-stu-id="21443-121">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="21443-122">可能存在用户的设备不可用的情况。</span><span class="sxs-lookup"><span data-stu-id="21443-122">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="21443-123">如果出现这种情况，请调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 以释放 WPF 对后台缓冲区的引用。</span><span class="sxs-lookup"><span data-stu-id="21443-123">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="21443-124">如果需要重置设备，请调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>，并将 `backBuffer` 参数设置为 `null`，然后再次调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>，`backBuffer` 设置为有效的 Direct3D surface。</span><span class="sxs-lookup"><span data-stu-id="21443-124">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with the `backBuffer` parameter set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21443-125">性能很大程度上取决于 Direct3D surface 的设置。</span><span class="sxs-lookup"><span data-stu-id="21443-125">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="21443-126">有关详细信息，请参阅[Direct3D9 和 WPF 互操作性的性能注意事项](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-126">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21443-127">当 WPF 在软件中呈现（如通过远程桌面连接）时，<xref:System.Windows.Interop.D3DImage> 类不会显示 Direct3D 内容，除非你调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> 并为 `enableSoftwareFallback` 参数指定 `true`。</span><span class="sxs-lookup"><span data-stu-id="21443-127">The <xref:System.Windows.Interop.D3DImage> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> and specify `true` for the `enableSoftwareFallback` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21443-128">下面的代码示例演示如何在 XAML 中声明 <xref:System.Windows.Interop.D3DImage>。</span><span class="sxs-lookup"><span data-stu-id="21443-128">The following code example shows how to declare a <xref:System.Windows.Interop.D3DImage> in XAML.</span></span> <span data-ttu-id="21443-129">必须映射 <xref:System.Windows.Interop> 命名空间，因为它不包含在默认的 XAML 命名空间中。</span><span class="sxs-lookup"><span data-stu-id="21443-129">You must map the <xref:System.Windows.Interop> namespace, because it is not included in the default XAML namespaces.</span></span> <span data-ttu-id="21443-130">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-130">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21443-131">初始化 <see cref="T:System.Windows.Interop.D3DImage" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="21443-131">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-132">初始化 <see cref="T:System.Windows.Interop.D3DImage" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="21443-132">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-133">默认显示分辨率为 1/96th 每英寸。</span><span class="sxs-lookup"><span data-stu-id="21443-133">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.D3DImage : double * double -&gt; System.Windows.Interop.D3DImage" Usage="new System.Windows.Interop.D3DImage (dpiX, dpiY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX"><span data-ttu-id="21443-134">显示分辨率位于 x 轴上。</span><span class="sxs-lookup"><span data-stu-id="21443-134">The display resolution on the x-axis.</span></span></param>
        <param name="dpiY"><span data-ttu-id="21443-135">显示分辨率位于 y 轴上。</span><span class="sxs-lookup"><span data-stu-id="21443-135">The display resolution on the y-axis.</span></span></param>
        <summary><span data-ttu-id="21443-136">使用指定的显示分辨率初始化 <see cref="T:System.Windows.Interop.D3DImage" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="21443-136">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-137">默认显示分辨率为 1/96th 每英寸。</span><span class="sxs-lookup"><span data-stu-id="21443-137">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21443-138"><paramref name="dpiX" /> 或 <paramref name="dpiY" /> 小于零。</span><span class="sxs-lookup"><span data-stu-id="21443-138"><paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberSignature Language="F#" Value="member this.AddDirtyRect : System.Windows.Int32Rect -&gt; unit" Usage="d3DImage.AddDirtyRect dirtyRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect"><span data-ttu-id="21443-139">一个 <see cref="T:System.Windows.Int32Rect" />，表示已更改的区域。</span><span class="sxs-lookup"><span data-stu-id="21443-139">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span></span></param>
        <summary><span data-ttu-id="21443-140">指定后台缓冲区已更改的区域。</span><span class="sxs-lookup"><span data-stu-id="21443-140">Specifies the area of the back buffer that changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-141">调用 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> 方法，以指示你的代码对后台缓冲区所做的更改。</span><span class="sxs-lookup"><span data-stu-id="21443-141">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to indicate changes your code has made to the back buffer.</span></span> <span data-ttu-id="21443-142">若要呈现，后台缓冲区的已更改区域必须在 <xref:System.Windows.Interop.D3DImage>上具有相应的已更改区域。</span><span class="sxs-lookup"><span data-stu-id="21443-142">To be rendered, the changed area on the back buffer must have a corresponding changed area on the <xref:System.Windows.Interop.D3DImage>.</span></span>  
  
 <span data-ttu-id="21443-143">调用 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> 方法之前调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 和 <xref:System.Windows.Interop.D3DImage.Lock%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="21443-143">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> and <xref:System.Windows.Interop.D3DImage.Lock%2A> methods before calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="21443-144">调用 <xref:System.Windows.Interop.D3DImage.Unlock%2A> 方法，将更改后的区域复制到前台缓冲区。</span><span class="sxs-lookup"><span data-stu-id="21443-144">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the changed areas to the front buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21443-145">在对 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> 方法进行一些调用后，已更改的区域将合并到单个区域中。</span><span class="sxs-lookup"><span data-stu-id="21443-145">After a few calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method, the changed areas are merged into a single area.</span></span> <span data-ttu-id="21443-146">这意味着，必须在更改后的区域外具有有效数据。</span><span class="sxs-lookup"><span data-stu-id="21443-146">This means you must have valid data outside of the changed areas.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21443-147">下面的代码示例演示如何调用 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> 方法，以便在后台缓冲区中指定已更改的区域。</span><span class="sxs-lookup"><span data-stu-id="21443-147">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to specify the changed region in the back buffer.</span></span> <span data-ttu-id="21443-148">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-148">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="21443-149">对 <see cref="M:System.Windows.Interop.D3DImage.Lock" /> 或 <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> 方法的调用未锁定位图。</span><span class="sxs-lookup"><span data-stu-id="21443-149">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span>  
  
<span data-ttu-id="21443-150">- 或 -</span><span class="sxs-lookup"><span data-stu-id="21443-150">-or-</span></span> 
<span data-ttu-id="21443-151">未通过调用 <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> 方法分配后台缓冲区。</span><span class="sxs-lookup"><span data-stu-id="21443-151">The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21443-152">存在下列一种或多种情况时。</span><span class="sxs-lookup"><span data-stu-id="21443-152">One or more of the following conditions is true.</span></span>  
  
 <span data-ttu-id="21443-153"><paramref name="dirtyRect.X" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="21443-153"><paramref name="dirtyRect.X" /> &lt; 0</span></span> 
 <span data-ttu-id="21443-154"><paramref name="dirtyRect.Y" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="21443-154"><paramref name="dirtyRect.Y" /> &lt; 0</span></span> 
 <span data-ttu-id="21443-155"><paramref name="dirtyRect.Width" />&lt; 0 或 <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 或 <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span><span class="sxs-lookup"><span data-stu-id="21443-155"><paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-156">创建此 <see cref="T:System.Windows.Interop.D3DImage" /> 对象的可修改复本，从而深度复制此对象的值。</span><span class="sxs-lookup"><span data-stu-id="21443-156">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span></span> <span data-ttu-id="21443-157">在复制依赖项属性时，此方法复制资源引用和数据绑定（它们可能不再解析），而不复制动画或其当前值。</span><span class="sxs-lookup"><span data-stu-id="21443-157">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="21443-158">当前对象的可修改复本。</span><span class="sxs-lookup"><span data-stu-id="21443-158">A modifiable clone of the current object.</span></span> <span data-ttu-id="21443-159">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true." />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="21443-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-160">此方法用于生成冻结 <xref:System.Windows.Freezable> 对象（或任何 <xref:System.Windows.Freezable> 对象）的可修改副本。</span><span class="sxs-lookup"><span data-stu-id="21443-160">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="21443-161">为方便起见，此方法使用强类型实现隐藏了继承的版本。</span><span class="sxs-lookup"><span data-stu-id="21443-161">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="21443-162">有关详细信息，请参阅 <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="21443-162">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="21443-163">要克隆的对象。</span><span class="sxs-lookup"><span data-stu-id="21443-163">The object to clone.</span></span></param>
        <summary><span data-ttu-id="21443-164">使用基（未经过动画处理的）属性值使该实例成为指定 <see cref="T:System.Windows.Freezable" /> 的克隆（深层复制）。</span><span class="sxs-lookup"><span data-stu-id="21443-164">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-165">创建此 <see cref="T:System.Windows.Interop.D3DImage" /> 对象的可修改复本，从而深度复制此对象的当前值。</span><span class="sxs-lookup"><span data-stu-id="21443-165">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="21443-166">不复制资源引用、数据绑定和动画，而是复制其当前值。</span><span class="sxs-lookup"><span data-stu-id="21443-166">Resource references, data bindings, and animations are not copied, but their current values are copied.</span></span></summary>
        <returns><span data-ttu-id="21443-167">当前对象的可修改复本。</span><span class="sxs-lookup"><span data-stu-id="21443-167">A modifiable clone of the current object.</span></span> <span data-ttu-id="21443-168">即使源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性为 <see langword="true" />，所克隆的对象的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 属性也将为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="21443-168">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-169">此方法用于生成冻结 <xref:System.Windows.Freezable> 对象（或任何 <xref:System.Windows.Freezable> 对象）的可修改副本。</span><span class="sxs-lookup"><span data-stu-id="21443-169">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="21443-170">为方便起见，此方法使用强类型实现隐藏了继承的版本。</span><span class="sxs-lookup"><span data-stu-id="21443-170">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="21443-171">有关详细信息，请参阅 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="21443-171">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="21443-172">要克隆的 <see cref="T:System.Windows.Freezable" />。</span><span class="sxs-lookup"><span data-stu-id="21443-172">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="21443-173">使用当前属性值使该实例成为指定 <see cref="T:System.Windows.Freezable" /> 的可修改克隆（深层复制）。</span><span class="sxs-lookup"><span data-stu-id="21443-173">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource&#xA;override this.CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource" Usage="d3DImage.CopyBackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-174">创建 <see cref="T:System.Windows.Interop.D3DImage" /> 的软件副本。</span><span class="sxs-lookup"><span data-stu-id="21443-174">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <returns><span data-ttu-id="21443-175">一个 <see cref="T:System.Windows.Media.Imaging.BitmapSource" />，它是后台缓冲区当前状态的软件副本；否则，如果无法读取后台缓冲区，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21443-175">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-176"><xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> 方法由打印系统和 <xref:System.Windows.Media.Imaging.RenderTargetBitmap> 类等客户端调用。</span><span class="sxs-lookup"><span data-stu-id="21443-176">The <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method is called by clients such as the printing system and the <xref:System.Windows.Media.Imaging.RenderTargetBitmap> class.</span></span>  
  
 <span data-ttu-id="21443-177">（可选）重写 <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> 方法以实现自定义逻辑并返回不同的 <xref:System.Windows.Media.Imaging.BitmapSource>。</span><span class="sxs-lookup"><span data-stu-id="21443-177">Optionally override the <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method to implement custom logic and return a different <xref:System.Windows.Media.Imaging.BitmapSource>.</span></span> <span data-ttu-id="21443-178">例如，如果默认 <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> 实现返回 `null`，则可以返回占位符 <xref:System.Windows.Media.Imaging.BitmapSource>。</span><span class="sxs-lookup"><span data-stu-id="21443-178">For example, you can return a placeholder <xref:System.Windows.Media.Imaging.BitmapSource> if the default <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="d3DImage.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-179">在派生类中实现时，创建 <see cref="T:System.Windows.Interop.D3DImage" /> 派生类的新实例。</span><span class="sxs-lookup"><span data-stu-id="21443-179">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="21443-180">新实例。</span><span class="sxs-lookup"><span data-stu-id="21443-180">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-181">如果从 <xref:System.Windows.Interop.D3DImage> 类派生，则必须重写 <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> 方法才能启用正确的克隆。</span><span class="sxs-lookup"><span data-stu-id="21443-181">If you derive from the <xref:System.Windows.Interop.D3DImage> class, you must override the <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> method to enable correct cloning.</span></span> <span data-ttu-id="21443-182">默认实现将执行 `return new D3DImage()`，如果实例是不同的类，这将不正确。</span><span class="sxs-lookup"><span data-stu-id="21443-182">The default implementation performs a `return new D3DImage()`, which will not be correct if the instance is a different class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="d3DImage.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-183">在通过垃圾回收回收 <see cref="T:System.Windows.Interop.D3DImage" /> 之前，释放资源并执行其他清理操作。</span><span class="sxs-lookup"><span data-stu-id="21443-183">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-184">此方法重写 <xref:System.Object.Finalize%2A>。</span><span class="sxs-lookup"><span data-stu-id="21443-184">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="21443-185">应用程序代码不应调用此方法;在垃圾回收过程中会自动调用对象的 `Finalize` 方法，除非已通过调用 <xref:System.GC.SuppressFinalize%2A> 方法禁用了垃圾回收器终止。</span><span class="sxs-lookup"><span data-stu-id="21443-185">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="21443-186">有关详细信息，请参阅[Finalize 方法和析构函数](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))、[清理非托管资源](~/docs/standard/garbage-collection/unmanaged.md)和[重写 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))。</span><span class="sxs-lookup"><span data-stu-id="21443-186">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="d3DImage.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="21443-187">没有作用。</span><span class="sxs-lookup"><span data-stu-id="21443-187">Has no effect.</span></span></param>
        <summary><span data-ttu-id="21443-188">使 <see cref="T:System.Windows.Interop.D3DImage" /> 成为不可修改的，或确定是否可使其成为不可修改的。</span><span class="sxs-lookup"><span data-stu-id="21443-188">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="21443-189">在所有情况下均为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="21443-189"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-190"><xref:System.Windows.Interop.D3DImage> 类不允许冻结，因为由于前台缓冲可用性，始终可能发生更改。</span><span class="sxs-lookup"><span data-stu-id="21443-190">The <xref:System.Windows.Interop.D3DImage> class does not allow freezing because changes are always possible due to front buffer availability.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="21443-191">要复制的实例。</span><span class="sxs-lookup"><span data-stu-id="21443-191">The instance to copy.</span></span></param>
        <summary><span data-ttu-id="21443-192">使用基（未经过动画处理的）属性值使该实例成为指定的 <see cref="T:System.Windows.Freezable" /> 的冻结复本。</span><span class="sxs-lookup"><span data-stu-id="21443-192">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="21443-193">要复制和冻结的 <see cref="T:System.Windows.Freezable" />。</span><span class="sxs-lookup"><span data-stu-id="21443-193">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="21443-194">使当前实例成为指定的 <see cref="T:System.Windows.Freezable" /> 的冻结复本。</span><span class="sxs-lookup"><span data-stu-id="21443-194">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="21443-195">如果对象具有经过动画处理的依赖项对象，则复制这些属性当前经过动画处理的值。</span><span class="sxs-lookup"><span data-stu-id="21443-195">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Interop.D3DImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-196">获取 <see cref="T:System.Windows.Interop.D3DImage" /> 的高度。</span><span class="sxs-lookup"><span data-stu-id="21443-196">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="21443-197"><see cref="T:System.Windows.Interop.D3DImage" /> 的高度（采用度量单位）。</span><span class="sxs-lookup"><span data-stu-id="21443-197">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="21443-198">度量单位为 1/96 英寸。</span><span class="sxs-lookup"><span data-stu-id="21443-198">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-199">当通过调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法指定新的后台缓冲区时，<xref:System.Windows.Interop.D3DImage.Height%2A> 的值可能会更改。</span><span class="sxs-lookup"><span data-stu-id="21443-199">The value of <xref:System.Windows.Interop.D3DImage.Height%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailable : bool" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-200">获取一个值，该值指示前台缓冲区是否存在。</span><span class="sxs-lookup"><span data-stu-id="21443-200">Gets a value that indicates whether a front buffer exists.</span></span></summary>
        <value><span data-ttu-id="21443-201">如果存在前台缓冲区，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="21443-201"><see langword="true" /> if a front buffer exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-202">偶尔，前台缓冲区变为不可用。</span><span class="sxs-lookup"><span data-stu-id="21443-202">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="21443-203">此缺乏可用性的原因可能是屏幕锁定、全屏独占 Direct3D 应用程序、用户切换或其他系统活动。</span><span class="sxs-lookup"><span data-stu-id="21443-203">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="21443-204">出现这种情况时，将通过处理 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件来通知您的 WPF 应用程序。</span><span class="sxs-lookup"><span data-stu-id="21443-204">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="21443-205">应用程序响应前台缓冲区变为不可用的方式取决于是否允许 WPF 回退到软件呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-205">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="21443-206"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法的重载具有一个参数，该参数指定 WPF 是否回退到软件呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-206">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="21443-207">有关详细信息，请参阅 <xref:System.Windows.Interop.D3DImage> 类中的备注。</span><span class="sxs-lookup"><span data-stu-id="21443-207">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="21443-208">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="21443-208">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21443-209">标识符字段</span><span class="sxs-lookup"><span data-stu-id="21443-209">Identifier field</span></span>|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|<span data-ttu-id="21443-210">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="21443-210">Metadata properties set to `true`</span></span>|<span data-ttu-id="21443-211">None</span><span class="sxs-lookup"><span data-stu-id="21443-211">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="21443-212">下面的代码示例演示如何在呈现组合目标时检查 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="21443-212">The following code example shows how to check the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> property when rendering the composition target.</span></span> <span data-ttu-id="21443-213">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-213">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-214">当 <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> 属性更改时发生。</span><span class="sxs-lookup"><span data-stu-id="21443-214">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-215">处理在前台缓冲区状态发生更改时要通知的 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>。</span><span class="sxs-lookup"><span data-stu-id="21443-215">Handle the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> to be notified when the status of the front buffer changes.</span></span> <span data-ttu-id="21443-216">应用程序响应前台缓冲区变为不可用的方式取决于是否允许 WPF 回退到软件呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-216">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="21443-217"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法的重载具有一个参数，该参数指定 WPF 是否回退到软件呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-217">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="21443-218">有关详细信息，请参阅 <xref:System.Windows.Interop.D3DImage> 类中的备注。</span><span class="sxs-lookup"><span data-stu-id="21443-218">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFrontBufferAvailableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-219">标识 <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="21443-219">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="d3DImage.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-220">锁定 <see cref="T:System.Windows.Interop.D3DImage" /> 并允许对后台缓冲区进行操作。</span><span class="sxs-lookup"><span data-stu-id="21443-220">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-221">调用 <xref:System.Windows.Interop.D3DImage.Lock%2A> 方法，通过调用 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> 和 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法更改后台缓冲区。</span><span class="sxs-lookup"><span data-stu-id="21443-221">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the back buffer by calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> and <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> methods.</span></span> <span data-ttu-id="21443-222">当 <xref:System.Windows.Interop.D3DImage> 锁定时，应用程序还可以呈现给分配给后台缓冲区的 Direct3D surface。</span><span class="sxs-lookup"><span data-stu-id="21443-222">While the <xref:System.Windows.Interop.D3DImage> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21443-223">当呈现系统读取后台缓冲区以更新前台缓冲区时，<xref:System.Windows.Interop.D3DImage.Lock%2A> 方法将会阻止。</span><span class="sxs-lookup"><span data-stu-id="21443-223">The <xref:System.Windows.Interop.D3DImage.Lock%2A> method blocks when the rendering system is reading the back buffer to update the front buffer.</span></span> <span data-ttu-id="21443-224">使用 <xref:System.Windows.Interop.D3DImage.TryLock%2A> 方法可避免无限期阻止。</span><span class="sxs-lookup"><span data-stu-id="21443-224">Use the <xref:System.Windows.Interop.D3DImage.TryLock%2A> method to avoid blocking indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21443-225">下面的代码示例演示如何调用 <xref:System.Windows.Interop.D3DImage.Lock%2A> 方法来启用对后台缓冲区的更新。</span><span class="sxs-lookup"><span data-stu-id="21443-225">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to enable updates to the back buffer.</span></span> <span data-ttu-id="21443-226">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-226">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="21443-227">锁计数等于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="21443-227">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.Media.ImageMetadata" Usage="System.Windows.Interop.D3DImage.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-228">获取与图像源关联的元数据。</span><span class="sxs-lookup"><span data-stu-id="21443-228">Gets the metadata associated with the image source.</span></span></summary>
        <value><span data-ttu-id="21443-229">在所有情况下均为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="21443-229"><see langword="null" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelHeight : int" Usage="System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-230">获取 <see cref="T:System.Windows.Interop.D3DImage" /> 的高度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="21443-230">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="21443-231"><see cref="T:System.Windows.Interop.D3DImage" /> 的高度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="21443-231">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-232">当通过调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法指定新的后台缓冲区时，<xref:System.Windows.Interop.D3DImage.PixelHeight%2A> 的值可能会更改。</span><span class="sxs-lookup"><span data-stu-id="21443-232">The value of <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21443-233">下面的代码示例演示如何使用 <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> 属性在后台缓冲区中指定已更改的区域。</span><span class="sxs-lookup"><span data-stu-id="21443-233">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="21443-234">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-234">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelWidth : int" Usage="System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-235">获取 <see cref="T:System.Windows.Interop.D3DImage" /> 的宽度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="21443-235">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="21443-236"><see cref="T:System.Windows.Interop.D3DImage" /> 的宽度（以像素为单位）。</span><span class="sxs-lookup"><span data-stu-id="21443-236">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-237">当通过调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法指定新的后台缓冲区时，<xref:System.Windows.Interop.D3DImage.PixelWidth%2A> 的值可能会更改。</span><span class="sxs-lookup"><span data-stu-id="21443-237">The value of <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21443-238">下面的代码示例演示如何使用 <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> 属性在后台缓冲区中指定已更改的区域。</span><span class="sxs-lookup"><span data-stu-id="21443-238">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="21443-239">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-239">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21443-240">分配 Direct3D 图面作为后台缓冲区的源。</span><span class="sxs-lookup"><span data-stu-id="21443-240">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="21443-241">Direct3D 图面的类型。</span><span class="sxs-lookup"><span data-stu-id="21443-241">The type of Direct3D surface.</span></span> <span data-ttu-id="21443-242">必须为有效的 <see cref="T:System.Windows.Interop.D3DResourceType" />。</span><span class="sxs-lookup"><span data-stu-id="21443-242">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="21443-243">要作为后台缓冲区分配的 Direct3D 图面。</span><span class="sxs-lookup"><span data-stu-id="21443-243">The Direct3D surface to assign as the back buffer.</span></span></param>
        <summary><span data-ttu-id="21443-244">分配 Direct3D 图面作为后台缓冲区的源。</span><span class="sxs-lookup"><span data-stu-id="21443-244">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-245">调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法，将 Direct3D surface 分配到后台缓冲区。</span><span class="sxs-lookup"><span data-stu-id="21443-245">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21443-246">性能很大程度上取决于 Direct3D surface 的设置。</span><span class="sxs-lookup"><span data-stu-id="21443-246">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="21443-247">有关详细信息，请参阅[Direct3D9 和 WPF 互操作性的性能注意事项](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-247">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
 <span data-ttu-id="21443-248">调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> 重载与调用 `enableSoftwareFallback` 参数设置为 `false`的 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> 重载相同。</span><span class="sxs-lookup"><span data-stu-id="21443-248">Calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload is identical to calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`.</span></span> <span data-ttu-id="21443-249">当调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> 或调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> 并将 `enableSoftwareFallback` 参数设置为 `false`时，呈现系统将释放其对后台缓冲区的引用，而不会显示任何内容。</span><span class="sxs-lookup"><span data-stu-id="21443-249">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> or call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="21443-250">当前台缓冲区再次可用时，呈现系统会引发 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件来通知您的 WPF 应用程序。</span><span class="sxs-lookup"><span data-stu-id="21443-250">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="21443-251">可以为 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件创建事件处理程序，以便使用有效的 Direct3D surface 再次重新开始呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-251">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="21443-252">若要重新开始呈现，必须调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。</span><span class="sxs-lookup"><span data-stu-id="21443-252">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="21443-253">以下列表显示了 `IDirect3DSurface9` 类型所需的后台缓冲区设置。</span><span class="sxs-lookup"><span data-stu-id="21443-253">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="21443-254">`D3DFMT_A8R8G8B8` 或 `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="21443-254">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="21443-255">仅对 `IDirect3DSurface9Ex` 表面允许多级多级。</span><span class="sxs-lookup"><span data-stu-id="21443-255">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21443-256">下面的代码示例演示如何调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法来分配 Direct3D surface。</span><span class="sxs-lookup"><span data-stu-id="21443-256">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface.</span></span> <span data-ttu-id="21443-257">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-257">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="21443-258">对 <see cref="T:System.Windows.Interop.D3DImage" /> 或 <see cref="M:System.Windows.Interop.D3DImage.Lock" /> 方法的调用未锁定 <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />。</span><span class="sxs-lookup"><span data-stu-id="21443-258">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21443-259"><paramref name="backBufferType" /> 不是有效的 <see cref="T:System.Windows.Interop.D3DResourceType" />。</span><span class="sxs-lookup"><span data-stu-id="21443-259"><paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21443-260"><paramref name="backBuffer" /> 的创建参数不符合 <paramref name="backBufferType" /> 的要求或 <paramref name="backBuffer" /> 设备无效。</span><span class="sxs-lookup"><span data-stu-id="21443-260">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint * bool -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer, enableSoftwareFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="backBuffer" Type="System.IntPtr" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="21443-261">Direct3D 图面的类型。</span><span class="sxs-lookup"><span data-stu-id="21443-261">The type of Direct3D surface.</span></span> <span data-ttu-id="21443-262">必须为有效的 <see cref="T:System.Windows.Interop.D3DResourceType" />。</span><span class="sxs-lookup"><span data-stu-id="21443-262">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="21443-263">要作为后台缓冲区分配的 Direct3D 图面。</span><span class="sxs-lookup"><span data-stu-id="21443-263">The Direct3D surface to assign as the back buffer.</span></span></param>
        <param name="enableSoftwareFallback"><span data-ttu-id="21443-264">退回软件呈现，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="21443-264"><see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="21443-265">分配 Direct3D 图面作为后台缓冲区的源。</span><span class="sxs-lookup"><span data-stu-id="21443-265">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-266">调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> 重载时，或者调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> 重载，并将 `enableSoftwareFallback` 参数设置为 `false`时，呈现系统将在前台缓冲区变为不可用且不显示任何内容时释放对后台缓冲区的引用。</span><span class="sxs-lookup"><span data-stu-id="21443-266">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="21443-267">当前台缓冲区再次可用时，呈现系统会引发 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件来通知您的 WPF 应用程序。</span><span class="sxs-lookup"><span data-stu-id="21443-267">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="21443-268">可以为 <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> 事件创建事件处理程序，以便使用有效的 Direct3D surface 再次重新开始呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-268">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="21443-269">若要重新开始呈现，必须调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。</span><span class="sxs-lookup"><span data-stu-id="21443-269">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="21443-270">如果调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> 并将 `enableSoftwareFallback` 参数设置为 `true`，则在前台缓冲区变为不可用时，呈现系统将保留对后台缓冲区的引用，因此，当前端缓冲区再次可用时，无需调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。</span><span class="sxs-lookup"><span data-stu-id="21443-270">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="21443-271">可能存在用户的设备不可用的情况。</span><span class="sxs-lookup"><span data-stu-id="21443-271">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="21443-272">如果出现这种情况，请调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 以释放 WPF 对后台缓冲区的引用。</span><span class="sxs-lookup"><span data-stu-id="21443-272">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="21443-273">如果需要重置设备，请调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>，并将 `backBuffer` 设置为 `null`，然后再次调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>，`backBuffer` 设置为有效的 Direct3D 图面。</span><span class="sxs-lookup"><span data-stu-id="21443-273">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with `backBuffer` set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
 <span data-ttu-id="21443-274">以下列表显示了 `IDirect3DSurface9` 类型所需的后台缓冲区设置。</span><span class="sxs-lookup"><span data-stu-id="21443-274">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="21443-275">`D3DFMT_A8R8G8B8` 或 `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="21443-275">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="21443-276">仅对 `IDirect3DSurface9Ex` 表面允许多级多级。</span><span class="sxs-lookup"><span data-stu-id="21443-276">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberSignature Language="F#" Value="member this.TryLock : System.Windows.Duration -&gt; bool" Usage="d3DImage.TryLock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="21443-277">获得锁定之前要等待的持续时间。</span><span class="sxs-lookup"><span data-stu-id="21443-277">The duration to wait for the lock to be acquired.</span></span></param>
        <summary><span data-ttu-id="21443-278">尝试锁定 <see cref="T:System.Windows.Interop.D3DImage" /> 并等待指定的持续时间。</span><span class="sxs-lookup"><span data-stu-id="21443-278">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span></span></summary>
        <returns><span data-ttu-id="21443-279">如果获得锁定，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="21443-279"><see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21443-280">将 <paramref name="timeout" /> 设置为 <see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="21443-280"><paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="21443-281">锁计数等于 <see cref="F:System.UInt32.MaxValue" />。</span><span class="sxs-lookup"><span data-stu-id="21443-281">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberSignature Language="F#" Value="member this.Unlock : unit -&gt; unit" Usage="d3DImage.Unlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21443-282">使 <see cref="T:System.Windows.Interop.D3DImage" /> 的锁计数递减。</span><span class="sxs-lookup"><span data-stu-id="21443-282">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-283">当 <xref:System.Windows.Interop.D3DImage> 的锁定计数达到零时，<xref:System.Windows.Interop.D3DImage> 完全解锁。</span><span class="sxs-lookup"><span data-stu-id="21443-283">When the lock count for the <xref:System.Windows.Interop.D3DImage> reaches zero, the <xref:System.Windows.Interop.D3DImage> is fully unlocked.</span></span> <span data-ttu-id="21443-284">如果图像已更改由先前对 <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> 方法的调用指定的区域，则将 <xref:System.Windows.Interop.D3DImage> 标记为呈现。</span><span class="sxs-lookup"><span data-stu-id="21443-284">The <xref:System.Windows.Interop.D3DImage> is marked for rendering if the image has changed areas that were specified by previous calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="21443-285">提交更改并发生呈现时，对 <xref:System.Windows.Interop.D3DImage.Lock%2A> 方法的其他调用将会阻塞，直到呈现线程将后台缓冲区的内容复制到前台缓冲区。</span><span class="sxs-lookup"><span data-stu-id="21443-285">When the changes are committed and rendering occurs, additional calls to the <xref:System.Windows.Interop.D3DImage.Lock%2A> method block until the render thread has copied the contents of the back buffer to the front buffer.</span></span> <span data-ttu-id="21443-286">此同步避免显示项目，如撕裂。</span><span class="sxs-lookup"><span data-stu-id="21443-286">This synchronization avoids display artifacts, such as tearing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21443-287">请勿在解锁 <xref:System.Windows.Interop.D3DImage> 时更新 Direct3D surface。</span><span class="sxs-lookup"><span data-stu-id="21443-287">Do not update the Direct3D surface while the <xref:System.Windows.Interop.D3DImage> is unlocked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21443-288">下面的代码示例演示如何调用 <xref:System.Windows.Interop.D3DImage.Unlock%2A> 方法将更新后的缓冲区复制到前台缓冲区。</span><span class="sxs-lookup"><span data-stu-id="21443-288">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the updated back buffer to the front buffer.</span></span> <span data-ttu-id="21443-289">有关详细信息，请参阅[演练：在 WPF 中承载 Direct3D9 内容](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="21443-289">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Interop.D3DImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21443-290">获取 <see cref="T:System.Windows.Interop.D3DImage" /> 的宽度。</span><span class="sxs-lookup"><span data-stu-id="21443-290">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="21443-291"><see cref="T:System.Windows.Interop.D3DImage" /> 的宽度（采用度量单位）。</span><span class="sxs-lookup"><span data-stu-id="21443-291">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="21443-292">度量单位为 1/96 英寸。</span><span class="sxs-lookup"><span data-stu-id="21443-292">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21443-293">当通过调用 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> 方法指定新的后台缓冲区时，<xref:System.Windows.Interop.D3DImage.Width%2A> 的值可能会更改。</span><span class="sxs-lookup"><span data-stu-id="21443-293">The value of <xref:System.Windows.Interop.D3DImage.Width%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>
