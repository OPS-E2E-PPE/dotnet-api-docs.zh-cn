<Type Name="XamlNodeList" FullName="System.Xaml.XamlNodeList">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e8694f701a2a07d0f39842ffd97012efde3181d" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82377364" /></Metadata><TypeSignature Language="C#" Value="public class XamlNodeList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlNodeList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlNodeList" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlNodeList" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlNodeList" />
  <TypeSignature Language="F#" Value="type XamlNodeList = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1451b-101">为诸如采用延迟方式编写 XAML 节点等方案提供 XAML 节点的列表。</span><span class="sxs-lookup"><span data-stu-id="1451b-101">Provides a list of XAML nodes, which can be used for scenarios such as writing XAML nodes in a deferred manner.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1451b-102">创建 <xref:System.Xaml.XamlNodeList>时，将创建一个作为 <xref:System.Xaml.XamlNodeList.Writer%2A> 值存在的编写器委托。</span><span class="sxs-lookup"><span data-stu-id="1451b-102">When you create a <xref:System.Xaml.XamlNodeList>, you create a writer delegate that exists as the <xref:System.Xaml.XamlNodeList.Writer%2A> value.</span></span> <span data-ttu-id="1451b-103">编写器委托基于特定于 XAML 节点的内部 XAML 编写器类。</span><span class="sxs-lookup"><span data-stu-id="1451b-103">The writer delegate is based on an internal XAML writer class that is specifically for XAML nodes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlNodeQueue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1451b-104">初始化 <see cref="T:System.Xaml.XamlNodeList" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1451b-104">Initializes a new instance of the <see cref="T:System.Xaml.XamlNodeList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlNodeList (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlNodeList(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlNodeList : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlNodeList" Usage="new System.Xaml.XamlNodeList schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="1451b-105">要用于节点操作的架构上下文。</span><span class="sxs-lookup"><span data-stu-id="1451b-105">The schema context to use for node operations.</span></span></param>
        <summary><span data-ttu-id="1451b-106">使用提供的架构上下文初始化 <see cref="T:System.Xaml.XamlNodeList" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1451b-106">Initializes a new instance of the <see cref="T:System.Xaml.XamlNodeList" /> class, using a provided schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1451b-107">架构上下文将应用于作为 <xref:System.Xaml.XamlNodeList.Writer%2A> 值存在的 XAML 编写器。</span><span class="sxs-lookup"><span data-stu-id="1451b-107">The schema context is applied to the XAML writer that exists as the <xref:System.Xaml.XamlNodeList.Writer%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1451b-108"><paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1451b-108"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlNodeList (System.Xaml.XamlSchemaContext schemaContext, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.#ctor(System.Xaml.XamlSchemaContext,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext, size As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlNodeList(System::Xaml::XamlSchemaContext ^ schemaContext, int size);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlNodeList : System.Xaml.XamlSchemaContext * int -&gt; System.Xaml.XamlNodeList" Usage="new System.Xaml.XamlNodeList (schemaContext, size)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="1451b-109">要用于节点操作的架构上下文。</span><span class="sxs-lookup"><span data-stu-id="1451b-109">The schema context to use for node operations.</span></span></param>
        <param name="size"><span data-ttu-id="1451b-110">列表的预期项计数。</span><span class="sxs-lookup"><span data-stu-id="1451b-110">The intended item count of the list.</span></span></param>
        <summary><span data-ttu-id="1451b-111">使用提供的架构上下文和列表大小初始化 <see cref="T:System.Xaml.XamlNodeList" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="1451b-111">Initializes a new instance of the <see cref="T:System.Xaml.XamlNodeList" /> class, using a provided schema context and list size.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1451b-112"><paramref name="schemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1451b-112"><paramref name="schemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="xamlNodeList.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1451b-113">清除此列表中的项。</span><span class="sxs-lookup"><span data-stu-id="1451b-113">Clears the items in this list.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1451b-114">此方法对基础列表实现调用 `Clear`。</span><span class="sxs-lookup"><span data-stu-id="1451b-114">This method calls `Clear` on the underlying list implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeList.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xaml.XamlNodeList.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1451b-115">获取此 <see cref="T:System.Xaml.XamlNodeList" /> 中的节点数。</span><span class="sxs-lookup"><span data-stu-id="1451b-115">Gets the number of nodes in this <see cref="T:System.Xaml.XamlNodeList" />.</span></span></summary>
        <value><span data-ttu-id="1451b-116">此 <see cref="T:System.Xaml.XamlNodeList" /> 中的节点数。</span><span class="sxs-lookup"><span data-stu-id="1451b-116">The number of nodes in this <see cref="T:System.Xaml.XamlNodeList" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlReader GetReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlReader GetReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeList.GetReader" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReader () As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlReader ^ GetReader();" />
      <MemberSignature Language="F#" Value="member this.GetReader : unit -&gt; System.Xaml.XamlReader" Usage="xamlNodeList.GetReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1451b-117">返回 XAML 读取器实现委托。</span><span class="sxs-lookup"><span data-stu-id="1451b-117">Returns a XAML reader implementation delegate.</span></span></summary>
        <returns><span data-ttu-id="1451b-118">XAML 读取器实现委托。</span><span class="sxs-lookup"><span data-stu-id="1451b-118">A XAML reader implementation delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1451b-119">尽管它并不是服务提供商，但你可以使用从服务模式 <xref:System.Xaml.XamlNodeList.GetReader%2A?displayProperty=nameWithType> 返回的 <xref:System.Xaml.XamlReader> 委托，你可以在该模式中将其强制转换为 <xref:System.Xaml.IXamlIndexingReader>。</span><span class="sxs-lookup"><span data-stu-id="1451b-119">Although it is not specifically a service provider, you can use the <xref:System.Xaml.XamlReader> delegate that is returned from <xref:System.Xaml.XamlNodeList.GetReader%2A?displayProperty=nameWithType> in a service mode, where you cast it to <xref:System.Xaml.IXamlIndexingReader>.</span></span> <span data-ttu-id="1451b-120">在该模式下，你可以获取和设置 <xref:System.Xaml.IXamlIndexingReader.CurrentIndex%2A?displayProperty=nameWithType>的索引值。</span><span class="sxs-lookup"><span data-stu-id="1451b-120">In that mode you can get and set the index values for <xref:System.Xaml.IXamlIndexingReader.CurrentIndex%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1451b-121">通过这种方式，设置模式可在不使用标准 `Read` 和 `Skip`的情况下跳过节点。</span><span class="sxs-lookup"><span data-stu-id="1451b-121">In this manner, the set mode enables skipping nodes without using the standard `Read` and `Skip`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xaml.XamlException"><span data-ttu-id="1451b-122"><see cref="T:System.Xaml.XamlNodeList" /> 仍处于写入模式。</span><span class="sxs-lookup"><span data-stu-id="1451b-122">The <see cref="T:System.Xaml.XamlNodeList" /> is still in Write mode.</span></span>  
  
<span data-ttu-id="1451b-123">-或-</span><span class="sxs-lookup"><span data-stu-id="1451b-123">-or-</span></span> 
<span data-ttu-id="1451b-124">用于节点列表的编写器没有架构上下文。</span><span class="sxs-lookup"><span data-stu-id="1451b-124">The writer that is used for the node list has no schema context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlWriter Writer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeList.Writer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Writer As XamlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlWriter ^ Writer { System::Xaml::XamlWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.Xaml.XamlWriter" Usage="System.Xaml.XamlNodeList.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1451b-125">获取关联的 XAML 编写器。</span><span class="sxs-lookup"><span data-stu-id="1451b-125">Gets the associated XAML writer.</span></span></summary>
        <value><span data-ttu-id="1451b-126">关联的 XAML 编写器。</span><span class="sxs-lookup"><span data-stu-id="1451b-126">The associated XAML writer.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.XamlObjectWriter" />
      </Docs>
    </Member>
  </Members>
</Type>
