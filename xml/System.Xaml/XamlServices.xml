<Type Name="XamlServices" FullName="System.Xaml.XamlServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6d3d0bc8c23af9380445559dd19e58c9fae8f30" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82377429" /></Metadata><TypeSignature Language="C#" Value="public static class XamlServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit XamlServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlServices" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlServices abstract sealed" />
  <TypeSignature Language="F#" Value="type XamlServices = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供适用于常见 XAML 任务（读取 XAML 和写入对象图，或者读取对象图并为序列化目的而写入 XAML 文件输出）的更高级别服务（静态方法）。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最常见 XAML 读取和写入方案中使用的 <xref:System.Xaml.XamlServices> 类的模式依赖于创建 XAML 读取器和 XAML 编写器的实例。 这些读取器和编写器是专用的，但公共类的内部实现，如 <xref:System.Xml.XmlReader>、<xref:System.Xaml.XamlXmlReader>和 <xref:System.Xaml.XamlObjectWriter>。 若要在大多数情况下使用 <xref:System.Xaml.XamlServices>，可以依赖默认的内部实现获取所需的结果。 对于更多的专用方案，你可以自行定义读取器和编写器，然后将它们作为 <xref:System.Xaml.XamlServices> 方法的重载的参数进行传递。  
  
> [!IMPORTANT]
>  如果正在处理 WPF 定义的类型或基于 WPF 的类型，则不推荐使用 <xref:System.Xaml.XamlServices> XAML 读取或 XAML 编写 API 集。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 来读取或加载 XAML （或 BAML）;和 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 用于写回 XAML。 这些类在其实现内部使用 XAML 服务 Api 和 XAML 读取器和 XAML 编写器 .NET Framework;但是，它们还为特定于 WPF 的概念提供支持和专用的 XAML 架构上下文，例如依赖属性和 WPF 已知类型的优化。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>加载 XAML 读取器的源，并将其输出写为对象关系图。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (stream As Stream) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.Stream -&gt; obj" Usage="System.Xaml.XamlServices.Load stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">要作为输入加载的流。</param>
        <summary>加载 XAML 读取器的 <see cref="T:System.IO.Stream" /> 源，并将其输出写为对象关系图。</summary>
        <returns>写为输出的对象关系图。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> 方法的不同签名为源 XAML 指定不同类型的输入。 <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> 内部实现首先通过调用 <xref:System.Xml.XmlReader.Create%28System.IO.Stream%29> 创建 <xref:System.Xml.XmlReader>，然后创建处理输入的专用 <xref:System.Xaml.XamlReader> 的新实例。  
  
 为了使 <xref:System.Xaml.XamlServices.Load%28System.IO.Stream%29> 调用成功创建对象图，必须满足以下条件：  
  
-   源是格式正确且有效的 XML。  
  
-   源是语言级别的有效 XAML。  
  
-   源 XAML 中指定的 XAML 类型必须解析为相关 XAML 命名空间中的支持类型。 例如，WPF 命名空间的 XAML 类型可解析为 XAML 中指定的 WPF XAML 命名空间;WPF 的程序集必须包含在项目中，或在运行时可用;依此类推。  
  
> [!IMPORTANT]
>  如果正在处理 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 类型或基于 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]的类型，则不推荐使用 <xref:System.Xaml.XamlServices> XAML 读取或 XAML 编写 API 集。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 读取或加载 XAML;和 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 用于写回 XAML。 这些类在其实现内部使用 <xref:System.Xaml> Api;但是，它们还提供对影响 XAML 读取和写入性质的 WPF 特定概念的支持，如依赖属性的优化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (textReader As TextReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::IO::TextReader ^ textReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.IO.TextReader -&gt; obj" Usage="System.Xaml.XamlServices.Load textReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">要用作所创建 <see cref="T:System.IO.TextReader" /> 的基础的 <see cref="T:System.Xml.XmlReader" />。</param>
        <summary>从 <see cref="T:System.IO.TextReader" /> 创建 XAML 读取器，并返回对象关系图。</summary>
        <returns>返回的对象图。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为了返回对象图，应使用其相关输入构造 `textReader` 输入。 例如，它应该传递使用 <xref:System.IO.StringReader.%23ctor%28System.String%29> 构造函数的有效 XAML 字符串输入构造的 <xref:System.IO.StringReader>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="textReader" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (fileName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member Load : string -&gt; obj" Usage="System.Xaml.XamlServices.Load fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">要加载并用作源的文件名。</param>
        <summary>加载 XAML 读取器的 <see cref="T:System.IO.Stream" /> 源，并返回对象关系图。</summary>
        <returns>返回的对象图。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlServices.Load%2A> 方法的不同签名为源 XAML 指定不同类型的输入。 <xref:System.Xaml.XamlServices.Load%2A> 内部实现首先通过调用 <xref:System.Xml.XmlReader.Create%28System.String%29> 创建 <xref:System.Xml.XmlReader>，然后创建处理输入的专用 <xref:System.Xaml.XamlReader> 的新实例。  
  
 为了使 <xref:System.Xaml.XamlServices.Load%28System.String%29> 调用成功创建对象图，必须满足以下条件：  
  
-   源是格式正确且有效的 XML。  
  
-   源是语言级别的有效 XAML。  
  
-   源 XAML 中指定的 XAML 类型必须解析为相关 XAML 命名空间中的支持类型。 例如，WPF 命名空间的 XAML 类型可解析为 XAML 中指定的 WPF XAML 命名空间;WPF 的程序集必须包含在项目中，或在运行时可用;依此类推。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xaml.XamlReader xamlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xaml.XamlReader xamlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xaml.XamlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (xamlReader As XamlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xaml::XamlReader ^ xamlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xaml.XamlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xamlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
      </Parameters>
      <Docs>
        <param name="xamlReader">要用作此 <see langword="Load" /> 操作的读取器的 XAML 读取器实现。</param>
        <summary>加载特定 XAML 读取器实现，并返回对象图。</summary>
        <returns>返回的对象图。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，只能在以下情况下使用此签名：  
  
-   您定义了自己的 <xref:System.Xaml.XamlReader>实现。  
  
-   你为不同于默认设置的 <xref:System.Xaml.XamlReader> 指定了设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlReader" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static object Load (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Load(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Load(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (xmlReader As XmlReader) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Load(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="static member Load : System.Xml.XmlReader -&gt; obj" Usage="System.Xaml.XamlServices.Load xmlReader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader">要用作此 <see langword="Load" /> 操作的读取器的 <see cref="T:System.Xml.XmlReader" /> 实现。</param>
        <summary>加载特定 XML 读取器实现，并返回对象图。</summary>
        <returns>输出对象关系图。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，仅当定义了自己的 <xref:System.Xml.XmlReader>实现时，才应使用此签名。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlReader" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (string xaml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(string xaml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (xaml As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(System::String ^ xaml);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; obj" Usage="System.Xaml.XamlServices.Parse xaml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xaml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xaml">要分析的 XAML 字符串输入。</param>
        <summary>以字符串输出形式读取 XAML，并返回对象图。</summary>
        <returns>返回的对象图。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 为了使 <xref:System.Xaml.XamlServices.Parse%2A> 调用成功创建对象树，必须满足以下条件：  
  
-   `xaml` 输入是格式正确且有效的 XML。  
  
-   `xaml` 输入是语言级别的有效 XAML。  
  
-   在 `xaml` 输入中指定的 XAML 类型必须解析为相关 XAML 命名空间中的支持类型。 例如，WPF 命名空间的 XAML 类型可解析为 XAML 中指定的 WPF XAML 命名空间;WPF 的程序集必须包含在项目中，或在运行时可用;依此类推。  
  
> [!IMPORTANT]
>  如果正在处理 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 类型或基于 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]的类型，则不推荐使用 <xref:System.Xaml.XamlServices> XAML 读取或 XAML 编写 API 集。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 来读取或加载 XAML，并使用 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 来编写回调 XAML。 这些类在其实现内部使用 <xref:System.Xaml> Api;但是，它们还提供对影响 XAML 读取和写入性质的 WPF 特定概念的支持，如依赖属性的优化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xaml" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>将提供的对象图处理为 XAML 节点表示形式，然后再处理为输出格式以便进行序列化。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static string Save (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Save(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Save (instance As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Save(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : obj -&gt; string" Usage="System.Xaml.XamlServices.Save instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">要处理的对象关系图的根。</param>
        <summary>将提供的对象树处理为 XAML 节点表示形式，并返回输出 XAML 的字符串表示形式。</summary>
        <returns>字符串形式的 XAML 标记输出。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法的输出是由方法调用创建的 <xref:System.Xml.XmlWriter> `ToString` 结果。 该 <xref:System.Xml.XmlWriter> 是使用以下设置创建的： <xref:System.Xml.XmlWriterSettings.Indent%2A?displayProperty=nameWithType> `true`;和 <xref:System.Xml.XmlWriterSettings.OmitXmlDeclaration%2A?displayProperty=nameWithType> `true`。  
  
 如果您已将字符串处理到流中，或者在专门专用于 XAML 的读取器中，则返回的字符串可通过 <xref:System.Xml.XmlReader.Create%2A> 方法加载为有效的 XML。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.Stream stream, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.Stream stream, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.Stream,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (stream As Stream, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::Stream ^ stream, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.Stream * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (stream, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream">目标流。</param>
        <param name="instance">要处理的对象关系图的根。</param>
        <summary>将提供的对象图处理为 XAML 节点表示形式，然后再处理为输出流以便进行序列化。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  如果正在处理 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 类型或基于 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]的类型，则不推荐使用 <xref:System.Xaml.XamlServices> XAML 读取或 XAML 编写 API 集。 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 用法，请使用 <xref:System.Windows.Markup.XamlReader?displayProperty=nameWithType> 读取或加载 XAML;和 <xref:System.Windows.Markup.XamlWriter?displayProperty=nameWithType> 用于写回 XAML。 这些类在其实现内部使用 <xref:System.Xaml> Api;但是，它们还提供对影响 XAML 读取和写入性质的 WPF 特定概念的支持，如依赖属性的优化。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.IO.TextWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.IO.TextWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.IO.TextWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As TextWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::IO::TextWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.IO.TextWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">写入输出的 <see cref="T:System.IO.TextWriter" />。</param>
        <param name="instance">要处理的对象关系图的根。</param>
        <summary>将提供的对象图处理为 XAML 节点表示形式，然后处理为将进入所提供 <see cref="T:System.IO.TextWriter" /> 的输出。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (string fileName, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(string fileName, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (fileName As String, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::String ^ fileName, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : string * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (fileName, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fileName">要将输出写入其中的文件的名称和位置。</param>
        <param name="instance">要处理的对象关系图的根。</param>
        <summary>将提供的对象图处理为 XAML 节点表示形式，然后将其写入所提供位置的输出文件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `fileName` 参数值用作对 <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>的调用的 `outputFileName` 输入，这会在方法调用中创建 <xref:System.Xml.XmlWriter>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="fileName" /> 是一个空字符串。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="fileName" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xaml.XamlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xaml.XamlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xaml.XamlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XamlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xaml::XamlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xaml.XamlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xaml.XamlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">要使用的 <see cref="T:System.Xaml.XamlWriter" /> 实现。</param>
        <param name="instance">要处理的对象关系图的根。</param>
        <summary>将提供的对象图处理为 XAML 节点表示形式，然后将其写入提供的 XAML 编写器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常，只能在以下情况下使用此签名：  
  
-   您定义了自己的 <xref:System.Xaml.XamlWriter>实现。  
  
-   你为 <xref:System.Xaml.XamlWriter> 指定的设置不同于默认设置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public static void Save (System.Xml.XmlWriter writer, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Save(class System.Xml.XmlWriter writer, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Save(System.Xml.XmlWriter,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Save (writer As XmlWriter, instance As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Save(System::Xml::XmlWriter ^ writer, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="static member Save : System.Xml.XmlWriter * obj -&gt; unit" Usage="System.Xaml.XamlServices.Save (writer, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">要使用的 <see cref="T:System.Xml.XmlWriter" /> 实现。</param>
        <param name="instance">要处理的对象关系图的根。</param>
        <summary>将提供的对象图处理为 XAML 节点表示形式，然后将其写入提供的 <see cref="T:System.Xml.XmlWriter" />。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="writer" /> 输入为 <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>连接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以便立即使用公共 XAML 节点集。 可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Transform (xamlReader As XamlReader, xamlWriter As XamlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
      </Parameters>
      <Docs>
        <param name="xamlReader">要使用的 <see cref="T:System.Xaml.XamlReader" /> 实现。</param>
        <param name="xamlWriter">要使用的 <see cref="T:System.Xaml.XamlWriter" />。</param>
        <summary>连接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以立即使用公共 XAML 节点集。 可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法是围绕 <xref:System.Xaml.XamlServices.Transform%28System.Xaml.XamlReader%2CSystem.Xaml.XamlWriter%2CSystem.Boolean%29>的包装，其中 `closeWriter` 指定为 `true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlReader" /> 或 <paramref name="xamlWriter" /> 输入为 <see langword="null" />。</exception>
        <exception cref="T:System.Xaml.XamlException">XAML 架构上下文在提供的 <paramref name="xamlReader" /> 和 <paramref name="xamlWriter" /> 之间不匹配。</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static void Transform (System.Xaml.XamlReader xamlReader, System.Xaml.XamlWriter xamlWriter, bool closeWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Transform(class System.Xaml.XamlReader xamlReader, class System.Xaml.XamlWriter xamlWriter, bool closeWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlServices.Transform(System.Xaml.XamlReader,System.Xaml.XamlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Transform (xamlReader As XamlReader, xamlWriter As XamlWriter, closeWriter As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Transform(System::Xaml::XamlReader ^ xamlReader, System::Xaml::XamlWriter ^ xamlWriter, bool closeWriter);" />
      <MemberSignature Language="F#" Value="static member Transform : System.Xaml.XamlReader * System.Xaml.XamlWriter * bool -&gt; unit" Usage="System.Xaml.XamlServices.Transform (xamlReader, xamlWriter, closeWriter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlReader" Type="System.Xaml.XamlReader" />
        <Parameter Name="xamlWriter" Type="System.Xaml.XamlWriter" />
        <Parameter Name="closeWriter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="xamlReader">要使用的 <see cref="T:System.Xaml.XamlReader" /> 实现。</param>
        <param name="xamlWriter">要使用的 <see cref="T:System.Xaml.XamlWriter" />。</param>
        <param name="closeWriter">设置为 <see langword="true" /> 以在调用完成之后关闭编写器；设置为 <see langword="false" /> 以使编写器在最后一个写入的位置保持活动状态。</param>
        <summary>连接 <see cref="T:System.Xaml.XamlReader" /> 和 <see cref="T:System.Xaml.XamlWriter" /> 以立即使用公共 XAML 节点集。 可能会转换内容，具体情况视所提供的读取器和编写器的类型而定。 提供一个参数，指定是否在调用完成之后关闭编写器。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="xamlReader" /> 或 <paramref name="xamlWriter" /> 输入为 <see langword="null" />。</exception>
        <exception cref="T:System.Xaml.XamlException">XAML 架构上下文在提供的 <paramref name="xamlReader" /> 和 <paramref name="xamlWriter" /> 之间不匹配。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
