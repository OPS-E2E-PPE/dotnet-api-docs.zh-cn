<Type Name="XamlReaderSettings" FullName="System.Xaml.XamlReaderSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e73fa30ceec73f638d031051aff71c03d2b7c79b" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82483717" /></Metadata><TypeSignature Language="C#" Value="public class XamlReaderSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlReaderSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlReaderSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlReaderSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlReaderSettings" />
  <TypeSignature Language="F#" Value="type XamlReaderSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="75ede-101">为 <see cref="T:System.Xaml.XamlReader" /> 实现指定处理规则或选项设置。</span><span class="sxs-lookup"><span data-stu-id="75ede-101">Specifies processing rules or option settings for a <see cref="T:System.Xaml.XamlReader" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-102">默认情况下，初始化的 <xref:System.Xaml.XamlReaderSettings> 对象使用其属性的值，这些值对应于所需的默认值（例如，对于布尔属性为 `false` 或引用类型属性为 null 值）。</span><span class="sxs-lookup"><span data-stu-id="75ede-102">By default, an initialized <xref:System.Xaml.XamlReaderSettings> object uses values for its properties that correspond to expected defaults, such as `false` for Boolean properties or null values for reference-type properties.</span></span> <span data-ttu-id="75ede-103">默认初始化会生成以下值：</span><span class="sxs-lookup"><span data-stu-id="75ede-103">Default initialization results in the following values:</span></span>  
  
-   <span data-ttu-id="75ede-104">`null`<xref:System.Xaml.XamlReaderSettings.BaseUri%2A> 和 <xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="75ede-104">The <xref:System.Xaml.XamlReaderSettings.BaseUri%2A> and <xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A> properties are `null`.</span></span>  
  
-   <span data-ttu-id="75ede-105"><xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> 属性为 `false`。</span><span class="sxs-lookup"><span data-stu-id="75ede-105">The <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> property is `false`.</span></span>  
  
-   <span data-ttu-id="75ede-106"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> 属性在对象模型中 `false`;但是，可以将其设置为在运行时基于已加载的可执行文件及其调试设置或 XAML 架构上下文 `true`。</span><span class="sxs-lookup"><span data-stu-id="75ede-106">The <xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> property is `false` in the object model; however, it can be set to `true` at run time based on the loaded executables and their debug settings, or by XAML schema context.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="75ede-107">初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="75ede-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="75ede-108">初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="75ede-108">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-109">有关 <xref:System.Xaml.XamlReaderSettings> 默认实例初始化的详细信息，请参阅 <xref:System.Xaml.XamlReaderSettings>。</span><span class="sxs-lookup"><span data-stu-id="75ede-109">For more information about initialization of a <xref:System.Xaml.XamlReaderSettings> default instance, see <xref:System.Xaml.XamlReaderSettings>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlReaderSettings (System.Xaml.XamlReaderSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlReaderSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlReaderSettings.#ctor(System.Xaml.XamlReaderSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (settings As XamlReaderSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlReaderSettings(System::Xaml::XamlReaderSettings ^ settings);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlReaderSettings : System.Xaml.XamlReaderSettings -&gt; System.Xaml.XamlReaderSettings" Usage="new System.Xaml.XamlReaderSettings settings" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="settings" Type="System.Xaml.XamlReaderSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="75ede-110">一个现有的 <see cref="T:System.Xaml.XamlReaderSettings" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="75ede-110">An existing <see cref="T:System.Xaml.XamlReaderSettings" /> object.</span></span></param>
        <summary><span data-ttu-id="75ede-111">基于另一个 <see cref="T:System.Xaml.XamlReaderSettings" /> 对象中的值初始化 <see cref="T:System.Xaml.XamlReaderSettings" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="75ede-111">Initializes a new instance of the <see cref="T:System.Xaml.XamlReaderSettings" /> class based on values in another <see cref="T:System.Xaml.XamlReaderSettings" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-112">此构造函数支持 XAML 读取器设置的合并，其中其他设置也可以来自读取器进程中的其他参与者。</span><span class="sxs-lookup"><span data-stu-id="75ede-112">This constructor supports the merging of settings for XAML readers where additional settings can also come from other participants in the reader process.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowProtectedMembersOnRoot">
      <MemberSignature Language="C#" Value="public bool AllowProtectedMembersOnRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowProtectedMembersOnRoot" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowProtectedMembersOnRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowProtectedMembersOnRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowProtectedMembersOnRoot : bool with get, set" Usage="System.Xaml.XamlReaderSettings.AllowProtectedMembersOnRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75ede-113">获取或设置一个值，该值指示根对象在报告 XAML 类型表示形式时是否可包括具有受保护代码访问模型的成员。</span><span class="sxs-lookup"><span data-stu-id="75ede-113">Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.</span></span></summary>
        <value><span data-ttu-id="75ede-114">如果根对象可包括具有受保护代码访问模型的成员，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-114"><see langword="true" /> if the root object may include members that have a protected code access model; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-115">此设置与一些 XAML 实现（如 WPF）相关，其中，根对象通常是 "工厂"，用于从模式类型生成实例，而该模式类型并非始终是实际的对象实例。</span><span class="sxs-lookup"><span data-stu-id="75ede-115">This setting is relevant to some XAML implementations such as WPF where the root object is often a "factory" for generating an instance from a pattern type, when that pattern type is not always a practical object instance.</span></span> <span data-ttu-id="75ede-116">例如，`UserControl` 的根对 WPF 和 Silverlight 应用程序模型具有特定意义，并且 `UserControl` 可能具有分析程序需要访问的受保护属性（`UserControl.Content`）。</span><span class="sxs-lookup"><span data-stu-id="75ede-116">For example, a root of `UserControl` has a certain meaning for WPF and Silverlight application models, and `UserControl` might have protected properties (`UserControl.Content`) that the parser needs access to.</span></span> <span data-ttu-id="75ede-117">工具和设计图面还需要访问此类属性。</span><span class="sxs-lookup"><span data-stu-id="75ede-117">Tools and design surfaces also need access to such properties.</span></span> <span data-ttu-id="75ede-118">通常应将这些事例报告给 XAML 类型系统作为可写属性，即使它们在后备类型系统中具有受保护的访问权限。</span><span class="sxs-lookup"><span data-stu-id="75ede-118">These cases should generally be reported to the XAML type system as writable properties even though they have protected access in the backing type system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Xaml.XamlReaderSettings.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75ede-119">获取或设置用于解析相对路径的基 URI。</span><span class="sxs-lookup"><span data-stu-id="75ede-119">Gets or sets the base URI that is used to resolve relative paths.</span></span></summary>
        <value><span data-ttu-id="75ede-120">要使用的基 URI。</span><span class="sxs-lookup"><span data-stu-id="75ede-120">The base URI to use.</span></span> <span data-ttu-id="75ede-121">默认为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-121">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-122">.NET Framework XAML 服务 API 中的一些 URI 相关属性将 XAML 命名空间的 Uri 视为字符串;但是，此属性使用 true <xref:System.Uri> 类型。</span><span class="sxs-lookup"><span data-stu-id="75ede-122">Some URI-related properties in the .NET Framework XAML Services API treat URIs for XAML namespaces as strings; however, this property uses the true <xref:System.Uri> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreUidsOnPropertyElements">
      <MemberSignature Language="C#" Value="public bool IgnoreUidsOnPropertyElements { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreUidsOnPropertyElements As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreUidsOnPropertyElements { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreUidsOnPropertyElements : bool with get, set" Usage="System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75ede-123">获取或设置一个值，该值指定 XAML 读取器是否应忽略存在于属性元素上的 <see langword="x:Uid" /> 特性的值。</span><span class="sxs-lookup"><span data-stu-id="75ede-123">Gets or sets a value that specifies whether the XAML reader should ignore values for <see langword="x:Uid" /> attributes that exist on property elements.</span></span></summary>
        <value><span data-ttu-id="75ede-124">如果读取器应忽略属性元素 <see langword="true" /> 特性的值，则为 <see langword="x:Uid" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-124"><see langword="true" /> if the reader should ignore values for <see langword="x:Uid" /> attributes on property elements.</span></span> <span data-ttu-id="75ede-125">如果读取器应处理属性元素的 <see langword="false" /> 特性，则为 <see langword="x:Uid" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-125"><see langword="false" /> if the reader should process <see langword="x:Uid" /> attributes on property elements.</span></span> <span data-ttu-id="75ede-126">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-127">在本地化过程中，`x:Uid` 特性用于标识标记中的元素，以便本地化工具可以将 XAML 元素作为离散实体处理以进行本地化。</span><span class="sxs-lookup"><span data-stu-id="75ede-127">During localization, the `x:Uid` attribute is used to identify elements in markup so that localization tools can process XAML elements as discrete entities for localization.</span></span> <span data-ttu-id="75ede-128">特性通常不会出现在 XAML 中的属性元素上。</span><span class="sxs-lookup"><span data-stu-id="75ede-128">Attributes do not usually appear on property elements in XAML.</span></span> <span data-ttu-id="75ede-129">但 `x:Uid` 是一个异常，因为某些用法会将本地化文本作为内容放置在属性元素中，而不是作为可接收其自己的 `x:Uid`的单独对象。</span><span class="sxs-lookup"><span data-stu-id="75ede-129">However, `x:Uid` is an exception because some usages put localized text in a property element as content, instead of as a separate object that can receive its own `x:Uid`.</span></span> <span data-ttu-id="75ede-130">将 <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> 值设置为 `true` 可启用更严格的模式。</span><span class="sxs-lookup"><span data-stu-id="75ede-130">Setting an <xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A> value to `true` enables a stricter mode.</span></span> <span data-ttu-id="75ede-131">`false` 的默认值继续处理属性元素 `x:Uid` 特性。</span><span class="sxs-lookup"><span data-stu-id="75ede-131">The default value of `false` continues to process property element `x:Uid` attributes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalAssembly : System.Reflection.Assembly with get, set" Usage="System.Xaml.XamlReaderSettings.LocalAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75ede-132">获取或设置表示要处理的当前本地程序集的对象。</span><span class="sxs-lookup"><span data-stu-id="75ede-132">Gets or sets the object that represents the current local assembly for processing.</span></span> <span data-ttu-id="75ede-133">此程序集信息用于调用帮助器 API，例如 <see cref="M:System.Xaml.XamlType.GetAllMembers" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-133">This assembly information is used for calls to helper APIs such as <see cref="M:System.Xaml.XamlType.GetAllMembers" />.</span></span></summary>
        <value><span data-ttu-id="75ede-134">CLR 反射 <see cref="T:System.Reflection.Assembly" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="75ede-134">A CLR reflection <see cref="T:System.Reflection.Assembly" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideLineInfo">
      <MemberSignature Language="C#" Value="public bool ProvideLineInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProvideLineInfo" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ProvideLineInfo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProvideLineInfo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ProvideLineInfo : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ProvideLineInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75ede-135">获取或设置一个值，该值指定读取器是否可提供行号和位置。</span><span class="sxs-lookup"><span data-stu-id="75ede-135">Gets or sets a value that specifies whether the reader can provide line number and position.</span></span></summary>
        <value><span data-ttu-id="75ede-136">如果读取器可提供行号和位置信息，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-136"><see langword="true" /> if the reader can provide line number and position information; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-137">对象模型中 `false` <xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A>;但是，可以将其设置为基于加载的可执行文件及其调试设置在运行时 `true`。</span><span class="sxs-lookup"><span data-stu-id="75ede-137"><xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A> is `false` in the object model; however, it can be set to `true` at run time based on the loaded executables and their debug settings.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValuesMustBeString">
      <MemberSignature Language="C#" Value="public bool ValuesMustBeString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValuesMustBeString" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberSignature Language="VB.NET" Value="Public Property ValuesMustBeString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValuesMustBeString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValuesMustBeString : bool with get, set" Usage="System.Xaml.XamlReaderSettings.ValuesMustBeString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="75ede-138">获取或设置一个值，该值指定读取器是否强制将所有 <see langword="Value" /> 节点处理为 <see langword="String" /> 类型。</span><span class="sxs-lookup"><span data-stu-id="75ede-138">Gets or sets a value that specifies whether the reader enforces that all <see langword="Value" /> nodes are processed as a <see langword="String" /> type.</span></span></summary>
        <value><span data-ttu-id="75ede-139">如果读取器强制在 <see langword="true" /> 节点中仅含 <see langword="String" />，则为 <see langword="Value" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-139"><see langword="true" /> if the reader enforces that only <see langword="String" /> is contained in <see langword="Value" /> nodes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="75ede-140">默认为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="75ede-140">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="75ede-141">除了 <xref:System.String>之外，某些 XAML 实现下可能的 `Value` 内容是 <xref:System.Windows.Markup.XData>的。</span><span class="sxs-lookup"><span data-stu-id="75ede-141">In addition to <xref:System.String>, a possible `Value` content under some XAML implementations is <xref:System.Windows.Markup.XData>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
