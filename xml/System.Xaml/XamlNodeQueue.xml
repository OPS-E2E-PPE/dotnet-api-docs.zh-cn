<Type Name="XamlNodeQueue" FullName="System.Xaml.XamlNodeQueue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9965427de74171d5cef11dcf5b5f60056c942bc3" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82486252" /></Metadata><TypeSignature Language="C#" Value="public class XamlNodeQueue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlNodeQueue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlNodeQueue" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlNodeQueue" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlNodeQueue" />
  <TypeSignature Language="F#" Value="type XamlNodeQueue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e8689-101">提供用于写入节点和再次读取节点的缓冲区。</span><span class="sxs-lookup"><span data-stu-id="e8689-101">Provides a buffer for writing nodes and reading them again.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8689-102">当 XAML 读取器读取节点时，将从 <xref:System.Xaml.XamlNodeQueue> 使用节点。</span><span class="sxs-lookup"><span data-stu-id="e8689-102">Nodes are consumed from the <xref:System.Xaml.XamlNodeQueue> when they are read by the XAML reader.</span></span> <span data-ttu-id="e8689-103">如果需要可重播的 XAML 节点的列表或支持随机访问的列表模型，请参阅 <xref:System.Xaml.XamlNodeList>。</span><span class="sxs-lookup"><span data-stu-id="e8689-103">If you require a list of XAML nodes that can be replayed, or a list model that supports random access, see <xref:System.Xaml.XamlNodeList>.</span></span>  
  
 <span data-ttu-id="e8689-104">创建 <xref:System.Xaml.XamlNodeQueue>时，将创建一个作为 <xref:System.Xaml.XamlNodeQueue.Writer%2A> 值存在的编写器委托。</span><span class="sxs-lookup"><span data-stu-id="e8689-104">When you create a <xref:System.Xaml.XamlNodeQueue>, you create a writer delegate that exists as the <xref:System.Xaml.XamlNodeQueue.Writer%2A> value.</span></span> <span data-ttu-id="e8689-105">编写器委托基于特定于 XAML 节点的内部 XAML 编写器类。</span><span class="sxs-lookup"><span data-stu-id="e8689-105">The writer delegate is based on an internal XAML writer class that is specifically for XAML nodes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlNodeQueue (System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlNodeQueue.#ctor(System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlNodeQueue(System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberSignature Language="F#" Value="new System.Xaml.XamlNodeQueue : System.Xaml.XamlSchemaContext -&gt; System.Xaml.XamlNodeQueue" Usage="new System.Xaml.XamlNodeQueue schemaContext" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="schemaContext"><span data-ttu-id="e8689-106">要用于节点操作的架构上下文。</span><span class="sxs-lookup"><span data-stu-id="e8689-106">The schema context to use for node operations.</span></span></param>
        <summary><span data-ttu-id="e8689-107">使用提供的 XAML 架构上下文初始化 <see cref="T:System.Xaml.XamlNodeQueue" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="e8689-107">Initializes a new instance of the <see cref="T:System.Xaml.XamlNodeQueue" /> class using a provided XAML schema context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8689-108">架构上下文将应用于作为 <xref:System.Xaml.XamlNodeQueue.Writer%2A> 值存在的 XAML 编写器。</span><span class="sxs-lookup"><span data-stu-id="e8689-108">The schema context is applied to the XAML writer that exists as the <xref:System.Xaml.XamlNodeQueue.Writer%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8689-109"><paramref name="xamlSchemaContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e8689-109"><paramref name="xamlSchemaContext" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Xaml.XamlNodeQueue.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8689-110">获取 <see cref="T:System.Xaml.XamlNodeQueue" /> 中的节点数。</span><span class="sxs-lookup"><span data-stu-id="e8689-110">Gets the number of nodes in the <see cref="T:System.Xaml.XamlNodeQueue" />.</span></span></summary>
        <value><span data-ttu-id="e8689-111"><see cref="T:System.Xaml.XamlNodeQueue" /> 中的节点数。</span><span class="sxs-lookup"><span data-stu-id="e8689-111">The number of nodes in the <see cref="T:System.Xaml.XamlNodeQueue" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Xaml.XamlNodeQueue.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8689-112">获取一个值，该值确定此 <see cref="T:System.Xaml.XamlNodeQueue" /> 是否不包含节点。</span><span class="sxs-lookup"><span data-stu-id="e8689-112">Gets a value that determines whether this <see cref="T:System.Xaml.XamlNodeQueue" /> does not contain nodes.</span></span></summary>
        <value><span data-ttu-id="e8689-113">如果此 <see langword="true" /> 不包含节点，则为 <see cref="T:System.Xaml.XamlNodeQueue" />；如果此 <see langword="false" /> 包含节点，则为 <see cref="T:System.Xaml.XamlNodeQueue" />。</span><span class="sxs-lookup"><span data-stu-id="e8689-113"><see langword="true" /> if this <see cref="T:System.Xaml.XamlNodeQueue" /> does not contain nodes; <see langword="false" /> if this <see cref="T:System.Xaml.XamlNodeQueue" /> contains nodes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reader">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlReader Reader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlReader Reader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Reader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reader As XamlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlReader ^ Reader { System::Xaml::XamlReader ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Reader : System.Xaml.XamlReader" Usage="System.Xaml.XamlNodeQueue.Reader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8689-114">获取 XAML 读取器实现委托。</span><span class="sxs-lookup"><span data-stu-id="e8689-114">Gets a XAML reader implementation delegate.</span></span></summary>
        <value><span data-ttu-id="e8689-115">XAML 读取器实现委托。</span><span class="sxs-lookup"><span data-stu-id="e8689-115">A XAML reader implementation delegate.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Xaml.XamlException"><span data-ttu-id="e8689-116">用于节点列表的 XAML 编写器没有有效的 XAML 架构上下文。</span><span class="sxs-lookup"><span data-stu-id="e8689-116">The XAML writer that is used for the node list has no valid XAML schema context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Writer">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlWriter Writer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlWriter Writer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlNodeQueue.Writer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Writer As XamlWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlWriter ^ Writer { System::Xaml::XamlWriter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Writer : System.Xaml.XamlWriter" Usage="System.Xaml.XamlNodeQueue.Writer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e8689-117">获取关联的 XAML 编写器。</span><span class="sxs-lookup"><span data-stu-id="e8689-117">Gets the associated XAML writer.</span></span></summary>
        <value><span data-ttu-id="e8689-118">关联的 XAML 编写器。</span><span class="sxs-lookup"><span data-stu-id="e8689-118">The associated XAML writer.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xaml.XamlObjectWriter" />
      </Docs>
    </Member>
  </Members>
</Type>
