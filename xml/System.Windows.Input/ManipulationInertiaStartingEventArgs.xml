<Type Name="ManipulationInertiaStartingEventArgs" FullName="System.Windows.Input.ManipulationInertiaStartingEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31bc7aea46645eff775009d52fa39f59cad5c361" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83884970" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManipulationInertiaStartingEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationInertiaStartingEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationInertiaStartingEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationInertiaStartingEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationInertiaStartingEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <TypeSignature Language="F#" Value="type ManipulationInertiaStartingEventArgs = class&#xA;    inherit InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs> 对象指定操作的惯性行为。 您可以使用 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior%2A>、<xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior%2A>和 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior%2A> 属性分别为每种类型的操作指定惯性行为。 每个属性都是表示惯性行为的对象类型，在每种情况下，你可以指定以下内容：  
  
-   惯性开始时的初始速度。  
  
-   惯性结束时操作所需的位置。  
  
-   惯性所需的减速度。  
  
 通常，可以在惯性结束时指定所需的操作位置，也可以指定惯性的所需减速度，但不能同时指定这两者。  
  
 有关操作的详细信息，请参阅[输入概述](/dotnet/framework/wpf/advanced/input-overview)。  
  
   
  
## Examples  
 下面的示例演示 <xref:System.Windows.UIElement.ManipulationInertiaStarting> 事件处理程序，并为惯性期间使用的转换、扩展和旋转设置所需的减速度。 本示例摘自[演练：创建您的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)中的一个更大的示例。  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationInertiaStartingEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberSignature Language="F#" Value="member this.Cancel : unit -&gt; bool" Usage="manipulationInertiaStartingEventArgs.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取消操作。</summary>
        <returns>如果成功取消操作，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果该方法成功，则默认 <xref:System.Windows.Input.TouchDevice> 会将以前的触摸事件作为鼠标按下、鼠标移动或鼠标按下事件发送到元素，且将来操作事件不会发生。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpansionBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InertiaExpansionBehavior ExpansionBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InertiaExpansionBehavior ExpansionBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpansionBehavior As InertiaExpansionBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InertiaExpansionBehavior ^ ExpansionBehavior { System::Windows::Input::InertiaExpansionBehavior ^ get(); void set(System::Windows::Input::InertiaExpansionBehavior ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpansionBehavior : System.Windows.Input.InertiaExpansionBehavior with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InertiaExpansionBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置延伸惯性运动减慢的速率。</summary>
        <value>延伸惯性运动减慢的速率</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.ExpansionBehavior%2A> 属性可以执行以下操作：  
  
-   通过设置 "<xref:System.Windows.Input.InertiaExpansionBehavior.InitialVelocity%2A>" 属性来指定惯性开始时的初始速度。  
  
-   通过设置 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 属性，指定惯性结束时所需的操作扩展。  
  
-   通过设置 "<xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A>" 属性，指定所需的惯性减速度。  
  
 通常会设置 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredExpansion%2A> 或 <xref:System.Windows.Input.InertiaExpansionBehavior.DesiredDeceleration%2A>，但不能同时设置两者。  
  
 有关操作的详细信息，请参阅[输入概述](/dotnet/framework/wpf/advanced/input-overview)。 有关响应操作的应用程序的示例，请参阅[演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities InitialVelocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities InitialVelocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.InitialVelocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialVelocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ InitialVelocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialVelocities : System.Windows.Input.ManipulationVelocities" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.InitialVelocities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取惯性开始发生之前发生的操作的变化速率。</summary>
        <value>惯性开始发生之前发生的操作的变化速率。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关操作的详细信息，请参阅[输入概述](/dotnet/framework/wpf/advanced/input-overview)。 有关响应操作的应用程序的示例，请参阅[演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationInertiaStartingEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="manipulationInertiaStartingEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationContainer : System.Windows.IInputElement" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 <see cref="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin" /> 属性所相对的容器。</summary>
        <value><see cref="P:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin" /> 属性所相对的容器。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有关操作的详细信息，请参阅[输入概述](/dotnet/framework/wpf/advanced/input-overview)。 有关响应操作的应用程序的示例，请参阅[演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.ManipulationOrigin : System.Windows.Point with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置操作的起源点。</summary>
        <value>操作的起源点。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果有多个联系点启动了操作，则 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.ManipulationOrigin%2A> 属性是所有联系点之间的点。  
  
 有关操作的详细信息，请参阅[输入概述](/dotnet/framework/wpf/advanced/input-overview)。 有关响应操作的应用程序的示例，请参阅[演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Manipulators : seq&lt;System.Windows.Input.IManipulator&gt;" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.Manipulators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取表示操作的触摸触点的对象集合。</summary>
        <value>一个由表示操作的触摸触点的对象组成的集合。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InertiaRotationBehavior RotationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InertiaRotationBehavior RotationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationBehavior As InertiaRotationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InertiaRotationBehavior ^ RotationBehavior { System::Windows::Input::InertiaRotationBehavior ^ get(); void set(System::Windows::Input::InertiaRotationBehavior ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RotationBehavior : System.Windows.Input.InertiaRotationBehavior with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InertiaRotationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置旋转惯性运动减慢的速率。</summary>
        <value>旋转惯性运动减慢的速率。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.RotationBehavior%2A> 属性可以执行以下操作：  
  
-   通过设置 "<xref:System.Windows.Input.InertiaRotationBehavior.InitialVelocity%2A>" 属性来指定惯性开始时的初始速度。  
  
-   通过设置 <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> 属性，指定惯性结束时所需的操作旋转。  
  
-   通过设置 "<xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A>" 属性，指定所需的惯性减速度。  
  
 通常会设置 <xref:System.Windows.Input.InertiaRotationBehavior.DesiredRotation%2A> 或 <xref:System.Windows.Input.InertiaRotationBehavior.DesiredDeceleration%2A>，但不能同时设置两者。  
  
 有关操作的详细信息，请参阅[输入概述](/dotnet/framework/wpf/advanced/input-overview)。 有关响应操作的应用程序的示例，请参阅[演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInertiaParameter">
      <MemberSignature Language="C#" Value="public void SetInertiaParameter (System.Windows.Input.Manipulations.InertiaParameters2D parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInertiaParameter(class System.Windows.Input.Manipulations.InertiaParameters2D parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationInertiaStartingEventArgs.SetInertiaParameter(System.Windows.Input.Manipulations.InertiaParameters2D)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetInertiaParameter (parameter As InertiaParameters2D)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInertiaParameter(System::Windows::Input::Manipulations::InertiaParameters2D ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.SetInertiaParameter : System.Windows.Input.Manipulations.InertiaParameters2D -&gt; unit" Usage="manipulationInertiaStartingEventArgs.SetInertiaParameter parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Windows.Input.Manipulations.InertiaParameters2D" />
      </Parameters>
      <Docs>
        <param name="parameter">用于指定某操作在惯性发生期间的行为的对象。</param>
        <summary>指定惯性发生期间的操作行为。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常不需要调用此方法。 请改用 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs> 上的属性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="parameter" /> 为 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="TranslationBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InertiaTranslationBehavior TranslationBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InertiaTranslationBehavior TranslationBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property TranslationBehavior As InertiaTranslationBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InertiaTranslationBehavior ^ TranslationBehavior { System::Windows::Input::InertiaTranslationBehavior ^ get(); void set(System::Windows::Input::InertiaTranslationBehavior ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TranslationBehavior : System.Windows.Input.InertiaTranslationBehavior with get, set" Usage="System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InertiaTranslationBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置线性惯性运动减慢的速率。</summary>
        <value>线性惯性运动减慢的速率。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用 <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs.TranslationBehavior%2A> 属性可以执行以下操作：  
  
-   通过设置 "<xref:System.Windows.Input.InertiaTranslationBehavior.InitialVelocity%2A>" 属性来指定惯性开始时的初始速度。  
  
-   通过设置 <xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDisplacement%2A> 属性，指定惯性结束时所需的操作位置。  
  
-   通过设置 "<xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDeceleration%2A>" 属性，指定所需的惯性减速度。  
  
 通常会设置 <xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDisplacement%2A> 或 <xref:System.Windows.Input.InertiaTranslationBehavior.DesiredDeceleration%2A>，但不能同时设置两者。  
  
 有关操作的详细信息，请参阅[输入概述](/dotnet/framework/wpf/advanced/input-overview)。 有关响应操作的应用程序的示例，请参阅[演练：创建你的第一个 Touch 应用程序](/dotnet/framework/wpf/advanced/walkthrough-creating-your-first-touch-application)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
