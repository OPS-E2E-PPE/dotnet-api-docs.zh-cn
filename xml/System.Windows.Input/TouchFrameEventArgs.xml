<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="88811fe33842edadd1e7d91a1cb772bde0580daf" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82296777" /></Metadata><TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bea60-101">为 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 事件提供数据。</span><span class="sxs-lookup"><span data-stu-id="bea60-101">Provides data for the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea60-102"><xref:System.Windows.Input.Touch.FrameReported> 事件包含在 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 中，以支持与 Silverlight 的兼容性。</span><span class="sxs-lookup"><span data-stu-id="bea60-102">The <xref:System.Windows.Input.Touch.FrameReported> event is included in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] to support compatibility with Silverlight.</span></span> <span data-ttu-id="bea60-103">如果不必确保与 Silverlight 兼容，请在 <xref:System.Windows.UIElement>、<xref:System.Windows.UIElement3D>或 <xref:System.Windows.ContentElement>上使用触控事件，例如 <xref:System.Windows.UIElement.TouchDown> 和 <xref:System.Windows.UIElement.TouchMove>。</span><span class="sxs-lookup"><span data-stu-id="bea60-103">If you do not have to ensure compatibility with Silverlight, use the touch events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>, on <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, or <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="bea60-104">使用 <xref:System.Windows.Input.TouchFrameEventArgs> 获取与 touch 事件相关的 <xref:System.Windows.Input.TouchPoint> 值。</span><span class="sxs-lookup"><span data-stu-id="bea60-104">Use the <xref:System.Windows.Input.TouchFrameEventArgs> to get the <xref:System.Windows.Input.TouchPoint> values that are relevant to the touch event.</span></span> <span data-ttu-id="bea60-105">从 <xref:System.Windows.Input.TouchPoint>中，可以获得触摸的 <xref:System.Windows.Input.TouchPoint.Position%2A> 并确定 <xref:System.Windows.Input.TouchAction> 是 <xref:System.Windows.Input.TouchAction.Down>、<xref:System.Windows.Input.TouchAction.Move>还是 <xref:System.Windows.Input.TouchAction.Up> 操作。</span><span class="sxs-lookup"><span data-stu-id="bea60-105">From the <xref:System.Windows.Input.TouchPoint>, you can get the <xref:System.Windows.Input.TouchPoint.Position%2A> of the touch and determine whether the <xref:System.Windows.Input.TouchAction> was a <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, or <xref:System.Windows.Input.TouchAction.Up> action.</span></span> <span data-ttu-id="bea60-106">你还可以使用 <xref:System.Windows.Input.TouchPoint> 获取 <xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="bea60-106">You can also use the <xref:System.Windows.Input.TouchPoint> to get the <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="bea60-107">在 <xref:System.Windows.Input.TouchDevice>中，可以确定设备 <xref:System.Windows.Input.TouchDevice.Id%2A> 并获取有关所涉及元素的信息。</span><span class="sxs-lookup"><span data-stu-id="bea60-107">From the <xref:System.Windows.Input.TouchDevice>, you can determine the device <xref:System.Windows.Input.TouchDevice.Id%2A> and get information about the element that is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bea60-108">下面的示例处理 <xref:System.Windows.Input.Touch.FrameReported> 事件并访问 <xref:System.Windows.Input.TouchFrameEventArgs>中的触摸数据。</span><span class="sxs-lookup"><span data-stu-id="bea60-108">The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event and accesses the touch data in the <xref:System.Windows.Input.TouchFrameEventArgs>.</span></span> <span data-ttu-id="bea60-109">在 <xref:System.Windows.Controls.Canvas>上按下某个触摸时，<xref:System.Windows.Input.TouchDevice> 将捕获到 <xref:System.Windows.Controls.Canvas>中。</span><span class="sxs-lookup"><span data-stu-id="bea60-109">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="bea60-110">在提起触摸后，会释放 <xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="bea60-110">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="bea60-111">当触摸在 <xref:System.Windows.Controls.Canvas>间移动时，将检查 <xref:System.Windows.Input.TouchDevice.Id%2A>。</span><span class="sxs-lookup"><span data-stu-id="bea60-111">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="bea60-112">如果移动来自第一次触摸，则会记录其位置。</span><span class="sxs-lookup"><span data-stu-id="bea60-112">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="bea60-113">如果移动从第二个触摸开始，则从第一个触摸的位置到第二个触摸的位置绘制线条。</span><span class="sxs-lookup"><span data-stu-id="bea60-113">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="bea60-114">此示例摘自 <xref:System.Windows.Input.Touch> 类概述中提供的一个更大的示例。</span><span class="sxs-lookup"><span data-stu-id="bea60-114">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="bea60-115">用于定义坐标空间的元素。</span><span class="sxs-lookup"><span data-stu-id="bea60-115">The element that defines the coordinate space.</span></span> <span data-ttu-id="bea60-116">若要使用 WPF 绝对坐标，则将 <paramref name="relativeTo" /> 指定为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bea60-116">To use WPF absolute coordinates, specify <paramref name="relativeTo" /> as <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bea60-117">返回主触摸设备相对于指定元素的当前触点。</span><span class="sxs-lookup"><span data-stu-id="bea60-117">Returns the current touch point of the primary touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="bea60-118">主 <see cref="T:System.Windows.Input.TouchDevice" /> 相对于指定元素的当前位置；如果主 <see cref="T:System.Windows.Input.TouchDevice" /> 不是活动的，则为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bea60-118">The current position of the primary <see cref="T:System.Windows.Input.TouchDevice" /> relative to the specified element; or <see langword="null" /> if the primary <see cref="T:System.Windows.Input.TouchDevice" /> is not active.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea60-119">在一组活动触摸设备中，第一个要 <xref:System.Windows.Input.TouchDevice.Activated> 的设备是主要触摸设备。</span><span class="sxs-lookup"><span data-stu-id="bea60-119">In a set of active touch devices, the first device to be <xref:System.Windows.Input.TouchDevice.Activated> is the primary touch device.</span></span> <span data-ttu-id="bea60-120">例如，如果两根手指接触屏幕，则第一个触摸的手指由主要触摸设备表示。</span><span class="sxs-lookup"><span data-stu-id="bea60-120">For example, if two fingers are touching the screen, the first finger that is down is represented by the primary touch device.</span></span> <span data-ttu-id="bea60-121">如果第一根手指仍处于关闭状态，则主触摸设备将变为 `null`。</span><span class="sxs-lookup"><span data-stu-id="bea60-121">If the first finger is lifted while the second finger is still down, the primary touch device becomes `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bea60-122">下面的代码处理从 <xref:System.Windows.Input.TouchFrameEventArgs>检索的触摸点。</span><span class="sxs-lookup"><span data-stu-id="bea60-122">The following code processes the touch points that are retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>.</span></span> <span data-ttu-id="bea60-123">在 <xref:System.Windows.Controls.Canvas>上按下某个触摸时，<xref:System.Windows.Input.TouchDevice> 将捕获到 <xref:System.Windows.Controls.Canvas>中。</span><span class="sxs-lookup"><span data-stu-id="bea60-123">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="bea60-124">在提起触摸后，会释放 <xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="bea60-124">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="bea60-125">当触摸在 <xref:System.Windows.Controls.Canvas>间移动时，将检查 <xref:System.Windows.Input.TouchDevice.Id%2A>。</span><span class="sxs-lookup"><span data-stu-id="bea60-125">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="bea60-126">如果 <xref:System.Windows.Input.TouchDevice.Id%2A> 匹配主触摸点的 <xref:System.Windows.Input.TouchDevice.Id%2A> （指示第一次触摸），则记录其位置。</span><span class="sxs-lookup"><span data-stu-id="bea60-126">If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded.</span></span> <span data-ttu-id="bea60-127">如果移动从第二个触摸开始，则从第一个触摸的位置到第二个触摸的位置绘制线条。</span><span class="sxs-lookup"><span data-stu-id="bea60-127">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="bea60-128">此示例摘自 <xref:System.Windows.Input.Touch> 类概述中提供的一个更大的示例。</span><span class="sxs-lookup"><span data-stu-id="bea60-128">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="bea60-129">用于定义坐标空间的元素。</span><span class="sxs-lookup"><span data-stu-id="bea60-129">The element that defines the coordinate space.</span></span> <span data-ttu-id="bea60-130">若要使用 WPF 绝对坐标，则将 <paramref name="relativeTo" /> 指定为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="bea60-130">To use WPF absolute coordinates, specify <paramref name="relativeTo" /> as <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="bea60-131">返回一个集合，其中包含每个活动触摸设备相对于指定元素的当前触点。</span><span class="sxs-lookup"><span data-stu-id="bea60-131">Returns a collection that contains the current touch point for each active touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="bea60-132">一个集合，其中包含每个活动 <see cref="T:System.Windows.Input.TouchPoint" /> 的当前 <see cref="T:System.Windows.Input.TouchDevice" />。</span><span class="sxs-lookup"><span data-stu-id="bea60-132">A collection that contains the current <see cref="T:System.Windows.Input.TouchPoint" /> for each active <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bea60-133">下面的代码处理从 <xref:System.Windows.Input.TouchFrameEventArgs>检索的触控点。</span><span class="sxs-lookup"><span data-stu-id="bea60-133">The following code processes the touch points retrieved from the <xref:System.Windows.Input.TouchFrameEventArgs>.</span></span> <span data-ttu-id="bea60-134">当在画布上按下触摸时，<xref:System.Windows.Input.TouchDevice> 将捕获到画布中。</span><span class="sxs-lookup"><span data-stu-id="bea60-134">When a touch is pressed on the canvas, the <xref:System.Windows.Input.TouchDevice> is captured to the canvas.</span></span> <span data-ttu-id="bea60-135">当进行触摸时，将释放 <xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="bea60-135">When the touch is raised, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="bea60-136">当触摸在画布上移动时，将检查 <xref:System.Windows.Input.TouchDevice.Id%2A>。</span><span class="sxs-lookup"><span data-stu-id="bea60-136">When a touch moves across the canvas, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="bea60-137">如果 <xref:System.Windows.Input.TouchDevice.Id%2A> 匹配主触摸点的 <xref:System.Windows.Input.TouchDevice.Id%2A> （指示第一次触摸），则记录其位置。</span><span class="sxs-lookup"><span data-stu-id="bea60-137">If the <xref:System.Windows.Input.TouchDevice.Id%2A> matches the <xref:System.Windows.Input.TouchDevice.Id%2A> of the primary touch point, which indicates the first touch, its location is recorded.</span></span> <span data-ttu-id="bea60-138">如果移动从第二个触摸开始，则从第一个触摸的位置到第二个触摸的位置绘制线条。</span><span class="sxs-lookup"><span data-stu-id="bea60-138">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="bea60-139">此示例摘自 <xref:System.Windows.Input.Touch> 类概述中提供的一个更大的示例。</span><span class="sxs-lookup"><span data-stu-id="bea60-139">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bea60-140">此成员未实现。</span><span class="sxs-lookup"><span data-stu-id="bea60-140">This member is not implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bea60-141">提供此方法是为了与 Silverlight 兼容。</span><span class="sxs-lookup"><span data-stu-id="bea60-141">This method is provided for Silverlight compatibility.</span></span> <span data-ttu-id="bea60-142">由于设备实现不同，它不是在 WPF 中实现的。</span><span class="sxs-lookup"><span data-stu-id="bea60-142">Because of device implementation differences, it is not implemented in WPF.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bea60-143">获取此事件的时间戳。</span><span class="sxs-lookup"><span data-stu-id="bea60-143">Gets the time stamp for this event.</span></span></summary>
        <value><span data-ttu-id="bea60-144">此事件的时间戳。</span><span class="sxs-lookup"><span data-stu-id="bea60-144">The time stamp for this event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
