<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b16fc0697f9b0758dbf93ec191a05c08d5bb4a29" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82296835" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="465be-101">提供一个应用程序级服务，该服务处理来自操作系统的多点触控输入并引发 <see cref="E:System.Windows.Input.Touch.FrameReported" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="465be-101">Provides an application-level service that processes multitouch input from the operating system and raises the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="465be-102"><xref:System.Windows.Input.Touch.FrameReported> 事件包含在 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 中，以支持与 Silverlight 的兼容性。</span><span class="sxs-lookup"><span data-stu-id="465be-102">The <xref:System.Windows.Input.Touch.FrameReported> event is included in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] to support compatibility with Silverlight.</span></span> <span data-ttu-id="465be-103">如果不必确保与 Silverlight 兼容，请在 <xref:System.Windows.UIElement>、<xref:System.Windows.UIElement3D>或 <xref:System.Windows.ContentElement>上使用触控事件，例如 <xref:System.Windows.UIElement.TouchDown> 和 <xref:System.Windows.UIElement.TouchMove>。</span><span class="sxs-lookup"><span data-stu-id="465be-103">If you do not have to ensure compatibility with Silverlight, use the touch events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>, on <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, or <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="465be-104"><xref:System.Windows.Input.Touch.FrameReported> 事件不使用与其他 WPF 输入事件（如 <xref:System.Windows.UIElement.TouchDown> 和 <xref:System.Windows.UIElement.TouchMove>）相同的事件模型。</span><span class="sxs-lookup"><span data-stu-id="465be-104">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other WPF input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="465be-105"><xref:System.Windows.Input.Touch.FrameReported> 事件是在应用程序级别处理的单个事件，而不是作为可能通过 UI 的对象树进行路由的特定于元素的事件而公开。</span><span class="sxs-lookup"><span data-stu-id="465be-105">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="465be-106">因此，不能使用事件处理程序的 `sender` 参数来确定所涉及的元素。</span><span class="sxs-lookup"><span data-stu-id="465be-106">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
 <span data-ttu-id="465be-107">使用 <xref:System.Windows.Input.TouchFrameEventArgs> 获取与 touch 事件相关的 <xref:System.Windows.Input.TouchPoint> 值。</span><span class="sxs-lookup"><span data-stu-id="465be-107">Use the <xref:System.Windows.Input.TouchFrameEventArgs> to get the <xref:System.Windows.Input.TouchPoint> values that are relevant to the touch event.</span></span> <span data-ttu-id="465be-108">从 <xref:System.Windows.Input.TouchPoint>中，可以获得触摸的 <xref:System.Windows.Input.TouchPoint.Position%2A> 并确定 <xref:System.Windows.Input.TouchAction> 是 <xref:System.Windows.Input.TouchAction.Down>、<xref:System.Windows.Input.TouchAction.Move>还是 <xref:System.Windows.Input.TouchAction.Up> 操作。</span><span class="sxs-lookup"><span data-stu-id="465be-108">From the <xref:System.Windows.Input.TouchPoint>, you can get the <xref:System.Windows.Input.TouchPoint.Position%2A> of the touch and determine whether the <xref:System.Windows.Input.TouchAction> was a <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, or <xref:System.Windows.Input.TouchAction.Up> action.</span></span> <span data-ttu-id="465be-109">你还可以使用 <xref:System.Windows.Input.TouchPoint> 获取 <xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="465be-109">You can also use the <xref:System.Windows.Input.TouchPoint> to get the <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="465be-110">在 <xref:System.Windows.Input.TouchDevice>中，可以确定设备 <xref:System.Windows.Input.TouchDevice.Id%2A> 并获取有关所涉及元素的信息。</span><span class="sxs-lookup"><span data-stu-id="465be-110">From the <xref:System.Windows.Input.TouchDevice>, you can determine the device <xref:System.Windows.Input.TouchDevice.Id%2A> and get information about the element that is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="465be-111">下面的示例通过将两个手指拖到触摸屏上，使你能够在 <xref:System.Windows.Controls.Canvas> 上创建简单的模式。</span><span class="sxs-lookup"><span data-stu-id="465be-111">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen.</span></span> <span data-ttu-id="465be-112">每个触摸均由一个 <xref:System.Windows.Input.TouchDevice>表示。</span><span class="sxs-lookup"><span data-stu-id="465be-112">Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="465be-113">模式是通过在触控提供的触摸点之间绘制一条线来创建的。</span><span class="sxs-lookup"><span data-stu-id="465be-113">The pattern is created by drawing a line between the touch points provided by the touches.</span></span> <span data-ttu-id="465be-114">此示例需要 Windows 触摸屏兼容屏幕。</span><span class="sxs-lookup"><span data-stu-id="465be-114">This example requires a Windows Touch-compatible screen.</span></span>  
  
 <span data-ttu-id="465be-115">下面的标记将创建用户界面，该用户界面由在 <xref:System.Windows.Controls.Grid>中居中的 <xref:System.Windows.Controls.Canvas> 组成。</span><span class="sxs-lookup"><span data-stu-id="465be-115">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.</span></span>  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="465be-116">下面的代码处理 <xref:System.Windows.Input.Touch.FrameReported> 事件。</span><span class="sxs-lookup"><span data-stu-id="465be-116">The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="465be-117">当在 <xref:System.Windows.Controls.Canvas>上按下时，<xref:System.Windows.Input.TouchDevice> 将捕获到 <xref:System.Windows.Controls.Canvas>中。</span><span class="sxs-lookup"><span data-stu-id="465be-117">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="465be-118">在提起触摸后，会释放 <xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="465be-118">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="465be-119">当触摸在 <xref:System.Windows.Controls.Canvas>间移动时，将检查 <xref:System.Windows.Input.TouchDevice.Id%2A>。</span><span class="sxs-lookup"><span data-stu-id="465be-119">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="465be-120">如果移动来自第一次触摸，则会记录其位置。</span><span class="sxs-lookup"><span data-stu-id="465be-120">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="465be-121">如果移动从第二个触摸开始，则从第一个触摸的位置到第二个触摸的位置绘制线条。</span><span class="sxs-lookup"><span data-stu-id="465be-121">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event FrameReported As TouchFrameEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="465be-122">在发送触摸消息时发生。</span><span class="sxs-lookup"><span data-stu-id="465be-122">Occurs when a touch message is sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="465be-123">帧是一系列多点触控消息或触控点中的一个。</span><span class="sxs-lookup"><span data-stu-id="465be-123">A frame is one in a series of multitouch messages or touch points.</span></span> <span data-ttu-id="465be-124">您可以通过处理 <xref:System.Windows.Input.Touch.FrameReported> 事件，并从 <xref:System.Windows.Input.TouchFrameEventArgs> 事件数据访问 <xref:System.Windows.Input.TouchPoint> 的详细信息，对触控做出反应。</span><span class="sxs-lookup"><span data-stu-id="465be-124">You can respond to touches by handling the <xref:System.Windows.Input.Touch.FrameReported> event and accessing the details of the <xref:System.Windows.Input.TouchPoint> from the <xref:System.Windows.Input.TouchFrameEventArgs> event data.</span></span>  
  
 <span data-ttu-id="465be-125"><xref:System.Windows.Input.Touch.FrameReported> 事件不使用与其他 [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] 输入事件（如 <xref:System.Windows.UIElement.TouchDown> 和 <xref:System.Windows.UIElement.TouchMove>）相同的事件模型。</span><span class="sxs-lookup"><span data-stu-id="465be-125">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="465be-126"><xref:System.Windows.Input.Touch.FrameReported> 事件是在应用程序级别处理的单个事件，而不是作为可能通过 UI 的对象树进行路由的特定于元素的事件而公开。</span><span class="sxs-lookup"><span data-stu-id="465be-126">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="465be-127">因此，不能使用事件处理程序的 `sender` 参数来确定所涉及的元素。</span><span class="sxs-lookup"><span data-stu-id="465be-127">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="465be-128">下面的示例处理 <xref:System.Windows.Input.Touch.FrameReported> 事件。</span><span class="sxs-lookup"><span data-stu-id="465be-128">The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="465be-129">当在 <xref:System.Windows.Controls.Canvas>上按下时，<xref:System.Windows.Input.TouchDevice> 将捕获到 <xref:System.Windows.Controls.Canvas>中。</span><span class="sxs-lookup"><span data-stu-id="465be-129">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="465be-130">在提起触摸后，会释放 <xref:System.Windows.Input.TouchDevice>。</span><span class="sxs-lookup"><span data-stu-id="465be-130">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="465be-131">当触摸在 <xref:System.Windows.Controls.Canvas>间移动时，将检查 <xref:System.Windows.Input.TouchDevice.Id%2A>。</span><span class="sxs-lookup"><span data-stu-id="465be-131">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="465be-132">如果移动来自第一次触摸，则会记录其位置。</span><span class="sxs-lookup"><span data-stu-id="465be-132">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="465be-133">如果移动从第二个触摸开始，则从第一个触摸的位置到第二个触摸的位置绘制线条。</span><span class="sxs-lookup"><span data-stu-id="465be-133">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="465be-134">此示例摘自 <xref:System.Windows.Input.Touch> 类概述中提供的一个更大的示例。</span><span class="sxs-lookup"><span data-stu-id="465be-134">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
