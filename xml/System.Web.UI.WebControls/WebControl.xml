<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="914f1fc6bad98cdbb4c4fd1d41fa94af1206ebc7" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77106210" /></Metadata><TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type WebControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>充当基类，该基类定义 <see cref="N:System.Web.UI.WebControls" /> 命名空间中的所有控件常见的方法、属性和事件。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl> 类提供所有 Web 服务器控件通用的属性、方法和事件。 可以通过设置此类中定义的属性来控制 Web 服务器控件的外观和行为。 例如，控件的背景色和字体颜色分别通过使用 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 和 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 属性进行控制。 对于可以显示边框的控件，可以通过设置 "<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>"、"<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>" 和 "<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>" 属性来控制边框宽度、边框样式和边框颜色。 可以使用 "<xref:System.Web.UI.WebControls.WebControl.Height%2A>" 和 "<xref:System.Web.UI.WebControls.WebControl.Width%2A>" 属性来指定 Web 服务器控件的大小。

 可以通过设置某些属性来指定控件的行为。 可以通过设置 "<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>" 属性来启用和禁用控件。 控件在 tab 键顺序中的位置是通过设置 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性控制的。 可以通过设置 <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> 属性为控件指定工具提示。

> [!NOTE]
>  并非所有控件都支持此类中定义的每个属性。 有关是否支持属性的特定信息，请参阅特定控件的文档。

> [!NOTE]
>  此类中的某些属性呈现方式不同，具体取决于浏览器。 有些属性根本不会呈现，而另一些则不会产生任何影响。 <xref:System.Web.HttpBrowserCapabilities> 对象的 <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> 属性决定了 Web 服务器控件的呈现方式。 对于支持 HTML 4.0 的浏览器，<xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> 属性将包含一个常规 <xref:System.Web.HttpBrowserCapabilities> 对象，并且大多数属性都将使用 HTML 4.0 样式属性呈现。 不知道支持 HTML 4.0 的浏览器将使用 <xref:System.Web.UI.Html32TextWriter> 对象。 这会自动将样式属性映射到任何相关的 HTML 3.2 标记属性。 在某些情况下，例如，对于 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 属性，样式属性将转换为其他标记，如 `<font>` 标记。 在某些情况下，将不会执行任何映射。 有关如何在不同浏览器中呈现属性的特定信息，请参阅特定属性的文档。

 有关 <xref:System.Web.UI.WebControls.WebControl>实例的初始属性值的列表，请参阅 <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A> 构造函数。



## Examples
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebControl" /> 类的新实例。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化表示 <see cref="T:System.Web.UI.WebControls.WebControl" /> HTML 标记的 <see langword="Span" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此构造函数用于初始化 <xref:System.Web.UI.WebControls.WebControl> 类的新实例，该类表示 `Span` 的 HTML 元素。

 下表显示了 <xref:System.Web.UI.WebControls.WebControl>实例的初始属性值。

|properties|初始值|
|--------------|-------------------|
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Span> 枚举值。|

> [!NOTE]
>  不直接调用此构造函数。 相反，它通常由派生类的构造函数调用，以将 <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> 属性初始化为 <xref:System.Web.UI.HtmlTextWriterTag.Span> 枚举值。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : string -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">HTML 标记。</param>
        <summary>使用指定的 HTML 标记初始化 <see cref="T:System.Web.UI.WebControls.WebControl" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数创建并初始化使用指定 HTML 标记的 <xref:System.Web.UI.WebControls.WebControl> 类的新实例。

 下表显示了 <xref:System.Web.UI.WebControls.WebControl>实例的初始属性值。

|properties|初始值|
|--------------|-------------------|
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Unknown> 枚举值。|
|`TagName`|`tag` 参数的值。|

> [!NOTE]
>  不直接调用此构造函数。 相反，它通常由派生类的构造函数调用以初始化 <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> 和 <xref:System.Web.UI.WebControls.WebControl.TagName%2A> 属性。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : System.Web.UI.HtmlTextWriterTag -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值之一。</param>
        <summary>使用指定的 HTML 标记初始化 <see cref="T:System.Web.UI.WebControls.WebControl" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数创建并初始化使用指定 <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType> 值的 <xref:System.Web.UI.WebControls.WebControl> 类的新实例。

 下表显示了 <xref:System.Web.UI.WebControls.WebControl>实例的初始属性值。

|properties|初始值|
|--------------|-------------------|
|`TagKey`|`tag` 参数指定的 <xref:System.Web.UI.HtmlTextWriterTag> 枚举值。|



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.WebControl> 类的构造函数创建 `TextArea` 的 HTML 元素，并将其显示在 Web 窗体页上。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到具有 .aspx 文件扩展名的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置使您得以快速导航到 Web 服务器控件的访问键。</summary>
        <value>用于快速定位到 Web 服务器控件的访问键。 默认值为 <see cref="F:System.String.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 属性指定 Web 服务器控件的键盘快捷方式。 这使你可以通过按 ALT 键和键盘上指定字符的键来快速导航到控件。 例如，将控件的访问键设置为字符串 `"D"` 指示用户可以通过按 ALT + D 导航到控件。

 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 属性仅允许一个字符串。 如果尝试将此属性设置为既不 `null`、<xref:System.String.Empty>和单字符字符串的值，则会引发异常。

> [!NOTE]
>  只有 Internet Explorer 4.0 和更高版本支持此属性。



## Examples
 下面的示例演示如何设置和使用 <xref:System.Web.UI.WebControls.TextBox> 控件的 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> 属性。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的访问键不是 <see langword="null" />、<see cref="F:System.String.Empty" />，也不是单个字符串。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将需要呈现的 HTML 特性和样式添加到指定的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 中。 此方法主要由控件开发人员使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 若要在客户端上呈现 Web 服务器控件的特性和样式，通常需要调用 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> 和 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> 方法，将每个特性和样式分别插入到 <xref:System.Web.UI.HtmlTextWriter> 输出流中。 为简化此过程，此方法将封装对与 Web 服务器控件关联的每个属性和样式的 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType> 和 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType> 方法的所有调用。 所有属性和样式都在单个方法调用中插入 <xref:System.Web.UI.HtmlTextWriter> 输出流中。 此方法通常由派生类中的控件开发人员重写，以将相应的特性和样式插入到类的 <xref:System.Web.UI.HtmlTextWriter> 输出流中。

> [!NOTE]
>  不能使用 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> 方法插入客户端脚本。 若要使用客户端脚本，请参阅 <xref:System.Web.UI.ClientScriptManager> 类。



## Examples
 下面的示例演示如何创建从 <xref:System.Web.UI.WebControls.WebControl> 类派生的类。 重写 <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A> 方法的基实现，以便添加适用于 <xref:System.Web.UI.HtmlTextWriter> 输出流中的派生类的属性。

 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.ApplyStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.ApplyStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s"><see cref="T:System.Web.UI.WebControls.Style" />，表示要复制的样式。</param>
        <summary>将指定样式的所有非空白元素复制到 Web 控件，覆盖控件的所有现有的样式元素。 此方法主要由控件开发人员使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A> 方法将样式应用于 <xref:System.Web.UI.WebControls.DataGrid> 控件。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与控件的特性不对应的任意特性（只用于呈现）的集合。</summary>
        <value>名称和值对的 <see cref="T:System.Web.UI.AttributeCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 集合包含在 Web 服务器控件的开始标记中声明的所有属性的集合。 这使您能够以编程方式控制与 Web 服务器控件关联的属性。 可以向集合添加特性，也可以从集合中移除特性。

> [!NOTE]
>  此属性在控件的开始标记中呈现集合中的所有属性，而不考虑浏览器设置。 并非所有浏览器都支持呈现的每个属性。 浏览器通常会忽略不支持的属性。

> [!NOTE]
>  不能使用 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 集合向 <xref:System.Web.UI.WebControls.WebControl> 实例添加客户端脚本。 若要添加客户端脚本，请使用 <xref:System.Web.UI.Page> 控件上的 <xref:System.Web.UI.Page.ClientScript%2A> 属性。



## Examples
 下面的示例演示了在 <xref:System.Web.UI.WebControls.TextBox> 控件失去焦点时，如何使用 <xref:System.Web.UI.WebControls.WebControl> 的 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 属性来运行 JavaScript 命令。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器控件的背景色。</summary>
        <value>表示控件背景色的 <see cref="T:System.Drawing.Color" />。 默认值为 <see cref="F:System.Drawing.Color.Empty" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 属性指定 Web 服务器控件的背景色。 使用 <xref:System.Drawing.Color?displayProperty=nameWithType> 对象设置此属性。

> [!NOTE]
>  此属性将仅为某些控件呈现。 例如，<xref:System.Web.UI.WebControls.Table>、<xref:System.Web.UI.WebControls.Panel>、<xref:System.Web.UI.WebControls.DataGrid>、<xref:System.Web.UI.WebControls.Calendar>和 <xref:System.Web.UI.WebControls.ValidationSummary> 将呈现此属性。 如果 <xref:System.Web.UI.WebControls.CheckBoxList>，<xref:System.Web.UI.WebControls.RadioButtonList> 和 <xref:System.Web.UI.WebControls.DataList> （如果 `RepeatLayout` 属性为 `RepeatLayout.Table`，而不是 `RepeatLayout.Flow`），则它也适用。

 通常，仅呈现为 `<table>` 标记的控件可以在 HTML 3.2 中显示背景色，而几乎任何控件都可以在 HTML 4.0 中显示。

 对于呈现为 `<span>` 标记（包括 <xref:System.Web.UI.WebControls.Label>、所有验证控件以及其 `RepeatLayout` 属性设置为 `RepeatLayout.Flow`的列表控件）的控件，此属性将在 Microsoft Internet Explorer 版本5和更高版本中运行，但不能在 Microsoft Internet Explorer 版本4中使用。



## Examples
 下面的示例演示如何设置 <xref:System.Web.UI.WebControls.Table> 控件的 <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> 属性，该属性是从 <xref:System.Web.UI.WebControls.WebControl> 基类继承的。

 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 控件的边框颜色。</summary>
        <value>表示控件的边框颜色的 <see cref="T:System.Drawing.Color" />。 默认值为 <see cref="F:System.Drawing.Color.Empty" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> 属性指定 Web 服务器控件的边框颜色。 使用 <xref:System.Drawing.Color> 对象设置此属性。

> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> 属性将仅为某些控件呈现。 例如，<xref:System.Web.UI.WebControls.Table>、<xref:System.Web.UI.WebControls.Panel>、<xref:System.Web.UI.WebControls.DataGrid>、<xref:System.Web.UI.WebControls.Calendar>和 <xref:System.Web.UI.WebControls.ValidationSummary> 控件将呈现此属性。 如果将 <xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>和 <xref:System.Web.UI.WebControls.DataList> 控件的 `RepeatLayout` 属性设置为 `RepeatLayout.Table`，而不是 `RepeatLayout.Flow`，则它也适用。 但是，它将呈现为 `bordercolor` 属性，该属性不是 HTML 3.2 标准的一部分。 `bordercolor` 属性适用于 Microsoft Internet Explorer 版本3.0 或更高版本，但不是大多数其他浏览器。

 如果未设置 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> 属性，则浏览器将使用其默认边框颜色。 请参阅浏览器来确定其默认配色方案。



## Examples
 下面的示例演示如何设置 <xref:System.Web.UI.WebControls.Table> 控件的 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> 属性，该属性是从 <xref:System.Web.UI.WebControls.WebControl> 基类继承的。

 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器控件的边框样式。</summary>
        <value><see cref="T:System.Web.UI.WebControls.BorderStyle" /> 枚举值之一。 默认为 <see langword="NotSet" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> 属性指定 Web 服务器控件的边框样式。 此属性是使用 <xref:System.Web.UI.WebControls.BorderStyle> 枚举值之一设置的。 下表列出了可能的值。

|边框样式|说明|
|------------------|-----------------|
|`NotSet`|未设置边框样式。|
|`None`|无边框|
|`Dotted`|虚线边框。|
|`Dashed`|点划线边框。|
|`Solid`|实线边框。|
|`Double`|实线双线边框。|
|`Groove`|用于凹陷边框外观的凹槽状边框。|
|`Ridge`|用于凸起边框外观的突起边框。|
|`Inset`|用于凹陷控件外观的内嵌边框。|
|`Outset`|用于凸起控件外观的外嵌边框。|

> [!NOTE]
>  对于任何 Web 服务器控件，此属性将不会在 Microsoft Internet Explorer 4 之前的浏览器中呈现。 HTML 3.2 中没有等效项。



## Examples
 下面的示例演示如何设置 <xref:System.Web.UI.WebControls.Table> 控件的 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> 属性，该属性是从 <xref:System.Web.UI.WebControls.WebControl> 基类继承的。

 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器控件的边框宽度。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Unit" />，表示 Web 服务器控件的边框宽度。 默认值为 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />，表示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 "<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>" 属性可指定控件的边框宽度。

> [!NOTE]
>  此属性不适用于所有 Web 服务器控件。 它仅适用于显示为表的控件，例如 <xref:System.Web.UI.WebControls.Table> 和 <xref:System.Web.UI.WebControls.DataGrid>。

 此属性是使用 <xref:System.Web.UI.WebControls.Unit> 对象设置的。 如果 <xref:System.Web.UI.WebControls.Unit> 的 <xref:System.Web.UI.WebControls.Unit.Value%2A> 属性包含负数，则会引发异常。

> [!NOTE]
>  对于早于 Microsoft Internet Explorer 版本5的浏览器，边框宽度只能用像素表示。 Microsoft Internet Explorer 版本5及更高版本支持所有单元类型。 有关详细信息，请参阅特定控件。



## Examples
 下面的示例演示如何设置继承自 <xref:System.Web.UI.WebControls.WebControl> 基类的 <xref:System.Web.UI.WebControls.Table> 控件的 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> 属性。

 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定的边框宽度是负值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取 Web 服务器控件的样式。 此属性主要由控件开发人员使用。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" />，它封装 Web 服务器控件的外观属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 属性封装指定控件外观的 <xref:System.Web.UI.WebControls.WebControl> 类的所有属性，如 <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> 和 <xref:System.Web.UI.WebControls.WebControl.Font%2A>。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyleCreated : bool" Usage="System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否已为 <see cref="T:System.Web.UI.WebControls.Style" /> 属性创建了 <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> 对象。 此属性主要由控件开发人员使用。</summary>
        <value>如果已为 <see langword="true" /> 属性创建了 <see cref="T:System.Web.UI.WebControls.Style" /> 对象，则为 <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />；否则为 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberSignature Language="F#" Value="member this.CopyBaseAttributes : System.Web.UI.WebControls.WebControl -&gt; unit" Usage="webControl.CopyBaseAttributes controlSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc"><see cref="T:System.Web.UI.WebControls.WebControl" />，它表示属性要复制到从中调用此方法的 Web 服务器控件的源控件。</param>
        <summary>将 <see cref="P:System.Web.UI.WebControls.WebControl.Style" /> 对象未封装的属性从指定的 Web 服务器控件复制到从中调用此方法的 Web 服务器控件。 此方法主要由控件开发人员使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A> 方法将指定 Web 服务器控件中的 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>、<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>和 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 属性复制到从中调用此方法的 Web 服务器控件。 这通常用于 Web 服务器控件在呈现和使用控件时动态创建新控件的工作情况。 此方法在这种情况下很有用，因为它会复制不是由 <xref:System.Web.UI.WebControls.Style> 对象封装的 Web 服务器控件的所有属性，因此可以将其放置在所呈现的标记的最外面的控件上。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="controlSrc" /> 为 <see langword="null" />。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style&#xA;override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="webControl.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>创建由 <see cref="T:System.Web.UI.WebControls.WebControl" /> 类在内部用来实现所有与样式有关的属性的样式对象。 此方法主要由控件开发人员使用。</summary>
        <returns>一个 <see cref="T:System.Web.UI.WebControls.Style" />，用于实现该控件的所有与样式有关的属性。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A> 方法用于创建可在内部用来实现所有与样式有关的属性的样式对象。 派生类可以重写此方法，以创建适合类的样式。 此方法主要由控件开发人员使用。

 **注意**控件开发人员应返回派生自基控件返回的 <xref:System.Web.UI.WebControls.Style> 的 <xref:System.Web.UI.WebControls.Style>。 不能假定 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> 属于特定样式类型，因为派生的控件可能返回不同的类型。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置由 Web 服务器控件在客户端呈现的级联样式表 (CSS) 类。</summary>
        <value>由 Web 服务器控件在客户端呈现的 CSS 类。 默认为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性指定要在 Web 服务器控件的客户端上呈现的 CSS 类。 此属性将在所有控件的浏览器中呈现。 它将始终呈现为类属性，而不考虑浏览器。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 例如，假设您具有以下 Web 服务器控件声明：

```
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />
```

 在以前的 Web 服务器控件声明的客户端上呈现以下 HTML：

```
<input type=text class="class1" style="ForeColor:red">
```

 如果使用级联样式表（CSS）来自定义控件的外观，则可以使用内联样式或单独的 CSS 文件，但不能同时使用两者。 同时使用内联样式和单独的 CSS 文件可能导致意外的结果。

> [!NOTE]
>  在不支持 CSS 的浏览器中，设置 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性将不起作用。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性更改 <xref:System.Web.UI.WebControls.HyperLink> 控件的样式。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledCssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要在控件处于禁用状态时应用于呈现的 HTML 元素的 CSS 类。</summary>
        <value>应在控件处于禁用状态时应用于呈现的 HTML 元素的 CSS 类。 默认值为“aspNetDisabled”。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此属性可用于更改为单个 Web 控件的 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 属性呈现的名称。 默认情况下，此属性将返回 "aspNetDisabled"。

 当在派生类中重写 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 以返回 `false`时，<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 属性的值将呈现为控件的 HTML 元素的 `class` 特性的值。 在这种情况下，如果 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性中有一个值，则这两个 CSS 类将应用于呈现的 HTML 元素。 `class` 特性将包含 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 属性的值，后跟 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性的值（用空格分隔）。

 此属性是静态的，这意味着你只能对 <xref:System.Web.UI.WebControls.WebControl> 类设置此属性。 设置为的任何值用于 Web 应用程序中的所有控件。 不能为各个控件指定不同的值。

 如果要使用不同于默认值 "aspNetDisabled" 的类名称，则通常会在 global.asax 文件的 `Application_Start` 方法中放置代码，如以下示例中所示：

```vb
Private Sub Application_Start(
    ByVal sender As Object, ByVal e As EventArgs)
    WebControl.DisabledCssClass = "customDisabledClassName"
End Sub
```

```csharp
void Application_Start(object sender, EventArgs e)
{
    WebControl.DisabledCssClass = "customDisabledClassName";
}
```



## Examples
 下面的示例演示当 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 属性 `false`、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 属性具有其默认值时，以及当 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性为空时，已禁用 <xref:System.Web.UI.WebControls.Label> 控件的呈现的 HTML。

 `<span id="Label1" class="aspNetDisabled">Test</span>`

 下面的示例显示了在相同条件下呈现的 HTML，但 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性的值为 "SampleStyle"`:`

 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`

 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 属性。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否启用 Web 服务器控件。</summary>
        <value>如果启用控件，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 当控件的 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性设置为 `false`时，控件通常显示为灰色。 如果该控件是一个输入元素，则浏览器将阻止用户在其中单击或键入。 为服务器控件呈现的 HTML 元素通过设置其 `disabled` 特性或其 CSS `class` 特性来标记为禁用。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 和 <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>。

 此属性向下传播控件层次结构。 如果禁用容器控件，则也会禁用该容器中的子控件。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 属性。

> [!NOTE]
>  在自定义复合控件中，此继承行为不适用于尚未创建其子控件的控件。 创建子控件时，必须设置其启用状态，或重写 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性以调用 <xref:System.Web.UI.Control.EnsureChildControls%2A> 方法。

> [!NOTE]
>  禁用控件只会阻止用户通过浏览器 UI 与控件进行交互。 用户可以创建一个请求，该请求将提交由页面处理的回发，即使已禁用页面上的控件。 在处理回发请求之前，请检查以确保已启用并显示该控件。

 并非所有控件都支持此属性。 有关详细信息，请参阅各个控件。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。



## Examples
 下面的示例演示如何通过以编程方式 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 设置和禁用从 <xref:System.Web.UI.WebControls.WebControl> 基类继承的 <xref:System.Web.UI.WebControls.TextBox> 控件。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示主题是否应用于该控件。</summary>
        <value>如果使用主题，则为 <see langword="true" />；否则为 <see langword="false" />。 默认为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 属性指示是否为指定控件启用主题。 `true`<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 属性时，将在应用程序的主题目录中搜索要应用的控件外观。 如果主题目录中不存在特定控件的外观，则不会应用外观。

 当 `false`<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 属性时，不会搜索主题目录，并且不使用 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> 属性的内容。

 控件可以重写由其父控件或包含页设置的 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 值。 例如，如果父控件的 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 属性设置为 `false`，则可以通过将 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A> 属性设置为单个子控件上的 `true`，来有选择地将主题应用到父控件。

 可以在页、容器或控件级别启用主题。 如果在页面或容器级别禁用了主题，则会为该页或容器包含的所有控件禁用主题。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3(v=vs.100)">ASP.NET 主题概述</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.WebControl.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取与 Web 服务器控件关联的字体属性。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FontInfo" />，表示 Web 服务器控件的字体属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.Font%2A> 属性指定 Web 服务器控件的字体属性。 此属性包括子属性，可在 `Property-Subproperty` （例如 `Font-Bold`）形式以声明方式访问这些子属性，或以 `Property.Subproperty` 格式（例如 `Font.Bold`）以编程方式访问。

 除了一个子属性，所有控件都将在 Microsoft Internet Explorer 版本4之前的浏览器中呈现。 它们分别是： <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>、<xref:System.Web.UI.WebControls.FontInfo.Italic%2A>、<xref:System.Web.UI.WebControls.FontInfo.Name%2A>、<xref:System.Web.UI.WebControls.FontInfo.Names%2A>、<xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>、<xref:System.Web.UI.WebControls.FontInfo.Underline%2A>和 <xref:System.Web.UI.WebControls.FontInfo.Size%2A> （但仅命名的字号，如 `Small`、`Smaller`等）。

> [!NOTE]
>  尽管这些子属性是在 Microsoft Internet Explorer 版本4之前的浏览器中呈现的，但呈现的 HTML 不同于更高版本的浏览器。 这些子属性将呈现为 HTML 元素（例如 `<b>` 和 `<font>`），而不是呈现为样式特性。

 在早期浏览器中将不会在所有控件上呈现的一个子属性是 <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.WebControl.Font%2A> 属性从 <xref:System.Web.UI.WebControls.Label> 控件中收集字体信息。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器控件的前景色（通常是文本颜色）。</summary>
        <value>表示控件前景色的 <see cref="T:System.Drawing.Color" />。 默认为 <see cref="F:System.Drawing.Color.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 属性指定 Web 服务器控件的前景色。 前景色通常是文本的颜色。 除了 <xref:System.Web.UI.WebControls.Image>、<xref:System.Web.UI.WebControls.AdRotator>、<xref:System.Web.UI.WebControls.HyperLink> 和 <xref:System.Web.UI.WebControls.LinkButton>以外，此属性将在除 Microsoft Internet Explorer 版本4以外的所有控件上呈现。

> [!NOTE]
>  在早于 Microsoft Internet Explorer 版本4的浏览器上，此属性呈现为 `<font>` 标记。



## Examples
 下面的示例演示如何设置继承自 <xref:System.Web.UI.WebControls.WebControl> 基类的 <xref:System.Web.UI.WebControls.Table> 控件的 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> 属性。

 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示控件是否具有特性集。</summary>
        <value>如果控件有特性集，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl> 实例具有属性名称/值对时，<xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A> 属性返回 `true`。 可以在属性中或视图状态中设置属性对。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器控件的高度。</summary>
        <value>表示控件高度的 <see cref="T:System.Web.UI.WebControls.Unit" />。 默认为 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.Height%2A> 属性指定 Web 服务器控件的高度。

> [!NOTE]
>  对于早于 Microsoft Internet Explorer 版本4的浏览器中的所有控件，此属性不会呈现。 不在早期浏览器中呈现此属性的控件包括 <xref:System.Web.UI.WebControls.Label>、<xref:System.Web.UI.WebControls.HyperLink>、<xref:System.Web.UI.WebControls.LinkButton>和任何验证控件。 如果 <xref:System.Web.UI.WebControls.CheckBoxList>，<xref:System.Web.UI.WebControls.RadioButtonList> 和 <xref:System.Web.UI.WebControls.DataList> 在早期浏览器中也不会呈现此属性，因为其 `RepeatLayout` 属性设置为 `RepeatLayout.Flow`。 此外，在早期的浏览器中仅支持 `Pixel` 和 `Percentage` 的单位类型。

 由于此属性是非标准 HTML，因此显示为表的 Web 服务器控件（如 <xref:System.Web.UI.WebControls.Table> 和 <xref:System.Web.UI.WebControls.DataGrid>）在早于 Microsoft Internet Explorer 版本4的浏览器中不支持此属性。

> [!NOTE]
>  若要将 <xref:System.Web.UI.WebControls.WebControl.Height%2A> 属性设置为默认值 `Pixel`以外的单位类型，必须创建特定于所需单位类型的新单位类型。 例如，若要将控件的 <xref:System.Web.UI.WebControls.WebControl.Height%2A> 属性设置为百分比值100，则可以执行以下操作：
>
>  `myWebControl.Width = Unit.Percentage(100);`
>
>  有关可用于 <xref:System.Web.UI.WebControls.WebControl.Height%2A> 属性的单位类型的详细信息，请参阅 <xref:System.Web.UI.WebControls.Unit> 类。



## Examples
 下面的示例演示如何以声明方式设置 <xref:System.Web.UI.WebControls.Table> 控件的 <xref:System.Web.UI.WebControls.WebControl.Height%2A> 属性，该属性从 <xref:System.Web.UI.WebControls.WebControl> 基类继承。

 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">高度被设置为负值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示是否启用控件。</summary>
        <value>如果启用 <see langword="true" /> 对象，则为 <see cref="T:System.Web.UI.WebControls.WebControl" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 这是只读属性。 若要禁用控件，请将其 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性设置为 `false`。

 如果控件不包含在另一个控件中，则 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 属性的值始终与 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性的值相同。

 如果控件是另一个控件的子控件并且以下所有情况都为 true，则 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 属性的值与 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性不同：

-   `false`父控件的 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性或 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 属性的值。

-   子控件的 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性设置为 `true`。

 在这种情况下，子控件继承父控件的禁用状态。 子控件的 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 属性将返回 `false`，以指示控件已禁用，即使未通过将其 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性设置为 `false`来显式禁用子控件。 父控件本身可能会将其 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性设置为 `true` 但可能会从其父控件继承禁用状态，依此类推。

 当 ASP.NET 呈现服务器控件的 HTML 元素时，它通过设置其 `disabled` 特性或其 CSS `class` 特性来将元素标记为禁用。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 和 <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="webControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">一个表示要还原的控件状态的对象。</param>
        <summary>从使用 <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> 方法保存的前一请求还原视图状态信息。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 此方法主要由 .NET Framework 基础结构使用，不应在代码中直接使用。 不过，控件开发人员可以重写此方法，以指定自定义服务器控件如何还原其视图状态。 有关详细信息，请参阅[ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。

 <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A> 方法还原在上一个 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> 请求期间保存的视图状态信息。 <xref:System.Web.UI.WebControls.WebControl> 类将重写基 <xref:System.Web.UI.Control.LoadViewState%2A> 方法以处理 <xref:System.Web.UI.Control.ViewState%2A>、<xref:System.Web.UI.WebControls.WebControl.Style%2A>和 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> 属性。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">控件状态与视图状态示例</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状态管理概述</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 页生命周期简介</related>
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.MergeStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.MergeStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s"><see cref="T:System.Web.UI.WebControls.Style" />，表示要复制的样式。</param>
        <summary>将指定样式的所有非空白元素复制到 Web 控件，但不覆盖该控件现有的任何样式元素。 此方法主要由控件开发人员使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> 方法来合并样式与 <xref:System.Web.UI.WebControls.DataGrid> 控件的样式。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.Render writer" />
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">接收控件内容的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 对象。</param>
        <summary>将控件呈现给指定的 HTML 编写器。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.Render%2A> 方法主要由控件开发人员使用。

 <xref:System.Web.UI.WebControls.WebControl.Render%2A> 方法将 Web 控件发送到指定的 <xref:System.Web.UI.HtmlTextWriter> 实例。 重写此方法以将自定义服务器控件发送到客户端。

 <xref:System.Web.UI.WebControls.WebControl.Render%2A> 方法首先调用 <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A> 方法、<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> 方法，最后调用将控件发送到客户端的 <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> 方法。

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将控件的 HTML 开始标记呈现到指定的编写器中。 此方法主要由控件开发人员使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 这是公共的，因此其他控件可以在 Web 服务器控件的开始标记和结束标记之间呈现多个控件。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将控件的内容呈现到指定的编写器中。 此方法主要由控件开发人员使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 重写 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> 方法，以便在开始标记和结束标记之间呈现控件的内容。 此方法的默认实现将呈现任何子控件。

 如果控件具有子控件，则必须调用基 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> 方法，或在要将子控件呈现到文本编写器的点调用 <xref:System.Web.UI.Control.RenderChildren%2A>。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">表示在客户端上呈现 HTML 内容的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将控件的 HTML 结束标记呈现到指定的编写器中。 此方法主要由控件开发人员使用。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 这是公共的，因此其他控件可以在 Web 服务器控件的开始标记和结束标记之间呈现多个控件。

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="webControl.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保存调用 <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> 方法后修改的任何状态。</summary>
        <returns>一个包含该控件的当前视图状态的对象；如果没有与该控件关联的视图状态，则为 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> 方法主要由控件开发人员使用。

 视图状态是服务器控件属性的累计值。 这些值自动放置在服务器控件的 <xref:System.Web.UI.Control.ViewState%2A> 属性中，该属性是 <xref:System.Web.UI.StateBag> 类的实例。 然后，在服务器控件生命周期的保存状态阶段后，将 <xref:System.Web.UI.Control.ViewState%2A> 属性值保存到字符串对象。 有关详细信息，请参阅[ASP.NET 页生命周期概述](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)。

 保存视图状态时，此字符串对象将作为存储在隐藏的 HTML `input` 元素中的变量返回给客户端。 创作自定义服务器控件时，可以通过重写 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> 方法并修改服务器控件的 <xref:System.Web.UI.Control.ViewState%2A> 属性来提高效率。 有关详细信息，请参阅[ASP.NET 状态管理概述](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">控件状态与视图状态示例</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状态管理概述</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 页生命周期简介</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要应用于控件的外观。</summary>
        <value>要应用于控件外观的名称。 默认为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 控件的可用外观包含在主题目录中的一个或多个外观文件中。 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> 属性指定要应用于控件的外观。 外观特定于特定控件;不能在不同类型的控件之间共享外观设置。

 如果未设置 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> 属性，控件将使用默认的外观（如果已定义）。 例如，如果为 <xref:System.Web.UI.WebControls.Image> 控件定义了没有 ID 的外观，则该外观适用于所有未按 ID 显式引用外观且未设置为禁用主题的 <xref:System.Web.UI.WebControls.Image> 控件。 如果为 <xref:System.Web.UI.WebControls.Image> 控件定义了具有 ID 的外观，则该外观仅适用于其 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A> 设置为该 ID 的 <xref:System.Web.UI.WebControls.Image> 控件。

 如果主题目录中的外观文件不包含具有指定 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>的外观，则在运行时将引发 <xref:System.ArgumentException> 异常。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">主题中不存在 <see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> 属性中指定的外观。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">了解 ASP.NET 主题</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.WebControls.WebControl.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取将在 Web 服务器控件的外部标记上呈现为样式特性的文本特性的集合。</summary>
        <value><see cref="T:System.Web.UI.CssStyleCollection" />，它包含要在 Web 服务器控件的外部标记上呈现的 HTML 样式特性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.Style%2A> 集合可管理呈现在 Web 服务器控件的外部标记中的样式特性。 此属性将在所有控件的所有浏览器中呈现。

> [!NOTE]
>  不支持样式特性的浏览器将忽略呈现的 HTML。

 通过强类型样式属性（例如 `BackColor="Red"`）设置的任何样式值都将自动覆盖此集合中的相应值。

 此集合中设置的值不会自动反映在强类型样式属性中。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.WebControl.Style%2A> 属性隐藏或显示页上的 <xref:System.Web.UI.WebControls.Label> 控件。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取一个值，该值指示在控件的 <see langword="disabled" /> 属性为 <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> 时，控件是否应将呈现的 HTML 元素的 <see langword="false" /> 特性设置为 "disabled"。</summary>
        <value>始终为 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在派生类中，此属性指示在控件被禁用时 ASP.NET 应如何呈现控件的 HTML。

## <a name="disabling-aspnet-web-controls"></a>禁用 ASP.NET Web 控件
 将 ASP.NET 控件的 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性设置为 `false` （即，当控件被禁用时）时，ASP.NET 应在页面中呈现控件，但将其显示为禁用状态（通常为灰显）。 如果禁用父控件，则该控件的子控件也会显示为禁用。 在这种情况下，子控件的 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 属性设置为 `false`，即使其 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> 属性可能设置为 `true`。

 在 ASP.NET 3.5 及更早版本中，当 `false`控件的 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> 属性时，ASP.NET 会在为控件呈现的 HTML 元素中将 `disabled` 特性设置为 "disabled"。 但是，HTML 4.01 标准仅允许对用于用户输入的某些元素使用 `disabled` 特性。 例如，允许 `input` 元素使用 `disabled` 属性，但不允许 `span` 元素使用。

 大多数浏览器支持具有 `disabled` 属性的仅显示元素的默认禁用外观。 但是，为了符合 HTML 标准，默认情况下，ASP.NET 4 忽略了无效的属性。

## <a name="how-the-supportsdisabledattribute-property-is-used"></a>如何使用 SupportsDisabledAttribute 属性
 如果 `true`<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 属性，则当控件被禁用时，ASP.NET 将呈现 `disabled` 特性。 如果 `false`此属性，则在禁用该控件时，ASP.NET 将呈现 `class` 属性。

 如果满足以下所有条件，派生类将重写此属性以返回 `false`：

-   控件呈现的 HTML 元素不支持 `disabled` 特性。

-   <xref:System.Web.UI.Control.RenderingCompatibility%2A> 属性表示低于4.0 的 ASP.NET 版本号。

 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 属性不一定指示为控件呈现的 HTML 元素是否支持（允许） `disabled` 特性。 如果控件的 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 属性指示 ASP.NET 的版本号低于4.0，则即使呈现的 HTML 不支持 `disabled` 特性，控件的 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 属性的值也可能返回 `true`。

## <a name="backward-compatibility-for-disabled-controls"></a>禁用控件的向后兼容性
 使用 Visual Studio 将 Web 项目从早期版本升级到 ASP.NET 4 时，Visual Studio 会自动在 web.config 文件中设置 `controlRenderingCompatibilityVersion` 特性（这会将 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 属性设置为较早的版本号）。 因为当 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 属性低于4.0 时，<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 属性始终返回 `true`，这将导致 Web 控件呈现已禁用控件在早期版本中的 HTML。 如果希望升级的网站使用 ASP.NET 4 中引入的算法呈现 HTML，则可以更改或删除 `controlRenderingCompatibilityVersion` 特性。 有关详细信息，请参阅 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 属性。

## <a name="setting-a-disabled-appearance-by-using-css"></a>使用 CSS 设置禁用的外观
 如果 `false` 控件的 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> 属性并且该控件处于禁用状态，则 ASP.NET 会将呈现的 HTML 元素的 `class` 特性设置为 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> 属性的值。 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> 属性的默认值为 "aspNetDisabled"。

 若要为禁用的控件提供禁用的外观，必须为由 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType> 属性的值表示的类定义 CSS 规则。

 如果为控件呈现的 HTML 元素在其 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> 属性中有一个值，则它的 `class` 属性中可能具有多个值。 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 属性。



## Examples
 下面的示例显示了已禁用 <xref:System.Web.UI.WebControls.Label> 控件的标记：

 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`

 在 ASP.NET 3.5 及更早版本中，此标记呈现以下 HTML：

 `<span id="Label1" disabled="disabled">Test</span>`

 在 ASP.NET 4 中，如果 <xref:System.Web.UI.Control.RenderingCompatibility%2A> 属性的值为4.0 或更高，且 <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> 属性设置为其默认值，则相同的标记将呈现以下 HTML：

 `<span id="Label1" class="aspNetDisabled">Test</span>`

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性的名称。</param>
        <summary>获取具有指定名称的 Web 控件的特性。</summary>
        <returns>属性的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A> 方法是显式接口成员实现。 仅当 <xref:System.Web.UI.WebControls.WebControl> 类的实例强制转换为 <xref:System.Web.UI.IAttributeAccessor> 接口时，才能使用此方法。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">特性的名称/值对的名称组件。</param>
        <param name="value">特性的名称/值对的值组件。</param>
        <summary>将 Web 控件的特性设置为指定的名称和值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A> 方法是显式接口成员实现。 仅当 <xref:System.Web.UI.WebControls.WebControl> 类的实例强制转换为 <xref:System.Web.UI.IAttributeAccessor> 接口时，才能使用此方法。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器控件的选项卡索引。</summary>
        <value>Web 服务器控件的选项卡索引。 默认值为 <see langword="0" />，指示未设置此属性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性可以指定或确定 web 窗体页上的 Web 服务器控件的选项卡索引。 按 `Tab` 键时，Web 服务器控件接收焦点的顺序取决于每个控件的 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性。 最初加载页面时，按下 `Tab` 键时获得焦点的第一项是地址栏。 接下来，Web 窗体页上的控件将根据每个控件的 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性的值以升序排列，从最小的非零值开始。 如果多个控件共享同一个选项卡索引，则这些控件将按其在 Web 窗体页上的声明顺序接收焦点。 最后，选项卡索引为零的控件按其声明顺序排列。

> [!NOTE]
>  只有具有非零选项卡索引的控件才会呈现 `tabindex` 特性。

 可以通过将 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性设置为负值来从选项卡顺序中删除 Web 服务器控件。

> [!NOTE]
>  只有 Internet Explorer 4 及更高版本支持此属性。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.WebControl> 的 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> 属性来设置页上控件的 tab 键顺序。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的选项卡索引不在 -32768 和 32767 之间。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取对应于此 Web 服务器控件的 <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 值。 此属性主要由控件开发人员使用。</summary>
        <value><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 枚举值之一。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.TagKey%2A> 属性可确定与此 Web 服务器控件关联的 <xref:System.Web.UI.HtmlTextWriterTag> 值。 此属性主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Web.UI.WebControls.WebControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取控件标记的名称。 此属性主要由控件开发人员使用。</summary>
        <value>控件标记的名称。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.TagName%2A> 属性可确定与此 Web 服务器控件关联的控件标记的名称。 此属性主要由控件开发人员使用。

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置当鼠标指针悬停在 Web 服务器控件上时显示的文本。</summary>
        <value>当鼠标指针悬停在 Web 服务器控件上时显示的文本。 默认为 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> 属性指定当鼠标指针悬停在 Web 服务器控件上时显示的自定义文本。

> [!NOTE]
>  此属性将为所有浏览器呈现。 但是，只有 Microsoft Internet Explorer 会将此属性显示为工具提示。 所有其他浏览器将忽略此属性。

 设置此属性后，可以使用设计器工具自动将此属性的值保存到资源文件中。 有关详细信息，请参阅 <xref:System.ComponentModel.LocalizableAttribute> 和[全球化和本地化](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。



## Examples
 下面的示例演示如何在 <xref:System.Web.UI.WebControls.Button> 控件上设置 <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> 属性，该控件继承自 <xref:System.Web.UI.WebControls.WebControl> 基类。

> [!NOTE]
>  下面的代码示例使用单文件代码模型，如果直接复制到代码隐藏文件中，则可能无法正常工作。 必须将此代码示例复制到扩展名为 .aspx 的空文本文件中。 有关 Web 窗体代码模型的详细信息，请参阅[ASP.NET Web 窗体页代码模型](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)。

 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webControl.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使控件跟踪其视图状态的更改，以便将这些更改存储在对象的 <see cref="P:System.Web.UI.Control.ViewState" /> 属性中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> 方法主要由控件开发人员使用。

 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> 标记开始跟踪并保存对控件的视图状态所做的更改的起始点。 当初始化服务器控件时，ASP.NET 将自动调用 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A> 方法。

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">控件状态与视图状态示例</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)">ASP.NET 状态管理概述</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET 页生命周期简介</related>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置 Web 服务器控件的宽度。</summary>
        <value>一个表示控件宽度的 <see cref="T:System.Web.UI.WebControls.Unit" />。 默认为 <see cref="F:System.Web.UI.WebControls.Unit.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 属性指定 Web 服务器控件的宽度。

> [!NOTE]
>  对于早于 Microsoft Internet Explorer 版本4的浏览器中的所有控件，此属性不会呈现。 不在早期浏览器中呈现此属性的控件包括 <xref:System.Web.UI.WebControls.Label>、<xref:System.Web.UI.WebControls.HyperLink>、<xref:System.Web.UI.WebControls.LinkButton>和任何验证控件。 如果 <xref:System.Web.UI.WebControls.CheckBoxList>，<xref:System.Web.UI.WebControls.RadioButtonList> 和 <xref:System.Web.UI.WebControls.DataList> 在早期浏览器中也不会呈现此属性，因为其 `RepeatLayout` 属性设置为 `RepeatLayout.Flow`。 此外，在早期的浏览器中仅支持 `Pixel` 和 `Percentage` 的单位类型。

 由于此属性是非标准 HTML，因此显示为表的 Web 服务器控件（如 <xref:System.Web.UI.WebControls.Table> 和 <xref:System.Web.UI.WebControls.DataGrid>）在早于 Microsoft Internet Explorer 版本4的浏览器中不支持此属性。

> [!NOTE]
>  若要以声明方式将 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 属性设置为默认值 `Pixel`以外的单位类型，必须创建特定于所需单位类型的新单位类型。 例如，若要将控件的 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 属性设置为百分比值100，则可以执行以下操作：
>
>  `myWebControl.width = Unit.Percentage(100);`
>
>  有关可用于 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 属性的单位类型的详细信息，请参阅 <xref:System.Web.UI.WebControls.Unit> 类。



## Examples
 下面的示例演示如何以声明方式设置 <xref:System.Web.UI.WebControls.Table> 控件的 <xref:System.Web.UI.WebControls.WebControl.Width%2A> 属性，该属性从 <xref:System.Web.UI.WebControls.WebControl> 基类继承。

 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Web 服务器控件的宽度设置为负值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)">ASP.NET 服务器控件和浏览器功能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">开发自定义 ASP.NET 服务器控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
