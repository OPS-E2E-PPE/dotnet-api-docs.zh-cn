<Type Name="CompareValidator" FullName="System.Web.UI.WebControls.CompareValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="274e4d70964b9a1ee127c545331c76e64c0c95d8" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77107273" /></Metadata><TypeSignature Language="C#" Value="public class CompareValidator : System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CompareValidator extends System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CompareValidator&#xA;Inherits BaseCompareValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompareValidator : System::Web::UI::WebControls::BaseCompareValidator" />
  <TypeSignature Language="F#" Value="type CompareValidator = class&#xA;    inherit BaseCompareValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseCompareValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat="server" ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CompareValidator runat=server ErrorMessage="CompareValidator"&gt;&lt;/{0}:CompareValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>将用户在输入控件中输入的值与在另一个输入控件中输入的值或与常量值进行比较。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.CompareValidator> 控件将用户在输入控件中输入的值（如 <xref:System.Web.UI.WebControls.TextBox> 控件）与在另一个输入控件中输入的值或常量值进行比较。 如果输入控件的值与 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>、<xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>和/或 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性指定的条件相匹配，则 <xref:System.Web.UI.WebControls.CompareValidator> 控件将通过验证。

 你还可以使用 <xref:System.Web.UI.WebControls.CompareValidator> 控件来指示输入控件中输入的值是否可以转换为 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 属性指定的数据类型。

 通过设置 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 属性来指定要验证的输入控件。 如果要将特定输入控件与其他输入控件进行比较，请设置 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性以指定要比较的控件。

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性指定的输入控件中输入的值无法转换为 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 属性指定的数据类型，但可以转换 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> 属性指定的输入控件中输入的值，则被验证的输入控件将被视为有效。 因此，还应将 <xref:System.Web.UI.WebControls.CompareValidator> 或 <xref:System.Web.UI.WebControls.RangeValidator> 控件放置在 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性指定的输入控件上。

 可以将输入控件的值与常量值进行比较，而不是将输入控件的值与其他输入控件进行比较。 通过设置 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 属性来指定要比较的常量值。

> [!NOTE]
>  如果 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 属性指定的值无法转换为 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 属性指定的数据类型，则会引发异常。 在以编程方式将值分配给 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 属性之前，请务必检查值的数据类型。

> [!NOTE]
>  不要同时设置 "<xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>" 和 "<xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>" 属性。 可以将输入控件的值与其他输入控件或常量值进行比较。 如果同时设置了这两个属性，则 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性将优先。

 使用 "<xref:System.Web.UI.WebControls.CompareValidator.Operator%2A>" 属性可以指定要执行的比较的类型，例如 "大于"、"等于" 等等。 如果将 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 属性设置为 `ValidationCompareOperator.DataTypeCheck`，则 <xref:System.Web.UI.WebControls.CompareValidator> 控件将忽略 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 和 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 属性，只需指示输入控件中输入的值是否可以转换为 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 属性指定的数据类型。

 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 属性用于指定两个比较值的数据类型。 执行比较操作之前，这两个值都将自动转换为此数据类型。

> [!IMPORTANT]
>  如果将 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> 属性设置为 <xref:System.Web.UI.WebControls.ValidationDataType.Date> 并且当前日历类型为非公历，则验证程序将仅执行服务器端验证。 验证程序客户端脚本仅支持公历日历。

 下表列出了可以比较的各种数据类型。

|数据类型|说明|
|---------------|-----------------|
|`String`|字符串数据类型。|
|`Integer`|32 位有符号整数数据类型。|
|`Double`|双精度浮点数字数据类型。|
|`Date`|日期数据类型。|
|`Currency`|Decimal 数据类型。 它不能包含货币符号。|

> [!NOTE]
>  如果输入控件为空，则不会调用任何验证函数，验证将成功。 使用 <xref:System.Web.UI.WebControls.RequiredFieldValidator> 控件要求用户在输入控件中输入数据。

> [!NOTE]
>  当你在 <xref:System.Web.UI.UpdatePanel> 控件内使用 <xref:System.Web.UI.WebControls.CompareValidator> 控件时，请确保验证程序控件及其关联的控件位于同一面板中。 有关将 <xref:System.Web.UI.UpdatePanel> 控件用于部分页面更新的详细信息，请参阅[部分页面呈现概述](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100))。

 有关验证控件的详细信息，请参阅 <xref:System.Web.UI.WebControls.BaseValidator>。

## <a name="accessibility"></a>可访问性
 有关如何配置此控件以生成符合辅助功能标准的标记的信息，请参阅[Visual Studio 中的辅助功能和 ASP.NET](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)和[ASP.NET 控件和辅助功能](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.CompareValidator> 控件来比较两个 <xref:System.Web.UI.WebControls.TextBox> 控件中的值。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.TextBox" />
    <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
    <altmember cref="P:System.Web.UI.WebControls.CompareValidator.Operator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.CompareValidator" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 无参数构造函数将所有字段初始化为其默认值。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseCompareValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="compareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">包含用于在客户端上进行呈现的输出流的 <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>将此控件的属性添加到输出流中，以便在客户端上呈现。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何重写自定义服务器控件中的 <xref:System.Web.UI.WebControls.CompareValidator.AddAttributesToRender%2A> 方法，以便 <xref:System.Web.UI.WebControls.CompareValidator> 错误消息始终显示为粗体。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorendervb.aspx#1)]
[!code-csharp[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/CS/custom_comparevalidator_addattributestorender.cs#2)]
[!code-vb[CustomCompareValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorAddAttributesToRender/VB/custom_comparevalidator_addattributestorender.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberSignature Language="F#" Value="override this.ControlPropertiesValid : unit -&gt; bool" Usage="compareValidator.ControlPropertiesValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>检查有效值的控件属性。</summary>
        <returns>如果控件属性有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何重写自定义服务器控件中的 <xref:System.Web.UI.WebControls.CompareValidator.ControlPropertiesValid%2A> 方法，以便它始终返回 visible 属性的值，前提是 <xref:System.Web.UI.WebControls.CompareValidator> 控件的 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性在页面上并且包含验证属性。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalidvb.aspx#1)]
[!code-csharp[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/CS/custom_comparevalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCompareValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorControlPropertiesValid/VB/custom_comparevalidator_controlpropertiesvalid.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" /> 和 <see cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" /> 具有相同的 <see cref="P:System.Web.UI.Control.ID" />。

-或-

目标属性的值无法转换为预期的 <see cref="T:System.Type" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ControlToCompare">
      <MemberSignature Language="C#" Value="public string ControlToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.ValidatedControlConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置将与正在被验证的输入控件进行比较的输入控件。</summary>
        <value>将与正在被验证的输入控件进行比较的输入控件。 默认值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性指定输入控件（如 <xref:System.Web.UI.WebControls.TextBox> 控件），以便与要验证的输入控件进行比较。 如果此属性指定的输入控件不是页面上的控件，则会引发异常。

> [!NOTE]
>  不要同时设置 "<xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>" 和 "<xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>" 属性。 可以将输入控件的值与其他输入控件或常量值进行比较。 如果同时设置了这两个属性，则 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性将优先。

 有关详细信息，请参阅 <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A?displayProperty=nameWithType>。

> [!IMPORTANT]
>  如果要比较的控件是隐藏的，或者位于不可见的容器（如 <xref:System.Web.UI.WebControls.Panel> 控件）内，则验证程序只执行服务器端验证。 验证程序客户端脚本仅支持可见控件。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性指定要与要验证的控件进行比较的控件。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.ControlToValidate" />
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
        <altmember cref="T:System.Web.UI.WebControls.TextBox" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberSignature Language="F#" Value="override this.EvaluateIsValid : unit -&gt; bool" Usage="compareValidator.EvaluateIsValid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>当在派生类中重写时，此方法包含代码，以确定输入控件中的值是否有效。</summary>
        <returns>如果输入控件中的值有效，则为 <see langword="true" />；否则为 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 下面的代码示例演示如何重写自定义服务器控件中的 <xref:System.Web.UI.WebControls.CompareValidator.EvaluateIsValid%2A> 方法，以便在两个指定控件的值相同且 `false` 的情况下始终返回 `true`。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCompareValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalidvb.aspx#1)]
[!code-csharp[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/CS/custom_comparevalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCompareValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCompareValidatorEvaluateIsValid/VB/custom_comparevalidator_evaluateisvalid.vb#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operator">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationCompareOperator Operator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationCompareOperator Operator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberSignature Language="VB.NET" Value="Public Property Operator As ValidationCompareOperator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationCompareOperator Operator { System::Web::UI::WebControls::ValidationCompareOperator get(); void set(System::Web::UI::WebControls::ValidationCompareOperator value); };" />
      <MemberSignature Language="F#" Value="member this.Operator : System.Web.UI.WebControls.ValidationCompareOperator with get, set" Usage="System.Web.UI.WebControls.CompareValidator.Operator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationCompareOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置要执行的比较操作。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 值之一。 默认值是 <see langword="Equal" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 属性指定要执行的比较操作。 下表列出了可能的比较运算。

|Operation|说明|
|---------------|-----------------|
|`Equal`|要验证的输入控件的值与另一个控件的值是否相等，或是否为常数值。|
|`NotEqual`|要验证的输入控件的值与另一个控件或常量值之间的不相等比较。|
|`GreaterThan`|要验证的输入控件的值与另一个控件的值或常量值之间的比较。|
|`GreaterThanEqual`|要验证的输入控件的值与另一个控件或常量值之间的大于或等于。|
|`LessThan`|要验证的输入控件的值与另一个控件或常量值之间的小于的比较。|
|`LessThanEqual`|要验证的输入控件的值与另一个控件或常量值之间的小于或等于的比较。|
|`DataTypeCheck`|要验证的输入控件中输入的值与 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 属性指定的数据类型之间的数据类型比较。 如果无法将值转换为指定的数据类型，则验证失败。 **注意：** 使用此运算符时，将忽略 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 和 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 属性。|

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> 属性指定比较运算。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的比较运算符不是 <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" /> 值之一。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
      </Docs>
    </Member>
    <Member MemberName="ValueToCompare">
      <MemberSignature Language="C#" Value="public string ValueToCompare { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueToCompare" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueToCompare As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueToCompare { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValueToCompare : string with get, set" Usage="System.Web.UI.WebControls.CompareValidator.ValueToCompare" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个常量值，用于与用户在正被验证的输入控件中输入的值进行比较。</summary>
        <value>用于与用户在正被验证的输入控件中输入的值进行比较的常量值。 默认值是 <see cref="F:System.String.Empty" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 属性可指定一个常数值，以便与用户在要验证的输入控件中输入的值进行比较。 如果此属性指定的常数值未能转换为 <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A?displayProperty=nameWithType> 属性指定的数据类型，则会引发异常。

> [!NOTE]
>  不要同时设置 "<xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A>" 和 "<xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A>" 属性。 可以将输入控件的值与其他输入控件或常量值进行比较。 如果同时设置了这两个属性，则 <xref:System.Web.UI.WebControls.CompareValidator.ControlToCompare%2A> 属性将优先。

 无法通过主题或样式表主题设置此属性。 有关详细信息，请参阅 <xref:System.Web.UI.ThemeableAttribute> 和[ASP.NET 主题和外观](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。



## Examples
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.CompareValidator.ValueToCompare%2A> 属性将用户在 <xref:System.Web.UI.WebControls.TextBox> 控件中输入的值与常数值进行比较。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator.ValueToCompare Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator.ValueToCompare Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.CompareValidator.ControlToCompare" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.IsValid" />
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
  </Members>
</Type>
