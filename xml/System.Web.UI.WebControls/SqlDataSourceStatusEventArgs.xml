<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1af87477a9bcbe6b4263b9cb9a56f69113070711" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78761740" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件在数据操作完成后引发的事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 类用于 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>和 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 事件，以便在数据源控件执行数据库操作后传递有关该数据库操作的信息。 此信息包括操作影响的行数、用于执行操作的数据源的 <xref:System.Data.Common.DbCommand> 对象以及生成的任何异常信息。 通过添加事件处理程序委托来处理 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted> 或 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 事件，你可以检查此数据，并执行所需的任何其他 post 处理。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> 控件公开了许多事件，您可以处理这些事件，以便在数据操作过程中使用基础数据对象。 下表列出了事件和关联的 <xref:System.EventArgs> 和事件处理程序类，以更好地指导您使用 <xref:System.Web.UI.WebControls.SqlDataSource> 控件来更好地指导与数据操作的生命周期相对应的各种事件。  
  
|事件|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> 会在检索数据之前发生。|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|在执行插入、更新或删除操作之前，<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>、<xref:System.Web.UI.WebControls.SqlDataSource.Updating><xref:System.Web.UI.WebControls.SqlDataSource.Deleting> 出现。|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 在数据检索、插入、更新或删除操作完成后发生。|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 下面的代码示例演示如何使用 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 类检查在将 <xref:System.Web.UI.WebControls.SqlDataSource> 控件与存储过程一起使用以填充 <xref:System.Web.UI.WebControls.GridView> 控件时返回的输出参数的返回值和值。 该存储过程选择 <xref:System.Web.UI.WebControls.GridView>中显示的数据，但也将其他信息传递回调用方，如整数输出参数和返回值。 <xref:System.Web.UI.WebControls.SqlDataSource> 用于存储过程的参数包含在 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合中，它包含将信息从 Web 窗体传递到存储过程的参数，以及将信息传递回窗体的参数。 这些参数的 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 属性设置为 <xref:System.Data.ParameterDirection.Output> 并 <xref:System.Data.ParameterDirection.ReturnValue>。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand, affectedRows As Integer, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs : System.Data.Common.DbCommand * int * Exception -&gt; System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceStatusEventArgs (command, affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">表示通过 <see cref="T:System.Data.Common.DbCommand" /> 控件提交到数据库的数据库查询、命令或存储过程的 <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</param>
        <param name="affectedRows">受此数据库操作影响的行数（如果可用）。</param>
        <param name="exception">此数据库操作引发的 <see cref="T:System.Exception" />（如果可用）。</param>
        <summary>使用指定的输出参数、返回值和此数据库操作影响的行数初始化 <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> 类的新实例。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取受数据库操作影响的行数。</summary>
        <value>受数据库操作影响的行数。 默认值为 -1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有操作都返回受该操作影响的行数。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A> 属性与 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>和 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 方法的返回值具有相同的值。  
  
 当调用 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 方法并且数据源设置为 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> 模式时，在所有情况下，返回值均为0。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取提交到数据库的数据库命令。</summary>
        <value><see cref="T:System.Data.Common.DbCommand" /> 对象，它表示提交到数据库的数据库命令。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以处理 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>或 <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> 事件，以便在 <xref:System.Data.Common.DbCommand> 控件将 <xref:System.Web.UI.WebControls.SqlDataSource> 控件提交到数据库后检查和操作这些属性。 通过 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A> 属性，您可以在执行数据库操作后通过其 <xref:System.Data.Common.DbCommand.Parameters%2A> 属性访问任何输出参数中的返回值和值，还可以访问 <xref:System.Data.Common.DbCommand.CommandText%2A> 属性，该属性表示已提交到数据库中的 SQL 查询、命令或存储过程名称。  
  
 任何输出参数都是特定于参数的参数，这些参数具有 <xref:System.Web.UI.WebControls.Parameter> 对象的 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> 属性的 <xref:System.Data.ParameterDirection.InputOutput> 或 <xref:System.Data.ParameterDirection.Output> 值。 返回值来自具有 <xref:System.Data.ParameterDirection.ReturnValue> 值的参数。  
  
   
  
## Examples  
 下面的代码示例演示了在使用带有存储过程的 <xref:System.Web.UI.WebControls.SqlDataSource> 控件时，如何检查 output 参数的值。 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> 集合包含 <xref:System.Web.UI.WebControls.SqlDataSource> 用于存储过程的参数，包含将信息从 Web 窗体传递到存储过程的参数，以及将信息传递回窗体的参数。 此代码示例是为 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> 类提供的更大示例的一部分。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>为数据库在数据操作期间引发的任何异常获取包装。</summary>
        <value>一个 <see cref="T:System.Exception" />，它将数据库引发的任何异常都包装在其 <see cref="P:System.Exception.InnerException" /> 属性中。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> 属性不表示数据库操作引发的实际异常。 您可以使用 <xref:System.Exception.InnerException%2A> 属性访问引发的异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否已处理数据库引发的异常。</summary>
        <value>如果数据库引发的异常已被处理并且不应由 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> 控件引发，则为 <see langword="true" />；否则为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果数据库引发了异常，则 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> 属性设置为 `false`，并且该异常由 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A> 属性包装。 如果使用 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>，则可以检查 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> 属性并处理异常。 如果处理异常，请将 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A> 属性设置为 `true` 或 <xref:System.Web.UI.WebControls.SqlDataSource> 控件将引发异常。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>
