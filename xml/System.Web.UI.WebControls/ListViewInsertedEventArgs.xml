<Type Name="ListViewInsertedEventArgs" FullName="System.Web.UI.WebControls.ListViewInsertedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e560b989dcc8b5f41b543c685dc636c08cf4793a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78732590" /></Metadata><TypeSignature Language="C#" Value="public class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ListViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>为 <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> 事件提供数据。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 当单击 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板中的 "插入" 按钮时，以及在 <xref:System.Web.UI.WebControls.ListView> 控件更新数据源中的记录后，<xref:System.Web.UI.WebControls.ListView> 控件将引发 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件。 （"插入" 按钮是一个按钮，其 `CommandName` 属性设置为 "插入"。）利用 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件，您可以执行自定义操作，例如从数据库中检索已插入项的自动生成的值。

 将 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 对象传递到事件处理方法，这使您能够确定插入的项数和可能发生的任何异常。 若要确定受插入操作影响的项的数目，请使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 属性。 使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> 属性来确定是否发生了异常。 还可以通过设置 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 属性，指示是否已在事件处理方法中处理异常。 如果必须访问已发送到数据源的插入项的字段值，请使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 属性。

 默认情况下，<xref:System.Web.UI.WebControls.ListView> 控件在插入操作之后清除 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板，这样用户便可以为要插入的新项添加值。 如果在插入操作过程中发生异常，则可以通过将 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 属性设置为 `true`，将 <xref:System.Web.UI.WebControls.ListView> 控件保持在插入模式下。 这会将 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板重新绑定到前一次尝试插入项的值。

 有关 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类的实例的初始属性值列表，请参见 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A> 构造函数。



## Examples
 下面的示例演示如何使用传递到 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件处理程序的 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 对象。

> [!IMPORTANT]
>  此示例具有一个接受用户输入的文本框，这是一个潜在的安全威胁。 默认情况下，ASP.NET 网页验证用户输入是否不包含脚本或 HTML 元素。 有关详细信息，请参阅[脚本侵入概述](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))。

 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">技术概述： ListView 控件</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewInsertedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewInsertedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.ListViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.ListViewInsertedEventArgs (affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">受插入操作影响的行数。</param>
        <param name="exception">执行插入操作时引发的异常（如果有）。 如果未引发异常，则将 <see langword="null" /> 用于此参数。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> 类的新实例。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用此构造函数初始化 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类的新实例。

> [!NOTE]
>  此构造函数主要由控件开发人员在引发事件时使用。

 下表显示 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类的实例的初始属性值。

|Property|初始值|
|--------------|-------------------|
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>|`affectedRows` 参数的值。|
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>|`e` 参数中包含的 <xref:System.Exception?displayProperty=nameWithType> 对象。|
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>|初始化为 `false`。|
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>|初始化为 `false`。|

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">技术概述： ListView 控件</related>
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取受插入操作影响的行数。</summary>
        <value>受插入操作影响的行数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> 属性来确定受插入操作影响的记录数（由数据源控件返回）。 此属性通常用于以下情况：

-   验证是否只插入了一条记录。 有时错误写入的 insert 语句可能会插入多个记录。

-   如果在插入操作过程中出现错误，但未引发异常，则验证是否未插入记录。

-   若要验证在支持冲突检测的数据源控件（乐观并发）的数据源控件将其 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 属性设置为 `ConflictOptions.CompareAllValues` 枚举值时是否插入了记录。 支持此属性的控件包括 <xref:System.Web.UI.WebControls.SqlDataSource> 和 <xref:System.Web.UI.WebControls.ObjectDataSource> 控件。 当属性具有此值时，如果记录的键值与其他用户插入的记录的键值相同，则可能不会插入记录。



## Examples
 下面的示例演示如何使用传递到 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件处理程序的 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 对象来确定插入操作期间是否引发了异常。 此代码示例是为 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类提供的更大示例的一部分。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">技术概述： ListView 控件</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取插入操作过程中引发的异常（如果引发）。</summary>
        <value>在插入操作过程中引发的异常，如果未引发异常，则为 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 如果引发了异常，并且在事件处理程序中处理了异常，请将 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 属性设置为 `true`。 否则，<xref:System.Web.UI.WebControls.ListView> 控件会重新引发异常。



## Examples
 下面的示例演示如何使用传递到 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件处理程序的 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 对象来确定插入操作期间是否引发了异常。 此代码示例是为 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类提供的更大示例的一部分。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">技术概述： ListView 控件</related>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示在插入操作过程中所引发的异常是否已在事件处理程序中得到处理。</summary>
        <value>如果异常已在事件处理程序中得到处理，则为 <see langword="true" />；否则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 在插入操作过程中引发异常时，请使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> 属性指示是否已在事件处理程序中处理异常。 如果将此属性设置为 "`true`"，则会将异常视为已处理并且不会重新引发。 如果将此属性设置为 `false`，<xref:System.Web.UI.WebControls.ListView> 控件将重新引发异常。 若要确定引发的异常，请使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> 属性。



## Examples
 下面的示例演示如何使用传递到 <xref:System.Web.UI.WebControls.ListView.ItemInserted> 事件处理程序的 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 对象来确定插入操作期间是否引发了异常。 此代码示例是为 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类提供的更大示例的一部分。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">技术概述： ListView 控件</related>
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取或设置一个值，该值指示是否为 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> 模板内的控件保留用户输入值。</summary>
        <value>如果为 <see langword="true" /> 模板内的控件保留用户输入值，则为 <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />；如果用该控件的默认值替代用户输入值，则为 <see langword="false" />。 默认值为 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 默认情况下，<xref:System.Web.UI.WebControls.ListView> 控件在插入操作后将控件的值从 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板重置为其默认值。 这样，用户便可以为要插入的新项添加值。 如果在插入操作过程中引发了异常，则可以通过将 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 属性设置为 `true`，将 <xref:System.Web.UI.WebControls.ListView> 控件保持在插入模式下。 这会保留前一次尝试为 <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> 模板中的控件插入项的值。



## Examples
 下面的示例演示如何使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> 属性来保留用户在插入操作过程中发生错误时输入的值。 此代码示例是为 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> 类提供的更大示例的一部分。

 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">技术概述： ListView 控件</related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取插入记录的字段名称/值对。</summary>
        <value>插入记录的字段名称/值对。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 使用 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 属性访问插入记录的字段值。 例如，您可以使用这些值来保存插入记录的日志。

 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> 属性返回实现 <xref:System.Collections.Specialized.IOrderedDictionary> 接口的 <xref:System.Collections.Specialized.OrderedDictionary> 对象。 <xref:System.Collections.Specialized.OrderedDictionary> 对象包含 <xref:System.Collections.DictionaryEntry> 对象，这些对象表示插入记录的字段。 若要访问字段名称，请使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=nameWithType> 属性。 同样，可以使用 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=nameWithType> 属性访问字段值。

> [!NOTE]
>  作为快捷方式，还可以使用 <xref:System.Collections.Specialized.OrderedDictionary> 对象的索引器直接访问字段值。 使用索引器的优点是它直接返回字段值。 依赖于字段顺序的数据源控件（如 <xref:System.Web.UI.WebControls.AccessDataSource>）只能通过索引访问字段值。

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398790(v=vs.100)">技术概述： ListView 控件</related>
      </Docs>
    </Member>
  </Members>
</Type>
