<Type Name="InkCanvas" FullName="System.Windows.Controls.InkCanvas">
  <Metadata><Meta Name="ms.openlocfilehash" Value="700471e6256bd1dfdd8e5ee052345d9f4bf24cb4" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75175321" /></Metadata><TypeSignature Language="C#" Value="public class InkCanvas : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi InkCanvas extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.InkCanvas" />
  <TypeSignature Language="VB.NET" Value="Public Class InkCanvas&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class InkCanvas : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type InkCanvas = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Children")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3ca10-101">定义接收和显示墨迹笔划的区域。</span><span class="sxs-lookup"><span data-stu-id="3ca10-101">Defines an area that receives and displays ink strokes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-102"><xref:System.Windows.Controls.InkCanvas> 是可用于接收和显示墨迹输入的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-102">An <xref:System.Windows.Controls.InkCanvas> is an element that can be used to receive and display ink input.</span></span> <span data-ttu-id="3ca10-103">这通常是通过使用触笔来完成的，它与数字化仪交互，使用触笔或鼠标生成墨迹笔划。</span><span class="sxs-lookup"><span data-stu-id="3ca10-103">This is commonly done through the use of a stylus, which interacts with a digitizer to produce ink strokes using a stylus or a mouse.</span></span> <span data-ttu-id="3ca10-104">创建的笔划表示为 <xref:System.Windows.Ink.Stroke> 对象，可以通过编程方式或根据用户输入进行操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-104">The created strokes are represented as <xref:System.Windows.Ink.Stroke> objects, and can be manipulated either programmatically or based on user input.</span></span> <span data-ttu-id="3ca10-105"><xref:System.Windows.Controls.InkCanvas> 使用户能够修改或删除现有 <xref:System.Windows.Ink.Stroke>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-105">The <xref:System.Windows.Controls.InkCanvas> enables users to modify or delete an existing <xref:System.Windows.Ink.Stroke>.</span></span>  
  
 <span data-ttu-id="3ca10-106"><xref:System.Windows.Controls.InkCanvas> 可以绑定到数据源。</span><span class="sxs-lookup"><span data-stu-id="3ca10-106">The <xref:System.Windows.Controls.InkCanvas> can be bound to a data source.</span></span> <span data-ttu-id="3ca10-107">例如，可以将 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 属性绑定到：以墨迹序列化格式（ISF）包含墨迹数据的以64编码的编码字符串;甚至是另一个 <xref:System.Windows.Controls.InkCanvas>的 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-107">For example, you can bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property to: a base-64, encoded string that contains ink data in Ink Serialized format (ISF); or even to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of another <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-108">您还可以将属性（例如 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> 和 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>）绑定到其他数据源。</span><span class="sxs-lookup"><span data-stu-id="3ca10-108">You can also bind properties, such as <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> and <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, to other data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-109">下面的示例演示如何在同一 <xref:System.Windows.Controls.InkCanvas>上模拟笔和荧光笔的使用情况。</span><span class="sxs-lookup"><span data-stu-id="3ca10-109">The following example demonstrates how to simulate the use of both a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-110">该示例假设标记语言（XAML）文件中的根元素是名为 `root`的 <xref:System.Windows.Controls.DockPanel>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-110">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="3ca10-111">它还假定存在一个名为 `switchHighlighter` <xref:System.Windows.Controls.Button>，同时 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 和 <xref:System.Windows.FrameworkElement.Loaded> 事件都连接到该示例的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-111">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that both the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> and <xref:System.Windows.FrameworkElement.Loaded> events are connected to the example's event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="3ca10-112">下面的示例在 XAML 中声明了两个 <xref:System.Windows.Controls.InkCanvas> 对象，并在这些对象和其他数据源之间建立了数据绑定。</span><span class="sxs-lookup"><span data-stu-id="3ca10-112">The following example declares two <xref:System.Windows.Controls.InkCanvas> objects in XAML and establishes data binding between them and other data sources.</span></span> <span data-ttu-id="3ca10-113">名为 `ic`的第一个 <xref:System.Windows.Controls.InkCanvas>绑定到两个数据源。</span><span class="sxs-lookup"><span data-stu-id="3ca10-113">The first <xref:System.Windows.Controls.InkCanvas>, called `ic`, is bound to two data sources.</span></span> <span data-ttu-id="3ca10-114">`ic` 上的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 和 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> 属性绑定到 <xref:System.Windows.Controls.ListBox> 对象，这些对象依次绑定到在 XAML 中定义的数组。</span><span class="sxs-lookup"><span data-stu-id="3ca10-114">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> and <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> properties on `ic` are bound to <xref:System.Windows.Controls.ListBox> objects, which are, in turn, bound to arrays defined in the XAML.</span></span> <span data-ttu-id="3ca10-115">第二个 <xref:System.Windows.Controls.InkCanvas> 的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>、<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>和 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 属性绑定到下面代码中的第一个 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-115">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A>, and <xref:System.Windows.Controls.InkCanvas.Strokes%2A> properties of the second <xref:System.Windows.Controls.InkCanvas> are bound to the first <xref:System.Windows.Controls.InkCanvas> in the following code.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window1.xaml#1)]   
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771466(v=vs.90)"><span data-ttu-id="3ca10-116">WPF 控件库示例</span><span class="sxs-lookup"><span data-stu-id="3ca10-116">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InkCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InkCanvas();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-117">初始化 InkCanvas 类的一个新实例。</span><span class="sxs-lookup"><span data-stu-id="3ca10-117">Initializes a new instance of the InkCanvas class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode ActiveEditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveEditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode ActiveEditingMode { System::Windows::Controls::InkCanvasEditingMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveEditingMode : System.Windows.Controls.InkCanvasEditingMode" Usage="System.Windows.Controls.InkCanvas.ActiveEditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-118">获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-118">Gets the current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-119"><see cref="T:System.Windows.Controls.InkCanvas" /> 的当前编辑模式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-119">The current editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-120"><xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> 属性指示 <xref:System.Windows.Controls.InkCanvas>的当前 <xref:System.Windows.Controls.InkCanvasEditingMode>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-120">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property indicates the current <xref:System.Windows.Controls.InkCanvasEditingMode> of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="3ca10-121">假设将 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> 并将 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-121">Suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  <span data-ttu-id="3ca10-122">当在反向位置使用 tablet 笔时，<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> 的值为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-122">When the tablet pen is used in an inverted position, <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> has a value of <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="3ca10-123">否则，将 <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>其值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-123">Otherwise, its value is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span>  
  
<a name="dependencyPropertyInfo_ActiveEditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-124">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-124">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-125">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-125">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty>|  
|<span data-ttu-id="3ca10-126">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-126">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-127">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-127">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-128">下面的示例在每次更改时报告 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-128">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler ActiveEditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler ActiveEditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveEditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ ActiveEditingModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ActiveEditingModeChanged : System.Windows.RoutedEventHandler " Usage="member this.ActiveEditingModeChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-129">在当前编辑模式改变时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-129">Occurs when the current editing mode changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-130">只要 <xref:System.Windows.Controls.InkCanvas> 进入新的编辑模式，<xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> 属性就会发生更改。</span><span class="sxs-lookup"><span data-stu-id="3ca10-130">The <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes whenever the <xref:System.Windows.Controls.InkCanvas> enters a new editing mode.</span></span> <span data-ttu-id="3ca10-131">例如，假设将 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> 并且 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-131">For example, suppose that the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> and the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span> <span data-ttu-id="3ca10-132">当用户更改 tablet 笔的提示时，将发生 <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-132">When the user changes the tip of tablet pen, the <xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged> event occurs.</span></span>  
  
<a name="routedEventInfo_ActiveEditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3ca10-133">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-133">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-134">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-134">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent>|  
|<span data-ttu-id="3ca10-135">路由策略</span><span class="sxs-lookup"><span data-stu-id="3ca10-135">Routing strategy</span></span>|<span data-ttu-id="3ca10-136">冒泡</span><span class="sxs-lookup"><span data-stu-id="3ca10-136">Bubbling</span></span>|  
|<span data-ttu-id="3ca10-137">委托</span><span class="sxs-lookup"><span data-stu-id="3ca10-137">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-138">下面的示例在每次更改时报告 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> 的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-138">The following example reports the value of <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> whenever it changes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#36](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#36)]
 [!code-vb[InkCanvasSamples#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#36)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ActiveEditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ActiveEditingModeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActiveEditingModeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.ActiveEditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-139">标识 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-139">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveEditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActiveEditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActiveEditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActiveEditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActiveEditingModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActiveEditingModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.ActiveEditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-140">标识 <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-140">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.ActiveEditingMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="inkCanvas.ArrangeOverride arrangeSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize"><span data-ttu-id="3ca10-141">父级中应使用此元素排列自身及其子元素的最终区域。</span><span class="sxs-lookup"><span data-stu-id="3ca10-141">The final area within the parent that this element should use to arrange itself and its children.</span></span></param>
        <summary><span data-ttu-id="3ca10-142">定位子元素，并确定 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象的大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-142">Positions child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</span></span></summary>
        <returns><span data-ttu-id="3ca10-143">使用的实际大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-143">The actual size used.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush Background" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Background" />
      <MemberSignature Language="VB.NET" Value="Public Property Background As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ Background { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Background : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.InkCanvas.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-144">获取或设置一个 <see cref="T:System.Windows.Media.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-144">Gets or sets a <see cref="T:System.Windows.Media.Brush" />.</span></span> <span data-ttu-id="3ca10-145">画笔用于填充 <see cref="T:System.Windows.Controls.InkCanvas" /> 周围的边框区域。</span><span class="sxs-lookup"><span data-stu-id="3ca10-145">The brush is used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-146">一个用于填充 <see cref="T:System.Windows.Media.Brush" /> 周围的边框区域的 <see cref="T:System.Windows.Controls.InkCanvas" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-146">A <see cref="T:System.Windows.Media.Brush" /> used to fill the border area surrounding a <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Background"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-147">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-148">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-148">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BackgroundProperty>|  
|<span data-ttu-id="3ca10-149">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-150"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>， <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span><span class="sxs-lookup"><span data-stu-id="3ca10-150"><xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.SubPropertiesDoNotAffectRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-151">下面的示例演示如何设置 <xref:System.Windows.Controls.InkCanvas>上的 <xref:System.Windows.Controls.InkCanvas.Background%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-151">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.Background%2A> property on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#37](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#37)]
 [!code-vb[InkCanvasSamples#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.BackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-152">标识 <see cref="P:System.Windows.Controls.InkCanvas.Background" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-152">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Background" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="ILAsm" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Bottom" />
      <MemberSignature Language="VB.NET" Value="see GetBottom, and SetBottom" />
      <MemberSignature Language="F#" Value="see GetBottom, and SetBottom" Usage="see GetBottom, and SetBottom" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ca10-153">获取或设置某元素的下边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的下边缘之间的距离。</span><span class="sxs-lookup"><span data-stu-id="3ca10-153">Gets or sets the distance between the bottom of an element and the bottom of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Bottom"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-154">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-154">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-155">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-155">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.BottomProperty>|  
|<span data-ttu-id="3ca10-156">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-156">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-157">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-157">None</span></span>|  
  
<a name="xamlAttributeUsage_Bottom"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3ca10-158">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-158">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Bottom="double"/>  
- or -  
<object InkCanvas.Bottom="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Bottom"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3ca10-159">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3ca10-159">XAML Values</span></span>  
 <span data-ttu-id="3ca10-160">*双精度*</span><span class="sxs-lookup"><span data-stu-id="3ca10-160">*double*</span></span>  
 <span data-ttu-id="3ca10-161"><xref:System.Double> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-161">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3ca10-162">这被解释为 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 度量。</span><span class="sxs-lookup"><span data-stu-id="3ca10-162">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3ca10-163">字符串不需要显式包含小数点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-163">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3ca10-164">例如，`1` 的值是可接受的。</span><span class="sxs-lookup"><span data-stu-id="3ca10-164">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3ca10-165">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3ca10-165">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3ca10-166">如上所述的*双精度*值，后跟以下单元声明字符串之一： `px`、`in`、`cm``pt`。</span><span class="sxs-lookup"><span data-stu-id="3ca10-166">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3ca10-167">`px` （默认值）为 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3ca10-167">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3ca10-168">`in` 为英寸;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="3ca10-168">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3ca10-169">`cm` 是厘米;1cm = = （96/2.54） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-169">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3ca10-170">`pt` 为点;1pt = = （96/72） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-170">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-171">下面的示例演示如何设置 <xref:System.Windows.Controls.InkCanvas>上的 <xref:System.Windows.Controls.Label> 的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-171">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BottomProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BottomProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BottomProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BottomProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BottomProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.BottomProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-172">标识 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-172">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanPaste">
      <MemberSignature Language="C#" Value="public bool CanPaste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanPaste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CanPaste" />
      <MemberSignature Language="VB.NET" Value="Public Function CanPaste () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanPaste();" />
      <MemberSignature Language="F#" Value="member this.CanPaste : unit -&gt; bool" Usage="inkCanvas.CanPaste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-173">指示剪贴板的内容是否可以粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-173">Indicates whether the contents of the Clipboard can be pasted into the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <returns><span data-ttu-id="3ca10-174">如果可以粘贴剪贴板的内容，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-174"><see langword="true" /> if the contents of the Clipboard can be pasted in; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-175"><xref:System.Windows.Controls.InkCanvas> 可以支持 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式、[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]和文本格式的剪贴板数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-175">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-176">下面的示例将一个元素复制到剪贴板，并将其粘贴到 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-176">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-177">此示例假定存在一个名为 `rect1`的元素，并且 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 事件已连接到该示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-177">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3ca10-178">用于将剪贴板中的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />的权限。</span><span class="sxs-lookup"><span data-stu-id="3ca10-178">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span> <span data-ttu-id="3ca10-179">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-179">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.UIElementCollection Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.UIElementCollection Children" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As UIElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::UIElementCollection ^ Children { System::Windows::Controls::UIElementCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Children : System.Windows.Controls.UIElementCollection" Usage="System.Windows.Controls.InkCanvas.Children" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.UIElementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-180">检索 <see cref="T:System.Windows.Controls.InkCanvas" /> 的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-180">Retrieves child elements of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-181">位于 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的一个子元素集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-181">A collection of child elements located on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Children"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3ca10-182">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-182">XAML Property Element Usage</span></span>  
  
```  
<object>  
  OneOrMoreUIElements  
</object>  
```  
  
<a name="xamlValues_Children"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3ca10-183">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3ca10-183">XAML Values</span></span>  
 <span data-ttu-id="3ca10-184">*OneOrMoreUIElements*</span><span class="sxs-lookup"><span data-stu-id="3ca10-184">*OneOrMoreUIElements*</span></span>  
 <span data-ttu-id="3ca10-185">一个或多个 <xref:System.Windows.UIElement> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-185">One or more <xref:System.Windows.UIElement> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-186">下面的示例将 <xref:System.Windows.Controls.TextBlock> 添加到 <xref:System.Windows.Controls.InkCanvas>中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-186">The following example adds a <xref:System.Windows.Controls.TextBlock> to an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[InkCanvasSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopySelection">
      <MemberSignature Language="C#" Value="public void CopySelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopySelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CopySelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopySelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopySelection();" />
      <MemberSignature Language="F#" Value="member this.CopySelection : unit -&gt; unit" Usage="inkCanvas.CopySelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-187">将选定笔画和/或元素复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="3ca10-187">Copies selected strokes and/or elements to the Clipboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-188"><xref:System.Windows.Controls.InkCanvas> 可以支持 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式、[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]和文本格式的剪贴板数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-188">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="3ca10-189">剪贴板的笔划 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式，[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3ca10-189">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-190">下面的示例选择 <xref:System.Windows.Controls.InkCanvas> 上的两个元素，并将它们复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="3ca10-190">The following example selects two elements on an <xref:System.Windows.Controls.InkCanvas> and copies them to the Clipboard.</span></span> <span data-ttu-id="3ca10-191">此示例假定存在一个名为 `textbox1` <xref:System.Windows.Controls.TextBox>，<xref:System.Windows.Controls.Button> 称为 `button1 -`，并且这两个控件都是 <xref:System.Windows.Controls.InkCanvas>的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-191">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1 -` and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkCanvasSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Paste" />
      </Docs>
    </Member>
    <Member MemberName="CutSelection">
      <MemberSignature Language="C#" Value="public void CutSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CutSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.CutSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub CutSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CutSelection();" />
      <MemberSignature Language="F#" Value="member this.CutSelection : unit -&gt; unit" Usage="inkCanvas.CutSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-192">删除选定笔画和元素，并将它们复制到剪贴板。</span><span class="sxs-lookup"><span data-stu-id="3ca10-192">Deletes the selected strokes and elements, and copies them to the Clipboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-193"><xref:System.Windows.Controls.InkCanvas> 可以支持 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式、[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]和文本格式的剪贴板数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-193">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span> <span data-ttu-id="3ca10-194">剪贴板的笔划 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式，[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3ca10-194">Strokes to the Clipboard are both [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-195">下面的示例在一个 <xref:System.Windows.Controls.InkCanvas>上选择和剪切两个元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-195">The following example selects and cuts two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-196">此示例假定存在一个名为 `textbox1` <xref:System.Windows.Controls.TextBox>，<xref:System.Windows.Controls.Button> 称为 `button1`，并且这两个控件都是 <xref:System.Windows.Controls.InkCanvas>的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-196">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[InkCanvasSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.DrawingAttributes DefaultDrawingAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultDrawingAttributes As DrawingAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::DrawingAttributes ^ DefaultDrawingAttributes { System::Windows::Ink::DrawingAttributes ^ get(); void set(System::Windows::Ink::DrawingAttributes ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultDrawingAttributes : System.Windows.Ink.DrawingAttributes with get, set" Usage="System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-197">获取或设置应用于在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上绘制的新墨迹笔画的绘制特性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-197">Gets or sets the drawing attributes that are applied to new ink strokes made on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-198"><see cref="T:System.Windows.Controls.InkCanvas" /> 的默认绘制特性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-198">The default drawing attributes for the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-199">设置此属性只会影响在设置此属性后创建的新笔画。</span><span class="sxs-lookup"><span data-stu-id="3ca10-199">Setting this property will affect only new strokes that are made after this property is set.</span></span> <span data-ttu-id="3ca10-200">若要将新的绘图属性应用到已创建的 <xref:System.Windows.Ink.Stroke> 对象，请使用 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 属性分别进行访问。</span><span class="sxs-lookup"><span data-stu-id="3ca10-200">To apply new drawing attributes to already-created <xref:System.Windows.Ink.Stroke> objects, access them individually using the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultDrawingAttributes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-201">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-201">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-202">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-202">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty>|  
|<span data-ttu-id="3ca10-203">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-203">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-204">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-204">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-205">下面的示例演示如何使用两个 <xref:System.Windows.Ink.DrawingAttributes> 对象来模拟在同一 <xref:System.Windows.Controls.InkCanvas>上使用笔和荧光笔的体验。</span><span class="sxs-lookup"><span data-stu-id="3ca10-205">The following example demonstrates how to use two <xref:System.Windows.Ink.DrawingAttributes> objects to simulate the experience of using a pen and a highlighter on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-206">该示例假设标记语言（XAML）文件中的根元素是名为 `root`的 <xref:System.Windows.Controls.DockPanel>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-206">The example assumes that the root element in the markup language (XAML) file is a <xref:System.Windows.Controls.DockPanel> called `root`.</span></span> <span data-ttu-id="3ca10-207">它还假定存在一个名为 `switchHighlighter` <xref:System.Windows.Controls.Button>，<xref:System.Windows.Controls.Primitives.ButtonBase.Click> 事件连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-207">It also assumes that there is a <xref:System.Windows.Controls.Button> called `switchHighlighter` and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#3](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#3)]
 [!code-vb[DrawingAttributes#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#3)]  
  
 <span data-ttu-id="3ca10-208">下面的示例演示如何将 <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> 属性绑定到数据源。</span><span class="sxs-lookup"><span data-stu-id="3ca10-208">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes%2A> property to a data source.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#3)]  
 [!code-xaml[InkCanvasBindingSnippet#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#4)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.Strokes" />
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DefaultDrawingAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultDrawingAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DefaultDrawingAttributesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultDrawingAttributesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.DefaultDrawingAttributesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-209">标识 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-209">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.DrawingAttributesReplacedEventHandler DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DefaultDrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::DrawingAttributesReplacedEventHandler ^ DefaultDrawingAttributesReplaced;" />
      <MemberSignature Language="F#" Value="member this.DefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " Usage="member this.DefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event DefaultDrawingAttributesReplaced As DrawingAttributesReplacedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.DrawingAttributesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-210">在替换 <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> 属性时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-210">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.DefaultDrawingAttributes" /> property is replaced.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-211">下面的示例检查新 <xref:System.Windows.Ink.DrawingAttributes> 对象的 <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> 属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-211">The following example checks the value of the <xref:System.Windows.Ink.DrawingAttributes.IsHighlighter%2A> property of the new <xref:System.Windows.Ink.DrawingAttributes> object.</span></span>  
  
 [!code-csharp[DrawingAttributes#17](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#17)]
 [!code-vb[DrawingAttributes#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStylusPointDescription">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription DefaultStylusPointDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription DefaultStylusPointDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultStylusPointDescription As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ DefaultStylusPointDescription { System::Windows::Input::StylusPointDescription ^ get(); void set(System::Windows::Input::StylusPointDescription ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStylusPointDescription : System.Windows.Input.StylusPointDescription with get, set" Usage="System.Windows.Controls.InkCanvas.DefaultStylusPointDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-212">获取或设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</span><span class="sxs-lookup"><span data-stu-id="3ca10-212">Gets or sets the stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-213"><see cref="T:System.Windows.Controls.InkCanvas" /> 的触笔点说明。</span><span class="sxs-lookup"><span data-stu-id="3ca10-213">The stylus point description for an <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-214">默认情况下，<xref:System.Windows.Controls.InkCanvas> 仅存储属于笔划的每个 <xref:System.Windows.Input.StylusPoint> 的 <xref:System.Windows.Input.StylusPointProperties.X>、<xref:System.Windows.Input.StylusPointProperties.Y>和 <xref:System.Windows.Input.StylusPointProperties.NormalPressure> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-214">By default, the <xref:System.Windows.Controls.InkCanvas> stores only the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, and <xref:System.Windows.Input.StylusPointProperties.NormalPressure> properties for each <xref:System.Windows.Input.StylusPoint> belonging to a stroke.</span></span> <span data-ttu-id="3ca10-215">您可以使用 DefaultStylusPointDescription 属性存储与 <xref:System.Windows.Controls.InkCanvas>上的笔划相关的点相关的其他信息。</span><span class="sxs-lookup"><span data-stu-id="3ca10-215">You can use the DefaultStylusPointDescription property to store additional information about points comprising the strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-216">设置此属性只会影响在设置该属性后所做的新笔画。</span><span class="sxs-lookup"><span data-stu-id="3ca10-216">Setting this property will affect only new strokes that are made after the property is set.</span></span>  
  
<a name="xamlTextUsage_DefaultStylusPointDescription"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="3ca10-217">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-217">XAML Text Usage</span></span>  
 <span data-ttu-id="3ca10-218">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中不能使用此属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-218">You cannot use this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-219">下面的示例设置 <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A>，以便 <xref:System.Windows.Controls.InkCanvas> 上笔划的触笔接触点包含 <xref:System.Windows.Input.StylusPointProperties.X>、<xref:System.Windows.Input.StylusPointProperties.Y>、<xref:System.Windows.Input.StylusPointProperties.NormalPressure>和 <xref:System.Windows.Input.StylusPointProperties.TipButton> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-219">The following example sets the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> so that the stylus points of the strokes on the <xref:System.Windows.Controls.InkCanvas> contain the <xref:System.Windows.Input.StylusPointProperties.X>, <xref:System.Windows.Input.StylusPointProperties.Y>, <xref:System.Windows.Input.StylusPointProperties.NormalPressure>, and <xref:System.Windows.Input.StylusPointProperties.TipButton> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ca10-220">只有在 <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> 设置后添加到 <xref:System.Windows.Controls.InkCanvas> 的笔画才能包含附加属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-220">Only the strokes that are added to the <xref:System.Windows.Controls.InkCanvas> after the <xref:System.Windows.Controls.InkCanvas.DefaultStylusPointDescription%2A> is set to contain the additional property.</span></span>  
  
 [!code-csharp[InkCanvasSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[InkCanvasSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPointProperties" />
        <altmember cref="T:System.Windows.Input.StylusPointProperty" />
        <altmember cref="T:System.Windows.Input.StylusPointPropertyInfo" />
      </Docs>
    </Member>
    <Member MemberName="DynamicRenderer">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.DynamicRenderer DynamicRenderer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberSignature Language="VB.NET" Value="Protected Property DynamicRenderer As DynamicRenderer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::DynamicRenderer ^ DynamicRenderer { System::Windows::Input::StylusPlugIns::DynamicRenderer ^ get(); void set(System::Windows::Input::StylusPlugIns::DynamicRenderer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicRenderer : System.Windows.Input.StylusPlugIns.DynamicRenderer with get, set" Usage="System.Windows.Controls.InkCanvas.DynamicRenderer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.DynamicRenderer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-221">获取或设置在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</span><span class="sxs-lookup"><span data-stu-id="3ca10-221">Gets or sets the renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-222">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上动态绘制墨迹的呈现器。</span><span class="sxs-lookup"><span data-stu-id="3ca10-222">The renderer that dynamically draws ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-223">如果要自定义墨迹，可以将 <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> 属性设置为自定义 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-223">You can set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> property to a custom <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> if you want to customize the ink.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ca10-224"><xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> 是 <xref:System.Windows.UIElement.StylusPlugIns%2A> 集合的成员。</span><span class="sxs-lookup"><span data-stu-id="3ca10-224">The <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A> is a member of the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection.</span></span> <span data-ttu-id="3ca10-225">设置 <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>时，<xref:System.Windows.Controls.InkCanvas> 从 <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> 中删除旧 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer>，并将新的 <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> 添加到集合的末尾。</span><span class="sxs-lookup"><span data-stu-id="3ca10-225">When you set the <xref:System.Windows.Controls.InkCanvas.DynamicRenderer%2A>, the <xref:System.Windows.Controls.InkCanvas> removes the old <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> from the <xref:System.Windows.Input.StylusPlugIns.StylusPlugInCollection> and adds the new <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to the end of the collection.</span></span> <span data-ttu-id="3ca10-226">这可能会改变 <xref:System.Windows.Controls.InkCanvas>的行为。</span><span class="sxs-lookup"><span data-stu-id="3ca10-226">This may change the behavior of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingMode As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingMode { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditingMode : System.Windows.Controls.InkCanvasEditingMode with get, set" Usage="System.Windows.Controls.InkCanvas.EditingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-227">获取或设置活动指针设备使用的用户编辑模式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-227">Gets or sets the user editing mode used by an active pointing device.</span></span></summary>
        <value><span data-ttu-id="3ca10-228">当指针设备（如触笔或鼠标）处于活动状态时使用的编辑模式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-228">The editing mode used when a pointing device (such as a tablet pen or mouse) is active.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-229">默认的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 为 <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-229">The default <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is <xref:System.Windows.Controls.InkCanvasEditingMode.Ink>.</span></span> <span data-ttu-id="3ca10-230">更改 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 将清除任何现有选择。</span><span class="sxs-lookup"><span data-stu-id="3ca10-230">Changing the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> clears any existing selections.</span></span>  
  
 <span data-ttu-id="3ca10-231">当指针与 <xref:System.Windows.Controls.InkCanvas>交互时，<xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 指定该指针设备的模式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-231">The <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> specifies the mode of the pointing device as it interacts with the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-232">当触笔的 "橡皮擦端" 联系数字化仪时，某些数字化器将使用 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-232"><xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> is used by some digitizers when the "eraser end" of the stylus contacts the digitizer.</span></span>  
  
<a name="dependencyPropertyInfo_EditingMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-233">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-233">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-234">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-234">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeProperty>|  
|<span data-ttu-id="3ca10-235">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-235">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-236">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-236">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-237">下面的示例创建一个在 <xref:System.Windows.Controls.InkCanvas>上使用各种类型的编辑模式的应用程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-237">The following example creates an application that uses the various types of editing modes on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[ICEditingModeSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ICEditingModeSample/CSharp/Window1.xaml.cs#1)]
 [!code-vb[ICEditingModeSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ICEditingModeSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      </Docs>
    </Member>
    <Member MemberName="EditingModeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeChanged;" />
      <MemberSignature Language="F#" Value="member this.EditingModeChanged : System.Windows.RoutedEventHandler " Usage="member this.EditingModeChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-238">在 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 对象的 <see cref="T:System.Windows.Controls.InkCanvas" /> 属性更改后发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-238">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-239">此事件在编辑模式更改后发生;更改将反映在 <xref:System.Windows.Controls.InkCanvas>的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-239">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3ca10-240">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-240">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-241">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-241">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeChangedEvent>|  
|<span data-ttu-id="3ca10-242">路由策略</span><span class="sxs-lookup"><span data-stu-id="3ca10-242">Routing strategy</span></span>|<span data-ttu-id="3ca10-243">冒泡</span><span class="sxs-lookup"><span data-stu-id="3ca10-243">Bubbling</span></span>|  
|<span data-ttu-id="3ca10-244">委托</span><span class="sxs-lookup"><span data-stu-id="3ca10-244">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-245">下面的示例检查 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 属性是否设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> 或 <xref:System.Windows.Controls.InkCanvasEditingMode.Select>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-245">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.Ink> or <xref:System.Windows.Controls.InkCanvasEditingMode.Select>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[InkCanvasSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.EditingModeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-246">标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-246">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInverted">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasEditingMode EditingModeInverted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.InkCanvasEditingMode EditingModeInverted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberSignature Language="VB.NET" Value="Public Property EditingModeInverted As InkCanvasEditingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::InkCanvasEditingMode EditingModeInverted { System::Windows::Controls::InkCanvasEditingMode get(); void set(System::Windows::Controls::InkCanvasEditingMode value); };" />
      <MemberSignature Language="F#" Value="member this.EditingModeInverted : System.Windows.Controls.InkCanvasEditingMode with get, set" Usage="System.Windows.Controls.InkCanvas.EditingModeInverted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasEditingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-247">如果触笔在与 <see cref="T:System.Windows.Controls.InkCanvas" /> 交互时发生反转，则获取或设置用户编辑模式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-247">Gets or sets the user editing mode if the stylus is inverted when it interacts with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-248"><see cref="T:System.Windows.Controls.InkCanvas" /> 的反转编辑模式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-248">The inverted editing mode of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-249">此属性控制触笔反转时执行的操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-249">This property controls the actions that are performed when the stylus is inverted.</span></span>  
  
 <span data-ttu-id="3ca10-250">同样，<xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 属性控制在触笔位于标准的、向下定位数字化器时执行的操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-250">Similarly, the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property controls actions that are performed when the stylus is in a standard, tip-down position against the digitizer,</span></span>  
  
<a name="dependencyPropertyInfo_EditingModeInverted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-251">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-252">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-252">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty>|  
|<span data-ttu-id="3ca10-253">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-254">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-255">下面的示例演示如何允许用户使用触笔的反转笔尖部分擦除笔画。</span><span class="sxs-lookup"><span data-stu-id="3ca10-255">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="3ca10-256">当用户擦除墨迹时，<xref:System.Windows.Controls.InkCanvas> 上将显示一个椭圆形光标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-256">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler EditingModeInvertedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler EditingModeInvertedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditingModeInvertedChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ EditingModeInvertedChanged;" />
      <MemberSignature Language="F#" Value="member this.EditingModeInvertedChanged : System.Windows.RoutedEventHandler " Usage="member this.EditingModeInvertedChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-257">在 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 对象的 <see cref="T:System.Windows.Controls.InkCanvas" /> 属性更改后发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-257">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> property of an <see cref="T:System.Windows.Controls.InkCanvas" /> object has been changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-258">此事件在反向编辑模式更改之后发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-258">This event occurs after the inverted editing mode has been changed.</span></span> <span data-ttu-id="3ca10-259">这些更改将反映在 <xref:System.Windows.Controls.InkCanvas>的 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-259">These changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
<a name="routedEventInfo_EditingModeInvertedChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3ca10-260">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-260">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-261">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-261">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent>|  
|<span data-ttu-id="3ca10-262">路由策略</span><span class="sxs-lookup"><span data-stu-id="3ca10-262">Routing strategy</span></span>|<span data-ttu-id="3ca10-263">冒泡</span><span class="sxs-lookup"><span data-stu-id="3ca10-263">Bubbling</span></span>|  
|<span data-ttu-id="3ca10-264">委托</span><span class="sxs-lookup"><span data-stu-id="3ca10-264">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-265">下面的示例检查 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 属性是否设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> 或 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-265">The following example checks whether the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[InkCanvasSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent EditingModeInvertedChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ EditingModeInvertedChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeInvertedChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.EditingModeInvertedChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-266">标识 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-266">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeInvertedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeInvertedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeInvertedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeInvertedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeInvertedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeInvertedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.EditingModeInvertedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-267">标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-267">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingModeInverted" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditingModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EditingModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EditingModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EditingModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EditingModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable EditingModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.EditingModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-268">标识 <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-268">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.EditingMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EraserShape">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StylusShape EraserShape { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StylusShape EraserShape" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberSignature Language="VB.NET" Value="Public Property EraserShape As StylusShape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StylusShape ^ EraserShape { System::Windows::Ink::StylusShape ^ get(); void set(System::Windows::Ink::StylusShape ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EraserShape : System.Windows.Ink.StylusShape with get, set" Usage="System.Windows.Controls.InkCanvas.EraserShape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StylusShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-269">获取或设置用来按点擦除 <see cref="T:System.Windows.Ink.StylusShape" /> 中墨迹的 <see cref="T:System.Windows.Controls.InkCanvas" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-269">Gets or sets the <see cref="T:System.Windows.Ink.StylusShape" /> used to point-erase ink from an <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-270">与 <see cref="T:System.Windows.Controls.InkCanvas" /> 关联的橡皮擦形状。</span><span class="sxs-lookup"><span data-stu-id="3ca10-270">The eraser shape associated with the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-271">当当前 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>时，此形状将用于清除 <xref:System.Windows.Controls.InkCanvas> 中的墨迹。</span><span class="sxs-lookup"><span data-stu-id="3ca10-271">This shape will be used to erase ink from an <xref:System.Windows.Controls.InkCanvas> when the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
 <span data-ttu-id="3ca10-272">一旦创建了形状，就不能修改 <xref:System.Windows.Ink.StylusShape> 的单个属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-272">Individual properties of a <xref:System.Windows.Ink.StylusShape> cannot be modified once the shape has been created.</span></span>  
  
 <span data-ttu-id="3ca10-273">如果更改 <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>，则直到下一次 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 更改时，才会更新在 <xref:System.Windows.Controls.InkCanvas> 上呈现的光标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-273">If you change the <xref:System.Windows.Controls.InkCanvas.EraserShape%2A>, the cursor rendered on the <xref:System.Windows.Controls.InkCanvas> is not updated until the next <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> change.</span></span>  
  
<a name="xamlTextUsage_EraserShape"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="3ca10-274">XAML 文本用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-274">XAML Text Usage</span></span>  
 <span data-ttu-id="3ca10-275">此属性通常不在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]中使用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-275">This property is not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-276">下面的示例演示如何允许用户使用触笔的反转笔尖部分擦除笔画。</span><span class="sxs-lookup"><span data-stu-id="3ca10-276">The following example demonstrates how to allow a user to partially erase strokes with the inverted tip of a stylus.</span></span> <span data-ttu-id="3ca10-277">当用户擦除墨迹时，<xref:System.Windows.Controls.InkCanvas> 上将显示一个椭圆形光标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-277">An elliptical cursor appears on the <xref:System.Windows.Controls.InkCanvas> when the user erases ink.</span></span>  
  
 [!code-csharp[InkCanvasSamples#6](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#6)]
 [!code-vb[InkCanvasSamples#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StylusShape" />
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasGestureEventHandler Gesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasGestureEventHandler Gesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Gesture As InkCanvasGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasGestureEventHandler ^ Gesture;" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Controls.InkCanvasGestureEventHandler " Usage="member this.Gesture : System.Windows.Controls.InkCanvasGestureEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-278">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 检测到笔势时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-278">Occurs when the <see cref="T:System.Windows.Controls.InkCanvas" /> detects a gesture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Gesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3ca10-279">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-279">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-280">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-280">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.GestureEvent>|  
|<span data-ttu-id="3ca10-281">路由策略</span><span class="sxs-lookup"><span data-stu-id="3ca10-281">Routing strategy</span></span>|<span data-ttu-id="3ca10-282">冒泡</span><span class="sxs-lookup"><span data-stu-id="3ca10-282">Bubbling</span></span>|  
|<span data-ttu-id="3ca10-283">委托</span><span class="sxs-lookup"><span data-stu-id="3ca10-283">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-284">下面的示例演示如何设置 <xref:System.Windows.Controls.InkCanvas> 来识别应用程序手势。</span><span class="sxs-lookup"><span data-stu-id="3ca10-284">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.GestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-285">标识 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-285">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBottom">
      <MemberSignature Language="C#" Value="public static double GetBottom (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetBottom(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetBottom(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBottom (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetBottom(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetBottom : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetBottom element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-286">要获取其下边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-286">The element of which to get the bottom property.</span></span></param>
        <summary><span data-ttu-id="3ca10-287">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-287">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span></span></summary>
        <returns><span data-ttu-id="3ca10-288">依赖项对象的下边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-288">The bottom coordinate of the dependency object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-289">下面的示例演示如何获取 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-289">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#34](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#34)]
 [!code-vb[InkCanvasSamples#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnabledGestures">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; GetEnabledGestures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetEnabledGestures" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnabledGestures () As ReadOnlyCollection(Of ApplicationGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Ink::ApplicationGesture&gt; ^ GetEnabledGestures();" />
      <MemberSignature Language="F#" Value="member this.GetEnabledGestures : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;" Usage="inkCanvas.GetEnabledGestures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Ink.ApplicationGesture&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-290">返回一个由 <see cref="T:System.Windows.Controls.InkCanvas" /> 识别的应用程序笔势集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-290">Returns a collection of application gestures that are recognized by <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <returns><span data-ttu-id="3ca10-291"><see cref="T:System.Windows.Controls.InkCanvas" /> 识别的笔势集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-291">A collection of gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> recognizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-292">下面的示例演示如何从 <xref:System.Windows.Controls.InkCanvas>获取已启用的应用程序手势。</span><span class="sxs-lookup"><span data-stu-id="3ca10-292">The following example demonstrates how to get the enabled application gestures from the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#24)]
 [!code-vb[InkCanvasSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ca10-293"><see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-293">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLeft">
      <MemberSignature Language="C#" Value="public static double GetLeft (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLeft(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetLeft(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLeft (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLeft(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetLeft : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetLeft element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-294">要获取其左边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-294">The element of which to get the left property.</span></span></param>
        <summary><span data-ttu-id="3ca10-295">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-295">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span></span></summary>
        <returns><span data-ttu-id="3ca10-296">依赖项对象的左边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-296">The left coordinate of the dependency object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-297">下面的示例演示如何获取 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-297">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#31](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#31)]
 [!code-vb[InkCanvasSamples#31](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#31)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRight">
      <MemberSignature Language="C#" Value="public static double GetRight (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetRight(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetRight(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRight (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetRight(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetRight : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetRight element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-298">要获取其右边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-298">The element of which to get the right property.</span></span></param>
        <summary><span data-ttu-id="3ca10-299">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-299">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span></span></summary>
        <returns><span data-ttu-id="3ca10-300">依赖项对象的右边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-300">The right coordinate of the dependency object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-301">下面的示例演示如何获取 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-301">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#32](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#32)]
 [!code-vb[InkCanvasSamples#32](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#32)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedElements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt; GetSelectedElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Windows.UIElement&gt; GetSelectedElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedElements () As ReadOnlyCollection(Of UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::UIElement ^&gt; ^ GetSelectedElements();" />
      <MemberSignature Language="F#" Value="member this.GetSelectedElements : unit -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;" Usage="inkCanvas.GetSelectedElements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.UIElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-302">检索在 <see cref="T:System.Windows.FrameworkElement" /> 中选定的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-302">Retrieves the <see cref="T:System.Windows.FrameworkElement" /> objects that are selected in the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <returns><span data-ttu-id="3ca10-303"><see cref="T:System.Windows.FrameworkElement" /> 对象数组。</span><span class="sxs-lookup"><span data-stu-id="3ca10-303">Array of <see cref="T:System.Windows.FrameworkElement" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-304">此方法只返回 <xref:System.Windows.FrameworkElement> 对象，而不是 <xref:System.Windows.Ink.Stroke> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-304">This method returns only <xref:System.Windows.FrameworkElement> objects, not <xref:System.Windows.Ink.Stroke> objects.</span></span>  
  
 <span data-ttu-id="3ca10-305">若要检索选定的 <xref:System.Windows.Ink.Stroke> 对象，请调用 <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-305">To retrieve selected <xref:System.Windows.Ink.Stroke> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedStrokes%2A> method.</span></span>  
  
 <span data-ttu-id="3ca10-306">如果 <xref:System.Windows.Controls.InkCanvas> 的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 设置为 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，则用户可以选择 <xref:System.Windows.Ink.Stroke> 对象和 <xref:System.Windows.FrameworkElement> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-306">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="3ca10-307">或者，可以使用代码选择两种类型的对象：只需调用 <xref:System.Windows.Controls.InkCanvas.Select%2A> 方法即可。</span><span class="sxs-lookup"><span data-stu-id="3ca10-307">Alternatively, both types of objects can be selected using code:  just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-308">下面的示例将 <xref:System.Windows.Controls.InkCanvas>上每个选定元素的高度和宽度加倍。</span><span class="sxs-lookup"><span data-stu-id="3ca10-308">The following example doubles the height and width of each selected element on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[InkCanvasSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectedStrokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection GetSelectedStrokes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection GetSelectedStrokes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectedStrokes () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ GetSelectedStrokes();" />
      <MemberSignature Language="F#" Value="member this.GetSelectedStrokes : unit -&gt; System.Windows.Ink.StrokeCollection" Usage="inkCanvas.GetSelectedStrokes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-309">检索一个 <see cref="T:System.Windows.Ink.StrokeCollection" />，它表示 <see cref="T:System.Windows.Ink.Stroke" /> 上选定的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-309">Retrieves a <see cref="T:System.Windows.Ink.StrokeCollection" /> that represents selected <see cref="T:System.Windows.Ink.Stroke" /> objects on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <returns><span data-ttu-id="3ca10-310">选定笔画的集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-310">The collection of selected strokes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-311">此方法仅返回 <xref:System.Windows.Ink.Stroke> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-311">This method returns <xref:System.Windows.Ink.Stroke> objects, only.</span></span> <span data-ttu-id="3ca10-312">若要检索选定的 <xref:System.Windows.FrameworkElement> 对象，请调用 <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-312">To retrieve selected <xref:System.Windows.FrameworkElement> objects, call the <xref:System.Windows.Controls.InkCanvas.GetSelectedElements%2A> method.</span></span>  
  
 <span data-ttu-id="3ca10-313">如果 <xref:System.Windows.Controls.InkCanvas> 的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 设置为 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>，则用户可以选择 <xref:System.Windows.Ink.Stroke> 对象和 <xref:System.Windows.FrameworkElement> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-313">If the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> of <xref:System.Windows.Controls.InkCanvas> is set to <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>, users can select <xref:System.Windows.Ink.Stroke> objects and <xref:System.Windows.FrameworkElement> objects.</span></span> <span data-ttu-id="3ca10-314">或者，可以使用代码选择两种类型的对象：只需调用 <xref:System.Windows.Controls.InkCanvas.Select%2A> 方法即可。</span><span class="sxs-lookup"><span data-stu-id="3ca10-314">Alternatively, both types of objects can be selected using code: just call the <xref:System.Windows.Controls.InkCanvas.Select%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-315">下面的示例将更改 <xref:System.Windows.Controls.InkCanvas>上每个选定笔画的颜色。</span><span class="sxs-lookup"><span data-stu-id="3ca10-315">The following example changes the color of each selected stroke on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[InkCanvasSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Controls.InkCanvas.Select" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectionBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetSelectionBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetSelectionBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetSelectionBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSelectionBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetSelectionBounds();" />
      <MemberSignature Language="F#" Value="member this.GetSelectionBounds : unit -&gt; System.Windows.Rect" Usage="inkCanvas.GetSelectionBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-316">获取 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定笔画和元素的边界。</span><span class="sxs-lookup"><span data-stu-id="3ca10-316">Gets the bounds of the selected strokes and elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <returns><span data-ttu-id="3ca10-317">包围所有选定笔画和元素的最小矩形。</span><span class="sxs-lookup"><span data-stu-id="3ca10-317">The smallest rectangle that encompasses all selected strokes and elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-318">下面的示例阻止用户所选内容小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-318">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTop">
      <MemberSignature Language="C#" Value="public static double GetTop (System.Windows.UIElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetTop(class System.Windows.UIElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetTop(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTop (element As UIElement) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetTop(System::Windows::UIElement ^ element);" />
      <MemberSignature Language="F#" Value="static member GetTop : System.Windows.UIElement -&gt; double" Usage="System.Windows.Controls.InkCanvas.GetTop element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForChildren</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-319">要获取其上边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-319">The element of which to get the top property.</span></span></param>
        <summary><span data-ttu-id="3ca10-320">获取给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-320">Gets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span></span></summary>
        <returns><span data-ttu-id="3ca10-321">依赖项对象的上边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-321">The top coordinate of the dependency object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-322">下面的示例演示如何获取 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-322">The following example demonstrates how to get the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#33](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#33)]
 [!code-vb[InkCanvasSamples#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="inkCanvas.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="3ca10-323">集合中请求的子元素的从零开始的索引。</span><span class="sxs-lookup"><span data-stu-id="3ca10-323">The zero-based index of the requested child element in the collection.</span></span></param>
        <summary><span data-ttu-id="3ca10-324">重写 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />，并从子元素集合中返回指定索引处的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-324">Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</span></span></summary>
        <returns><span data-ttu-id="3ca10-325">请求的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-325">The requested child element.</span></span> <span data-ttu-id="3ca10-326">这不应返回 <see langword="null" />；如果提供的索引超出范围，则引发异常。</span><span class="sxs-lookup"><span data-stu-id="3ca10-326">This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParams);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParams) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParams As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParams);" />
      <MemberSignature Language="F#" Value="override this.HitTestCore : System.Windows.Media.PointHitTestParameters -&gt; System.Windows.Media.HitTestResult" Usage="inkCanvas.HitTestCore hitTestParams" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParams" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParams"><span data-ttu-id="3ca10-327">一个对象，指定 <see cref="T:System.Windows.Point" /> 以命中测试。</span><span class="sxs-lookup"><span data-stu-id="3ca10-327">An object that specifies the <see cref="T:System.Windows.Point" /> to hit test against.</span></span></param>
        <summary><span data-ttu-id="3ca10-328">确定给定点是否落在 <see cref="T:System.Windows.Controls.InkCanvas" /> 的呈现边界之内。</span><span class="sxs-lookup"><span data-stu-id="3ca10-328">Determines whether a given point falls within the rendering bounds of an <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <returns><span data-ttu-id="3ca10-329">一个由命中测试中返回的 <see cref="T:System.Windows.Media.Visual" /> 表示的对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-329">An object that represents the <see cref="T:System.Windows.Media.Visual" /> that is returned from a hit test.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestSelection">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Controls.InkCanvasSelectionHitResult HitTestSelection(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.HitTestSelection(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::InkCanvasSelectionHitResult HitTestSelection(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.HitTestSelection : System.Windows.Point -&gt; System.Windows.Controls.InkCanvasSelectionHitResult" Usage="inkCanvas.HitTestSelection point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionHitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3ca10-330">要进行命中测试的点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-330">The point to hit test.</span></span></param>
        <summary><span data-ttu-id="3ca10-331">返回一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-331">Returns a value that indicates which part of the selection adorner intersects or surrounds the specified point.</span></span></summary>
        <returns><span data-ttu-id="3ca10-332">一个值，该值指示选择装饰器的哪个部分与指定点相交或包围指定点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-332">A value that indicates which part of the selection adorner intersects or surrounds a specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-333">使用 <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> 方法来确定该点是在笔划选择边界内还是在八个图柄之一中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-333">Use the <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> method to determine whether the point is within a stroke selection's bounds or on one of the eight handles.</span></span>  <span data-ttu-id="3ca10-334">当执行拖放操作时，这非常有用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-334">This is useful when performing drag and drop operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-335">下面的示例演示如何使用 <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> 来确定是否创建 <xref:System.Windows.DataObject> 来启动拖放操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-335">The following example demonstrates how use <xref:System.Windows.Controls.InkCanvas.HitTestSelection%2A> to determine whether to create a <xref:System.Windows.DataObject> to initiate drag and drop.</span></span>  <span data-ttu-id="3ca10-336">若要在两个 <xref:System.Windows.Controls.InkCanvas> 对象之间实现拖放，请参阅[如何：拖放墨迹](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md)。</span><span class="sxs-lookup"><span data-stu-id="3ca10-336">To implement drag and drop between two <xref:System.Windows.Controls.InkCanvas> objects, see [How to: Drag and Drop Ink](~/docs/framework/wpf/advanced/how-to-drag-and-drop-ink.md).</span></span>  
  
 [!code-csharp[InkDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Wpf/InkDragDrop/CSharp/Window1.xaml.cs#3)]
 [!code-vb[InkDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkDragDrop/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkPresenter">
      <MemberSignature Language="C#" Value="protected System.Windows.Controls.InkPresenter InkPresenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.InkPresenter InkPresenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InkPresenter As InkPresenter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Controls::InkPresenter ^ InkPresenter { System::Windows::Controls::InkPresenter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InkPresenter : System.Windows.Controls.InkPresenter" Usage="System.Windows.Controls.InkCanvas.InkPresenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkPresenter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-337">获取在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</span><span class="sxs-lookup"><span data-stu-id="3ca10-337">Gets the ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-338">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上显示墨迹的墨迹显示器。</span><span class="sxs-lookup"><span data-stu-id="3ca10-338">The ink presenter that displays ink on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGestureRecognizerAvailable">
      <MemberSignature Language="C#" Value="public bool IsGestureRecognizerAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGestureRecognizerAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGestureRecognizerAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGestureRecognizerAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGestureRecognizerAvailable : bool" Usage="System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-339">获取（确定）笔势识别组件在用户系统上是否可用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-339">Gets (determines) whether the gesture recognition component is available on the user's system.</span></span></summary>
        <value><span data-ttu-id="3ca10-340">如果识别组件可用，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-340"><see langword="true" /> if the recognition component is available; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-341">下面的示例演示如何配置 <xref:System.Windows.Controls.InkCanvas> 以识别应用程序手势。</span><span class="sxs-lookup"><span data-stu-id="3ca10-341">The following example demonstrates how to configure an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="ILAsm" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Left" />
      <MemberSignature Language="VB.NET" Value="see GetLeft, and SetLeft" />
      <MemberSignature Language="F#" Value="see GetLeft, and SetLeft" Usage="see GetLeft, and SetLeft" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ca10-342">获取或设置某元素的左边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左边缘之间的距离。</span><span class="sxs-lookup"><span data-stu-id="3ca10-342">Gets or sets the distance between the left side of an element and the left side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Left"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-343">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-343">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-344">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-344">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.LeftProperty>|  
|<span data-ttu-id="3ca10-345">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-345">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-346">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-346">None</span></span>|  
  
<a name="xamlAttributeUsage_Left"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3ca10-347">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-347">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Left="double"/>  
- or -  
<object InkCanvas.Left="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Left"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3ca10-348">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3ca10-348">XAML Values</span></span>  
 <span data-ttu-id="3ca10-349">*双精度*</span><span class="sxs-lookup"><span data-stu-id="3ca10-349">*double*</span></span>  
 <span data-ttu-id="3ca10-350"><xref:System.Double> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-350">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3ca10-351">这被解释为 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 度量。</span><span class="sxs-lookup"><span data-stu-id="3ca10-351">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3ca10-352">字符串不需要显式包含小数点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-352">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3ca10-353">例如，`1` 的值是可接受的。</span><span class="sxs-lookup"><span data-stu-id="3ca10-353">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3ca10-354">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3ca10-354">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3ca10-355">如上所述的*双精度*值，后跟以下单元声明字符串之一： `px`、`in`、`cm``pt`。</span><span class="sxs-lookup"><span data-stu-id="3ca10-355">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3ca10-356">`px` （默认值）为 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3ca10-356">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3ca10-357">`in` 为英寸;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="3ca10-357">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3ca10-358">`cm` 是厘米;1cm = = （96/2.54） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-358">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3ca10-359">`pt` 为点;1pt = = （96/72） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-359">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-360">下面的示例演示如何设置 <xref:System.Windows.Controls.InkCanvas>上的 <xref:System.Windows.Controls.Label> 的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-360">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-361">标识 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-361">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.InkCanvas.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-362">返回用于逻辑子级的枚举器。</span><span class="sxs-lookup"><span data-stu-id="3ca10-362">Returns enumerator to logical children.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="inkCanvas.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="3ca10-363">此元素可提供给子元素的可用大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-363">The available size that this element can give to child elements.</span></span> <span data-ttu-id="3ca10-364">可指定无穷大作为一个值，该值指示元素将调整到适应内容的大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-364">Infinity can be specified as a value to indicate that the element will size to whatever content is available.</span></span></param>
        <summary><span data-ttu-id="3ca10-365">测量子元素在布局中所需的大小，并确定 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象的大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-365">Measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.Controls.InkCanvas" /> object.</span></span></summary>
        <returns><span data-ttu-id="3ca10-366">此元素基于其对子元素大小的计算确定它在布局期间所需要的大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-366">The size that this element determines it needs during layout, based on its calculations of child element sizes.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MoveEnabled">
      <MemberSignature Language="C#" Value="public bool MoveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MoveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MoveEnabled : bool with get, set" Usage="System.Windows.Controls.InkCanvas.MoveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-367">获取或设置一个布尔值，该值指示是否允许用户移动 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-367">Gets or sets a Boolean value which indicates whether the user is enabled to move selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-368">如果用户可以移动 <see langword="true" /> 上的笔画和/或元素，则为 <see cref="T:System.Windows.Controls.InkCanvas" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-368"><see langword="true" /> if a user can move strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-369">如果将此属性设置为 "`true`"，则在选中时，将围绕墨迹笔划和/或元素绘制装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="3ca10-369">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="3ca10-370">此边框允许用户移动所选对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-370">This border enables the user to move the selected objects.</span></span> <span data-ttu-id="3ca10-371">如果 `true`<xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A>，则装饰器还允许用户调整笔画和/或元素的大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-371">If <xref:System.Windows.Controls.InkCanvas.ResizeEnabled%2A> is `true`, the adorner enables the user to resize the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="3ca10-372">如果在选择了一个或多个墨迹笔画和/或元素的情况下，此属性设置为 `false`，则将自动从所选对象中删除装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="3ca10-372">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border will be automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-373">下面的示例阻止用户移动 <xref:System.Windows.Controls.InkCanvas>上的元素和笔划并调整其大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-373">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActiveEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnActiveEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActiveEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnActiveEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnActiveEditingModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-374">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-374">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-375">引发 <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-375">Raises the <see cref="E:System.Windows.Controls.InkCanvas.ActiveEditingModeChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="inkCanvas.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-376">作为 <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> 基础结构的一部分，为此控件提供相应的 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 实现。</span><span class="sxs-lookup"><span data-stu-id="3ca10-376">Provides an appropriate <see cref="T:System.Windows.Automation.Peers.InkCanvasAutomationPeer" /> implementation for this control, as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDefaultDrawingAttributesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnDefaultDrawingAttributesReplaced (System.Windows.Ink.DrawingAttributesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDefaultDrawingAttributesReplaced(class System.Windows.Ink.DrawingAttributesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnDefaultDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDefaultDrawingAttributesReplaced (e As DrawingAttributesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDefaultDrawingAttributesReplaced(System::Windows::Ink::DrawingAttributesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit&#xA;override this.OnDefaultDrawingAttributesReplaced : System.Windows.Ink.DrawingAttributesReplacedEventArgs -&gt; unit" Usage="inkCanvas.OnDefaultDrawingAttributesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.DrawingAttributesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-377">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-377">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-378">引发 <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-378">Raises the <see cref="E:System.Windows.Controls.InkCanvas.DefaultDrawingAttributesReplaced" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnEditingModeChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnEditingModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-379">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-379">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-380">引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-380">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-381">此事件在编辑模式更改后发生;更改将反映在 <xref:System.Windows.Controls.InkCanvas>的 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-381">This event occurs after the editing mode has been changed; the changes are reflected in the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEditingModeInvertedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEditingModeInvertedChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditingModeInvertedChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnEditingModeInvertedChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditingModeInvertedChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditingModeInvertedChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditingModeInvertedChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnEditingModeInvertedChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnEditingModeInvertedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-382">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-382">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-383">引发 <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-383">Raises the <see cref="E:System.Windows.Controls.InkCanvas.EditingModeInvertedChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-384">此事件在反向编辑模式更改之后发生。更改反映在 <xref:System.Windows.Controls.InkCanvas>的 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-384">This event occurs after the inverted editing mode has been changed; the changes reflected in the <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnGesture (System.Windows.Controls.InkCanvasGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGesture(class System.Windows.Controls.InkCanvasGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnGesture(System.Windows.Controls.InkCanvasGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGesture (e As InkCanvasGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGesture(System::Windows::Controls::InkCanvasGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGesture : System.Windows.Controls.InkCanvasGestureEventArgs -&gt; unit&#xA;override this.OnGesture : System.Windows.Controls.InkCanvasGestureEventArgs -&gt; unit" Usage="inkCanvas.OnGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-385">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-385">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-386">引发 <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-386">Raises the <see cref="E:System.Windows.Controls.InkCanvas.Gesture" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="inkCanvas.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-387">描述已更改的属性的事件数据（包括旧值和新值）。</span><span class="sxs-lookup"><span data-stu-id="3ca10-387">The event data that describes the property that changed, as well as old and new values.</span></span></param>
        <summary><span data-ttu-id="3ca10-388">每当更新此 <see cref="T:System.Windows.FrameworkElement" /> 的任何依赖属性的有效值时调用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-388">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated.</span></span> <span data-ttu-id="3ca10-389">将在实参形参中报告已更改的特定依赖属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-389">The specific dependency property that changed is reported in the arguments parameter.</span></span> <span data-ttu-id="3ca10-390">重写 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-390">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : EventArgs -&gt; unit&#xA;override this.OnSelectionChanged : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-391">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-391">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-392">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-392">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-393">此方法在用户选择一组墨笔划和/或元素并已应用选择更改后调用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-393">This method is called after a set of ink strokes and/or elements has been selected by the user and the selection change has been applied.</span></span> <span data-ttu-id="3ca10-394">在应用更改之前，将调用 <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-394">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanging%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanging (System.Windows.Controls.InkCanvasSelectionChangingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanging(class System.Windows.Controls.InkCanvasSelectionChangingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionChanging(System.Windows.Controls.InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanging (e As InkCanvasSelectionChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanging(System::Windows::Controls::InkCanvasSelectionChangingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventArgs -&gt; unit&#xA;override this.OnSelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-395">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-395">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-396">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-396">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-397">当用户创建新的笔画和/或元素，但在应用更改之前，将调用此方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-397">This method is called when a new selection of strokes and/or elements is made by the user, but before the change is applied.</span></span> <span data-ttu-id="3ca10-398">应用更改后，将调用 <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-398">After the change has been applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionChanged%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoved">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoved (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoved(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoved (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoved(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionMoved : EventArgs -&gt; unit&#xA;override this.OnSelectionMoved : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionMoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-399">未使用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-399">Not used.</span></span></param>
        <summary><span data-ttu-id="3ca10-400">一个事件，通告用户选择并移动了所选笔画和/或元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-400">An event announcing that the user selected and moved a selection of strokes and/or elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-401">此方法在用户移动了所选笔画和/或元素并已应用更改后调用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-401">This method is called after a selection of strokes and/or elements has been moved by the user and the change has been applied.</span></span> <span data-ttu-id="3ca10-402">在应用更改之前，将调用 <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-402">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoving%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionMoving">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionMoving (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionMoving(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionMoving(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionMoving (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionMoving(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit&#xA;override this.OnSelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionMoving e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-403">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-403">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-404">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-404">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-405">此方法将在用户请求在应用更改之前移动和更改所选笔画和/或元素后调用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-405">This method is called after the user requests that a selection of strokes and/or elements be moved and before the change is applied.</span></span> <span data-ttu-id="3ca10-406">应用更改后，将调用 <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-406">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionMoved%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionMoved(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResized">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionResized : EventArgs -&gt; unit&#xA;override this.OnSelectionResized : EventArgs -&gt; unit" Usage="inkCanvas.OnSelectionResized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-407">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-407">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-408">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-408">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResized" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-409">此方法在用户调整了所选笔画和/或元素并已应用更改后调用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-409">This method is called after a selection of strokes and/or elements has been resized by the user and the change has been applied.</span></span> <span data-ttu-id="3ca10-410">在应用更改之前，将调用 <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-410">Before the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResizing%2A> method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionResizing">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionResizing (System.Windows.Controls.InkCanvasSelectionEditingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionResizing(class System.Windows.Controls.InkCanvasSelectionEditingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnSelectionResizing(System.Windows.Controls.InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionResizing (e As InkCanvasSelectionEditingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionResizing(System::Windows::Controls::InkCanvasSelectionEditingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit&#xA;override this.OnSelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventArgs -&gt; unit" Usage="inkCanvas.OnSelectionResizing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasSelectionEditingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-411">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-411">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-412">引发 <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-412">Raises the <see cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-413">此方法将在用户请求重设笔画和/或元素的大小之后和应用更改之前调用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-413">This method is called after the user requests a selection of strokes and/or elements be resized and before the change is applied.</span></span> <span data-ttu-id="3ca10-414">应用更改后，将调用 <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-414">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.OnSelectionResized%2A> method will be called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvas.OnSelectionResized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnStrokeCollected">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeCollected (System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeCollected(class System.Windows.Controls.InkCanvasStrokeCollectedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeCollected(System.Windows.Controls.InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeCollected (e As InkCanvasStrokeCollectedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeCollected(System::Windows::Controls::InkCanvasStrokeCollectedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventArgs -&gt; unit&#xA;override this.OnStrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeCollected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeCollectedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-415">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-415">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-416">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-416">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-417">当用户以物理方式完成笔划时（例如，在进行运动后，从 tablet 中引发触笔），将调用 <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-417"><xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> is called when a user physically completes a stroke, for example, by raising the stylus from a tablet after making a motion.</span></span>  
  
 <span data-ttu-id="3ca10-418">以编程方式将笔划添加到 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 集合将不会调用 <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-418">A programmatic addition of strokes to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection will not call the <xref:System.Windows.Controls.InkCanvas.OnStrokeCollected%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErased">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErased (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErased(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErased(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErased (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErased(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeErased : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnStrokeErased : System.Windows.RoutedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeErased e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-419">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-419">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-420">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-420">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokeErasing">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokeErasing (System.Windows.Controls.InkCanvasStrokeErasingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokeErasing(class System.Windows.Controls.InkCanvasStrokeErasingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokeErasing(System.Windows.Controls.InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokeErasing (e As InkCanvasStrokeErasingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokeErasing(System::Windows::Controls::InkCanvasStrokeErasingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventArgs -&gt; unit&#xA;override this.OnStrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventArgs -&gt; unit" Usage="inkCanvas.OnStrokeErasing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokeErasingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-421">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-421">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-422">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-422">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErasing" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesReplaced (System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesReplaced(class System.Windows.Controls.InkCanvasStrokesReplacedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.OnStrokesReplaced(System.Windows.Controls.InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesReplaced (e As InkCanvasStrokesReplacedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesReplaced(System::Windows::Controls::InkCanvasStrokesReplacedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventArgs -&gt; unit&#xA;override this.OnStrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventArgs -&gt; unit" Usage="inkCanvas.OnStrokesReplaced e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.InkCanvasStrokesReplacedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="3ca10-423">事件数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-423">The event data.</span></span></param>
        <summary><span data-ttu-id="3ca10-424">引发 <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-424">Raises the <see cref="E:System.Windows.Controls.InkCanvas.StrokesReplaced" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Paste">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ca10-425">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-425">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-426"><xref:System.Windows.Controls.InkCanvas> 可以支持 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式、[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]和文本格式的剪贴板数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-426">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="inkCanvas.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ca10-427">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的左上角。</span><span class="sxs-lookup"><span data-stu-id="3ca10-427">Pastes the contents of the Clipboard to the top-left corner of the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-428"><xref:System.Windows.Controls.InkCanvas> 可以支持 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式、[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]和文本格式的剪贴板数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-428">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-429">下面的示例将一个元素复制到剪贴板，并将其粘贴到 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-429">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-430">此示例假定存在一个名为 `rect1`的元素，并且 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 事件已连接到该示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-430">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events have been connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3ca10-431">用于将剪贴板中的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-431">for pasting content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span> <span data-ttu-id="3ca10-432">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-432">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Paste(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="member this.Paste : System.Windows.Point -&gt; unit" Usage="inkCanvas.Paste point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="3ca10-433">笔画粘贴位置所在的点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-433">The point at which to paste the strokes.</span></span></param>
        <summary><span data-ttu-id="3ca10-434">将剪贴板的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 的给定点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-434">Pastes the contents of the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" /> at a given point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-435"><xref:System.Windows.Controls.InkCanvas> 可以支持 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式、[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]和文本格式的剪贴板数据。</span><span class="sxs-lookup"><span data-stu-id="3ca10-435">The <xref:System.Windows.Controls.InkCanvas> can support Clipboard data in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)], and text format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-436">下面的示例将一个元素复制到剪贴板，并将其粘贴到 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-436">The following example copies an element to the Clipboard and pastes it to the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-437">此示例假定存在一个名为 `rect1`的元素，并且 <xref:System.Windows.Controls.Primitives.ButtonBase.Click> 事件连接到该示例中的事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-437">This example assumes that there is an element called `rect1`, and that the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[InkCanvasSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[InkCanvasSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="3ca10-438">用于将剪贴板中的内容粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" />的权限。</span><span class="sxs-lookup"><span data-stu-id="3ca10-438">Permission to paste content from the Clipboard to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span> <span data-ttu-id="3ca10-439">关联的枚举：<see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-439">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionClipboard.AllClipboard" />.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.InkCanvas.CopySelection" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.CanPaste" />
      </Docs>
    </Member>
    <Member MemberName="PreferredPasteFormats">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Controls.InkCanvasClipboardFormat&gt; PreferredPasteFormats" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberSignature Language="VB.NET" Value="Public Property PreferredPasteFormats As IEnumerable(Of InkCanvasClipboardFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ PreferredPasteFormats { System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ get(); void set(System::Collections::Generic::IEnumerable&lt;System::Windows::Controls::InkCanvasClipboardFormat&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PreferredPasteFormats : seq&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt; with get, set" Usage="System.Windows.Controls.InkCanvas.PreferredPasteFormats" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Controls.InkCanvasClipboardFormat&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-440">获取或设置可粘贴到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中的格式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-440">Gets or sets formats that can be pasted onto the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-441">一个枚举值集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-441">A collection of enumeration values.</span></span> <span data-ttu-id="3ca10-442">默认值为 <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-442">The default is <see cref="F:System.Windows.Controls.InkCanvasClipboardFormat.InkSerializedFormat" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_PreferredPasteFormats"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="3ca10-443">XAML 属性元素用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-443">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.PreferredPasteFormats>  
    InkCanvasClipboardFormats  
  </object.PreferredPasteFormats>  
</object>  
```  
  
<a name="xamlValues_PreferredPasteFormats"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3ca10-444">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3ca10-444">XAML Values</span></span>  
 <span data-ttu-id="3ca10-445">*InkCanvasClipboardFormats*</span><span class="sxs-lookup"><span data-stu-id="3ca10-445">*InkCanvasClipboardFormats*</span></span>  
 <span data-ttu-id="3ca10-446"><xref:System.Windows.Controls.InkCanvasClipboardFormat> 枚举值的数组。</span><span class="sxs-lookup"><span data-stu-id="3ca10-446">An array of <xref:System.Windows.Controls.InkCanvasClipboardFormat> enumeration values.</span></span> <span data-ttu-id="3ca10-447">在 XAML 中指定数组需要 `x:Array` 使用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-447">Specifying an array in XAML requires `x:Array` usage.</span></span> <span data-ttu-id="3ca10-448">指定枚举值作为声明数组成员的元素需要 `x:Static` 使用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-448">Specifying an enumeration value as an element that declares an array member requires `x:Static` usage.</span></span> <span data-ttu-id="3ca10-449">有关详细信息，请参阅[X:Array 标记扩展](~/docs/framework/xaml-services/x-array-markup-extension.md)和[x:Static 标记扩展](~/docs/framework/xaml-services/x-static-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="3ca10-449">For more information, see [x:Array Markup Extension](~/docs/framework/xaml-services/x-array-markup-extension.md) and [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-450">下面的示例将 <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> 设置为使 <xref:System.Windows.Controls.InkCanvas> 接受 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] 格式，[!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3ca10-450">The following example sets the <xref:System.Windows.Controls.InkCanvas.PreferredPasteFormats%2A> to make the <xref:System.Windows.Controls.InkCanvas> accept [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] format, [!INCLUDE[TLA#tla_isf](~/includes/tlasharptla-isf-md.md)].</span></span>  
  
 [!code-csharp[InkCanvasSamples#26](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#26)]
 [!code-vb[InkCanvasSamples#26](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#26)]  
  
 <span data-ttu-id="3ca10-451">下面的示例在 [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]中完成相同的操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-451">The following example accomplishes the same thing in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[InkCanvasSamples#38](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window2.xaml#38)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResizeEnabled">
      <MemberSignature Language="C#" Value="public bool ResizeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ResizeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeEnabled : bool with get, set" Usage="System.Windows.Controls.InkCanvas.ResizeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-452">获取或设置一个布尔值，该值指示用户是否可以调整 <see cref="T:System.Windows.Controls.InkCanvas" /> 上选定的墨迹笔画和/或元素的大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-452">Gets or sets a Boolean value that indicates whether the user can resize selected ink strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-453">如果用户可以调整 <see langword="true" /> 上的笔画和/或元素的大小，则为 <see cref="T:System.Windows.Controls.InkCanvas" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-453"><see langword="true" /> if a user can resize strokes and/or elements on the <see cref="T:System.Windows.Controls.InkCanvas" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-454">如果将此属性设置为 "`true`"，则在选中时，将围绕墨迹笔划和/或元素绘制装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="3ca10-454">If this property is set to `true`, an adorner border is drawn around ink strokes and/or elements when they are selected.</span></span> <span data-ttu-id="3ca10-455">此边框允许用户调整所选对象的大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-455">This border enables the user to resize the selected objects.</span></span> <span data-ttu-id="3ca10-456">如果 `true`<xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A>，则装饰器还允许用户移动笔画和/或元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-456">If <xref:System.Windows.Controls.InkCanvas.MoveEnabled%2A> is `true`, the adorner enables the user to move the strokes and/or elements as well.</span></span>  
  
 <span data-ttu-id="3ca10-457">如果在选择了一个或多个墨迹笔画和/或元素的情况下，此属性设置为 `false`，则会自动从所选对象中删除装饰器边框。</span><span class="sxs-lookup"><span data-stu-id="3ca10-457">If this property is set to `false` while one or more ink strokes and/or elements are selected, the adorner border is automatically removed from the selected objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-458">下面的示例阻止用户移动 <xref:System.Windows.Controls.InkCanvas>上的元素和笔划并调整其大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-458">The following example prevents a user from moving and resizing the elements and strokes on a <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#7](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#7)]
 [!code-vb[InkCanvasSamples#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="see GetRight, and SetRight" />
      <MemberSignature Language="ILAsm" Value="see GetRight, and SetRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Right" />
      <MemberSignature Language="VB.NET" Value="see GetRight, and SetRight" />
      <MemberSignature Language="F#" Value="see GetRight, and SetRight" Usage="see GetRight, and SetRight" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ca10-459">获取或设置某元素的右边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的右边缘之间的距离。</span><span class="sxs-lookup"><span data-stu-id="3ca10-459">Gets or sets the distance between the right side of an element and the right side of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Right"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-460">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-460">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-461">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-461">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.RightProperty>|  
|<span data-ttu-id="3ca10-462">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-462">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-463">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-463">None</span></span>|  
  
<a name="xamlAttributeUsage_Right"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3ca10-464">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-464">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Right="double"/>  
- or -  
<object InkCanvas.Right="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Right"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3ca10-465">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3ca10-465">XAML Values</span></span>  
 <span data-ttu-id="3ca10-466">*双精度*</span><span class="sxs-lookup"><span data-stu-id="3ca10-466">*double*</span></span>  
 <span data-ttu-id="3ca10-467"><xref:System.Double> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-467">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3ca10-468">这被解释为 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 度量。</span><span class="sxs-lookup"><span data-stu-id="3ca10-468">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3ca10-469">字符串不需要显式包含小数点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-469">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3ca10-470">例如，`1` 的值是可接受的。</span><span class="sxs-lookup"><span data-stu-id="3ca10-470">For instance, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3ca10-471">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3ca10-471">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3ca10-472">如上所述的*双精度*值，后跟以下单元声明字符串之一： `px`、`in`、`cm``pt`。</span><span class="sxs-lookup"><span data-stu-id="3ca10-472">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3ca10-473">`px` （默认值）为 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3ca10-473">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3ca10-474">`in` 为英寸;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="3ca10-474">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3ca10-475">`cm` 是厘米;1cm = = （96/2.54） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-475">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3ca10-476">`pt` 为点;1pt = = （96/72） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-476">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-477">下面的示例演示如何设置 <xref:System.Windows.Controls.InkCanvas>上的 <xref:System.Windows.Controls.Label> 的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-477">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RightProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.RightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-478">标识 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-478">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ca10-479">选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象和/或 <see cref="T:System.Windows.FrameworkElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-479">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects and/or <see cref="T:System.Windows.FrameworkElement" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-480"><xref:System.Windows.Controls.InkCanvas> 可以包含 <xref:System.Windows.Ink.Stroke> 对象，这些对象是为了响应用户的触笔输入而创建的，而 <xref:System.Windows.FrameworkElement> 对象（例如 <xref:System.Windows.Controls.Image> 和 <xref:System.Windows.Controls.Button> 对象）。</span><span class="sxs-lookup"><span data-stu-id="3ca10-480">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3ca10-481">将显示所选笔画，其中包含装饰器，便于识别和操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-481">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3ca10-482"><xref:System.Windows.FrameworkElement> 对象在选定时不会以不同的方式显示。</span><span class="sxs-lookup"><span data-stu-id="3ca10-482"><xref:System.Windows.FrameworkElement> objects will not display differently when selected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberSignature Language="F#" Value="member this.Select : seq&lt;System.Windows.UIElement&gt; -&gt; unit" Usage="inkCanvas.Select selectedElements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedElements"><span data-ttu-id="3ca10-483">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-483">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span></span></param>
        <summary><span data-ttu-id="3ca10-484">选择一组 <see cref="T:System.Windows.UIElement" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-484">Selects a set of <see cref="T:System.Windows.UIElement" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-485"><xref:System.Windows.Controls.InkCanvas> 可以包含 <xref:System.Windows.Ink.Stroke> 对象，这些对象是为响应用户触笔输入和 <xref:System.Windows.UIElement> 对象（如 <xref:System.Windows.Controls.Image> 和 <xref:System.Windows.Controls.Button> 对象）而创建的。</span><span class="sxs-lookup"><span data-stu-id="3ca10-485">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3ca10-486">所选笔画显示时带有装饰器，以方便识别和操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-486">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3ca10-487"><xref:System.Windows.UIElement> 对象在选定时不会以不同的方式显示。</span><span class="sxs-lookup"><span data-stu-id="3ca10-487"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="3ca10-488">如果 `selectedElements` 中的 <xref:System.Windows.UIElement> 不在子集合中，<xref:System.Windows.Controls.InkCanvas.Select%2A> 将忽略 <xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-488">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-489">下面的示例选择 <xref:System.Windows.Controls.InkCanvas>上的所有笔划和两个元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-489">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-490">此示例假定存在一个名为 `textbox1` <xref:System.Windows.Controls.TextBox>，<xref:System.Windows.Controls.Button> 称为 `button1`，并且这两个控件都是 <xref:System.Windows.Controls.InkCanvas>的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-490">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Windows.Ink.StrokeCollection -&gt; unit" Usage="inkCanvas.Select selectedStrokes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes"><span data-ttu-id="3ca10-491">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-491">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span></span></param>
        <summary><span data-ttu-id="3ca10-492">选择一组墨迹 <see cref="T:System.Windows.Ink.Stroke" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-492">Selects a set of ink <see cref="T:System.Windows.Ink.Stroke" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-493"><xref:System.Windows.Controls.InkCanvas> 可以包含 <xref:System.Windows.Ink.Stroke> 对象，这些对象是为了响应用户的触笔输入而创建的，而 <xref:System.Windows.FrameworkElement> 对象（例如 <xref:System.Windows.Controls.Image> 和 <xref:System.Windows.Controls.Button> 对象）。</span><span class="sxs-lookup"><span data-stu-id="3ca10-493">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input, and <xref:System.Windows.FrameworkElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3ca10-494">所选笔画显示时带有装饰器，以方便识别和操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-494">Selected strokes are displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3ca10-495"><xref:System.Windows.FrameworkElement> 对象在选定时不会以不同的方式显示。</span><span class="sxs-lookup"><span data-stu-id="3ca10-495"><xref:System.Windows.FrameworkElement> objects do not display differently when selected.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-496">下面的示例选择 <xref:System.Windows.Controls.InkCanvas>上的所有笔划和两个元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-496">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="3ca10-497">此示例假定存在一个名为 `textbox1` <xref:System.Windows.Controls.TextBox>，<xref:System.Windows.Controls.Button> 称为 `button1`，并且这两个控件都是 <xref:System.Windows.Controls.InkCanvas>的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-497">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ca10-498"><paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-498">One or more strokes in <paramref name="selectedStrokes" /> is not in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (System.Windows.Ink.StrokeCollection selectedStrokes, System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt; selectedElements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(class System.Windows.Ink.StrokeCollection selectedStrokes, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.UIElement&gt; selectedElements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.Select(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (selectedStrokes As StrokeCollection, selectedElements As IEnumerable(Of UIElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(System::Windows::Ink::StrokeCollection ^ selectedStrokes, System::Collections::Generic::IEnumerable&lt;System::Windows::UIElement ^&gt; ^ selectedElements);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Windows.Ink.StrokeCollection * seq&lt;System.Windows.UIElement&gt; -&gt; unit" Usage="inkCanvas.Select (selectedStrokes, selectedElements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectedStrokes" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="selectedElements" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.UIElement&gt;" />
      </Parameters>
      <Docs>
        <param name="selectedStrokes"><span data-ttu-id="3ca10-499">要选择的 <see cref="T:System.Windows.Ink.Stroke" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-499">A collection of <see cref="T:System.Windows.Ink.Stroke" /> objects to select.</span></span></param>
        <param name="selectedElements"><span data-ttu-id="3ca10-500">要选择的 <see cref="T:System.Windows.UIElement" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-500">A collection of <see cref="T:System.Windows.UIElement" /> objects to select.</span></span></param>
        <summary><span data-ttu-id="3ca10-501">选择一个由 <see cref="T:System.Windows.Ink.Stroke" /> 对象与 <see cref="T:System.Windows.UIElement" /> 对象构成的组合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-501">Selects a combination of <see cref="T:System.Windows.Ink.Stroke" /> and <see cref="T:System.Windows.UIElement" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-502"><xref:System.Windows.Controls.InkCanvas> 可以包含 <xref:System.Windows.Ink.Stroke> 对象，这些对象是为响应用户触笔输入和 <xref:System.Windows.UIElement> 对象（如 <xref:System.Windows.Controls.Image> 和 <xref:System.Windows.Controls.Button> 对象）而创建的。</span><span class="sxs-lookup"><span data-stu-id="3ca10-502">An <xref:System.Windows.Controls.InkCanvas> can contain <xref:System.Windows.Ink.Stroke> objects, which are created in response to user stylus input and <xref:System.Windows.UIElement> objects, such as <xref:System.Windows.Controls.Image> and <xref:System.Windows.Controls.Button> objects.</span></span>  
  
 <span data-ttu-id="3ca10-503">将显示所选笔画，其中包含装饰器，便于识别和操作。</span><span class="sxs-lookup"><span data-stu-id="3ca10-503">Selected strokes will be displayed with an adorner around them for ease of recognition and manipulation.</span></span> <span data-ttu-id="3ca10-504"><xref:System.Windows.UIElement> 对象在选定时不会以不同的方式显示。</span><span class="sxs-lookup"><span data-stu-id="3ca10-504"><xref:System.Windows.UIElement> objects will not display differently when selected.</span></span> <span data-ttu-id="3ca10-505">如果 `selectedElements` 中的 <xref:System.Windows.UIElement> 不在子集合中，<xref:System.Windows.Controls.InkCanvas.Select%2A> 将忽略 <xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-505">If a <xref:System.Windows.UIElement> in `selectedElements` is not in the Children collection, <xref:System.Windows.Controls.InkCanvas.Select%2A> ignores the <xref:System.Windows.UIElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-506">下面的示例选择 <xref:System.Windows.Controls.InkCanvas>上的所有笔划和两个元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-506">The following example selects all the strokes and two elements on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  <span data-ttu-id="3ca10-507">此示例假定存在一个名为 `textbox1` <xref:System.Windows.Controls.TextBox>，<xref:System.Windows.Controls.Button> 称为 `button1`，并且这两个控件都是 <xref:System.Windows.Controls.InkCanvas>的子元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-507">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textbox1` and a <xref:System.Windows.Controls.Button> called `button1` - and that both controls are child elements of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[InkCanvasSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ca10-508"><paramref name="selectedStrokes" /> 中的一个或多个笔画没有包含在 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-508">One or more strokes in <paramref name="selectedStrokes" /> is not included in the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As EventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : EventHandler " Usage="member this.SelectionChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanged As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-509">在 <see cref="T:System.Windows.Controls.InkCanvas" /> 上的选择更改时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-509">Occurs when the selection on the <see cref="T:System.Windows.Controls.InkCanvas" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-510">此事件在用户选择和应用一组墨笔划和/或元素后引发。</span><span class="sxs-lookup"><span data-stu-id="3ca10-510">This event is raised after a set of ink strokes and/or elements has been selected and applied by the user.</span></span>  
  
 <span data-ttu-id="3ca10-511">相反，如果在应用所选内容之前必须处理选择一组墨笔划和/或元素的请求，请将事件处理程序添加到 <xref:System.Windows.Controls.InkCanvas.SelectionChanging> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-511">If, instead, you must handle a request that select a set of ink strokes and/or elements before the selection is applied, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-512">下面的示例阻止用户所选内容小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-512">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionChanging">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionChangingEventHandler SelectionChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanging As InkCanvasSelectionChangingEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionChangingEventHandler ^ SelectionChanging;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventHandler " Usage="member this.SelectionChanging : System.Windows.Controls.InkCanvasSelectionChangingEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionChanging As InkCanvasSelectionChangingEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-513">在选择了一组新墨迹笔画和/或元素时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-513">Occurs when a new set of ink strokes and/or elements is being selected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-514">如果用户选择了笔画和/或元素，但在应用更改之前，将引发 <xref:System.Windows.Controls.InkCanvas.SelectionChanging> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-514">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is raised when strokes and/or elements are selected by the user - but before the change is applied.</span></span>  
  
 <span data-ttu-id="3ca10-515">当 <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> 接收到 <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> 对象时，将处理 <xref:System.Windows.Controls.InkCanvas.SelectionChanging> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-515">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event is processed when the <xref:System.Windows.Controls.InkCanvasSelectionChangingEventHandler> receives an <xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> object.</span></span> <span data-ttu-id="3ca10-516"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> 提供了在用户选择 <xref:System.Windows.FrameworkElement> 和 <xref:System.Windows.Ink.StrokeCollection> 对象之后对其进行访问的方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-516"><xref:System.Windows.Controls.InkCanvasSelectionChangingEventArgs> provides methods for accessing <xref:System.Windows.FrameworkElement> and <xref:System.Windows.Ink.StrokeCollection> objects after they are selected by the user.</span></span>  
  
 <span data-ttu-id="3ca10-517">应用更改后，将引发 <xref:System.Windows.Controls.InkCanvas.SelectionChanged> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-517">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionChanged> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ca10-518">删除所选笔画或 <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> 属性更改时，不会发生 <xref:System.Windows.Controls.InkCanvas.SelectionChanging> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-518">The <xref:System.Windows.Controls.InkCanvas.SelectionChanging> event does not occur when the selected strokes are deleted or when the <xref:System.Windows.Controls.InkCanvas.ActiveEditingMode%2A> property changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-519">下面的示例将选定笔画皇家为蓝色。</span><span class="sxs-lookup"><span data-stu-id="3ca10-519">The following example makes selected strokes royal blue.</span></span>  
  
 [!code-csharp[InkCanvasSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[InkCanvasSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedElements" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedElements(System.Collections.Generic.IEnumerable{System.Windows.UIElement})" />
        <altmember cref="M:System.Windows.Controls.InkCanvasSelectionChangingEventArgs.SetSelectedStrokes(System.Windows.Ink.StrokeCollection)" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoved">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionMoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionMoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionMoved As EventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionMoved;" />
      <MemberSignature Language="F#" Value="member this.SelectionMoved : EventHandler " Usage="member this.SelectionMoved : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoved As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-520">在用户移动了所选笔画和/或元素之后发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-520">Occurs after the user moves a selection of strokes and/or elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-521">在移动所选笔画和/或元素后，但在笔划或元素数据更新以记录其新位置之前，会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-521">This event occurs after a selection of strokes and/or elements is moved, but before the stroke or element data is updated to record its new position.</span></span> <span data-ttu-id="3ca10-522">向 <xref:System.Windows.Controls.InkCanvas.SelectionMoving> 事件添加事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-522">Add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionMoving> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-523">下面的示例在用户移动了某个 <xref:System.Windows.Controls.InkCanvas> 上的项后对其取消了选定。</span><span class="sxs-lookup"><span data-stu-id="3ca10-523">The following example unselects items on an <xref:System.Windows.Controls.InkCanvas> after the user moves them.</span></span>  
  
 [!code-csharp[InkCanvasSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#19)]
 [!code-vb[InkCanvasSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionMoving">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionMoving" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionMoving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionMoving As InkCanvasSelectionEditingEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionMoving;" />
      <MemberSignature Language="F#" Value="member this.SelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " Usage="member this.SelectionMoving : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionMoving As InkCanvasSelectionEditingEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-524">在移动选定笔画和元素之前发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-524">Occurs before selected strokes and elements are moved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-525">此事件在用户请求移动了所选笔画和/或元素之后、但在应用更改之前发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-525">This event occurs after the user requests that a selection of strokes and/or elements be moved, but before the change is applied.</span></span>  
  
 <span data-ttu-id="3ca10-526">事件处理程序接收类型 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> 的参数，该参数具有两个属性： <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 和 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-526">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> with two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="3ca10-527"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 在移动之前定义选定内容的边界，<xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> 在移动后定义选定内容的边界。</span><span class="sxs-lookup"><span data-stu-id="3ca10-527"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the move and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the move.</span></span>  
  
 <span data-ttu-id="3ca10-528">应用更改后，将发生 <xref:System.Windows.Controls.InkCanvas.SelectionMoved> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-528">After the change is applied, the <xref:System.Windows.Controls.InkCanvas.SelectionMoved> event will occur.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-529">下面的示例阻止用户在 <xref:System.Windows.Controls.InkCanvas>上垂直移动选定项。</span><span class="sxs-lookup"><span data-stu-id="3ca10-529">The following example prevents the user from moving selected items vertically on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[InkCanvasSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionMoved" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResized">
      <MemberSignature Language="C#" Value="public event EventHandler SelectionResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectionResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionResized As EventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectionResized;" />
      <MemberSignature Language="F#" Value="member this.SelectionResized : EventHandler " Usage="member this.SelectionResized : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResized As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-530">在用户调整了所选笔画和/或元素大小时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-530">Occurs when a selection of strokes and/or elements has been resized by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-531">在调整所选笔画和/或元素的大小时引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-531">This event is raised after a selection of strokes and/or elements is resized.</span></span>  
  
 <span data-ttu-id="3ca10-532">相反，如果您必须处理请求以便在调整笔画和/或元素的大小之前调整选择大小，请将事件处理程序添加到 <xref:System.Windows.Controls.InkCanvas.SelectionResizing> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-532">If, instead, you must handle a request to resize a selection before the strokes and/or elements are resized, add an event handler to the <xref:System.Windows.Controls.InkCanvas.SelectionResizing> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-533">下面的示例在用户调整所选内容的大小时取消对 <xref:System.Windows.Controls.InkCanvas> 上的所有项目的选择。</span><span class="sxs-lookup"><span data-stu-id="3ca10-533">The following example unselects all the items on an <xref:System.Windows.Controls.InkCanvas> after the user re-sizes the selection.</span></span>  
  
 [!code-csharp[InkCanvasSamples#23](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#23)]
 [!code-vb[InkCanvasSamples#23](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SelectionResizing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasSelectionEditingEventHandler SelectionResizing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.SelectionResizing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionResizing As InkCanvasSelectionEditingEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasSelectionEditingEventHandler ^ SelectionResizing;" />
      <MemberSignature Language="F#" Value="member this.SelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " Usage="member this.SelectionResizing : System.Windows.Controls.InkCanvasSelectionEditingEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SelectionResizing As InkCanvasSelectionEditingEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasSelectionEditingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-534">在调整选定笔画和元素的大小之前发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-534">Occurs before selected strokes and elements are resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-535">此事件在用户请求调整了所选笔画和/或元素的大小之后但在应用更改之前发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-535">This event occurs after the user requests that a selection of strokes and/or elements be resized, but before the change is applied.</span></span>  
  
 <span data-ttu-id="3ca10-536">事件处理程序接收包含两个属性的 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> 类型的参数： <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 和 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-536">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs> that contains two properties: <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A>.</span></span> <span data-ttu-id="3ca10-537"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> 在调整大小操作之前定义选定内容的边界，并且 <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> 在调整大小操作后定义选定内容的边界。</span><span class="sxs-lookup"><span data-stu-id="3ca10-537"><xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.OldRectangle%2A> defines the boundaries of the selection before the resizing operation and <xref:System.Windows.Controls.InkCanvasSelectionEditingEventArgs.NewRectangle%2A> defines the boundaries of the selection after the resizing operation.</span></span>  
  
 <span data-ttu-id="3ca10-538">在将笔画和/或元素更新为新的大小时，会引发 <xref:System.Windows.Controls.InkCanvas.SelectionResized> 事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-538">After the strokes and/or elements are updated with the new size, the <xref:System.Windows.Controls.InkCanvas.SelectionResized> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-539">下面的示例阻止用户所选内容小于其原始大小。</span><span class="sxs-lookup"><span data-stu-id="3ca10-539">The following example prevents the user from making a selection smaller than its original size.</span></span>  
  
 [!code-csharp[InkCanvasSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[InkCanvasSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.InkCanvas.SelectionResized" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedStrokes" />
        <altmember cref="M:System.Windows.Controls.InkCanvas.GetSelectedElements" />
      </Docs>
    </Member>
    <Member MemberName="SetBottom">
      <MemberSignature Language="C#" Value="public static void SetBottom (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBottom(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetBottom(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetBottom (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetBottom(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetBottom : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetBottom (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-540">要设置其下边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-540">The element on which to set the bottom property.</span></span></param>
        <param name="length"><span data-ttu-id="3ca10-541"><paramref name="element" /> 的下边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-541">The bottom coordinate of <paramref name="element" />.</span></span></param>
        <summary><span data-ttu-id="3ca10-542">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-542">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Bottom" /> attached property for a given dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-543">下面的示例演示如何设置 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-543">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#28](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#28)]
 [!code-vb[InkCanvasSamples#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEnabledGestures">
      <MemberSignature Language="C#" Value="public void SetEnabledGestures (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt; applicationGestures);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEnabledGestures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Ink.ApplicationGesture&gt; applicationGestures) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEnabledGestures (applicationGestures As IEnumerable(Of ApplicationGesture))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEnabledGestures(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::ApplicationGesture&gt; ^ applicationGestures);" />
      <MemberSignature Language="F#" Value="member this.SetEnabledGestures : seq&lt;System.Windows.Ink.ApplicationGesture&gt; -&gt; unit" Usage="inkCanvas.SetEnabledGestures applicationGestures" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationGestures" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.ApplicationGesture&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationGestures"><span data-ttu-id="3ca10-544"><see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势的集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-544">A collection of application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span></span></param>
        <summary><span data-ttu-id="3ca10-545">设置 <see cref="T:System.Windows.Controls.InkCanvas" /> 将要识别的应用程序笔势。</span><span class="sxs-lookup"><span data-stu-id="3ca10-545">Sets the application gestures that the <see cref="T:System.Windows.Controls.InkCanvas" /> will recognize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-546">下面的示例演示如何设置 <xref:System.Windows.Controls.InkCanvas> 来识别应用程序手势。</span><span class="sxs-lookup"><span data-stu-id="3ca10-546">The following example demonstrates how to set up an <xref:System.Windows.Controls.InkCanvas> to recognize application gestures.</span></span>  
  
 [!code-csharp[GestureSample#3](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#3)]
 [!code-vb[GestureSample#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[GestureSample#1](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#1)]
[!code-vb[GestureSample#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ca10-547"><see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> 属性为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-547">The <see cref="P:System.Windows.Controls.InkCanvas.IsGestureRecognizerAvailable" /> property is <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLeft">
      <MemberSignature Language="C#" Value="public static void SetLeft (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLeft(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetLeft(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLeft (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLeft(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetLeft : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetLeft (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-548">要设置其左边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-548">The element on which to set the left property.</span></span></param>
        <param name="length"><span data-ttu-id="3ca10-549"><paramref name="element" /> 的左边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-549">The left coordinate of <paramref name="element" />.</span></span></param>
        <summary><span data-ttu-id="3ca10-550">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Left" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-550">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Left" /> attached property for a given dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-551">下面的示例演示如何设置 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-551">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#29](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#29)]
 [!code-vb[InkCanvasSamples#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRight">
      <MemberSignature Language="C#" Value="public static void SetRight (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetRight(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetRight(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetRight (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetRight(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetRight : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetRight (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-552">要设置其右边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-552">The element on which to set the right property.</span></span></param>
        <param name="length"><span data-ttu-id="3ca10-553"><paramref name="element" /> 的右边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-553">The right coordinate of <paramref name="element" />.</span></span></param>
        <summary><span data-ttu-id="3ca10-554">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Right" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-554">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Right" /> attached property for a given dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-555">下面的示例演示如何设置 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-555">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#30](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#30)]
 [!code-vb[InkCanvasSamples#30](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTop">
      <MemberSignature Language="C#" Value="public static void SetTop (System.Windows.UIElement element, double length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTop(class System.Windows.UIElement element, float64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.SetTop(System.Windows.UIElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTop (element As UIElement, length As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTop(System::Windows::UIElement ^ element, double length);" />
      <MemberSignature Language="F#" Value="static member SetTop : System.Windows.UIElement * double -&gt; unit" Usage="System.Windows.Controls.InkCanvas.SetTop (element, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.UIElement" />
        <Parameter Name="length" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3ca10-556">要设置其上边缘属性的元素。</span><span class="sxs-lookup"><span data-stu-id="3ca10-556">The element on which to set the top property.</span></span></param>
        <param name="length"><span data-ttu-id="3ca10-557"><paramref name="element" /> 的上边缘坐标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-557">The top coordinate of <paramref name="element" />.</span></span></param>
        <summary><span data-ttu-id="3ca10-558">设置给定依赖项对象的 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性的值。</span><span class="sxs-lookup"><span data-stu-id="3ca10-558">Sets the value of the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property for a given dependency object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-559">下面的示例演示如何设置 <xref:System.Windows.Controls.Button>的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-559">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#27](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#27)]
 [!code-vb[InkCanvasSamples#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCollected">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeCollectedEventHandler StrokeCollected" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeCollected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeCollected As InkCanvasStrokeCollectedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeCollectedEventHandler ^ StrokeCollected;" />
      <MemberSignature Language="F#" Value="member this.StrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventHandler " Usage="member this.StrokeCollected : System.Windows.Controls.InkCanvasStrokeCollectedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeCollectedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-560">在将用户绘制的笔画添加到 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-560">Occurs when a stroke drawn by the user is added to the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-561">当用户使用指针设备完成笔划时，将引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-561">This event is raised when a user completes a stroke using a pointing device.</span></span> <span data-ttu-id="3ca10-562">例如，用户可能会在进行运动后从数字化仪引发触笔，从而完成笔画。</span><span class="sxs-lookup"><span data-stu-id="3ca10-562">For example, a user might raise a stylus from a digitizer after making a motion, thereby completing a stroke.</span></span>  
  
 <span data-ttu-id="3ca10-563">事件处理程序接收 <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>类型的参数，该参数引用完成的笔画。</span><span class="sxs-lookup"><span data-stu-id="3ca10-563">The event handler receives an argument of type <xref:System.Windows.Controls.InkCanvasStrokeCollectedEventArgs>, which references the completed stroke.</span></span> <span data-ttu-id="3ca10-564">还会将笔划添加到 <xref:System.Windows.Controls.InkCanvas>的 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-564">The stroke is also added to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 <span data-ttu-id="3ca10-565">以编程方式将 <xref:System.Windows.Ink.Stroke> 对象添加到 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 集合不会引发此事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-565">The programmatic addition of a <xref:System.Windows.Ink.Stroke> object to the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> collection does not raise this event.</span></span>  
  
<a name="routedEventInfo_StrokeCollected"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3ca10-566">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-566">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-567">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-567">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeCollectedEvent>|  
|<span data-ttu-id="3ca10-568">路由策略</span><span class="sxs-lookup"><span data-stu-id="3ca10-568">Routing strategy</span></span>|<span data-ttu-id="3ca10-569">冒泡</span><span class="sxs-lookup"><span data-stu-id="3ca10-569">Bubbling</span></span>|  
|<span data-ttu-id="3ca10-570">委托</span><span class="sxs-lookup"><span data-stu-id="3ca10-570">Delegate</span></span>|<xref:System.Windows.Controls.InkCanvasStrokeCollectedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-571">下面的示例在用户将笔划添加到 <xref:System.Windows.Controls.InkCanvas>时，将时间作为自定义属性保存。</span><span class="sxs-lookup"><span data-stu-id="3ca10-571">The following example saves the time as a custom property when a user adds a stroke to the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[InkCanvasSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="StrokeCollectedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeCollectedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeCollectedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeCollectedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeCollectedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokeCollectedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.StrokeCollectedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-572">标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-572">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeCollected" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErased">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler StrokeErased;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler StrokeErased" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErased" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeErased As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ StrokeErased;" />
      <MemberSignature Language="F#" Value="member this.StrokeErased : System.Windows.RoutedEventHandler " Usage="member this.StrokeErased : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-573">在用户擦除笔画时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-573">Occurs when user erases a stroke.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-574">如果 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 属性设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> 或 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>，用户擦除墨迹时会发生此事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-574">This event occurs when a user erases ink whether the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke>.</span></span>  
  
<a name="routedEventInfo_StrokeErasing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3ca10-575">路由事件信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-575">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-576">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-576">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokeErasedEvent>|  
|<span data-ttu-id="3ca10-577">路由策略</span><span class="sxs-lookup"><span data-stu-id="3ca10-577">Routing strategy</span></span>|<span data-ttu-id="3ca10-578">冒泡</span><span class="sxs-lookup"><span data-stu-id="3ca10-578">Bubbling</span></span>|  
|<span data-ttu-id="3ca10-579">委托</span><span class="sxs-lookup"><span data-stu-id="3ca10-579">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-580">下面的示例报告当 <xref:System.Windows.Controls.InkCanvas.StrokeErased> 事件发生时，<xref:System.Windows.Controls.InkCanvas> 上的笔划的数目。</span><span class="sxs-lookup"><span data-stu-id="3ca10-580">The following example reports the number of strokes that are on an <xref:System.Windows.Controls.InkCanvas> when the <xref:System.Windows.Controls.InkCanvas.StrokeErased> event occurs.</span></span> <span data-ttu-id="3ca10-581">如果 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> 并且用户擦除了笔划的中间部分，则 <xref:System.Windows.Controls.InkCanvas> 上的笔画数将增加。</span><span class="sxs-lookup"><span data-stu-id="3ca10-581">If <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint> and the user erases the middle of a stroke, the number of strokes on the <xref:System.Windows.Controls.InkCanvas> increases.</span></span> <span data-ttu-id="3ca10-582">这是因为旧笔画已替换为两个新笔画。</span><span class="sxs-lookup"><span data-stu-id="3ca10-582">This is because the old stroke was replaced by two new strokes.</span></span>  
  
 [!code-csharp[InkCanvasSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#18)]
 [!code-vb[InkCanvasSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StrokeErasedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StrokeErasedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokeErasedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StrokeErasedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokeErasedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.InkCanvas.StrokeErasedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-583">标识 <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-583">Identifies the <see cref="E:System.Windows.Controls.InkCanvas.StrokeErased" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeErasing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokeErasingEventHandler StrokeErasing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokeErasing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokeErasing As InkCanvasStrokeErasingEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokeErasingEventHandler ^ StrokeErasing;" />
      <MemberSignature Language="F#" Value="member this.StrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventHandler " Usage="member this.StrokeErasing : System.Windows.Controls.InkCanvasStrokeErasingEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event StrokeErasing As InkCanvasStrokeErasingEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokeErasingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-584">恰好在用户擦除笔画之前发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-584">Occurs just before a user erases a stroke.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-585">如果要检查是否应擦除笔划，请处理此事件。</span><span class="sxs-lookup"><span data-stu-id="3ca10-585">Handle this event when you want to check whether a stroke should be erased.</span></span> <span data-ttu-id="3ca10-586">如果要阻止擦除笔划，请将 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 "`true`"。</span><span class="sxs-lookup"><span data-stu-id="3ca10-586">Set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true` if you want to prevent the stroke from being erased.</span></span> <span data-ttu-id="3ca10-587">如果 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> 或 <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> 属性设置为 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> 或 <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>，则可以使用此方法。</span><span class="sxs-lookup"><span data-stu-id="3ca10-587">You can use this technique when the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> or <xref:System.Windows.Controls.InkCanvas.EditingModeInverted%2A> property is set to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> or <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-588">下面的示例阻止擦除任何呈现为荧光笔的笔划。</span><span class="sxs-lookup"><span data-stu-id="3ca10-588">The following example prevents any strokes rendered as highlighters from being erased.</span></span> <span data-ttu-id="3ca10-589">该示例假定 <xref:System.Windows.Controls.InkCanvas> 连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-589">The example assumes that the <xref:System.Windows.Controls.InkCanvas> is connected to the event handler.</span></span>  
  
 [!code-csharp[DrawingAttributes#16](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#16)]
 [!code-vb[DrawingAttributes#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Strokes">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection Strokes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Ink.StrokeCollection Strokes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Strokes" />
      <MemberSignature Language="VB.NET" Value="Public Property Strokes As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Ink::StrokeCollection ^ Strokes { System::Windows::Ink::StrokeCollection ^ get(); void set(System::Windows::Ink::StrokeCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Strokes : System.Windows.Ink.StrokeCollection with get, set" Usage="System.Windows.Controls.InkCanvas.Strokes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-590">获取或设置 <see cref="T:System.Windows.Ink.Stroke" /> 收集的墨迹 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-590">Gets or sets the collection of ink <see cref="T:System.Windows.Ink.Stroke" /> objects collected by the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <value><span data-ttu-id="3ca10-591">包含在 <see cref="T:System.Windows.Ink.Stroke" /> 中的 <see cref="T:System.Windows.Controls.InkCanvas" /> 对象集合。</span><span class="sxs-lookup"><span data-stu-id="3ca10-591">The collection of <see cref="T:System.Windows.Ink.Stroke" /> objects contained within the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Strokes"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-592">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-592">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-593">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-593">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.StrokesProperty>|  
|<span data-ttu-id="3ca10-594">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-594">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-595">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-595">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-596">下面的示例演示如何将两个 <xref:System.Windows.Ink.StrokeCollection> 对象用于同一个 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-596">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects for the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-597">在此示例中，每个玩家均使用单个 "墨表面"，即使它们共享相同的 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-597">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-598">此示例假设 click 事件已连接到事件处理程序，`switchPlayersButton_Click`。</span><span class="sxs-lookup"><span data-stu-id="3ca10-598">This example assumes the click event is connected to the event handler, `switchPlayersButton_Click`.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 <span data-ttu-id="3ca10-599">下面的示例演示如何将 <xref:System.Windows.Controls.InkCanvas> 的 <xref:System.Windows.Controls.InkCanvas.Strokes%2A> 属性绑定到另一个 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-599">The following example demonstrates how to bind the <xref:System.Windows.Controls.InkCanvas.Strokes%2A> property of an <xref:System.Windows.Controls.InkCanvas> to another <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xaml[InkCanvasBindingSnippet#2](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasBindingSnippet/CS/Window2.xaml#2)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Ink.StrokeCollection" />
      </Docs>
    </Member>
    <Member MemberName="StrokesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StrokesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StrokesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StrokesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StrokesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StrokesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.StrokesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-600">标识 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 依赖项属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-600">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesReplaced">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.InkCanvasStrokesReplacedEventHandler StrokesReplaced" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.InkCanvas.StrokesReplaced" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StrokesReplaced As InkCanvasStrokesReplacedEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::InkCanvasStrokesReplacedEventHandler ^ StrokesReplaced;" />
      <MemberSignature Language="F#" Value="member this.StrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventHandler " Usage="member this.StrokesReplaced : System.Windows.Controls.InkCanvasStrokesReplacedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesReplaced As InkCanvasStrokesReplacedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.InkCanvasStrokesReplacedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-601">在替换 <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> 属性时发生。</span><span class="sxs-lookup"><span data-stu-id="3ca10-601">Occurs when the <see cref="P:System.Windows.Controls.InkCanvas.Strokes" /> property is replaced.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ca10-602">下面的示例演示如何使用两个共同位于同一 <xref:System.Windows.Controls.InkCanvas>上的 <xref:System.Windows.Ink.StrokeCollection> 对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-602">The following example demonstrates how to use two <xref:System.Windows.Ink.StrokeCollection> objects that are co-located on the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-603">在此示例中，每个玩家均使用单个 "墨表面"，即使它们共享相同的 <xref:System.Windows.Controls.InkCanvas>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-603">In this example, player one and player two each use an individual "inking surface" even though they share the same <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-604">此示例假定 `switchPlayersButton_Click` 事件已连接到事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="3ca10-604">This example assumes that the `switchPlayersButton_Click` event is connected to the event handler.</span></span>  
  
 [!code-csharp[InkCanvasSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[InkCanvasSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3ca10-605">要添加的子对象。</span><span class="sxs-lookup"><span data-stu-id="3ca10-605">The child object to add.</span></span></param>
        <summary><span data-ttu-id="3ca10-606">将指定的对象添加到 <see cref="T:System.Windows.Controls.InkCanvas" /> 中。</span><span class="sxs-lookup"><span data-stu-id="3ca10-606">Adds the specified object to the <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.InkCanvas.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (textData As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ textData) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="3ca10-607">未使用。</span><span class="sxs-lookup"><span data-stu-id="3ca10-607">Not used.</span></span></param>
        <summary><span data-ttu-id="3ca10-608">添加位于标记内的文本。</span><span class="sxs-lookup"><span data-stu-id="3ca10-608">Adds the text that within the tags in markup.</span></span> <span data-ttu-id="3ca10-609">始终引发一个 <see cref="T:System.ArgumentException" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-609">Always throws an <see cref="T:System.ArgumentException" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="see GetTop, and SetTop" />
      <MemberSignature Language="ILAsm" Value="see GetTop, and SetTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.Top" />
      <MemberSignature Language="VB.NET" Value="see GetTop, and SetTop" />
      <MemberSignature Language="F#" Value="see GetTop, and SetTop" Usage="see GetTop, and SetTop" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ca10-610">获取或设置某元素的上边缘与其父 <see cref="T:System.Windows.Controls.InkCanvas" /> 的上边缘之间的距离。</span><span class="sxs-lookup"><span data-stu-id="3ca10-610">Gets or sets the distance between the top of an element and the top of its parent <see cref="T:System.Windows.Controls.InkCanvas" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Top"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3ca10-611">依赖项属性信息</span><span class="sxs-lookup"><span data-stu-id="3ca10-611">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3ca10-612">标识符字段</span><span class="sxs-lookup"><span data-stu-id="3ca10-612">Identifier field</span></span>|<xref:System.Windows.Controls.InkCanvas.TopProperty>|  
|<span data-ttu-id="3ca10-613">元数据属性设置为 `true`</span><span class="sxs-lookup"><span data-stu-id="3ca10-613">Metadata properties set to `true`</span></span>|<span data-ttu-id="3ca10-614">无</span><span class="sxs-lookup"><span data-stu-id="3ca10-614">None</span></span>|  
  
<a name="xamlAttributeUsage_Top"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="3ca10-615">XAML 特性用法</span><span class="sxs-lookup"><span data-stu-id="3ca10-615">XAML Attribute Usage</span></span>  
  
```  
<object InkCanvas.Top="double"/>  
- or -  
<object InkCanvas.Top="qualifiedDouble"/>  
```  
  
<a name="xamlValues_Top"></a>   
## <a name="xaml-values"></a><span data-ttu-id="3ca10-616">XAML 值</span><span class="sxs-lookup"><span data-stu-id="3ca10-616">XAML Values</span></span>  
 <span data-ttu-id="3ca10-617">*双精度*</span><span class="sxs-lookup"><span data-stu-id="3ca10-617">*double*</span></span>  
 <span data-ttu-id="3ca10-618"><xref:System.Double> 值的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="3ca10-618">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="3ca10-619">这被解释为 [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] 度量。</span><span class="sxs-lookup"><span data-stu-id="3ca10-619">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="3ca10-620">字符串不需要显式包含小数点。</span><span class="sxs-lookup"><span data-stu-id="3ca10-620">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="3ca10-621">例如，`1` 的值是可接受的。</span><span class="sxs-lookup"><span data-stu-id="3ca10-621">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="3ca10-622">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="3ca10-622">*qualifiedDouble*</span></span>  
 <span data-ttu-id="3ca10-623">如上所述的*双精度*值，后跟以下单元声明字符串之一： `px`、`in`、`cm``pt`。</span><span class="sxs-lookup"><span data-stu-id="3ca10-623">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="3ca10-624">`px` （默认值）为 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="3ca10-624">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="3ca10-625">`in` 为英寸;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="3ca10-625">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="3ca10-626">`cm` 是厘米;1cm = = （96/2.54） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-626">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="3ca10-627">`pt` 为点;1pt = = （96/72） px</span><span class="sxs-lookup"><span data-stu-id="3ca10-627">`pt` is points; 1pt==(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-628">下面的示例演示如何设置 <xref:System.Windows.Controls.InkCanvas>上的 <xref:System.Windows.Controls.Label> 的位置。</span><span class="sxs-lookup"><span data-stu-id="3ca10-628">The following example demonstrates how to set the position of a <xref:System.Windows.Controls.Label> on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-xml[InkCanvasSamples#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.InkCanvas.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-629">标识 <see cref="P:System.Windows.Controls.InkCanvas.Top" /> 附加属性。</span><span class="sxs-lookup"><span data-stu-id="3ca10-629">Identifies the <see cref="P:System.Windows.Controls.InkCanvas.Top" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCustomCursor">
      <MemberSignature Language="C#" Value="public bool UseCustomCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCustomCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCustomCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCustomCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCustomCursor : bool with get, set" Usage="System.Windows.Controls.InkCanvas.UseCustomCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-630">获取或设置一个布尔值，该值指示是否重写标准的 <see cref="T:System.Windows.Controls.InkCanvas" /> 光标功能以支持自定义光标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-630">Gets or sets a Boolean value that indicates whether to override standard <see cref="T:System.Windows.Controls.InkCanvas" /> cursor functionality to support a custom cursor.</span></span></summary>
        <value><span data-ttu-id="3ca10-631">如果 <see langword="true" /> 正在使用自定义光标，则为 <see cref="T:System.Windows.Controls.InkCanvas" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3ca10-631"><see langword="true" /> if the <see cref="T:System.Windows.Controls.InkCanvas" /> is using a custom cursor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ca10-632">当光标在 <xref:System.Windows.Controls.InkCanvas>边界内时，<xref:System.Windows.Controls.InkCanvas> 将更改光标样式以反映当前 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>。</span><span class="sxs-lookup"><span data-stu-id="3ca10-632">The <xref:System.Windows.Controls.InkCanvas> will change the cursor style to reflect the current <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> while the cursor is within the bounds of the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3ca10-633">如果不需要此行为，例如，当 <xref:System.Windows.Controls.InkCanvas> 使用自定义光标时，请将此属性设置为 `true`，并且光标不会随 <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>更改。</span><span class="sxs-lookup"><span data-stu-id="3ca10-633">If this behavior is not wanted, for example, when the <xref:System.Windows.Controls.InkCanvas> uses a custom cursor, set this property to `true`, and the cursor will not change with the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ca10-634">下面的示例演示如何使用与 <xref:System.Windows.Controls.InkCanvas>提供的游标不同的游标。</span><span class="sxs-lookup"><span data-stu-id="3ca10-634">The following example demonstrates how to use a cursor that is different than the one supplied by the <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[InkCanvasSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/InkCanvasSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[InkCanvasSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkCanvasSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.Controls.InkCanvas.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ca10-635">获取此元素内可视子元素的数目。</span><span class="sxs-lookup"><span data-stu-id="3ca10-635">Gets the number of visual child elements within this element.</span></span></summary>
        <value><span data-ttu-id="3ca10-636">此元素内可视子元素的数目。</span><span class="sxs-lookup"><span data-stu-id="3ca10-636">The number of visual child elements for this element.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      </Docs>
    </Member>
  </Members>
</Type>
