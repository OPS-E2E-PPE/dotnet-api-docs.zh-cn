<Type Name="WebBrowser" FullName="System.Windows.Controls.WebBrowser">
  <Metadata><Meta Name="ms.openlocfilehash" Value="40bd0383dbe89e016cf42781ab8571e329fd6c31" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75174840" /></Metadata><TypeSignature Language="C#" Value="public sealed class WebBrowser : System.Windows.Interop.ActiveXHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WebBrowser extends System.Windows.Interop.ActiveXHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.WebBrowser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebBrowser&#xA;Inherits ActiveXHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBrowser sealed : System::Windows::Interop::ActiveXHost" />
  <TypeSignature Language="F#" Value="type WebBrowser = class&#xA;    inherit ActiveXHost" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Interop.ActiveXHost</BaseTypeName>
  </Base>
  <Interfaces>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f5109-101">承载 HTML 文档并在其之间导航。</span><span class="sxs-lookup"><span data-stu-id="f5109-101">Hosts and navigates between HTML documents.</span></span> <span data-ttu-id="f5109-102">启用 WPF 托管代码和 HTML 脚本之间的互操作性。</span><span class="sxs-lookup"><span data-stu-id="f5109-102">Enables interoperability between WPF managed code and HTML script.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-103"><xref:System.Windows.Controls.WebBrowser> 控件提供了以下功能：</span><span class="sxs-lookup"><span data-stu-id="f5109-103">The <xref:System.Windows.Controls.WebBrowser> control provides the following capabilities:</span></span>  
  
 <span data-ttu-id="f5109-104">**导航**： <xref:System.Windows.Controls.WebBrowser.Source%2A>、 <xref:System.Windows.Controls.WebBrowser.Navigate%2A>、 <xref:System.Windows.Controls.WebBrowser.NavigateToStream%2A>、 <xref:System.Windows.Controls.WebBrowser.NavigateToString%2A>和 <xref:System.Windows.Controls.WebBrowser.Refresh%2A>。</span><span class="sxs-lookup"><span data-stu-id="f5109-104">**Navigation**: <xref:System.Windows.Controls.WebBrowser.Source%2A>, <xref:System.Windows.Controls.WebBrowser.Navigate%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToStream%2A>, <xref:System.Windows.Controls.WebBrowser.NavigateToString%2A>, and <xref:System.Windows.Controls.WebBrowser.Refresh%2A>.</span></span>  
  
 <span data-ttu-id="f5109-105">**导航生存期**： <xref:System.Windows.Controls.WebBrowser.Navigating>、<xref:System.Windows.Controls.WebBrowser.Navigated>和 <xref:System.Windows.Controls.WebBrowser.LoadCompleted>。</span><span class="sxs-lookup"><span data-stu-id="f5109-105">**Navigation Lifetime**: <xref:System.Windows.Controls.WebBrowser.Navigating>, <xref:System.Windows.Controls.WebBrowser.Navigated>, and <xref:System.Windows.Controls.WebBrowser.LoadCompleted>.</span></span>  
  
 <span data-ttu-id="f5109-106">**导航日志记录**： <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>、<xref:System.Windows.Controls.WebBrowser.GoBack%2A>、<xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>和 <xref:System.Windows.Controls.WebBrowser.GoForward%2A>。</span><span class="sxs-lookup"><span data-stu-id="f5109-106">**Navigation Journaling**: <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>, <xref:System.Windows.Controls.WebBrowser.GoBack%2A>, <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>, and <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.</span></span>  
  
 <span data-ttu-id="f5109-107">**WPF/HTML 互操作性**： <xref:System.Windows.Controls.WebBrowser.InvokeScript%2A> 和 <xref:System.Windows.Controls.WebBrowser.ObjectForScripting%2A>和 <xref:System.Windows.Controls.WebBrowser.Document%2A>。</span><span class="sxs-lookup"><span data-stu-id="f5109-107">**WPF/HTML Interoperability**: <xref:System.Windows.Controls.WebBrowser.InvokeScript%2A> and <xref:System.Windows.Controls.WebBrowser.ObjectForScripting%2A>, and <xref:System.Windows.Controls.WebBrowser.Document%2A>.</span></span>  
  
 <span data-ttu-id="f5109-108"><xref:System.Windows.Controls.WebBrowser> 受承载 <xref:System.Windows.Controls.WebBrowser>[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 应用程序的安全约束的约束：</span><span class="sxs-lookup"><span data-stu-id="f5109-108"><xref:System.Windows.Controls.WebBrowser> is bound by the security constraints of the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application that is hosting the <xref:System.Windows.Controls.WebBrowser>:</span></span>  
  
-   <span data-ttu-id="f5109-109">如果 <xref:System.Windows.Controls.WebBrowser> 由完全信任的 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 应用程序（例如，独立应用程序）托管，则 <xref:System.Windows.Controls.WebBrowser> 可以从任何位置托管 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-109">When <xref:System.Windows.Controls.WebBrowser> is hosted by a full-trust [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application (a stand-alone application, for example), <xref:System.Windows.Controls.WebBrowser> can host [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] documents from any location.</span></span>  
  
-   <span data-ttu-id="f5109-110">当 <xref:System.Windows.Controls.WebBrowser> 由部分信任的 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 应用程序（例如 [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)]）承载时，<xref:System.Windows.Controls.WebBrowser> 只能承载作为**源站点**应用程序数据文件的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-110">When <xref:System.Windows.Controls.WebBrowser> is hosted by a partial-trust [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application (an [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)], for example), <xref:System.Windows.Controls.WebBrowser> can only host documents that are **Site Of Origin** application data files.</span></span> <span data-ttu-id="f5109-111">有关详细信息，请参阅 [WPF 应用程序资源、内容和数据文件](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md)。</span><span class="sxs-lookup"><span data-stu-id="f5109-111">For more information, see [WPF Application Resource, Content, and Data Files](~/docs/framework/wpf/app-development/wpf-application-resource-content-and-data-files.md).</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f5109-112"><xref:System.Windows.Controls.WebBrowser> 控件在内部实例化本机 WebBrowser ActiveX 控件。</span><span class="sxs-lookup"><span data-stu-id="f5109-112">The <xref:System.Windows.Controls.WebBrowser> control internally instantiates the native WebBrowser ActiveX control.</span></span> <span data-ttu-id="f5109-113">WPF 通过将功能控件应用于 WebBrowser ActiveX 控件来启用安全功能。</span><span class="sxs-lookup"><span data-stu-id="f5109-113">WPF enables security features by applying feature controls to the WebBrowser ActiveX control.</span></span> <span data-ttu-id="f5109-114">应用的功能控件在 Xbap 和独立应用程序方面有所不同。</span><span class="sxs-lookup"><span data-stu-id="f5109-114">The feature controls that are applied differ for XBAPs and stand-alone applications.</span></span> <span data-ttu-id="f5109-115">某些应用程序应该应用其他功能控制，以防止恶意内容运行。</span><span class="sxs-lookup"><span data-stu-id="f5109-115">Some applications should apply additional feature controls to prevent malicious content from running.</span></span> <span data-ttu-id="f5109-116">有关详细信息，请参阅[安全性（WPF）](~/docs/framework/wpf/security-wpf.md)和[WebBrowser 控件概述和教程](https://go.microsoft.com/fwlink/?LinkId=179388)中的 "WebBrowser 控件和功能控件" 一节。</span><span class="sxs-lookup"><span data-stu-id="f5109-116">For more information, see the "WebBrowser Control and Feature Controls" section in [Security (WPF)](~/docs/framework/wpf/security-wpf.md) and [WebBrowser Control Overviews and Tutorials](https://go.microsoft.com/fwlink/?LinkId=179388).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-117">下面的示例演示如何将 <xref:System.Windows.Controls.WebBrowser> 配置为仅使用标记导航到 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-117">The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to an [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by using markup only.</span></span>  
  
```xaml  
<!-- Web Browser Control that hosts a web page. -->  
<WebBrowser x:Name="webBrowser" Source="http://msdn.com"   
  Width="600" Height="600"  />  
```  
  
 <span data-ttu-id="f5109-118">下面的示例演示如何使用标记和代码隐藏将 <xref:System.Windows.Controls.WebBrowser> 配置为导航到文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-118">The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to a document by using markup and code-behind.</span></span>  
  
```xaml  
<StackPanel>  
    <StackPanel Orientation="Horizontal">  
        <TextBox x:Name="addressTextBox" Width="200" />  
        <Button Click="goNavigateButton_Click">Go</Button>  
    </StackPanel>  
    <WebBrowser x:Name="myWebBrowser" />  
</StackPanel>  
```  
  
```csharp  
private void goNavigateButton_Click(object sender, RoutedEventArgs e)  
{  
    // Get URI to navigate to  
    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  
  
    // Only absolute URIs can be navigated to  
    if (!uri.IsAbsoluteUri)  
    {  
        MessageBox.Show("The Address URI must be absolute. For example, 'http://www.microsoft.com'");  
        return;  
    }  
  
    // Navigate to the desired URL by calling the .Navigate method  
    this.myWebBrowser.Navigate(uri);  
}  
```  
  
 <span data-ttu-id="f5109-119">下面的示例演示如何使用 <xref:System.Windows.Controls.WebBrowser> 控件处理 `NewWindow2` 事件和类似事件。</span><span class="sxs-lookup"><span data-stu-id="f5109-119">The following example shows how to handle the `NewWindow2` event and similar events using a <xref:System.Windows.Controls.WebBrowser> control.</span></span> <span data-ttu-id="f5109-120">此示例需要引用**shdocvw.dll**、`using System.Runtime.InteropServices;` 语句和名为 `webBrowser1`的 <xref:System.Windows.Controls.WebBrowser> 控件。</span><span class="sxs-lookup"><span data-stu-id="f5109-120">This example requires a reference to **SHDocVw.dll**, a `using System.Runtime.InteropServices;` statement, and a <xref:System.Windows.Controls.WebBrowser> control named `webBrowser1`.</span></span>  
  
```csharp  
public MainWindow()  
{  
    InitializeComponent();  
  
    var serviceProvider = (IServiceProvider)webBrowser1.Document;  
    if (serviceProvider != null)  
    {  
        Guid serviceGuid = new Guid("0002DF05-0000-0000-C000-000000000046");  
        Guid iid = typeof(SHDocVw.WebBrowser).GUID;  
        var webBrowserPtr = (SHDocVw.WebBrowser)serviceProvider  
            .QueryService(ref serviceGuid, ref iid);  
        if (webBrowserPtr != null)  
        {  
            webBrowserPtr.NewWindow2 += webBrowser1_NewWindow2;  
        }  
    }  
}  
  
private void webBrowser1_NewWindow2(ref object ppDisp, ref bool Cancel)  
{  
    // Handle the event.  
}  
  
[ComImport, InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]  
[Guid("6d5140c1-7436-11ce-8034-00aa006009fa")]  
internal interface IServiceProvider  
{  
    [return: MarshalAs(UnmanagedType.IUnknown)]  
    object QueryService(ref Guid guidService, ref Guid riid);  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160056"><span data-ttu-id="f5109-121">XBAP 宿主 Silverlight 示例</span><span class="sxs-lookup"><span data-stu-id="f5109-121">XBAP Hosting Silverlight Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebBrowser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebBrowser();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5109-122">初始化 <see cref="T:System.Windows.Controls.WebBrowser" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="f5109-122">Initializes a new instance of the <see cref="T:System.Windows.Controls.WebBrowser" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.WebBrowserPermission"><span data-ttu-id="f5109-123">调用此方法。</span><span class="sxs-lookup"><span data-stu-id="f5109-123">to call this method.</span></span> <span data-ttu-id="f5109-124">关联的枚举： <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe" /></span><span class="sxs-lookup"><span data-stu-id="f5109-124">Associated enumeration: <see cref="F:System.Security.Permissions.WebBrowserPermissionLevel.Safe" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Controls.WebBrowser.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-125">获取指示是否存在要向后定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-125">Gets a value that indicates whether there is a document to navigate back to.</span></span></summary>
        <value><span data-ttu-id="f5109-126">一个 <see cref="T:System.Boolean" /> 值，指示是否存在要向后定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-126">A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate back to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f5109-127">下面的示例演示如何通过调用 <xref:System.Windows.Controls.WebBrowser.GoBack%2A>向后导航到上一文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-127">The following example shows how to navigate back to the previous document by calling <xref:System.Windows.Controls.WebBrowser.GoBack%2A>.</span></span> <span data-ttu-id="f5109-128">该示例首先通过检查 <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>来检查是否有要向后定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-128">The example first checks that there are documents to navigate back to by checking <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>.</span></span>  
  
```csharp  
private void backButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the previous HTML document, if there is one  
  if (this.webBrowser.CanGoBack)  
  {  
    this.webBrowser.GoBack();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoBack" />
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Controls.WebBrowser.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-129">获取指示是否存在要向前定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-129">Gets a value that indicates whether there is a document to navigate forward to.</span></span></summary>
        <value><span data-ttu-id="f5109-130">一个 <see cref="T:System.Boolean" /> 值，指示是否存在要向前定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-130">A <see cref="T:System.Boolean" /> value that indicates whether there is a document to navigate forward to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f5109-131">下面的示例演示如何通过调用 <xref:System.Windows.Controls.WebBrowser.GoForward%2A>向前定位到下一个 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-131">The following example shows how to navigate forward to the next [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by calling <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.</span></span> <span data-ttu-id="f5109-132">该示例首先通过检查 <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>来检查是否存在要向前定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-132">The example first checks that there are documents to navigate forward to by checking <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>.</span></span>  
  
```csharp  
private void forwardButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the next HTML document, if there is one  
  if (this.webBrowser.CanGoForward)  
  {  
    this.webBrowser.GoForward();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoForward" />
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoBack" />
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public object Document { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Document" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.Document" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Document As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Document { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Document : obj" Usage="System.Windows.Controls.WebBrowser.Document" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-133">获取表示所承载的 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 页的文档对象。</span><span class="sxs-lookup"><span data-stu-id="f5109-133">Gets the Document object that represents the hosted [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] page.</span></span></summary>
        <value><span data-ttu-id="f5109-134">一个文档对象。</span><span class="sxs-lookup"><span data-stu-id="f5109-134">A Document object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-135">需要将文档对象强制转换为所需的 COM 接口。</span><span class="sxs-lookup"><span data-stu-id="f5109-135">The Document object needs to be cast to the COM interface you are expecting.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-136"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-136">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-137">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-137">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="f5109-138">若为，则调用此属性。</span><span class="sxs-lookup"><span data-stu-id="f5109-138">to call this property.</span></span> <span data-ttu-id="f5109-139">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="f5109-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="webBrowser.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5109-140">向后定位到前一文档（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="f5109-140">Navigate back to the previous document, if there is one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-141">如果调用 <xref:System.Windows.Controls.WebBrowser.GoBack%2A>，但没有任何要导航到的文档，<xref:System.Windows.Controls.WebBrowser> 不会执行导航，并引发异常。</span><span class="sxs-lookup"><span data-stu-id="f5109-141">If you call <xref:System.Windows.Controls.WebBrowser.GoBack%2A> and there are not any documents to navigate back to, <xref:System.Windows.Controls.WebBrowser> does not perform a navigation and an exception is thrown.</span></span> <span data-ttu-id="f5109-142">如果需要，可以检查 <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A> 属性的值，以确定是否有要向后定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-142">If you need to, you can inspect the value of the <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A> property to determine whether there are documents to navigate back to.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-143">下面的示例演示如何通过调用 <xref:System.Windows.Controls.WebBrowser.GoBack%2A>导航回上一个 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-143">The following example shows how to navigate back to the previous [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by calling <xref:System.Windows.Controls.WebBrowser.GoBack%2A>.</span></span> <span data-ttu-id="f5109-144">该示例首先通过检查 <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>检查是否有 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 的文档向后导航到。</span><span class="sxs-lookup"><span data-stu-id="f5109-144">The example first checks that there are [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] documents to navigate back to by checking <xref:System.Windows.Controls.WebBrowser.CanGoBack%2A>.</span></span>  
  
```csharp  
private void backButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the previous HTML document, if there is one  
  if (this.webBrowser.CanGoBack)  
  {  
    this.webBrowser.GoBack();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-145"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-145">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-146">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-146">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="f5109-147">没有要向后定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-147">There is no document to navigate back to.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoBack" />
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="webBrowser.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5109-148">向前定位到下一 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档（如果存在）。</span><span class="sxs-lookup"><span data-stu-id="f5109-148">Navigate forward to the next [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document, if there is one.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-149">如果调用 <xref:System.Windows.Controls.WebBrowser.GoForward%2A>，但没有任何要向前导航到的文档，<xref:System.Windows.Controls.WebBrowser> 不会执行导航，并引发异常。</span><span class="sxs-lookup"><span data-stu-id="f5109-149">If you call <xref:System.Windows.Controls.WebBrowser.GoForward%2A> and there are not any documents to navigate forward to, <xref:System.Windows.Controls.WebBrowser> does not perform a navigation and an exception is thrown.</span></span> <span data-ttu-id="f5109-150">如果需要，可以检查 <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A> 属性的值，以确定是否存在要向前定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-150">If you need to, you can inspect the value of the <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A> property to determine whether there are documents to navigate forward to.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-151">下面的示例演示如何通过调用 <xref:System.Windows.Controls.WebBrowser.GoForward%2A>向前定位到下一文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-151">The following example shows how to navigate forward to the next document by calling <xref:System.Windows.Controls.WebBrowser.GoForward%2A>.</span></span> <span data-ttu-id="f5109-152">该示例首先通过检查 <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>来检查是否存在要向前定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-152">The example first checks that there are documents to navigate forward to by checking <xref:System.Windows.Controls.WebBrowser.CanGoForward%2A>.</span></span>  
  
```csharp  
private void forwardButton_Click(object sender, RoutedEventArgs e)  
{  
  // Navigate to the next HTML document, if there is one  
  if (this.webBrowser.CanGoForward)  
  {  
    this.webBrowser.GoForward();  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-153"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-153">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-154">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-154">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="f5109-155">没有要向前定位到的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-155">There is no document to navigate forward to.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.WebBrowser.CanGoForward" />
        <altmember cref="M:System.Windows.Controls.WebBrowser.GoBack" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeScript">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f5109-156">执行在当前加载的文档中定义的脚本函数。</span><span class="sxs-lookup"><span data-stu-id="f5109-156">Executes a scripting function defined in the currently loaded document.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName);" />
      <MemberSignature Language="F#" Value="member this.InvokeScript : string -&gt; obj" Usage="webBrowser.InvokeScript scriptName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptName"><span data-ttu-id="f5109-157">要执行的脚本函数的名称。</span><span class="sxs-lookup"><span data-stu-id="f5109-157">The name of the script function to execute.</span></span></param>
        <summary><span data-ttu-id="f5109-158">执行当前加载的文档所实现的脚本函数。</span><span class="sxs-lookup"><span data-stu-id="f5109-158">Executes a script function that is implemented by the currently loaded document.</span></span></summary>
        <returns><span data-ttu-id="f5109-159">活动脚本调用所返回的对象。</span><span class="sxs-lookup"><span data-stu-id="f5109-159">The object returned by the Active Scripting call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-160">在实现它的文档加载完成之前，不应调用 <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29>。</span><span class="sxs-lookup"><span data-stu-id="f5109-160"><xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29> should not be called before the document that implements it has finished loading.</span></span> <span data-ttu-id="f5109-161">可以通过处理 <xref:System.Windows.Controls.WebBrowser.LoadCompleted> 事件来检测文档的加载完成时间。</span><span class="sxs-lookup"><span data-stu-id="f5109-161">You can detect when a document has finished loading by handling the <xref:System.Windows.Controls.WebBrowser.LoadCompleted> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-162">下面的示例演示如何使用 <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29>从 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 应用程序的文档中调用脚本函数。</span><span class="sxs-lookup"><span data-stu-id="f5109-162">The following example shows how to call a script function in a document from a [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] application by using <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%29>.</span></span> <span data-ttu-id="f5109-163">在此示例中，脚本函数没有参数。</span><span class="sxs-lookup"><span data-stu-id="f5109-163">In this example, the script function has no parameters.</span></span>  
  
 <span data-ttu-id="f5109-164">下面是实现将从 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]调用的脚本函数的 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-164">The following is the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document that implements the script function that will be called from [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)].</span></span>  
  
```html  
<html>  
    <head>  
        <script type="text/javascript">  
            // Function Without Parameters  
            function JavaScriptFunctionWithoutParameters()    
            {  
              outputID.innerHTML = "JavaScript function called!";  
            }  
        </script>  
    </head>  
    <body>  
    <div id="outputID" style="color:Red; font-size:16">  
        Hello from HTML document with script!  
    </div>  
    </body>  
</html>  
```  
  
 <span data-ttu-id="f5109-165">下面演示了在 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档中调用 script 函数的 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 实现。</span><span class="sxs-lookup"><span data-stu-id="f5109-165">The following shows the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] implementation to call the script function in the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document.</span></span>  
  
```csharp  
private void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  
{  
  // Make sure the HTML document has loaded before attempting to  
  // invoke script of the document page. You could set loadCompleted  
  // to true when the LoadCompleted event on the WebBrowser fires.  
  if (this.loadCompleted)  
  {  
    try  
    {  
      this.webBrowser.InvokeScript("JavaScriptFunctionWithoutParameters");  
    }  
    catch (Exception ex)  
    {  
      string msg = "Could not call script: " +  
                   ex.Message +  
                  "\n\nPlease click the 'Load HTML Document with Script' button to load.";  
      MessageBox.Show(msg);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-166"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-166">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-167">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-167">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="f5109-168">脚本函数不存在。</span><span class="sxs-lookup"><span data-stu-id="f5109-168">The script function does not exist.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeScript">
      <MemberSignature Language="C#" Value="public object InvokeScript (string scriptName, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object InvokeScript(string scriptName, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.InvokeScript(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeScript (scriptName As String, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeScript(System::String ^ scriptName, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.InvokeScript : string * obj[] -&gt; obj" Usage="webBrowser.InvokeScript (scriptName, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptName" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="scriptName"><span data-ttu-id="f5109-169">要执行的脚本函数的名称。</span><span class="sxs-lookup"><span data-stu-id="f5109-169">The name of the script function to execute.</span></span></param>
        <param name="args"><span data-ttu-id="f5109-170">要传递到脚本函数的参数。</span><span class="sxs-lookup"><span data-stu-id="f5109-170">The parameters to pass to the script function.</span></span></param>
        <summary><span data-ttu-id="f5109-171">执行在当前加载的文档中定义的脚本函数。</span><span class="sxs-lookup"><span data-stu-id="f5109-171">Executes a script function that is defined in the currently loaded document.</span></span></summary>
        <returns><span data-ttu-id="f5109-172">活动脚本调用所返回的对象。</span><span class="sxs-lookup"><span data-stu-id="f5109-172">The object returned by the Active Scripting call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-173">在实现它的文档加载完成之前，不应调用 <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29>。</span><span class="sxs-lookup"><span data-stu-id="f5109-173"><xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29> should not be called before the document that implements it has finished loading.</span></span> <span data-ttu-id="f5109-174">可以通过处理 <xref:System.Windows.Controls.WebBrowser.LoadCompleted> 事件来检测文档的加载完成时间。</span><span class="sxs-lookup"><span data-stu-id="f5109-174">You can detect when a document has finished loading by handling the <xref:System.Windows.Controls.WebBrowser.LoadCompleted> event.</span></span>  
  
 <span data-ttu-id="f5109-175">如果未将足够的参数值传递给要调用的脚本，则未将值传递给的参数将具有未定义的值。</span><span class="sxs-lookup"><span data-stu-id="f5109-175">If you do not pass enough parameter values to the script that you are invoking, the parameters that you do not pass values to will have the undefined value.</span></span> <span data-ttu-id="f5109-176">如果传递的参数值过多，将忽略多余的值。</span><span class="sxs-lookup"><span data-stu-id="f5109-176">If you pass too many parameter values, the excess values are ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-177">下面的示例演示如何使用 <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29>从应用程序调用文档中的脚本函数。</span><span class="sxs-lookup"><span data-stu-id="f5109-177">The following example shows how to call script functions in a document from an application by using <xref:System.Windows.Controls.WebBrowser.InvokeScript%28System.String%2CSystem.Object%5B%5D%29>.</span></span> <span data-ttu-id="f5109-178">在此示例中，脚本函数需要参数。</span><span class="sxs-lookup"><span data-stu-id="f5109-178">In this example, the script functions require parameters.</span></span>  
  
 <span data-ttu-id="f5109-179">下面是实现将从 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]调用的脚本函数的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-179">The following is the document that implements the script functions that will be called from [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)].</span></span>  
  
```html  
<html>  
    <head>  
        <script type="text/javascript">  
            // Function Without Parameters  
            function JavaScriptFunctionWithoutParameters()    
            {  
              outputID.innerHTML = "JavaScript function 'called: " + message + ".";  
            }  
        </script>  
    </head>  
    <body>  
    <div id="outputID" style="color:Red; font-size:16">  
        Hello from HTML document with script!  
    </div>  
    </body>  
</html>  
```  
  
 <span data-ttu-id="f5109-180">下面演示了用于调用 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档中的脚本函数的 [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] 实现。</span><span class="sxs-lookup"><span data-stu-id="f5109-180">The following shows the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] implementation to call the script functions in the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document.</span></span>  
  
```csharp  
private void callScriptFunctionNoParamButton_Click(object sender, RoutedEventArgs e)  
{  
  // Make sure the HTML document has loaded before attempting to  
  // invoke script of the document page. You could set loadCompleted  
  // to true when the LoadCompleted event on the WebBrowser fires.  
  if (this.loadCompleted)  
  {  
    try  
    {  
      this.webBrowser.InvokeScript("JavaScriptFunctionWithoutParameters", this.messageTextBox.Text);  
    }  
    catch (Exception ex)  
    {  
      string msg = "Could not call script: " +  
                   ex.Message +  
                  "\n\nPlease click the 'Load HTML Document with Script' button to load.";  
      MessageBox.Show(msg);  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-181"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-181">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-182">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-182">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="f5109-183">脚本函数不存在。</span><span class="sxs-lookup"><span data-stu-id="f5109-183">The script function does not exist.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.WebBrowser.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event LoadCompleted As LoadCompletedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-184">要导航到的文档完成下载时发生。</span><span class="sxs-lookup"><span data-stu-id="f5109-184">Occurs when the document being navigated to has finished downloading.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-185">导航的事件处理程序将传递 <xref:System.Windows.Navigation.NavigationEventArgs> 类的实例，该类提供有关导航的上下文信息，其中包括 Web 响应详细信息。</span><span class="sxs-lookup"><span data-stu-id="f5109-185">Navigated event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigationEventArgs> class, which provides contextual information about the navigation, including Web response details.</span></span>  
  
 <span data-ttu-id="f5109-186">只会为顶级导航触发此事件。</span><span class="sxs-lookup"><span data-stu-id="f5109-186">This event will only be fired for top-level navigations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigating" />
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f5109-187">异步导航到位于指定 <see cref="T:System.Uri" /> 处的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-187">Navigate asynchronously to the document at the specified <see cref="T:System.Uri" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string -&gt; unit" Usage="webBrowser.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f5109-188">要导航到的 URL。</span><span class="sxs-lookup"><span data-stu-id="f5109-188">The URL to navigate to.</span></span></param>
        <summary><span data-ttu-id="f5109-189">异步导航到位于指定 URL 处的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-189">Navigates asynchronously to the document at the specified URL.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-190">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> 方法导航到可能包含转义符的 URL。</span><span class="sxs-lookup"><span data-stu-id="f5109-190">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="f5109-191">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> 方法导航到不包含转义符的 <xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="f5109-191">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; unit" Usage="webBrowser.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f5109-192">要导航到的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-192">The <see cref="T:System.Uri" /> to navigate to.</span></span></param>
        <summary><span data-ttu-id="f5109-193">异步导航到位于指定 <see cref="T:System.Uri" /> 处的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-193">Navigate asynchronously to the document at the specified <see cref="T:System.Uri" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-194">调用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> 与设置 <xref:System.Windows.Controls.WebBrowser.Source%2A> 属性相同。</span><span class="sxs-lookup"><span data-stu-id="f5109-194">Calling <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> has the same effect as setting the <xref:System.Windows.Controls.WebBrowser.Source%2A> property.</span></span> <span data-ttu-id="f5109-195">如果开发人员要以声明方式指定在初始化 <xref:System.Windows.Controls.WebBrowser> 时 <xref:System.Windows.Controls.WebBrowser> 导航到的初始文档，则由标记使用 <xref:System.Windows.Controls.WebBrowser.Source%2A>。</span><span class="sxs-lookup"><span data-stu-id="f5109-195"><xref:System.Windows.Controls.WebBrowser.Source%2A> is used from markup by developers who want to declaratively specify the initial document that <xref:System.Windows.Controls.WebBrowser> navigates to when <xref:System.Windows.Controls.WebBrowser> is initialized.</span></span>  
  
 <span data-ttu-id="f5109-196">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> 方法导航到可能包含转义符的 URL。</span><span class="sxs-lookup"><span data-stu-id="f5109-196">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="f5109-197">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> 方法导航到不包含转义符的 <xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="f5109-197">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-198">下面的示例演示如何使用 <xref:System.Windows.Controls.WebBrowser> 通过使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> 方法导航到文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-198">The following example shows how to use <xref:System.Windows.Controls.WebBrowser> to navigate to a document by using the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%29> method.</span></span>  
  
```xaml  
<StackPanel>  
    <StackPanel Orientation="Horizontal">  
        <TextBox x:Name="addressTextBox" Width="200" />  
        <Button Click="goNavigateButton_Click">Go</Button>  
    </StackPanel>  
    <WebBrowser x:Name="myWebBrowser" />  
</StackPanel>  
```  
  
```csharp  
private void goNavigateButton_Click(object sender, RoutedEventArgs e)  
{  
    // Get URI to navigate to  
    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  
  
    // Only absolute URIs can be navigated to  
    if (!uri.IsAbsoluteUri)  
    {  
        MessageBox.Show("The Address URI must be absolute. For example, 'http://www.microsoft.com'");  
        return;  
    }  
  
    // Navigate to the desired URL by calling the .Navigate method  
    this.myWebBrowser.Navigate(uri);  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-199"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-199">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-200">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-200">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f5109-201">从以不完全可信状态运行的应用程序导航到不位于源站点的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-201">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (string source, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(string source, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As String, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(System::String ^ source, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : string * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (source, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetFrameName" Type="System.String" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="postData" Type="System.Byte[]" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="additionalHeaders" Type="System.String" Index="3" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f5109-202">要导航到的 URL。</span><span class="sxs-lookup"><span data-stu-id="f5109-202">The URL to navigate to.</span></span></param>
        <param name="targetFrameName"><span data-ttu-id="f5109-203">要在其中显示文档内容的框架的名称。</span><span class="sxs-lookup"><span data-stu-id="f5109-203">The name of the frame to display the document's content in.</span></span></param>
        <param name="postData"><span data-ttu-id="f5109-204">要在请求源时发送到服务器的 HTTP POST 数据。</span><span class="sxs-lookup"><span data-stu-id="f5109-204">HTTP POST data to send to the server when the source is requested.</span></span></param>
        <param name="additionalHeaders"><span data-ttu-id="f5109-205">要在请求源时发送到服务器的 HTTP 标头。</span><span class="sxs-lookup"><span data-stu-id="f5109-205">HTTP headers to send to the server when the source is requested.</span></span></param>
        <summary><span data-ttu-id="f5109-206">异步导航到位于指定 URL 处的文档，并指定要向其中加载文档内容的目标框架。</span><span class="sxs-lookup"><span data-stu-id="f5109-206">Navigates asynchronously to the document at the specified URL and specify the target frame to load the document's content into.</span></span> <span data-ttu-id="f5109-207">可将其他 HTTP POST 数据和 HTTP 标头作为导航请求的一部分发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="f5109-207">Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-208">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> 方法导航到可能包含转义符的 URL。</span><span class="sxs-lookup"><span data-stu-id="f5109-208">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="f5109-209">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> 方法导航到不包含转义符的 <xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="f5109-209">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public void Navigate (Uri source, string targetFrameName, byte[] postData, string additionalHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Navigate(class System.Uri source, string targetFrameName, unsigned int8[] postData, string additionalHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Navigate (source As Uri, targetFrameName As String, postData As Byte(), additionalHeaders As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Navigate(Uri ^ source, System::String ^ targetFrameName, cli::array &lt;System::Byte&gt; ^ postData, System::String ^ additionalHeaders);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * string * byte[] * string -&gt; unit" Usage="webBrowser.Navigate (source, targetFrameName, postData, additionalHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="targetFrameName" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
        <Parameter Name="additionalHeaders" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f5109-210">要导航到的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-210">The <see cref="T:System.Uri" /> to navigate to.</span></span></param>
        <param name="targetFrameName"><span data-ttu-id="f5109-211">要在其中显示文档内容的框架的名称。</span><span class="sxs-lookup"><span data-stu-id="f5109-211">The name of the frame to display the document's content in.</span></span></param>
        <param name="postData"><span data-ttu-id="f5109-212">要在请求源时发送到服务器的 HTTP POST 数据。</span><span class="sxs-lookup"><span data-stu-id="f5109-212">HTTP POST data to send to the server when the source is requested.</span></span></param>
        <param name="additionalHeaders"><span data-ttu-id="f5109-213">要在请求源时发送到服务器的 HTTP 标头。</span><span class="sxs-lookup"><span data-stu-id="f5109-213">HTTP headers to send to the server when the source is requested.</span></span></param>
        <summary><span data-ttu-id="f5109-214">异步导航到位于指定 <see cref="T:System.Uri" /> 处的文档，并指定要向其中加载文档内容的目标框架。</span><span class="sxs-lookup"><span data-stu-id="f5109-214">Navigate asynchronously to the document at the specified <see cref="T:System.Uri" /> and specify the target frame to load the document's content into.</span></span> <span data-ttu-id="f5109-215">可将其他 HTTP POST 数据和 HTTP 标头作为导航请求的一部分发送到服务器。</span><span class="sxs-lookup"><span data-stu-id="f5109-215">Additional HTTP POST data and HTTP headers can be sent to the server as part of the navigation request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-216">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> 方法导航到可能包含转义符的 URL。</span><span class="sxs-lookup"><span data-stu-id="f5109-216">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.String%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a URL that may include escape characters.</span></span> <span data-ttu-id="f5109-217">使用 <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> 方法导航到不包含转义符的 <xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="f5109-217">Use the <xref:System.Windows.Controls.WebBrowser.Navigate%28System.Uri%2CSystem.String%2CSystem.Byte%5B%5D%2CSystem.String%29> method to navigate to a <xref:System.Uri> that does not include escape characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-218">下面的示例演示如何通过指定 "about：空白" 目标导航到文档并在新的浏览器窗口中打开它。</span><span class="sxs-lookup"><span data-stu-id="f5109-218">The following example shows how to navigate to a document and open it in a new browser window by specifying the "about:blank" target.</span></span>  
  
```xaml  
<StackPanel>  
    <StackPanel Orientation="Horizontal">  
        <TextBox x:Name="addressTextBox" Width="200" />  
        <Button Click="goNavigateButton_Click">Go</Button>  
    </StackPanel>  
    <WebBrowser x:Name="myWebBrowser" />  
</StackPanel>  
```  
  
```csharp  
private void goNavigateButton_Click(object sender, RoutedEventArgs e)  
{  
    // Get URI to navigate to  
    Uri uri = new Uri(this.addressTextBox.Text, UriKind.RelativeOrAbsolute);  
  
    // Only absolute URIs can be navigated to  
    if (!uri.IsAbsoluteUri)  
    {  
        MessageBox.Show("The Address URI must be absolute. For example, 'http://www.microsoft.com'");  
        return;  
    }  
  
    // Navigate to the desired URL by calling the .Navigate method  
    this.myWebBrowser.Navigate(uri, "_blank", null, null);  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-219"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-219">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-220">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-220">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f5109-221">从以不完全可信状态运行的应用程序导航：</span><span class="sxs-lookup"><span data-stu-id="f5109-221">Navigation from an application that is running in partial trust:</span></span> 
<span data-ttu-id="f5109-222">-   导航到并非位于源站点的 <see cref="T:System.Uri" /> 或</span><span class="sxs-lookup"><span data-stu-id="f5109-222">-   To a <see cref="T:System.Uri" /> that is not located at the site of origin, or</span></span> <span data-ttu-id="f5109-223">
-   <paramref name="targetFrameName" /> 名称不是 <see langword="null" />，也不为空。</span><span class="sxs-lookup"><span data-stu-id="f5109-223">
-   <paramref name="targetFrameName" /> name is not <see langword="null" /> or empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.WebBrowser.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Navigated As NavigatedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-224">定位到要导航到的文档并开始下载时发生。</span><span class="sxs-lookup"><span data-stu-id="f5109-224">Occurs when the document being navigated to is located and has started downloading.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-225">导航的事件处理程序将传递 <xref:System.Windows.Navigation.NavigationEventArgs> 类的实例，该类提供有关导航的上下文信息，其中包括 Web 响应详细信息。</span><span class="sxs-lookup"><span data-stu-id="f5109-225">Navigated event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigationEventArgs> class, which provides contextual information about the navigation, including Web response details.</span></span>  
  
 <span data-ttu-id="f5109-226">只会为顶级导航触发此事件。</span><span class="sxs-lookup"><span data-stu-id="f5109-226">This event will only be fired for top-level navigations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigating" />
        <altmember cref="E:System.Windows.Controls.WebBrowser.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="NavigateToStream">
      <MemberSignature Language="C#" Value="public void NavigateToStream (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateToStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigateToStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.NavigateToStream : System.IO.Stream -&gt; unit" Usage="webBrowser.NavigateToStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="f5109-227">包含文档内容的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-227">The <see cref="T:System.IO.Stream" /> that contains the content for a document.</span></span></param>
        <summary><span data-ttu-id="f5109-228">异步导航到文档内容所在的 <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-228">Navigate asynchronously to a <see cref="T:System.IO.Stream" /> that contains the content for a document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-229">如果 `stream` 参数 `null`，则 <xref:System.Windows.Controls.WebBrowser> 导航到空白文档（"关于：空白"）。</span><span class="sxs-lookup"><span data-stu-id="f5109-229">If the `stream` parameter is `null`, <xref:System.Windows.Controls.WebBrowser> navigates to a blank document ("about:blank").</span></span>  
  
 <span data-ttu-id="f5109-230">如果流参数的 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 格式无效，则它将显示为纯文本。</span><span class="sxs-lookup"><span data-stu-id="f5109-230">If the stream parameter is not in a valid [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] format, it will be displayed as plain text.</span></span>  
  
 <span data-ttu-id="f5109-231">导航完成后，将 `null`<xref:System.Windows.Controls.WebBrowser.Source%2A>。</span><span class="sxs-lookup"><span data-stu-id="f5109-231">After navigation, <xref:System.Windows.Controls.WebBrowser.Source%2A> will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-232">下面的示例演示如何导航到包含文档的流。</span><span class="sxs-lookup"><span data-stu-id="f5109-232">The following example shows how to navigate to a stream that contains a document.</span></span>  
  
```csharp  
private void goNavigateToStreamButton_Click(object sender, RoutedEventArgs e)  
{  
  // Load HTML document as a stream  
  Uri uri = new Uri(@"pack://application:,,,/HTMLDocumentWithScript.html", UriKind.Absolute);  
  Stream source = Application.GetResourceStream(uri).Stream;  
  
  // Navigate to HTML document stream  
  this.webBrowser.NavigateToStream(source);  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-233"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-233">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-234">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-234">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="NavigateToString">
      <MemberSignature Language="C#" Value="public void NavigateToString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NavigateToString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.NavigateToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NavigateToString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NavigateToString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.NavigateToString : string -&gt; unit" Usage="webBrowser.NavigateToString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="f5109-235">包含文档内容的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-235">The <see cref="T:System.String" /> that contains the content for a document.</span></span></param>
        <summary><span data-ttu-id="f5109-236">异步导航到文档内容所在的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-236">Navigate asynchronously to a <see cref="T:System.String" /> that contains the content for a document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-237">如果 `text` 参数 `null`，则 <xref:System.Windows.Controls.WebBrowser> 导航到空白文档（"关于：空白"）。</span><span class="sxs-lookup"><span data-stu-id="f5109-237">If the `text` parameter is `null`, <xref:System.Windows.Controls.WebBrowser> navigates to a blank document ("about:blank").</span></span>  
  
 <span data-ttu-id="f5109-238">如果 text 参数 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 格式无效，则它将显示为纯文本。</span><span class="sxs-lookup"><span data-stu-id="f5109-238">If the text parameter is not in valid [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] format, it will be displayed as plain text.</span></span>  
  
 <span data-ttu-id="f5109-239">导航完成后，将 `null`<xref:System.Windows.Controls.WebBrowser.Source%2A>。</span><span class="sxs-lookup"><span data-stu-id="f5109-239">After navigation, <xref:System.Windows.Controls.WebBrowser.Source%2A> will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-240">下面的示例演示如何导航到包含文档的字符串。</span><span class="sxs-lookup"><span data-stu-id="f5109-240">The following example shows how to navigate to a string that contains a document.</span></span>  
  
```csharp  
private void goNavigateToStringButton_Click(object sender, RoutedEventArgs e)  
{  
  // Load HTML document as a string  
  Uri uri = new Uri(@"pack://application:,,,/HTMLDocumentWithoutScript.html", UriKind.Absolute);  
  Stream stream = Application.GetResourceStream(uri).Stream;  
  using (StreamReader reader = new StreamReader(stream))  
  {  
    // Navigate to HTML document string  
    this.webBrowser.NavigateToString(reader.ReadToEnd());  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-241"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-241">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-242">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-242">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.WebBrowser.NavigateToStream(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.WebBrowser.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Navigating As NavigatingCancelEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-243">正好在导航到某个文档之前发生。</span><span class="sxs-lookup"><span data-stu-id="f5109-243">Occurs just before navigation to a document.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-244">在事件处理程序中导航 <xref:System.Windows.Navigation.NavigatingCancelEventArgs> 类的实例。</span><span class="sxs-lookup"><span data-stu-id="f5109-244">Navigating event handlers are passed an instance of the <xref:System.Windows.Navigation.NavigatingCancelEventArgs> class.</span></span> <span data-ttu-id="f5109-245">您可以通过将 <xref:System.Windows.Navigation.NavigatingCancelEventArgs> 对象的 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 属性设置为 `true`取消导航。</span><span class="sxs-lookup"><span data-stu-id="f5109-245">You can cancel the navigation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Navigation.NavigatingCancelEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="f5109-246">只会为顶级导航触发此事件。</span><span class="sxs-lookup"><span data-stu-id="f5109-246">This event will only be fired for top-level navigations.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.WebBrowser.Navigated" />
        <altmember cref="E:System.Windows.Controls.WebBrowser.LoadCompleted" />
      </Docs>
    </Member>
    <Member MemberName="ObjectForScripting">
      <MemberSignature Language="C#" Value="public object ObjectForScripting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ObjectForScripting" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.ObjectForScripting" />
      <MemberSignature Language="VB.NET" Value="Public Property ObjectForScripting As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ObjectForScripting { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ObjectForScripting : obj with get, set" Usage="System.Windows.Controls.WebBrowser.ObjectForScripting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-247">获取或设置公共类的一个实例，该实例由主机应用程序实现且可由寄宿文档的脚本访问。</span><span class="sxs-lookup"><span data-stu-id="f5109-247">Gets or sets an instance of a public class, implemented by the host application, that can be accessed by script from a hosted document.</span></span></summary>
        <value><span data-ttu-id="f5109-248">作为 <see cref="T:System.Object" /> 类的实例的 <see langword="public" />，由主机应用程序实现且可由寄宿文档的脚本访问。</span><span class="sxs-lookup"><span data-stu-id="f5109-248">The <see cref="T:System.Object" /> that is an instance of a <see langword="public" /> class, implemented by the host application, that can be accessed by script from a hosted document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-249">此属性可设置为您希望其公共属性和方法可用于脚本代码的任何 COM 可见对象。</span><span class="sxs-lookup"><span data-stu-id="f5109-249">This property can be set to any COM-visible object for which you want its public properties and methods available to scripting code.</span></span> <span data-ttu-id="f5109-250">可以通过将其标记为 <xref:System.Runtime.InteropServices.ComVisibleAttribute>来使类成为 COM 可见的。</span><span class="sxs-lookup"><span data-stu-id="f5109-250">You can make a class COM-visible by marking it with the <xref:System.Runtime.InteropServices.ComVisibleAttribute>.</span></span>  
  
 <span data-ttu-id="f5109-251">使用 `window.external` 属性将为脚本设置的对象公开给当前文档 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] DOM。</span><span class="sxs-lookup"><span data-stu-id="f5109-251">The object that is set for scripting is exposed to the current document by the [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] DOM using the `window.external` property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f5109-252"><see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> 是通过不属于 <see langword="COMVisible" /> 类型的实例设置的。</span><span class="sxs-lookup"><span data-stu-id="f5109-252"><see cref="P:System.Windows.Controls.WebBrowser.ObjectForScripting" /> is set with an instance of type that is not <see langword="COMVisible" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Refresh">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f5109-253">重载当前页。</span><span class="sxs-lookup"><span data-stu-id="f5109-253">Reloads the current page.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="webBrowser.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f5109-254">重载当前页。</span><span class="sxs-lookup"><span data-stu-id="f5109-254">Reloads the current page.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-255"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-255">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-256">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-256">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh (bool noCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh(bool noCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.Refresh(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh (noCache As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh(bool noCache);" />
      <MemberSignature Language="F#" Value="member this.Refresh : bool -&gt; unit" Usage="webBrowser.Refresh noCache" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="noCache" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="noCache"><span data-ttu-id="f5109-257">指定是否刷新，而不进行缓存验证。</span><span class="sxs-lookup"><span data-stu-id="f5109-257">Specifies whether to refresh without cache validation.</span></span></param>
        <summary><span data-ttu-id="f5109-258">重载带有可选缓存验证的当前页。</span><span class="sxs-lookup"><span data-stu-id="f5109-258">Reloads the current page with optional cache validation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-259">如果 `true``noCache`，则 <xref:System.Windows.Controls.WebBrowser> 控件将在不进行缓存验证的情况下刷新，方法是向服务器发送 "Pragma：无缓存" 标头。</span><span class="sxs-lookup"><span data-stu-id="f5109-259">If `noCache` is `true`, the <xref:System.Windows.Controls.WebBrowser> control refreshes without cache validation by sending a "Pragma:no-cache" header to the server.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-260"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-260">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-261">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-261">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.WebBrowser.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Controls.WebBrowser.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f5109-262">获取或设置 <see cref="T:System.Uri" /> 中承载的当前文档的 <see cref="T:System.Windows.Controls.WebBrowser" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-262">Gets or sets the <see cref="T:System.Uri" /> of the current document hosted in the <see cref="T:System.Windows.Controls.WebBrowser" />.</span></span></summary>
        <value><span data-ttu-id="f5109-263">当前 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-263">The <see cref="T:System.Uri" /> for the current [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f5109-264">设置源属性会导致 <xref:System.Windows.Controls.WebBrowser> 导航到 <xref:System.Uri>指定的文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-264">Setting the source property causes <xref:System.Windows.Controls.WebBrowser> to navigate to the document specified by the <xref:System.Uri>.</span></span> <span data-ttu-id="f5109-265">如果 `null`<xref:System.Uri>，则将显示一个空白文档（"关于：空白"）。</span><span class="sxs-lookup"><span data-stu-id="f5109-265">If the <xref:System.Uri> is `null`, a blank document is displayed ("about:blank").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f5109-266">下面的示例演示如何将 <xref:System.Windows.Controls.WebBrowser> 配置为仅使用标记导航到 [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] 文档。</span><span class="sxs-lookup"><span data-stu-id="f5109-266">The following example shows how to configure <xref:System.Windows.Controls.WebBrowser> to navigate to an [!INCLUDE[TLA2#tla_html](~/includes/tla2sharptla-html-md.md)] document by using markup only.</span></span>  
  
```xaml  
<!-- Web Browser Control that hosts a web page. -->  
<WebBrowser x:Name="webBrowser" Source="http://msdn.com"   
  Width="600" Height="600"  />  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="f5109-267"><see cref="T:System.Windows.Controls.WebBrowser" /> 实例不再有效。</span><span class="sxs-lookup"><span data-stu-id="f5109-267">The <see cref="T:System.Windows.Controls.WebBrowser" /> instance is no longer valid.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f5109-268">未能检索到对基础本机 <c>WebBrowser</c> 的引用。</span><span class="sxs-lookup"><span data-stu-id="f5109-268">A reference to the underlying native <c>WebBrowser</c> could not be retrieved.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="f5109-269">从以不完全可信状态运行的应用程序导航到不位于源站点的 <see cref="T:System.Uri" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-269">Navigation from an application that is running in partial trust to a <see cref="T:System.Uri" /> that is not located at the site of origin.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="f5109-270">指定是将焦点设置到第一个制表位，还是设置到最后一个制表位。</span><span class="sxs-lookup"><span data-stu-id="f5109-270">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="f5109-271">有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-271">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span></span></summary>
        <returns><span data-ttu-id="f5109-272">如果已按要求对焦点进行了设置，则为 <see langword="true" />；如果没有制表位，则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-272"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="f5109-273">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="f5109-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f5109-274">它只能在 <xref:System.Windows.Controls.WebBrowser> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f5109-274">It can be used only when the <xref:System.Windows.Controls.WebBrowser> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>

]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md"><span data-ttu-id="f5109-275">WPF 和 Win32 互操作概述</span><span class="sxs-lookup"><span data-stu-id="f5109-275">WPF and Win32 Interoperation Overview</span></span></related>
        <related type="Article" href="~/docs/framework/wpf/advanced/input-overview.md"><span data-ttu-id="f5109-276">输入概述</span><span class="sxs-lookup"><span data-stu-id="f5109-276">Input Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="f5109-277">消息及关联数据。</span><span class="sxs-lookup"><span data-stu-id="f5109-277">The message and associated data.</span></span> <span data-ttu-id="f5109-278">请勿修改此结构。</span><span class="sxs-lookup"><span data-stu-id="f5109-278">Do not modify this structure.</span></span> <span data-ttu-id="f5109-279">仅由于性能原因，通过引用来传递此消息。</span><span class="sxs-lookup"><span data-stu-id="f5109-279">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="f5109-280">修改键。</span><span class="sxs-lookup"><span data-stu-id="f5109-280">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="f5109-281">有关此成员的说明，请参阅 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-281">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="f5109-282">如果方法实现对该消息进行了处理，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="f5109-282"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="f5109-283">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="f5109-283">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f5109-284">它只能在 <xref:System.Windows.Controls.WebBrowser> 实例被强制转换为 <xref:System.Windows.Interop.IKeyboardInputSink> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="f5109-284">It can be used only when the <xref:System.Windows.Controls.WebBrowser> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>

]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md"><span data-ttu-id="f5109-285">WPF 和 Win32 互操作概述</span><span class="sxs-lookup"><span data-stu-id="f5109-285">WPF and Win32 Interoperation Overview</span></span></related>
        <related type="Article" href="~/docs/framework/wpf/advanced/input-overview.md"><span data-ttu-id="f5109-286">输入概述</span><span class="sxs-lookup"><span data-stu-id="f5109-286">Input Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected override bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool" Usage="webBrowser.TabIntoCore request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected override bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.WebBrowser.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="override this.TranslateAcceleratorCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="webBrowser.TranslateAcceleratorCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
