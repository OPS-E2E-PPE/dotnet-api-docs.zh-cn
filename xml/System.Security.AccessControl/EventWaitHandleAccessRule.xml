<Type Name="EventWaitHandleAccessRule" FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf4aec695e84ea5f5c8c6d54683cd77ee52fbc4a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75081708" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventWaitHandleAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="73c25-101">表示一组允许或拒绝用户或组进行访问的权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-101">Represents a set of access rights allowed or denied for a user or group.</span></span> <span data-ttu-id="73c25-102">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="73c25-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73c25-103"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 类是 .NET Framework 提供的一组类中的一种，用于管理已命名的系统事件的 Windows 访问控制安全性。</span><span class="sxs-lookup"><span data-stu-id="73c25-103">The <xref:System.Security.AccessControl.EventWaitHandleAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</span></span> <span data-ttu-id="73c25-104">有关这些类及其与基础 Windows 访问控制结构的关系的概述，请参阅 <xref:System.Security.AccessControl.EventWaitHandleSecurity>。</span><span class="sxs-lookup"><span data-stu-id="73c25-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.EventWaitHandleSecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73c25-105">Windows 访问控制安全性仅适用于已命名的系统事件。</span><span class="sxs-lookup"><span data-stu-id="73c25-105">Windows access control security is meaningful only for named system events.</span></span> <span data-ttu-id="73c25-106">如果 <xref:System.Threading.EventWaitHandle> 对象表示本地事件，则访问控制是不相关的。</span><span class="sxs-lookup"><span data-stu-id="73c25-106">If an <xref:System.Threading.EventWaitHandle> object represents a local event, access control is irrelevant.</span></span>  
  
 <span data-ttu-id="73c25-107">若要获取当前应用于命名事件的规则的列表，请使用 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 方法获取 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象，然后使用其 <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> 方法获取 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象的集合。</span><span class="sxs-lookup"><span data-stu-id="73c25-107">To get a list of the rules currently applied to a named event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span>  
  
 <span data-ttu-id="73c25-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象不会将一对一与基础自由访问控制列表（DACL）中的访问控制项映射在一起。</span><span class="sxs-lookup"><span data-stu-id="73c25-108"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</span></span> <span data-ttu-id="73c25-109">当你获取某个事件的所有访问规则集时，该集包含表示所有访问控制项所需的最小规则数。</span><span class="sxs-lookup"><span data-stu-id="73c25-109">When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73c25-110">在应用和删除规则时，基础访问控制项会更改。</span><span class="sxs-lookup"><span data-stu-id="73c25-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="73c25-111">如果可能，将合并规则中的信息以保持最小数量的访问控制项。</span><span class="sxs-lookup"><span data-stu-id="73c25-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="73c25-112">因此，当你获取当前的规则列表时，它可能与你已添加的所有规则的列表看起来不完全相同。</span><span class="sxs-lookup"><span data-stu-id="73c25-112">Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="73c25-113">使用 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象指定对用户或组允许或拒绝的访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-113">Use <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects to specify the access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="73c25-114"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象始终表示允许访问或拒绝访问，这两个对象都不会。</span><span class="sxs-lookup"><span data-stu-id="73c25-114">An <xref:System.Security.AccessControl.EventWaitHandleAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="73c25-115">若要将规则应用于已命名的系统事件，请使用 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 方法获取 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-115">To apply a rule to a named system event, use the <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="73c25-116">使用 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象的方法来添加规则，然后使用 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> 方法重新附加安全对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-116">Modify the <xref:System.Security.AccessControl.EventWaitHandleSecurity> object by using its methods to add the rule, and then use the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="73c25-117">对 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象所做的更改不会影响命名事件的访问级别，直到调用 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> 方法将已更改的安全对象分配给该命名事件。</span><span class="sxs-lookup"><span data-stu-id="73c25-117">Changes you make to an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object do not affect the access levels of the named event until you call the <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the named event.</span></span>  
  
 <span data-ttu-id="73c25-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="73c25-118"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="73c25-119">使用 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 类的方法来修改事件的安全性，以添加或删除规则;执行此操作时，将修改基础访问控制项。</span><span class="sxs-lookup"><span data-stu-id="73c25-119">Security for an event is modified using the methods of the <xref:System.Security.AccessControl.EventWaitHandleSecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73c25-120">Windows 98 或 Windows Millennium Edition 不支持同步对象的安全性。</span><span class="sxs-lookup"><span data-stu-id="73c25-120">Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73c25-121">下面的代码示例演示如何创建和使用 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-121">The following code example demonstrates the creation and use of <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="73c25-122">该示例创建一个 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="73c25-122">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="73c25-123">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="73c25-123">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73c25-124">此示例不会将安全对象附加到 <xref:System.Threading.EventWaitHandle> 的对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-124">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="73c25-125">可以在 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 和 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>中找到附加安全对象的示例。</span><span class="sxs-lookup"><span data-stu-id="73c25-125">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="73c25-126">初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="73c25-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="73c25-127">此规则应用到的用户或组。</span><span class="sxs-lookup"><span data-stu-id="73c25-127">The user or group the rule applies to.</span></span> <span data-ttu-id="73c25-128">必须为 <see cref="T:System.Security.Principal.SecurityIdentifier" /> 类型，或可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型，如 <see cref="T:System.Security.Principal.SecurityIdentifier" />。</span><span class="sxs-lookup"><span data-stu-id="73c25-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></param>
        <param name="eventRights"><span data-ttu-id="73c25-129"><see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指定允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-129">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="73c25-130"><see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="73c25-131">初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 类的新实例，指定此规则应用到的用户或组、访问权限以及是否允许或拒绝指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73c25-132">若要等待 <xref:System.Threading.EventWaitHandle> （通过调用 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A> 或 <xref:System.Threading.WaitHandle.WaitAll%2A> 方法），用户必须具有 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-132">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="73c25-133">若要通过调用 <xref:System.Threading.EventWaitHandle.Set%2A> 方法来向事件发出信号，或通过调用 <xref:System.Threading.EventWaitHandle.Reset%2A> 方法将其重置为信号状态，用户必须具有 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-133">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="73c25-134">若要向 <xref:System.Threading.EventWaitHandle> 对象发出信号，然后通过调用 <xref:System.Threading.WaitHandle.SignalAndWait%2A> 方法等待该对象，用户必须具有 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> 和 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-134">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="73c25-135"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="73c25-135"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="73c25-136">- 或 -</span><span class="sxs-lookup"><span data-stu-id="73c25-136">-or-</span></span> 
 <span data-ttu-id="73c25-137"><paramref name="type" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="73c25-137"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="73c25-138"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="73c25-138"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="73c25-139">- 或 -</span><span class="sxs-lookup"><span data-stu-id="73c25-139">-or-</span></span> 
 <span data-ttu-id="73c25-140"><paramref name="eventRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="73c25-140"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="73c25-141"><paramref name="identity" /> 既不属于类型 <see cref="T:System.Security.Principal.SecurityIdentifier" />，也不属于可以转换为 <see cref="T:System.Security.Principal.NTAccount" /> 类型的类型（如 <see cref="T:System.Security.Principal.SecurityIdentifier" />）。</span><span class="sxs-lookup"><span data-stu-id="73c25-141"><paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (string identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::String ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : string * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="73c25-142">应用此规则的用户或组的名称。</span><span class="sxs-lookup"><span data-stu-id="73c25-142">The name of the user or group the rule applies to.</span></span></param>
        <param name="eventRights"><span data-ttu-id="73c25-143"><see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指定允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-143">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</span></span></param>
        <param name="type"><span data-ttu-id="73c25-144"><see cref="T:System.Security.AccessControl.AccessControlType" /> 值之一，用于指定是允许还是拒绝相应权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-144">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span></span></param>
        <summary><span data-ttu-id="73c25-145">初始化 <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> 类的新实例，指定应用此规则的用户或组的名称、访问权限以及是否允许或拒绝指定的访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-145">Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73c25-146">若要等待 <xref:System.Threading.EventWaitHandle> （通过调用 <xref:System.Threading.WaitHandle.WaitOne%2A>、<xref:System.Threading.WaitHandle.WaitAny%2A> 或 <xref:System.Threading.WaitHandle.WaitAll%2A> 方法），用户必须具有 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-146">To wait on an <xref:System.Threading.EventWaitHandle> (by calling the <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A> or <xref:System.Threading.WaitHandle.WaitAll%2A> method), a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="73c25-147">若要通过调用 <xref:System.Threading.EventWaitHandle.Set%2A> 方法来向事件发出信号，或通过调用 <xref:System.Threading.EventWaitHandle.Reset%2A> 方法将其重置为信号状态，用户必须具有 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-147">To signal an event by calling the <xref:System.Threading.EventWaitHandle.Set%2A> method, or to reset it to the unsignaled state by calling the <xref:System.Threading.EventWaitHandle.Reset%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType> access.</span></span> <span data-ttu-id="73c25-148">若要向 <xref:System.Threading.EventWaitHandle> 对象发出信号，然后通过调用 <xref:System.Threading.WaitHandle.SignalAndWait%2A> 方法等待该对象，用户必须具有 <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> 和 <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> 访问权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-148">To signal an <xref:System.Threading.EventWaitHandle> object and then wait on it by calling the <xref:System.Threading.WaitHandle.SignalAndWait%2A> method, a user must have <xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize> and <xref:System.Security.AccessControl.EventWaitHandleRights.Modify> access.</span></span>  
  
 <span data-ttu-id="73c25-149">此构造函数等效于通过将 `identity` 传递到 <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> 构造函数并将新创建的 <xref:System.Security.Principal.NTAccount> 对象传递到 <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> 构造函数来创建 <xref:System.Security.Principal.NTAccount> 对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-149">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73c25-150">下面的代码示例演示如何使用此构造函数创建 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-150">The following code example demonstrates the use of this constructor to create <xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects.</span></span> <span data-ttu-id="73c25-151">该示例创建一个 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="73c25-151">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="73c25-152">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="73c25-152">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73c25-153">此示例不会将安全对象附加到 <xref:System.Threading.EventWaitHandle> 的对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-153">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="73c25-154">可以在 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 和 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>中找到附加安全对象的示例。</span><span class="sxs-lookup"><span data-stu-id="73c25-154">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="73c25-155"><paramref name="eventRights" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="73c25-155"><paramref name="eventRights" /> specifies an invalid value.</span></span>  
  
<span data-ttu-id="73c25-156">- 或 -</span><span class="sxs-lookup"><span data-stu-id="73c25-156">-or-</span></span> 
 <span data-ttu-id="73c25-157"><paramref name="type" /> 指定了一个无效值。</span><span class="sxs-lookup"><span data-stu-id="73c25-157"><paramref name="type" /> specifies an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="73c25-158"><paramref name="eventRights" /> 为零。</span><span class="sxs-lookup"><span data-stu-id="73c25-158"><paramref name="eventRights" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="73c25-159"><paramref name="identity" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="73c25-159"><paramref name="identity" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="73c25-160">- 或 -</span><span class="sxs-lookup"><span data-stu-id="73c25-160">-or-</span></span> 
 <span data-ttu-id="73c25-161"><paramref name="identity" /> 是一个长度为零的字符串。</span><span class="sxs-lookup"><span data-stu-id="73c25-161"><paramref name="identity" /> is a zero-length string.</span></span>  
  
<span data-ttu-id="73c25-162">- 或 -</span><span class="sxs-lookup"><span data-stu-id="73c25-162">-or-</span></span> 
 <span data-ttu-id="73c25-163"><paramref name="identity" /> 的长度超过 512 个字符。</span><span class="sxs-lookup"><span data-stu-id="73c25-163"><paramref name="identity" /> is longer than 512 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberSignature Language="F#" Value="member this.EventWaitHandleRights : System.Security.AccessControl.EventWaitHandleRights" Usage="System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="73c25-164">获取访问规则允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-164">Gets the rights allowed or denied by the access rule.</span></span></summary>
        <value><span data-ttu-id="73c25-165"><see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> 值的按位组合，它指示访问规则允许或拒绝的权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-165">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values indicating the rights allowed or denied by the access rule.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73c25-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> 对象是不可变的。</span><span class="sxs-lookup"><span data-stu-id="73c25-166"><xref:System.Security.AccessControl.EventWaitHandleAccessRule> objects are immutable.</span></span> <span data-ttu-id="73c25-167">您可以创建表示不同用户、不同权限或不同 <xref:System.Security.AccessControl.AccessControlType>的新访问规则，但不能修改现有访问规则。</span><span class="sxs-lookup"><span data-stu-id="73c25-167">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73c25-168">下面的代码示例演示如何使用 <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> 属性显示 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象中包含的规则集中的权限。</span><span class="sxs-lookup"><span data-stu-id="73c25-168">The following code example demonstrates the use of the <xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A> property to display the rights in the set of rules contained in an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object.</span></span> <span data-ttu-id="73c25-169">该示例创建一个 <xref:System.Security.AccessControl.EventWaitHandleSecurity> 对象，添加允许和拒绝当前用户的各种权限的规则，并显示生成的规则对。</span><span class="sxs-lookup"><span data-stu-id="73c25-169">The example creates an <xref:System.Security.AccessControl.EventWaitHandleSecurity> object, adds rules that allow and deny various rights for the current user, and displays the resulting pair of rules.</span></span> <span data-ttu-id="73c25-170">然后，该示例允许当前用户具有新权限，并显示结果，并显示新权限与现有 <xref:System.Security.AccessControl.AccessControlType.Allow> 规则合并。</span><span class="sxs-lookup"><span data-stu-id="73c25-170">The example then allows new rights for the current user and displays the result, showing that the new rights are merged with the existing <xref:System.Security.AccessControl.AccessControlType.Allow> rule.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73c25-171">此示例不会将安全对象附加到 <xref:System.Threading.EventWaitHandle> 的对象。</span><span class="sxs-lookup"><span data-stu-id="73c25-171">This example does not attach the security object to a <xref:System.Threading.EventWaitHandle> object.</span></span> <span data-ttu-id="73c25-172">可以在 <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> 和 <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>中找到附加安全对象的示例。</span><span class="sxs-lookup"><span data-stu-id="73c25-172">Examples that attach security objects can be found in <xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType> and <xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
