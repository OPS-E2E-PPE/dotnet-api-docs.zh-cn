<Type Name="LoadedEventHandler" FullName="System.ComponentModel.Design.LoadedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="58bcc0f9392b2021c3fb72ca9b8a7beade4d903f" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83469543" /></Metadata><TypeSignature Language="C#" Value="public delegate void LoadedEventHandler(object sender, LoadedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LoadedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.LoadedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub LoadedEventHandler(sender As Object, e As LoadedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void LoadedEventHandler(System::Object ^ sender, LoadedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type LoadedEventHandler = delegate of obj * LoadedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Design" FromVersion="5.0.0.0" To="System.Windows.Forms.Design" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0" />
    <TypeForwarding From="System.Design" FromVersion="4.0.0.0" To="System.Windows.Forms.Design" ToVersion="4.0.0.0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.Design.LoadedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="80a16-101">事件的源。</span><span class="sxs-lookup"><span data-stu-id="80a16-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="80a16-102">一个包含事件数据的 <see cref="T:System.ComponentModel.Design.LoadedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="80a16-102">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="80a16-103">表示将处理 <see cref="T:System.ComponentModel.Design.DesignSurface" /> 类的 <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> 事件的方法。</span><span class="sxs-lookup"><span data-stu-id="80a16-103">Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</span></span> <span data-ttu-id="80a16-104">无法继承此类。</span><span class="sxs-lookup"><span data-stu-id="80a16-104">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80a16-105">创建 <xref:System.ComponentModel.Design.LoadedEventHandler> 委托时，需要标识用于处理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="80a16-105">When you create a <xref:System.ComponentModel.Design.LoadedEventHandler> delegate, you identify a method to handle the event.</span></span> <span data-ttu-id="80a16-106">若要将事件与事件处理程序关联，请将该委托的一个实例添加到事件中。</span><span class="sxs-lookup"><span data-stu-id="80a16-106">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="80a16-107">除非移除了该委托，否则每当发生该事件时就会调用事件处理程序。</span><span class="sxs-lookup"><span data-stu-id="80a16-107">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="80a16-108">有关事件处理程序委托的详细信息，请参阅[处理和引发事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="80a16-108">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
