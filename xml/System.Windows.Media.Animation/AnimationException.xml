<Type Name="AnimationException" FullName="System.Windows.Media.Animation.AnimationException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cb46006b1a96d213a943d956fe48c4aa6ef6b24b" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82423072" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnimationException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnimationException extends System.SystemException" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.AnimationException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnimationException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnimationException sealed : SystemException" />
  <TypeSignature Language="F#" Value="type AnimationException = class&#xA;    inherit SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AnimationException extends System.SystemException" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在对属性进行动画处理的过程中发生错误时引发的异常。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此类不用于与计时相关的错误，例如创建具有负持续时间或无效 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> 和 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> 设置的动画。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.AnimationClock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.AnimationClock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.AnimationException.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As AnimationClock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::AnimationClock ^ Clock { System::Windows::Media::Animation::AnimationClock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.AnimationClock" Usage="System.Windows.Media.Animation.AnimationException.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.AnimationClock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取用来生成经过动画处理的值的时钟。</summary>
        <value>用来生成经过动画处理的值的时钟。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.AnimationException.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.AnimationException.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取经过动画处理的依赖属性。</summary>
        <value>经过动画处理的依赖属性。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IAnimatable Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IAnimatable Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.AnimationException.Target" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Target As IAnimatable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IAnimatable ^ Target { System::Windows::Media::Animation::IAnimatable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.Media.Animation.IAnimatable" Usage="System.Windows.Media.Animation.AnimationException.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IAnimatable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>获取经过动画处理的对象。</summary>
        <value>经过动画处理的对象。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
