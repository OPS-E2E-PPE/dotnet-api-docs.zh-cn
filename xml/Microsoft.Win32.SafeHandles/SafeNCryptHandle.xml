<Type Name="SafeNCryptHandle" FullName="Microsoft.Win32.SafeHandles.SafeNCryptHandle">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ab76e3dec196195fdf1d466a7612b9336128b7d5" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75154131" /></Metadata><TypeSignature Language="C#" Value="public abstract class SafeNCryptHandle : Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SafeNCryptHandle extends Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SafeNCryptHandle&#xA;Inherits SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeNCryptHandle abstract : Microsoft::Win32::SafeHandles::SafeHandleZeroOrMinusOneIsInvalid" />
  <TypeSignature Language="F#" Value="type SafeNCryptHandle = class&#xA;    inherit SafeHandleZeroOrMinusOneIsInvalid" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>4.3.2.0</AssemblyVersion>
    <AssemblyVersion>4.3.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.SafeHandle</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2997f-101">提供了可被下一代加密技术 (CNG) 对象使用的安全句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-101">Provides a safe handle that can be used by Cryptography Next Generation (CNG) objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
      
## Remarks


<span data-ttu-id="2997f-102">此类会将逻辑打包，以正确复制和释放这些句柄，以模拟本机复制。</span><span class="sxs-lookup"><span data-stu-id="2997f-102">This class wraps up the logic to correctly duplicate and free these handles to simulate a native duplication.</span></span>
            
<span data-ttu-id="2997f-103">每个打开的句柄对象可以被视为处于以下三种状态之一：</span><span class="sxs-lookup"><span data-stu-id="2997f-103">Each open handle object can be thought of as being in one of three states:</span></span>

- <span data-ttu-id="2997f-104">**所有者**-通过封送拆收器（传统风格安全句柄）创建的。</span><span class="sxs-lookup"><span data-stu-id="2997f-104">**Owner** - Created via the marshaler, traditional style safe handle.</span></span> <span data-ttu-id="2997f-105">特别要注意的是，给定的本机句柄只存在一个所有者句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-105">Notably, only one owner handle exists for a given native handle.</span></span>
- <span data-ttu-id="2997f-106">**复制**点处于刀柄状态的句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-106">**Duplicate** - Points at a handle in the Holder state.</span></span> <span data-ttu-id="2997f-107">如果在重复状态下释放句柄，则只会递减持有者的引用计数，而不是在本机句柄的版本中。</span><span class="sxs-lookup"><span data-stu-id="2997f-107">Releasing a handle in the duplicate state results only in decrementing the reference count of the holder, not in a release of the native handle.</span></span>
- <span data-ttu-id="2997f-108">**持有者**-保存到本机句柄上，并由处于重复状态的句柄引用。</span><span class="sxs-lookup"><span data-stu-id="2997f-108">**Holder** - Holds onto a native handle and is referenced by handles in the duplicate state.</span></span> <span data-ttu-id="2997f-109">当关闭所有重复的句柄时，持有者句柄释放本机句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-109">When all duplicate handles are closed, the holder handle releases the native handle.</span></span> <span data-ttu-id="2997f-110">永远不会终止持有者句柄，因为这会导致重复句柄的终结器和持有者句柄之间出现争用。</span><span class="sxs-lookup"><span data-stu-id="2997f-110">A holder handle will never be finalized, since this results in a race between the finalizers of the duplicate handles and the holder handle.</span></span> <span data-ttu-id="2997f-111">相反，它依赖于所有重复的句柄来完成，并将 ref 计数递减为零。</span><span class="sxs-lookup"><span data-stu-id="2997f-111">Instead, it relies upon all of the duplicate handles to be finalized and decrement the ref count to zero.</span></span> <span data-ttu-id="2997f-112">持有者句柄的实例永远不应被任何内容引用，但有一个重复的句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-112">Instances of a holder handle should never be referenced by anything but a duplicate handle.</span></span>

      ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2997f-113">用于调用非托管代码的权限。</span><span class="sxs-lookup"><span data-stu-id="2997f-113">for permission to call unmanaged code.</span></span> <span data-ttu-id="2997f-114">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="2997f-114">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="2997f-115">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2997f-115">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeNCryptHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeNCryptHandle();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2997f-116">初始化 <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2997f-116">Initializes a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="2997f-117">用于调用非托管代码的权限。</span><span class="sxs-lookup"><span data-stu-id="2997f-117">for permission to call unmanaged code.</span></span> <span data-ttu-id="2997f-118">安全操作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="2997f-118">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="2997f-119">关联的枚举： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="2997f-119">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SafeNCryptHandle (IntPtr handle, System.Runtime.InteropServices.SafeHandle parentHandle);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int handle, class System.Runtime.InteropServices.SafeHandle parentHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.#ctor(System.IntPtr,System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (handle As IntPtr, parentHandle As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SafeNCryptHandle(IntPtr handle, System::Runtime::InteropServices::SafeHandle ^ parentHandle);" />
      <MemberSignature Language="F#" Value="new Microsoft.Win32.SafeHandles.SafeNCryptHandle : nativeint * System.Runtime.InteropServices.SafeHandle -&gt; Microsoft.Win32.SafeHandles.SafeNCryptHandle" Usage="new Microsoft.Win32.SafeHandles.SafeNCryptHandle (handle, parentHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="parentHandle" Type="System.Runtime.InteropServices.SafeHandle" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="2997f-120">要使用的预先存在的句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-120">The pre-existing handle to use.</span></span> <span data-ttu-id="2997f-121">使用 <see cref="F:System.IntPtr.Zero" /> 返回无效句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-121">Using <see cref="F:System.IntPtr.Zero" /> returns an invalid handle.</span></span></param>
        <param name="parentHandle"><span data-ttu-id="2997f-122">此 <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> 的父句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-122">The parent handle of this <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" />.</span></span></param>
        <summary><span data-ttu-id="2997f-123">实例化 <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="2997f-123">Instantiates a new instance of the <see cref="T:Microsoft.Win32.SafeHandles.SafeNCryptHandle" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2997f-124"><paramref name="parentHandle" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="2997f-124"><paramref name="parentHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="2997f-125"><paramref name="parentHandle" /> 已关闭。</span><span class="sxs-lookup"><span data-stu-id="2997f-125"><paramref name="parentHandle" /> is closed.</span></span>  
  
<span data-ttu-id="2997f-126">- 或 -</span><span class="sxs-lookup"><span data-stu-id="2997f-126">-or-</span></span> 
 <span data-ttu-id="2997f-127"><paramref name="parentHandle" /> 无效。</span><span class="sxs-lookup"><span data-stu-id="2997f-127"><paramref name="parentHandle" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsInvalid">
      <MemberSignature Language="C#" Value="public override bool IsInvalid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInvalid" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsInvalid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInvalid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInvalid : bool" Usage="Microsoft.Win32.SafeHandles.SafeNCryptHandle.IsInvalid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="protected override bool ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReleaseHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ReleaseHandle();" />
      <MemberSignature Language="F#" Value="override this.ReleaseHandle : unit -&gt; bool" Usage="safeNCryptHandle.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2997f-128">释放由下一代加密技术 (CNG) 对象使用的句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-128">Releases a handle used by a Cryptography Next Generation (CNG) object.</span></span></summary>
        <returns><span data-ttu-id="2997f-129">如果成功释放了句柄，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2997f-129"><see langword="true" /> if the handle is released successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="2997f-130">与复制类似，释放句柄会根据句柄的状态执行不同的操作。</span><span class="sxs-lookup"><span data-stu-id="2997f-130">Similar to duplication, releasing a handle performs different operations based upon the state of the handle.</span></span>
            
<span data-ttu-id="2997f-131">使用 parentHandle 值构造的实例将仅对 parentHandle 对象调用 DangerousRelease。</span><span class="sxs-lookup"><span data-stu-id="2997f-131">An instance that was constructed with a parentHandle value will only call DangerousRelease on the parentHandle object.</span></span> <span data-ttu-id="2997f-132">否则，该行为由所有权状态决定。</span><span class="sxs-lookup"><span data-stu-id="2997f-132">Otherwise, the behavior is dictated by the ownership state.</span></span>

- <span data-ttu-id="2997f-133">**所有者**-只需调用 release P/Invoke 方法。</span><span class="sxs-lookup"><span data-stu-id="2997f-133">**Owner** - Simply calls the release P/Invoke method.</span></span>
- <span data-ttu-id="2997f-134">**复制**-减少当前持有者的引用计数。</span><span class="sxs-lookup"><span data-stu-id="2997f-134">**Duplicate** - Decrements the reference count of the current holder.</span></span>
- <span data-ttu-id="2997f-135">**持有者**-调用发布 P/Invoke。</span><span class="sxs-lookup"><span data-stu-id="2997f-135">**Holder** - Calls the release P/Invoke.</span></span> <span data-ttu-id="2997f-136">请注意，持有者上的 ReleaseHandle 表示引用计数为零。</span><span class="sxs-lookup"><span data-stu-id="2997f-136">Note that ReleaseHandle on a holder implies a reference count of zero.</span></span>

          ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ReleaseNativeHandle">
      <MemberSignature Language="C#" Value="protected abstract bool ReleaseNativeHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ReleaseNativeHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseNativeHandle" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ReleaseNativeHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool ReleaseNativeHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseNativeHandle : unit -&gt; bool" Usage="safeNCryptHandle.ReleaseNativeHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>4.3.2.0</AssemblyVersion>
        <AssemblyVersion>4.3.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2997f-137">释放由下一代加密技术 (CNG) 对象使用的本机句柄。</span><span class="sxs-lookup"><span data-stu-id="2997f-137">Releases a native handle used by a Cryptography Next Generation (CNG) object.</span></span></summary>
        <returns><span data-ttu-id="2997f-138">如果成功释放了句柄，则为 <see langword="true" />；否则为 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="2997f-138"><see langword="true" /> if the handle is released successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
