<Type Name="AssemblyCatalog" FullName="System.ComponentModel.Composition.Hosting.AssemblyCatalog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="63a2debfaa799281c3337aa58d0b6dfbfbc93626" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-CN" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82413582" /></Metadata><TypeSignature Language="C#" Value="public class AssemblyCatalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog, System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyCatalog extends System.ComponentModel.Composition.Primitives.ComposablePartCatalog implements class System.ComponentModel.Composition.Primitives.ICompositionElement" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyCatalog&#xA;Inherits ComposablePartCatalog&#xA;Implements ICompositionElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyCatalog : System::ComponentModel::Composition::Primitives::ComposablePartCatalog, System::ComponentModel::Composition::Primitives::ICompositionElement" />
  <TypeSignature Language="F#" Value="type AssemblyCatalog = class&#xA;    inherit ComposablePartCatalog&#xA;    interface ICompositionElement" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Composition.Primitives.ICompositionElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.Hosting.AssemblyCatalogDebuggerProxy))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="55917-101">发现托管代码程序集中标有属性的代码段。</span><span class="sxs-lookup"><span data-stu-id="55917-101">Discovers attributed parts in a managed code assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55917-102"><xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 用于分析指定程序集中存在的所有部件。</span><span class="sxs-lookup"><span data-stu-id="55917-102">An <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> is used to parse all the parts present in a specified assembly.</span></span> <span data-ttu-id="55917-103">目标程序集可以通过对象引用或路径进行指示。</span><span class="sxs-lookup"><span data-stu-id="55917-103">The target assembly can be indicated either by object reference or by path.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="55917-104">此类型实现 <xref:System.IDisposable> 接口。</span><span class="sxs-lookup"><span data-stu-id="55917-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="55917-105">在使用完类型后，您应直接或间接释放类型。</span><span class="sxs-lookup"><span data-stu-id="55917-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="55917-106">若要直接释放类型，请在 <xref:System.IDisposable.Dispose%2A>`try`/ 块中调用其 `catch` 方法。</span><span class="sxs-lookup"><span data-stu-id="55917-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="55917-107">若要间接释放类型，请使用 `using`（在 C# 中）或 `Using`（在 Visual Basic 中）等语言构造。</span><span class="sxs-lookup"><span data-stu-id="55917-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="55917-108">有关详细信息，请参阅 <xref:System.IDisposable> 接口主题中的“使用实现 IDisposable 的对象”一节。</span><span class="sxs-lookup"><span data-stu-id="55917-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="55917-109">此类型是线程安全的。</span><span class="sxs-lookup"><span data-stu-id="55917-109">This type is thread safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55917-110">下面的代码演示了创建 <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 分析自己的程序集的应用程序的常见方案。</span><span class="sxs-lookup"><span data-stu-id="55917-110">The following code demonstrates the common scenario of an application creating an <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> to parse its own assembly.</span></span> <span data-ttu-id="55917-111">这是将单个项目中包含的部件加载到 Managed Extensibility Framework （MEF）的一种简单方法。</span><span class="sxs-lookup"><span data-stu-id="55917-111">This is a straightforward way to load parts contained in a single project into the Managed Extensibility Framework (MEF).</span></span>  
  
 [!code-csharp[Composition.CompositionContainer#1](~/samples/snippets/csharp/VS_Snippets_Misc/composition.compositioncontainer/cs/program.cs#1)]
 [!code-vb[Composition.CompositionContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/composition.compositioncontainer/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55917-112">初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-112">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assembly As Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog assembly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="55917-113">包含要添加到 <see cref="T:System.Type" /> 对象中的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-113">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="55917-114">使用指定的程序集初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-114">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-115"><paramref name="assembly" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-115"><paramref name="assembly" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55917-116">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-116">-or-</span></span> 
 <span data-ttu-id="55917-117"><paramref name="assembly" /> 是在只反射上下文中加载的。</span><span class="sxs-lookup"><span data-stu-id="55917-117"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog codeBase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="55917-118">一个字符串，该字符串指定程序集的基本代码（即程序集文件的路径），该程序集包含要添加到 <see cref="T:System.Type" /> 对象的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55917-118">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <summary><span data-ttu-id="55917-119">使用指定的基本代码初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-119">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55917-120">`codeBase` 所引用的程序集将加载到加载上下文中。</span><span class="sxs-lookup"><span data-stu-id="55917-120">The assembly referenced by `codeBase` is loaded into the load context.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="55917-121"><paramref name="codeBase" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-121"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="55917-122">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-122">-or-</span></span> 
<span data-ttu-id="55917-123">当前加载的是 2.0 或更低版本的公共语言运行时，而 <paramref name="codeBase" /> 是用更高版本的公共语言运行时编译的。</span><span class="sxs-lookup"><span data-stu-id="55917-123">Version 2.0 or earlier of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55917-124">调用方没有路径发现权限。</span><span class="sxs-lookup"><span data-stu-id="55917-124">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="55917-125">未能加载 <paramref name="codeBase" />。</span><span class="sxs-lookup"><span data-stu-id="55917-125"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="55917-126">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-126">-or-</span></span> 
 <span data-ttu-id="55917-127"><paramref name="codeBase" /> 指定了一个目录。</span><span class="sxs-lookup"><span data-stu-id="55917-127"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55917-128"><paramref name="codeBase" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-128"><paramref name="codeBase" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="55917-129"><paramref name="codeBase" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="55917-129"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-130"><paramref name="codeBase" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="55917-130"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="55917-131">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="55917-131">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.ComponentModel.Composition.Primitives.ICompositionElement)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assembly As Assembly, definitionOrigin As ICompositionElement)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, definitionOrigin)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="55917-132">包含要添加到 <see cref="T:System.Type" /> 对象中的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-132">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="55917-133">诊断用于标识部件的源的元素。</span><span class="sxs-lookup"><span data-stu-id="55917-133">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="55917-134">使用指定的程序集初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-134">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-135"><paramref name="assembly" /> 或 <paramref name="definitionOrigin" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-135"><paramref name="assembly" /> or <paramref name="definitionOrigin" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55917-136">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-136">-or-</span></span> 
 <span data-ttu-id="55917-137"><paramref name="assembly" /> 是在只反射上下文中加载的。</span><span class="sxs-lookup"><span data-stu-id="55917-137"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assembly As Assembly, reflectionContext As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="55917-138">包含要添加到 <see cref="T:System.Type" /> 对象中的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-138">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="55917-139">目录用于解释类型的上下文。</span><span class="sxs-lookup"><span data-stu-id="55917-139">The context used by the catalog to interpret types.</span></span></param>
        <summary><span data-ttu-id="55917-140">用指定的程序集和反射上下文信息初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-140">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-141"><paramref name="assembly" /> 或 <paramref name="reflectionContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-141"><paramref name="assembly" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55917-142">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-142">-or-</span></span> 
 <span data-ttu-id="55917-143"><paramref name="assembly" /> 是在只反射上下文中加载的。</span><span class="sxs-lookup"><span data-stu-id="55917-143"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.ComponentModel.Composition.Primitives.ICompositionElement)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String, definitionOrigin As ICompositionElement)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, definitionOrigin)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="55917-144">一个字符串，该字符串指定程序集的基本代码（即程序集文件的路径），该程序集包含要添加到 <see cref="T:System.Type" /> 对象的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55917-144">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="55917-145">诊断用于标识部件的源的元素。</span><span class="sxs-lookup"><span data-stu-id="55917-145">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="55917-146">使用指定的基本代码初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-146">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="55917-147">`codeBase` 所引用的程序集将加载到加载上下文中。</span><span class="sxs-lookup"><span data-stu-id="55917-147">The assembly referenced by `codeBase` is loaded into the Load context.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="55917-148"><paramref name="codeBase" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-148"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="55917-149">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-149">-or-</span></span> 
<span data-ttu-id="55917-150">当前加载的是公共语言运行时 2.0 版或更高版本，而 <paramref name="codeBase" /> 是用更高版本编译的。</span><span class="sxs-lookup"><span data-stu-id="55917-150">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55917-151">调用方没有路径发现权限。</span><span class="sxs-lookup"><span data-stu-id="55917-151">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="55917-152">未能加载 <paramref name="codeBase" />。</span><span class="sxs-lookup"><span data-stu-id="55917-152"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="55917-153">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-153">-or-</span></span> 
 <span data-ttu-id="55917-154"><paramref name="codeBase" /> 指定了一个目录。</span><span class="sxs-lookup"><span data-stu-id="55917-154"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55917-155"><paramref name="codebase" /> 或 <paramref name="definitionOrigin" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-155"><paramref name="codebase" /> or <paramref name="definitionOrigin" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="55917-156"><paramref name="codeBase" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="55917-156"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-157"><paramref name="codeBase" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="55917-157"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="55917-158">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="55917-158">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String, reflectionContext As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.Reflection.ReflectionContext -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, reflectionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="55917-159">一个字符串，该字符串指定程序集的基本代码（即程序集文件的路径），该程序集包含要添加到 <see cref="T:System.Type" /> 对象的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55917-159">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="55917-160">目录用于解释类型的上下文。</span><span class="sxs-lookup"><span data-stu-id="55917-160">The context used by the catalog to interpret types.</span></span></param>
        <summary><span data-ttu-id="55917-161">用指定的基本代码和反射上下文初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-161">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base and reflection context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="55917-162">`codebase` 所引用的程序集将加载到加载上下文中。</span><span class="sxs-lookup"><span data-stu-id="55917-162">The assembly referenced by`codebase` is loaded into the Load context.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="55917-163"><paramref name="codeBase" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-163"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="55917-164">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-164">-or-</span></span> 
<span data-ttu-id="55917-165">当前加载的是公共语言运行时 2.0 版或更高版本，而 <paramref name="codeBase" /> 是用更高版本编译的。</span><span class="sxs-lookup"><span data-stu-id="55917-165">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55917-166">调用方没有路径发现权限。</span><span class="sxs-lookup"><span data-stu-id="55917-166">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="55917-167">未能加载 <paramref name="codeBase" />。</span><span class="sxs-lookup"><span data-stu-id="55917-167"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="55917-168">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-168">-or-</span></span> 
 <span data-ttu-id="55917-169"><paramref name="codeBase" /> 指定了一个目录。</span><span class="sxs-lookup"><span data-stu-id="55917-169"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55917-170"><paramref name="codebase" /> 或 <paramref name="reflectionContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-170"><paramref name="codebase" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="55917-171"><paramref name="codeBase" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="55917-171"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-172"><paramref name="codeBase" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="55917-172"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="55917-173">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="55917-173">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (System.Reflection.Assembly assembly, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly assembly, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assembly As Assembly, reflectionContext As ReflectionContext, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::Reflection::Assembly ^ assembly, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : System.Reflection.Assembly * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (assembly, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="55917-174">包含要添加到 <see cref="T:System.Type" /> 对象中的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-174">The assembly that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="55917-175">目录用于解释类型的上下文。</span><span class="sxs-lookup"><span data-stu-id="55917-175">The context used by the catalog to interpret types.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="55917-176">诊断用于标识部件的源的元素。</span><span class="sxs-lookup"><span data-stu-id="55917-176">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="55917-177">用指定的程序集和反射上下文信息初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-177">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified assembly and reflection context.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-178"><paramref name="assembly" />、<paramref name="definitionOrigin" /> 或 <paramref name="reflectionContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-178"><paramref name="assembly" />, <paramref name="definitionOrigin" />, or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="55917-179">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-179">-or-</span></span> 
 <span data-ttu-id="55917-180"><paramref name="assembly" /> 是在只反射上下文中加载的。</span><span class="sxs-lookup"><span data-stu-id="55917-180"><paramref name="assembly" /> was loaded in the reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyCatalog (string codeBase, System.Reflection.ReflectionContext reflectionContext, System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string codeBase, class System.Reflection.ReflectionContext reflectionContext, class System.ComponentModel.Composition.Primitives.ICompositionElement definitionOrigin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.String,System.Reflection.ReflectionContext,System.ComponentModel.Composition.Primitives.ICompositionElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (codeBase As String, reflectionContext As ReflectionContext, definitionOrigin As ICompositionElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyCatalog(System::String ^ codeBase, System::Reflection::ReflectionContext ^ reflectionContext, System::ComponentModel::Composition::Primitives::ICompositionElement ^ definitionOrigin);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.AssemblyCatalog : string * System.Reflection.ReflectionContext * System.ComponentModel.Composition.Primitives.ICompositionElement -&gt; System.ComponentModel.Composition.Hosting.AssemblyCatalog" Usage="new System.ComponentModel.Composition.Hosting.AssemblyCatalog (codeBase, reflectionContext, definitionOrigin)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBase" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="reflectionContext" Type="System.Reflection.ReflectionContext" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="definitionOrigin" Type="System.ComponentModel.Composition.Primitives.ICompositionElement" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="codeBase"><span data-ttu-id="55917-181">一个字符串，该字符串指定程序集的基本代码（即程序集文件的路径），该程序集包含要添加到 <see cref="T:System.Type" /> 对象的特性化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55917-181">A string that specifies the code base of the assembly (that is, the path to the assembly file) that contains the attributed <see cref="T:System.Type" /> objects to add to the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></param>
        <param name="reflectionContext"><span data-ttu-id="55917-182">目录用于解释类型的上下文。</span><span class="sxs-lookup"><span data-stu-id="55917-182">The context used by the catalog to interpret types.</span></span></param>
        <param name="definitionOrigin"><span data-ttu-id="55917-183">诊断用于标识部件的源的元素。</span><span class="sxs-lookup"><span data-stu-id="55917-183">The element used by diagnostics to identify the sources of parts.</span></span></param>
        <summary><span data-ttu-id="55917-184">用指定的基本代码和反射上下文初始化 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 类的新实例。</span><span class="sxs-lookup"><span data-stu-id="55917-184">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> class with the specified code base and reflection context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="55917-185">`codebase` 所引用的程序集将加载到加载上下文中。</span><span class="sxs-lookup"><span data-stu-id="55917-185">The assembly referenced by `codebase` is loaded into the Load context.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="55917-186"><paramref name="codeBase" /> 不是有效的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-186"><paramref name="codeBase" /> is not a valid assembly.</span></span>  
  
<span data-ttu-id="55917-187">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-187">-or-</span></span> 
<span data-ttu-id="55917-188">当前加载的是公共语言运行时 2.0 版或更高版本，而 <paramref name="codeBase" /> 是用更高版本编译的。</span><span class="sxs-lookup"><span data-stu-id="55917-188">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="codeBase" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="55917-189">调用方没有路径发现权限。</span><span class="sxs-lookup"><span data-stu-id="55917-189">The caller does not have path discovery permission.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="55917-190">未能加载 <paramref name="codeBase" />。</span><span class="sxs-lookup"><span data-stu-id="55917-190"><paramref name="codeBase" /> could not be loaded.</span></span>  
  
<span data-ttu-id="55917-191">-或-</span><span class="sxs-lookup"><span data-stu-id="55917-191">-or-</span></span> 
 <span data-ttu-id="55917-192"><paramref name="codeBase" /> 指定了一个目录。</span><span class="sxs-lookup"><span data-stu-id="55917-192"><paramref name="codeBase" /> specified a directory.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55917-193"><paramref name="codebase" />、<paramref name="definitionOrigin" /> 或 <paramref name="reflectionContext" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-193"><paramref name="codebase" />, <paramref name="definitionOrigin" /> or <paramref name="reflectionContext" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="55917-194"><paramref name="codeBase" /> 未找到。</span><span class="sxs-lookup"><span data-stu-id="55917-194"><paramref name="codeBase" /> is not found.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="55917-195"><paramref name="codeBase" /> 是一个长度为零的字符串，仅包含空格，或包含一个或多个由 <see cref="F:System.IO.Path.InvalidPathChars" /> 定义的无效字符。</span><span class="sxs-lookup"><span data-stu-id="55917-195"><paramref name="codeBase" /> is a zero-length string, contains only white space, or contains one or more invalid characters as defined by <see cref="F:System.IO.Path.InvalidPathChars" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="55917-196">指定的路径和/或文件名超过了系统定义的最大长度。</span><span class="sxs-lookup"><span data-stu-id="55917-196">The specified path, file name, or both exceed the system-defined maximum length.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55917-197">获取其特性化类型包含在程序集目录中的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-197">Gets the assembly whose attributed types are contained in the assembly catalog.</span></span></summary>
        <value><span data-ttu-id="55917-198">其特性化 <see cref="T:System.Type" /> 对象包含在 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 中的程序集。</span><span class="sxs-lookup"><span data-stu-id="55917-198">The assembly whose attributed <see cref="T:System.Type" /> objects are contained in the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="assemblyCatalog.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="55917-199">如果为 <see langword="true" />，则托管及非托管资源都释放；如果为 <see langword="false" />，则仅释放非托管资源。</span><span class="sxs-lookup"><span data-stu-id="55917-199"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="55917-200">释放 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 使用的非托管资源并选择性地释放托管资源。</span><span class="sxs-lookup"><span data-stu-id="55917-200">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerator&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="assemblyCatalog.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55917-201">返回一个循环访问类别的枚举器。</span><span class="sxs-lookup"><span data-stu-id="55917-201">Returns an enumerator that iterates through the catalog.</span></span></summary>
        <returns><span data-ttu-id="55917-202">一个可用于循环访问目录的枚举数。</span><span class="sxs-lookup"><span data-stu-id="55917-202">An enumerator that can be used to iterate through the catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Tuple`2&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition, class System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExports (definition As ImportDefinition) As IEnumerable(Of Tuple(Of ComposablePartDefinition, ExportDefinition))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;Tuple&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^, System::ComponentModel::Composition::Primitives::ExportDefinition ^&gt; ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="override this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition * System.ComponentModel.Composition.Primitives.ExportDefinition&gt;" Usage="assemblyCatalog.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Tuple&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.ComponentModel.Composition.Primitives.ExportDefinition&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="55917-203">指定相匹配的导出的条件。</span><span class="sxs-lookup"><span data-stu-id="55917-203">Conditions that specify which exports to match.</span></span></param>
        <summary><span data-ttu-id="55917-204">获取与导入定义所指定的条件相匹配的导出的集合。</span><span class="sxs-lookup"><span data-stu-id="55917-204">Gets a collection of exports that match the conditions specified by the import definition.</span></span></summary>
        <returns><span data-ttu-id="55917-205">与 <paramref name="definition" /> 所指定的条件相匹配的导出的集合。</span><span class="sxs-lookup"><span data-stu-id="55917-205">A collection of exports that match the conditions specified by <paramref name="definition" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## <a name="notes-to-inheritors"></a><span data-ttu-id="55917-206">对继承者的说明</span><span class="sxs-lookup"><span data-stu-id="55917-206">Notes to inheritors</span></span>
 <span data-ttu-id="55917-207">此属性的 Overriders 绝不应返回 `null`</span><span class="sxs-lookup"><span data-stu-id="55917-207">Overriders of this property should never return `null` if no</span></span>  
<span data-ttu-id="55917-208"><xref:System.ComponentModel.Composition.Primitives.ExportDefinition> 与 `definition`定义的条件相匹配;而是返回一个空的 <xref:System.Collections.Generic.IEnumerable%601>。</span><span class="sxs-lookup"><span data-stu-id="55917-208"><xref:System.ComponentModel.Composition.Primitives.ExportDefinition> matches the conditions defined by `definition`; instead, return an empty <xref:System.Collections.Generic.IEnumerable%601>.</span></span>
                ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="55917-209"><paramref name="definition" /> 为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-209"><paramref name="definition" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55917-210">已释放了 <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />。</span><span class="sxs-lookup"><span data-stu-id="55917-210">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parts">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Linq.IQueryable`1&lt;class System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt; Parts" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Parts As IQueryable(Of ComposablePartDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ Parts { System::Linq::IQueryable&lt;System::ComponentModel::Composition::Primitives::ComposablePartDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parts : System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;" Usage="System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;System.ComponentModel.Composition.Primitives.ComposablePartDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55917-211">获取程序集目录中包含的部件定义。</span><span class="sxs-lookup"><span data-stu-id="55917-211">Gets the part definitions that are contained in the assembly catalog.</span></span></summary>
        <value><span data-ttu-id="55917-212"><see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> 中包含的 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象。</span><span class="sxs-lookup"><span data-stu-id="55917-212">The <see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /> objects contained in the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="55917-213"><see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象已被释放。</span><span class="sxs-lookup"><span data-stu-id="55917-213">The <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
      <MemberSignature Language="C#" Value="string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayName As String Implements ICompositionElement.DisplayName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::ComponentModel::Composition::Primitives::ICompositionElement::DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName : string" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55917-214">获取 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象的显示名称。</span><span class="sxs-lookup"><span data-stu-id="55917-214">Gets the display name of the <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></summary>
        <value><span data-ttu-id="55917-215">一个表示此 <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> 对象的类型和程序集的字符串。</span><span class="sxs-lookup"><span data-stu-id="55917-215">A string that represents the type and assembly of this <see cref="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55917-216">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="55917-216">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="55917-217">它只能在 <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 实例被强制转换为 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="55917-217">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
      <MemberSignature Language="C#" Value="System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ICompositionElement System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Origin As ICompositionElement Implements ICompositionElement.Origin" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::Composition::Primitives::ICompositionElement ^ System::ComponentModel::Composition::Primitives::ICompositionElement::Origin { System::ComponentModel::Composition::Primitives::ICompositionElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.ComponentModel.Composition.Primitives.ICompositionElement.Origin : System.ComponentModel.Composition.Primitives.ICompositionElement" Usage="System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ICompositionElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="55917-218">获取此元素源自于的组合元素。</span><span class="sxs-lookup"><span data-stu-id="55917-218">Gets the composition element that this element originated from.</span></span></summary>
        <value><span data-ttu-id="55917-219">始终为 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="55917-219">Always <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55917-220">此成员是显式接口成员实现。</span><span class="sxs-lookup"><span data-stu-id="55917-220">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="55917-221">它只能在 <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> 实例被强制转换为 <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> 接口时使用。</span><span class="sxs-lookup"><span data-stu-id="55917-221">It can be used only when the <xref:System.ComponentModel.Composition.Hosting.AssemblyCatalog> instance is cast to an <xref:System.ComponentModel.Composition.Primitives.ICompositionElement> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assemblyCatalog.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55917-222">获取程序集目录的字符串表示形式。</span><span class="sxs-lookup"><span data-stu-id="55917-222">Gets a string representation of the assembly catalog.</span></span></summary>
        <returns><span data-ttu-id="55917-223">程序集目录的表示形式。</span><span class="sxs-lookup"><span data-stu-id="55917-223">A representation of the assembly catalog.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
